<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FEFExchangeFile>
	<fileHeader company="Schneider Automation" product="Control Expert V14.0 - 190112" dateTime="date_and_time#2021-11-15-16:0:44" content="Fichier source projet" DTDVersion="41"></fileHeader>
	<contentHeader name="M340" version="0.0.297" dateTime="date_and_time#2018-9-12-12:37:32"></contentHeader>
	<commParameters>
		<PLCAddress address="172.16.9.3" media="TCPIP" nbTries="2" timeout="3000" highSpeed="0"></PLCAddress>
		<simulatorAddress address="127.0.0.1" media="TCPIP" nbTries="2" timeout="3000"></simulatorAddress>
		<bandwith animation="70" PLCMonitor="10" PLCScreen="10" diagnostic="10"></bandwith>
	</commParameters>
	<IOConf>
		<PLC autoRun="true" MWInitZero="true" ColdStartOnly="false" ccotfActive="false" numberInternalWord="32464" numberConstantWord="32760" numberInternalBit="1201">
			<partItem family="Micro Basic" partNumber="BMXP342020" vendorName="Schneider Automation" version="01.00"></partItem>
			<equipInfo topoAddress="\0.0\0.0" position="0"></equipInfo>
			<configATS>
				<busATS name="XBusMicro">
					<equipInfo topoAddress="\0" position="0"></equipInfo>
					<rackATS>
						<partItem family="Rack" partNumber="BMXXBP1200" vendorName="Schneider Automation" version="01.00"></partItem>
						<equipInfo topoAddress="\0.0\0" position="0"></equipInfo>
						<powerSupply>
							<partItem family="Supply" partNumber="BMXCPS2000" vendorName="Schneider Automation" version="01.00"></partItem>
							<equipInfo topoAddress="\0.0\0.(P) (P)" position="-1"></equipInfo>
						</powerSupply>
						<moduleATS UCMod="true">
							<partItem family="Micro Basic" partNumber="BMXP342020" vendorName="Schneider Automation" version="01.00"></partItem>
							<equipInfo topoAddress="\0.0\0.0" position="0"></equipInfo>
							<configModule>
								<channelATS ASFCatKey="CharacterModeSerialPort" task="MAST" number="0">
									<descFB code="0" version="255"></descFB>
									<descIOB IOBFileName="IOB_3_0010000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x3"></hexaValue>
										<hexaValue hexaValue="0x903"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="IntranetCopro_Micro_Basic" task="MAST" number="3">
									<descFB code="0" version="255"></descFB>
									<descIOB IOBFileName="IOB_3_0310000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x116"></hexaValue>
										<hexaValue hexaValue="0xac10"></hexaValue>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x7570"></hexaValue>
										<hexaValue hexaValue="0x6c62"></hexaValue>
										<hexaValue hexaValue="0x6369"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x7570"></hexaValue>
										<hexaValue hexaValue="0x6c62"></hexaValue>
										<hexaValue hexaValue="0x6369"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x7570"></hexaValue>
										<hexaValue hexaValue="0x6c62"></hexaValue>
										<hexaValue hexaValue="0x6369"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x19"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0xefff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0xc8"></hexaValue>
										<hexaValue hexaValue="0x8"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x40"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1ff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5dc"></hexaValue>
										<hexaValue hexaValue="0x3c"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x18"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKPW>
								</channelATS>
							</configModule>
						</moduleATS>
						<moduleATS>
							<partItem family="Discrete" partNumber="BMXDDI6402K" vendorName="Schneider Automation" version="02.00"></partItem>
							<equipInfo topoAddress="\0.0\0.1" position="1"></equipInfo>
							<configModule>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="0">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="8">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="16">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="24">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="32">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="40">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="48">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="56">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
							</configModule>
						</moduleATS>
						<moduleATS>
							<partItem family="Discrete" partNumber="BMXDDI6402K" vendorName="Schneider Automation" version="02.00"></partItem>
							<equipInfo topoAddress="\0.0\0.2" position="2"></equipInfo>
							<configModule>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="0">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="8">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="16">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="24">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="32">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="40">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="48">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTORInSTD_MASTER" task="MAST" number="56">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0002000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
							</configModule>
						</moduleATS>
						<moduleATS>
							<partItem family="Discrete" partNumber="BMXDDO6402K" vendorName="Schneider Automation" version="02.00"></partItem>
							<equipInfo topoAddress="\0.0\0.3" position="3"></equipInfo>
							<configModule>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="0">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="8">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="16">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="24">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="32">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="40">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="48">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="56">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
							</configModule>
						</moduleATS>
						<moduleATS>
							<partItem family="Discrete" partNumber="BMXDDO6402K" vendorName="Schneider Automation" version="02.00"></partItem>
							<equipInfo topoAddress="\0.0\0.4" position="4"></equipInfo>
							<configModule>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="0">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="8">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="16">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="24">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="32">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="40">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="48">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BaInRackTOROutReactivateAndFallBackAndSupplyMonitoring_MASTER" task="MAST" number="56">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x16"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
							</configModule>
						</moduleATS>
						<moduleATS>
							<partItem family="Discrete" partNumber="BMXDRA1605" vendorName="Schneider Automation" version="02.00"></partItem>
							<equipInfo topoAddress="\0.0\0.5" position="5"></equipInfo>
							<configModule>
								<channelATS ASFCatKey="BasicInRackTOROutFallBackProtectOut0_MASTER" task="MAST" number="0">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x6"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackTOROutFallBackProtectOut0_MASTER" task="MAST" number="8">
									<descFB code="1" version="17"></descFB>
									<descIOB IOBFileName="IOB_0_0102000_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x6"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
								</channelATS>
							</configModule>
						</moduleATS>
						<moduleATS>
							<partItem family="Analog" partNumber="BMXAMI0410" vendorName="Schneider Automation" version="01.00"></partItem>
							<equipInfo topoAddress="\0.0\0.6" position="6"></equipInfo>
							<configModule>
								<channelATS ASFCatKey="BasicInRackANAInL2HighLevel0" task="MAST" number="0">
									<descFB code="66" version="16"></descFB>
									<descIOB IOBFileName="IOB_2_0002010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x7"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x2710"></hexaValue>
										<hexaValue hexaValue="0xfce0"></hexaValue>
										<hexaValue hexaValue="0x2a30"></hexaValue>
										<hexaValue hexaValue="0x306"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackANAInL2HighLevel0" task="MAST" number="1">
									<descFB code="66" version="16"></descFB>
									<descIOB IOBFileName="IOB_2_0002010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x7"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x2710"></hexaValue>
										<hexaValue hexaValue="0xfce0"></hexaValue>
										<hexaValue hexaValue="0x2a30"></hexaValue>
										<hexaValue hexaValue="0x306"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackANAInL2HighLevel0" task="MAST" number="2">
									<descFB code="66" version="16"></descFB>
									<descIOB IOBFileName="IOB_2_0002010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x7"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x2710"></hexaValue>
										<hexaValue hexaValue="0xfce0"></hexaValue>
										<hexaValue hexaValue="0x2a30"></hexaValue>
										<hexaValue hexaValue="0x306"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackANAInL2HighLevel0" task="MAST" number="3">
									<descFB code="66" version="16"></descFB>
									<descIOB IOBFileName="IOB_2_0002010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0x7"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x2710"></hexaValue>
										<hexaValue hexaValue="0xfce0"></hexaValue>
										<hexaValue hexaValue="0x2a30"></hexaValue>
										<hexaValue hexaValue="0x306"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
							</configModule>
						</moduleATS>
						<moduleATS>
							<partItem family="Analog" partNumber="BMXAMI0410" vendorName="Schneider Automation" version="01.00"></partItem>
							<equipInfo topoAddress="\0.0\0.7" position="7"></equipInfo>
							<configModule>
								<channelATS ASFCatKey="BasicInRackANAInL2HighLevel0" task="MAST" number="0">
									<descFB code="66" version="16"></descFB>
									<descIOB IOBFileName="IOB_2_0002010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xc"></hexaValue>
										<hexaValue hexaValue="0xd8f0"></hexaValue>
										<hexaValue hexaValue="0x2710"></hexaValue>
										<hexaValue hexaValue="0xd508"></hexaValue>
										<hexaValue hexaValue="0x2af8"></hexaValue>
										<hexaValue hexaValue="0x302"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackANAInL2HighLevel0" task="MAST" number="1">
									<descFB code="66" version="16"></descFB>
									<descIOB IOBFileName="IOB_2_0002010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xc"></hexaValue>
										<hexaValue hexaValue="0xd8f0"></hexaValue>
										<hexaValue hexaValue="0x2710"></hexaValue>
										<hexaValue hexaValue="0xd508"></hexaValue>
										<hexaValue hexaValue="0x2af8"></hexaValue>
										<hexaValue hexaValue="0x302"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackANAInL2HighLevel0" task="MAST" number="2">
									<descFB code="66" version="16"></descFB>
									<descIOB IOBFileName="IOB_2_0002010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xc"></hexaValue>
										<hexaValue hexaValue="0xd8f0"></hexaValue>
										<hexaValue hexaValue="0x2710"></hexaValue>
										<hexaValue hexaValue="0xd508"></hexaValue>
										<hexaValue hexaValue="0x2af8"></hexaValue>
										<hexaValue hexaValue="0x302"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackANAInL2HighLevel0" task="MAST" number="3">
									<descFB code="66" version="16"></descFB>
									<descIOB IOBFileName="IOB_2_0002010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xc"></hexaValue>
										<hexaValue hexaValue="0xd8f0"></hexaValue>
										<hexaValue hexaValue="0x2710"></hexaValue>
										<hexaValue hexaValue="0xd508"></hexaValue>
										<hexaValue hexaValue="0x2af8"></hexaValue>
										<hexaValue hexaValue="0x302"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
							</configModule>
						</moduleATS>
						<moduleATS>
							<partItem family="Analog" partNumber="BMXAMI0410" vendorName="Schneider Automation" version="01.00"></partItem>
							<equipInfo topoAddress="\0.0\0.8" position="8"></equipInfo>
							<configModule>
								<channelATS ASFCatKey="BasicInRackANAInL2HighLevel0" task="MAST" number="0">
									<descFB code="66" version="16"></descFB>
									<descIOB IOBFileName="IOB_2_0002010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xc"></hexaValue>
										<hexaValue hexaValue="0xd8f0"></hexaValue>
										<hexaValue hexaValue="0x2710"></hexaValue>
										<hexaValue hexaValue="0xd508"></hexaValue>
										<hexaValue hexaValue="0x2af8"></hexaValue>
										<hexaValue hexaValue="0x302"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackANAInL2HighLevel0" task="MAST" number="1">
									<descFB code="66" version="16"></descFB>
									<descIOB IOBFileName="IOB_2_0002010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xc"></hexaValue>
										<hexaValue hexaValue="0xd8f0"></hexaValue>
										<hexaValue hexaValue="0x2710"></hexaValue>
										<hexaValue hexaValue="0xd508"></hexaValue>
										<hexaValue hexaValue="0x2af8"></hexaValue>
										<hexaValue hexaValue="0x302"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackANAInL2HighLevel0" task="MAST" number="2">
									<descFB code="66" version="16"></descFB>
									<descIOB IOBFileName="IOB_2_0002010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xc"></hexaValue>
										<hexaValue hexaValue="0xd8f0"></hexaValue>
										<hexaValue hexaValue="0x2710"></hexaValue>
										<hexaValue hexaValue="0xd508"></hexaValue>
										<hexaValue hexaValue="0x2af8"></hexaValue>
										<hexaValue hexaValue="0x302"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BasicInRackANAInL2HighLevel0" task="MAST" number="3">
									<descFB code="66" version="16"></descFB>
									<descIOB IOBFileName="IOB_2_0002010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xc"></hexaValue>
										<hexaValue hexaValue="0xd8f0"></hexaValue>
										<hexaValue hexaValue="0x2710"></hexaValue>
										<hexaValue hexaValue="0xd508"></hexaValue>
										<hexaValue hexaValue="0x2af8"></hexaValue>
										<hexaValue hexaValue="0x302"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
							</configModule>
						</moduleATS>
						<moduleATS>
							<partItem family="Counting" partNumber="BMXEHC0800" vendorName="Schneider Automation" version="01.00"></partItem>
							<equipInfo topoAddress="\0.0\0.9" position="9"></equipInfo>
							<configModule>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="0">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="1">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="2">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="3">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="4">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="5">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="6">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="7">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
							</configModule>
						</moduleATS>
						<moduleATS>
							<partItem family="Counting" partNumber="BMXEHC0800" vendorName="Schneider Automation" version="01.00"></partItem>
							<equipInfo topoAddress="\0.0\0.10" position="10"></equipInfo>
							<configModule>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="0">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="1">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="2">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="3">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="4">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="5">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="6">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="7">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
							</configModule>
						</moduleATS>
						<moduleATS>
							<partItem family="Counting" partNumber="BMXEHC0800" vendorName="Schneider Automation" version="01.00"></partItem>
							<equipInfo topoAddress="\0.0\0.11" position="11"></equipInfo>
							<configModule>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="0">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="1">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="2">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="3">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="4">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="5">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="6">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
								<channelATS ASFCatKey="BMXUpDownCounting" task="MAST" number="7">
									<descFB code="64" version="16"></descFB>
									<descIOB IOBFileName="IOB_1_0302010_32S" version="1"></descIOB>
									<paramKW>
										<hexaValue hexaValue="0xff00"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x5"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x1"></hexaValue>
										<hexaValue hexaValue="0x100"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x8700"></hexaValue>
										<hexaValue hexaValue="0x393"></hexaValue>
										<hexaValue hexaValue="0xffff"></hexaValue>
										<hexaValue hexaValue="0x7fff"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0xa"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
									</paramKW>
									<paramKPW>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x0"></hexaValue>
										<hexaValue hexaValue="0x11"></hexaValue>
									</paramKPW>
								</channelATS>
							</configModule>
						</moduleATS>
					</rackATS>
				</busATS>
			</configATS>
		</PLC>
	</IOConf>
	<EFSource nameOfEFType="MOVE_DINT_ARDINT" version="1.00" dateTime="dt#2010-02-19-09:25:24">
		<comment>Assignment of a double length integer table with a double length integer</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="4B88"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="AF05"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="DINT">
					<comment>Value to be moved</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_ARRAY_DINT">
					<comment>Double integer out tables</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="MOVE_AREBOOL_DINT" version="1.00" dateTime="dt#2010-02-19-09:25:24">
		<comment>Assignment of a double length integer with a bit table</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="620F"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="FEC4"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="ANY_ARRAY_EBOOL">
					<comment>Bool input tables</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="DINT">
					<comment>Double integer result</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="Diag_timestamp" version="0.05" dateTime="dt#2012-07-11-19:49:43">
		<attribute name="TypeSignatureCheckSumString" value="1A84"></attribute>
		<structure>
			<variables name="EVT_CYCLE_NUM" typeName="UDINT">
				<comment>Cycle # of the last event</comment>
			</variables>
			<variables name="EVT_TIME" typeName="TOD">
				<comment>Time of day of the last event</comment>
			</variables>
			<variables name="DATASET" typeName="Diag_dataset">
				<comment>Copy of the dataset's values when the event occured</comment>
			</variables>
			<variables name="INPUT_TAG" typeName="string[40]">
				<comment>Tag of the corresponding input</comment>
			</variables>
			<variables name="INPUT_OLD_VAL" typeName="DINT">
				<comment>Value of the input, previous (before change)</comment>
			</variables>
			<variables name="INPUT_NEW_VAL" typeName="DINT">
				<comment>Value of the input, now (after change)</comment>
			</variables>
		</structure>
	</DDTSource>
	<EFSource nameOfEFType="REAL_TO_INT" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the REAL data type to a  BOOL, BYTE, WORD , DWORD, INT, DINT, UINT, UDINT data type or into the TIME data type.&#xA;&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function,&#xA;        there will also be a few illogical conversions, e.g. REAL_TO_BOOL.&#xA;&#xA;  When converting to BOOL, BYTE, WORD, INT or UINT, the least significant bits of the&#xA;  input value are transferred to the output.&#xA;&#xA;  When converting to INT, DINT, UINT, UDINT and TIME, the IEC 559 rules for rounding are applied.&#xA;&#xA;  The following example shows how the IEC 559 rounding is applied.&#xA;  1.4 =&gt; 1&#xA;  1.5 =&gt; 2&#xA;  2.4 =&gt; 2&#xA;  2.5 =&gt; 2&#xA;  2.6 =&gt; 3&#xA;&#xA;  Negative input values can not be converted into data types UINT, UDINT or TIME.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="A79A"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="REAL">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="cumuls2" version="0.02" dateTime="dt#2010-10-14-15:44:33">
		<attribute name="TypeSignatureCheckSumString" value="7210"></attribute>
		<structure>
			<variables name="cumul_consignes_sans_correct_g_g" typeName="DINT"></variables>
			<variables name="cumul_poids_reellement_peses" typeName="DINT"></variables>
		</structure>
	</DDTSource>
	<EFSource nameOfEFType="SUB_INT" version="1.00" dateTime="dt#2010-02-19-09:59:13">
		<comment>Subtraction</comment>
		<attribute name="TypeDescriptiveForm" value="  The function subtracts the value at the input IN2 from the value at the input IN1  and assigns the result to the output OUT.&#xA;&#xA;  The data types of all input values and that of the output value must be identical.&#xA;&#xA;  Formula:    OUT = IN1 - IN2&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="642C"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="INT">
					<comment>Minuend</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="IN2" typeName="INT">
					<comment>Subtrahend</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>Difference</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="Dos_Prod5" version="0.02" dateTime="dt#2010-09-24-11:12:38">
		<comment>Struct produit pour dosage (5 mots)</comment>
		<attribute name="TypeSignatureCheckSumString" value="6CED"></attribute>
		<structure>
			<variables name="Numero_produit" typeName="WORD"></variables>
			<variables name="Poids_demande" typeName="INT"></variables>
			<variables name="Erreur_jettee" typeName="INT"></variables>
			<variables name="Limite_correction" typeName="INT">
				<comment>Pour la correction gachee sur gachee</comment>
			</variables>
			<variables name="Options_dosage" typeName="WORD">
				<comment>Bit1: Obligation d'atteindre la consigne</comment>
			</variables>
		</structure>
	</DDTSource>
	<EFSource nameOfEFType="FIND_EQ_ARDINT" version="1.00" dateTime="dt#2010-02-19-09:25:22">
		<comment>Search for 1st element equal to a defined value</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="66D3"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="81C3"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_ARRAY_DINT">
					<comment>Table of source double integers</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="IN2" typeName="DINT">
					<comment>Value to find</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>Row of the 1st. element containing the value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="UDINT_TO_REAL" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the UDINT data type to an output value  of the BOOL, BYTE, WORD, DWORD, INT, DINT, UINT, REAL or TIME data type.&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function,&#xA;        there will also be a few illogical conversions, e.g. UDINT_TO_BOOL.&#xA;  When converting the data type DINT to the BOOL, BYTE, WORD, INT or UINT data type,&#xA;  the least significant bits of the input value are transferred to the output.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="8EEC"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="UDINT">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="REAL">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="TON_P" version="0.08" dateTime="dt#2005-10-13-16:44:04">
		<attribute name="TypeCodeCheckSumString" value="5BEF"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="E932"></attribute>
		<inputParameters>
			<variables name="IN" typeName="EBOOL">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="PT" typeName="TIME">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="PAUSE" typeName="BOOL">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="Q" typeName="BOOL">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="ET" typeName="TIME">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="Max_summe_time" typeName="TIME"></variables>
			<variables name="Actuel_ton_time" typeName="TIME"></variables>
			<variables name="Trig_st" typeName="TRIGGER"></variables>
			<variables name="TON_ST" typeName="TON"></variables>
		</privateLocalVariables>
		<FBProgram name="TON_P_S">
			<STSource>IF RE ( IN  )
THEN Max_summe_time:= t#0s ; ET:= t#0s; Actuel_ton_time :=t#0s;
END_IF;

Trig_St (CLK:= NOT PAUSE);
TON_ST ( IN:= (IN AND NOT PAUSE AND ET &lt;= PT),
PT:=PT);

IF Trig_st.FALL THEN;
ELSE 
Actuel_ton_time:= TON_ST.ET;
END_IF;

IF ET &lt; PT THEN
ET:= Max_summe_time + Actuel_ton_time;
Q:= FALSE;
ELSIF ET &gt;= PT THEN
Q:= TRUE;
END_IF;

IF Trig_St.FALL THEN
Max_summe_time := ET;
ELSE;
END_IF;	

IF IN =FALSE AND PAUSE =FALSE THEN
ET := t#0s;
Max_summe_time := t#0s;
Q:= FALSE;
END_IF;
</STSource>
		</FBProgram>
	</FBSource>
	<DDTSource DDTName="BOOLARR4" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="B419"></attribute>
		<array>ARRAY[1..4] OF BOOL</array>
	</DDTSource>
	<EFSource nameOfEFType="INT_TO_TIME" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the INT data type to a  BOOL, BYTE, WORD, DWORD, DINT, UINT UDINT, REAL or TIME output value.&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function,&#xA;        there will also be a few illogical conversions, e.g. INT_TO_BOOL.&#xA;  Negative input values cannot be converted into data types UINT, UDINT or TIME.&#xA;  When converting an input value from the data type INT into data type WORD,&#xA;  the bit pattern from the input is transferred to the output without being modified.&#xA;  When converting an input value of data type INT into the data types BOOL or BYTE,&#xA;  the least significant bits of the input are transferred to the output.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="CE9C"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="INT">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="TIME">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="DENS_MES" version="2.00" dateTime="dt#2005-10-12-11:09:36">
		<attribute name="TypeCodeCheckSumString" value="27E3"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="79EA"></attribute>
		<inputParameters>
			<variables name="DENS_BCD" typeName="WORD">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="DENSITE" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="valeur" typeName="INT"></variables>
			<variables name="mot_travail" typeName="WORD"></variables>
		</privateLocalVariables>
		<FBProgram name="Décodage">
			<STSource>valeur:=0;
 mot_travail:=dens_bcd AND 16#000F;
 valeur:=(WORD_TO_INT(mot_travail))*1;
  
 mot_travail:=SHR(dens_bcd AND 16#00F0, 4);
 valeur:=valeur+((WORD_TO_INT(mot_travail))*10);
  
 mot_travail:=SHR(dens_bcd AND 16#0F00, 8);
 valeur:=valeur+((WORD_TO_INT(mot_travail))*100);
  
 mot_travail:=SHR(dens_bcd AND 16#F000, 12);
 valeur:=valeur+((WORD_TO_INT(mot_travail))*1000);
  
 densite:=valeur;
</STSource>
		</FBProgram>
	</FBSource>
	<DDTSource DDTName="UDINTARR14" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="A6CD"></attribute>
		<array>ARRAY[1..14] OF UDINT</array>
	</DDTSource>
	<EFBSource nameOfEFBType="TON" version="1.00" dateTime="dt#2010-02-19-10:12:01">
		<comment>On delay</comment>
		<attribute name="TypeDescriptiveForm" value="  The function block is used as the On delay.  When the function block is called for the first time, the initial state of ET is &quot;0&quot;.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="IsTypeDiagnostic" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="B257"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="16D2"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="BOOL">
					<comment>Start delay</comment>
					<attribute name="PositionPin" value="1"></attribute>
					<attribute name="IsPinDiagnosticable" value="0"></attribute>
				</variables>
				<variables name="PT" typeName="TIME">
					<comment>Preset delay time</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="Q" typeName="BOOL">
					<comment>Delayed output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="ET" typeName="TIME">
					<comment>Internal time</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFBSource>
	<EFSource nameOfEFType="ROL" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>Rotate left</comment>
		<attribute name="TypeDescriptiveForm" value="  This function rotates the bit sequence at the input (IN) circularly to the  left by n bits (input N).&#xA;&#xA;  The data types of the input value (IN) and the output value (OUT) must be identical.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="7F09"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="ANY_BIT">
					<comment>Bit sequence for rotation</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="N" typeName="UINT">
					<comment>No. of spaces to be rotated</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_BIT">
					<comment>Rotated bit sequence</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="Sequence_trappe2" version="2.04" dateTime="dt#2007-10-30-15:40:44">
		<attribute name="TypeCodeCheckSumString" value="6677"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="D7F1"></attribute>
		<inputParameters>
			<variables name="VID_MALA" typeName="BOOL">
				<comment>Vidange encours malaxeur</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="MALAX" typeName="TIMEARR6">
				<comment>Séquence d'ouverture</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="GD_OUV" typeName="TIME">
				<comment>Temps malaxeur grand ouvert</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="TPS_FER" typeName="TIME">
				<comment>Temps de fermeture</comment>
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="DEF_MAL" typeName="BOOL">
				<comment>Défaut malaxeur</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="TRAP_OUV" typeName="EBOOL">
				<comment>trappe ouverte</comment>
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="TRAP_FER" typeName="EBOOL">
				<comment>trappe fermé</comment>
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
			<variables name="AUTO_TRA" typeName="EBOOL">
				<comment>Trappe de vidange en auto</comment>
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
			<variables name="INIT" typeName="EBOOL">
				<comment>Initialisation du programme</comment>
				<attribute name="PositionPin" value="9"></attribute>
			</variables>
			<variables name="S_VIDE" typeName="EBOOL">
				<comment>Seuil vide atteint</comment>
				<attribute name="PositionPin" value="10"></attribute>
			</variables>
			<variables name="DER_GACH" typeName="EBOOL">
				<comment>Bit de dernière gachée de la fabrication</comment>
				<attribute name="PositionPin" value="11"></attribute>
			</variables>
			<variables name="CFG_Wm" typeName="EBOOL">
				<comment>Presence Wattmetre</comment>
				<attribute name="PositionPin" value="12"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="OUV_TRAP" typeName="BOOL">
				<comment>Ouverture trappe</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="FER_TRAP" typeName="BOOL">
				<comment>Fermeture trappe</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="FIN_OUV" typeName="BOOL">
				<comment>Fin malaxeur ouvert</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="FIN_VID" typeName="BOOL">
				<comment>Fin de vidange du malaxeur</comment>
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="DEF_VID" typeName="BOOL">
				<comment>Defaut fin de course trappe ouverte non atteint</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="cpt_ouv3" typeName="INT"></variables>
			<variables name="memo_trap_ouv" typeName="BOOL"></variables>
			<variables name="tempo_grand_ouvert" typeName="TON"></variables>
			<variables name="TEMPO_OUV_PHASE_1" typeName="TON"></variables>
			<variables name="tps_ouv_phase_1" typeName="TIME"></variables>
			<variables name="tps_att_phase_1" typeName="TIME"></variables>
			<variables name="TEMPO_ATT_PHASE_1" typeName="TON"></variables>
			<variables name="Start_att_phase_1" typeName="EBOOL"></variables>
			<variables name="Fin_phase_1" typeName="EBOOL"></variables>
			<variables name="TEMPO_OUV_PHASE_2" typeName="TON"></variables>
			<variables name="TEMPO_ATT_PHASE_2" typeName="TON"></variables>
			<variables name="TEMPO_OUV_PHASE_3" typeName="TON"></variables>
			<variables name="TEMPO_ATT_PHASE_3" typeName="TON"></variables>
			<variables name="Start_att_phase_2" typeName="EBOOL"></variables>
			<variables name="tps_ouv_phase_2" typeName="TIME"></variables>
			<variables name="Fin_phase_2" typeName="EBOOL"></variables>
			<variables name="tps_att_phase_2" typeName="TIME"></variables>
			<variables name="Start_att_phase_3" typeName="EBOOL"></variables>
			<variables name="tps_ouv_phase_3" typeName="TIME"></variables>
			<variables name="Fin_phase_3" typeName="EBOOL"></variables>
			<variables name="tps_att_phase_3" typeName="TIME"></variables>
			<variables name="Start_ouv_phase_2" typeName="EBOOL"></variables>
			<variables name="Start_ouv_phase_1" typeName="EBOOL"></variables>
			<variables name="Start_ouv_phase_3" typeName="EBOOL"></variables>
			<variables name="Fin_grand_ouvert" typeName="EBOOL"></variables>
			<variables name="tps_grand_ouvert" typeName="TIME"></variables>
			<variables name="Start_grand_ouvert" typeName="EBOOL"></variables>
			<variables name="Fin_sequence_ouverture" typeName="EBOOL"></variables>
			<variables name="phase_fermeture" typeName="EBOOL"></variables>
		</privateLocalVariables>
		<FBProgram name="Vidange">
			<ILSource>(*INITIALISATION*)

(*init du compteur de phase 3 en cas de non vidange mais aussi en cas de défaut *)
(*afin d'être cappable de recommencer la phase*)
 ld def_mal (*def_mal = def_vid + autres defauts exterrieurs*)
 or trap_ouv
 orn vid_mala
 jmpcn fin_RAZ_cpt_ouv3
 	ld 0
 	st cpt_ouv3
 	ld true
 	r def_vid
 fin_RAZ_cpt_ouv3:

 ldn vid_mala
 or INIT
 orn auto_tra (*reprise des sequence apres le passage en Manu trappe*)
 R Start_ouv_phase_1
 R Start_ouv_phase_2
 R Start_ouv_phase_3

 ldn vid_mala
 or INIT
 R Fin_sequence_ouverture
 R phase_fermeture
 R memo_trap_ouv
 R start_grand_ouvert

(*declartion et mémorisation*)
ld trap_ouv
and vid_mala
S memo_trap_ouv

(*Construction des 3 différentes phases d'ouverture et tempo grand ouvert*)

(*PHASE 1 : ouverture - attente*) 
CAL TEMPO_OUV_PHASE_1 (
 IN := Start_ouv_phase_1,
 PT := malax[1],
 Q =&gt; Start_att_phase_1,
 ET =&gt; tps_ouv_phase_1
 )
CAL TEMPO_ATT_PHASE_1 (
 IN := Start_att_phase_1,
 PT := malax[2],
 Q =&gt; Fin_phase_1,
 ET =&gt; tps_att_phase_1
 )
(*PHASE 2 : ouverture - attente*) 
CAL TEMPO_OUV_PHASE_2 (
 IN := Start_ouv_phase_2,
 PT := malax[3],
 Q =&gt; Start_att_phase_2,
 ET =&gt; tps_ouv_phase_2
 )
CAL TEMPO_ATT_PHASE_2 (
 IN := Start_att_phase_2,
 PT := malax[4],
 Q =&gt; Fin_phase_2,
 ET =&gt; tps_att_phase_2
 )
(*PHASE 3 : ouverture - attente*) 
 CAL TEMPO_OUV_PHASE_3 (
 IN := Start_ouv_phase_3,
 PT := malax[5],
 Q =&gt; Start_att_phase_3,
 ET =&gt; tps_ouv_phase_3
 )
CAL TEMPO_ATT_PHASE_3 (
 IN := Start_att_phase_3,
 PT := malax[6],
 Q =&gt; Fin_phase_3,
 ET =&gt; tps_att_phase_3
 )

CAL tempo_grand_ouvert (
 IN := Start_grand_ouvert,
 PT := gd_ouv,
 Q =&gt; Fin_grand_ouvert,
 ET =&gt; tps_grand_ouvert
 )

(*Gestion des phase*)
(*l'evolution de phase est bloquée en cas de défaut ou de trappe manu*)
(* les tempo ne sont arrètées qu'à la fin de la vidange sauf pour la phase 3*)

ld vid_mala (*la phase prends fin si "vidange en cours" = 0 *)
and auto_tra
andn def_mal
S Start_ouv_phase_1 

ld vid_mala
and Fin_phase_1
and auto_tra
andn def_mal
S Start_ouv_phase_2

ld vid_mala
and Fin_phase_2
and auto_tra
andn def_mal
S Start_ouv_phase_3

(*FC Ouvert Non ateind : gestion de la reprise de la phase 3*)
 ld Fin_phase_3
 andn memo_trap_ouv 
 jmpcn fin_INCR_cpt_ouv3
 	ld cpt_ouv3
	add 1
 	st cpt_ouv3
	(*init "start" pour reprendre la phase 3*)
 	ld true
	R Start_ouv_phase_3
 fin_INCR_cpt_ouv3:

(*FC Ouvert ateind : *)
 ld memo_trap_ouv
 S Fin_sequence_ouverture 
 st fin_ouv
 (*ancienne sequence  : 
  and ( 	Fin_phase_3
 	or 	(	
		ld vid_mala
	 	andn auto_tra (*FC Ouvert atteint en Manu trappe *)
		andn trap_fer
		)
      )
  *)

(* utilisation tu temps grand ouvert *)
ld Fin_sequence_ouverture
and 	(
	ldn cfg_wm
	or 	(
		ld s_vide
		and cfg_wm
		and der_gach
	    	)
	)
S start_grand_ouvert (*Rq :seuil vide mémorisé *)

ld Fin_sequence_ouverture
and 	(False
	or 	(
		ld CFG_Wm
		and S_vide
		and	(false
			 orn der_gach
			 or 	(der_gach
			 	and fin_grand_ouvert
				)
			)
		)
	or 	(fin_grand_ouvert
		andn CFG_Wm
		)
	)
S phase_fermeture
 
(*declaration defaut trappe bloquée*)
ld cpt_ouv3
eq 3
st def_vid

(*Gestion des demandes d'ouverture et fermeture*)
ld auto_tra
andn def_mal
andn Fin_sequence_ouverture
and 	(false
	or	(
		ld Start_ouv_phase_1
		andn Start_att_phase_1
		)
	or 	(
		ld Start_ouv_phase_2
		andn Start_att_phase_2
		)
	or 	(
		ld Start_ouv_phase_3
		andn Start_att_phase_3
		)
	)
st ouv_trap

ld phase_fermeture
and auto_tra
andn def_mal
st fer_trap

ld trap_fer
and	(
	ld phase_fermeture
	or 	(
		ld vid_mala
		andn auto_tra
		and memo_trap_ouv
		and trap_fer
		)
	)
st fin_vid
</ILSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="GT_INT" version="1.00" dateTime="dt#2010-02-19-09:12:06">
		<comment>Greater than</comment>
		<attribute name="TypeDescriptiveForm" value="  The function checks the values of successive inputs for a decreasing sequence.  The data types of all input values must be identical.&#xA;  The number of inputs can be increased (max 32).&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="97B0"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="INT">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="INTARR8a" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="6FED"></attribute>
		<array>ARRAY[1..8] OF INT</array>
	</DDTSource>
	<FBSource nameOfFBType="LEC_BIN_BCD" version="2.42" dateTime="dt#2011-09-26-11:45:53">
		<comment>Lecture bascule binaire ou BCD (par ETOR)</comment>
		<attribute name="TypeCodeCheckSumString" value="C967"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="45DE"></attribute>
		<inputParameters>
			<variables name="BINAIRE" typeName="BOOL">
				<attribute name="PositionPin" value="2"></attribute>
				<variableInit value="TRUE"></variableInit>
			</variables>
			<variables name="Val_actif_1" typeName="BOOL">
				<attribute name="PositionPin" value="3"></attribute>
				<variableInit value="TRUE"></variableInit>
			</variables>
			<variables name="BCD" typeName="BOOL">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="VAL_BRUT" typeName="WORD">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Signe_positif_1" typeName="BOOL">
				<attribute name="PositionPin" value="5"></attribute>
				<variableInit value="FALSE"></variableInit>
			</variables>
			<variables name="Bit_VALIDATION" typeName="BOOL">
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="Filtre_Nb_Vals" typeName="INT">
				<comment>NB de valeurs pour calculer la moyenne</comment>
				<attribute name="PositionPin" value="7"></attribute>
				<variableInit value="3"></variableInit>
			</variables>
			<variables name="Filtre_Coef" typeName="INT">
				<comment>coef : Moy*(1+Coef)</comment>
				<attribute name="PositionPin" value="8"></attribute>
				<variableInit value="50"></variableInit>
			</variables>
			<variables name="Poids_min" typeName="INT">
				<comment>mesure maximum</comment>
				<attribute name="PositionPin" value="9"></attribute>
				<variableInit value="-5"></variableInit>
			</variables>
			<variables name="Poids_max" typeName="INT">
				<comment>mesure minimum</comment>
				<attribute name="PositionPin" value="10"></attribute>
				<variableInit value="7500"></variableInit>
			</variables>
			<variables name="Simulation_en_cours" typeName="BOOL">
				<attribute name="PositionPin" value="11"></attribute>
			</variables>
			<variables name="Poids_simulateur" typeName="WORD">
				<attribute name="PositionPin" value="12"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="POIDS_filtre" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="DEF_depassement_MAX" typeName="BOOL">
				<comment>depass seuil min (detarage)</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="POIDS_non_filtre" typeName="INT">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="DEF_depassement_MIN" typeName="BOOL">
				<comment>depass seuil max</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="DEF_hors_plage" typeName="BOOL">
				<comment>indicateur hors plage</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="valeur_de_depassement_min" typeName="INT">
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="valeur_de_depassement_max" typeName="INT">
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="val_int" typeName="INT"></variables>
			<variables name="Poids_BCD" typeName="WORD"></variables>
			<variables name="POIDS_int" typeName="INT"></variables>
			<variables name="Valeur_brut" typeName="WORD"></variables>
			<variables name="tab_poids" typeName="DINTARR3"></variables>
			<variables name="Poids_int1" typeName="INT"></variables>
			<variables name="Poids_binaire" typeName="WORD"></variables>
			<variables name="bit_signe" typeName="EBOOL"></variables>
			<variables name="AL_depassement_MIN" typeName="EBOOL"></variables>
			<variables name="TON_DEP_MIN" typeName="TON"></variables>
			<variables name="DEP_POIDS_MAX" typeName="R_TRIG"></variables>
			<variables name="DEP_POIDS_MIN" typeName="R_TRIG"></variables>
			<variables name="Poids_BCD_1000x" typeName="WORD"></variables>
			<variables name="Poids_BCD_100x" typeName="WORD"></variables>
			<variables name="Poids_BCD_10x" typeName="WORD"></variables>
			<variables name="Poids_BCD_1x" typeName="WORD"></variables>
			<variables name="VAL_INT_OLD" typeName="INT"></variables>
			<variables name="val_maxi_table_E" typeName="DINT"></variables>
			<variables name="val_mini_table_E" typeName="DINT"></variables>
			<variables name="No_index_Val_Max" typeName="INT"></variables>
			<variables name="No_index_Val_Min" typeName="INT"></variables>
			<variables name="Index_val_mediane" typeName="INT"></variables>
			<variables name="val_mediane" typeName="INT"></variables>
			<variables name="Debug_Memo_poids_BCD" typeName="WORD"></variables>
		</privateLocalVariables>
		<FBProgram name="LECTURE">
			<STSource>(* Récupération de la valeur brute *)
IF (Simulation_en_cours) THEN
	Valeur_brut := Poids_Simulateur; (* Valeur de poids écrite par le simulateur *)
ELSE
	Valeur_brut := VAL_BRUT; (* Valeur de poids venant de la bascule BCD ou binaire *)
END_IF;

(*Extraction du bit de signe*)
(*le codage binaire ici est en actif à 1 donc 1 = négatif*)
Bit_signe := GET_BIT (IN := Valeur_brut, NO := 16);

(*Cas du binaire actif à 1 ou 0 : inversion de tous les bits*)
IF (NOT Val_actif_1) THEN
	Valeur_brut := Valeur_brut XOR 16#FFFF;
END_IF;

 
(*Conversion BINAIRE en INT*)
IF (BINAIRE OR Simulation_en_cours) THEN
	Poids_binaire := Valeur_brut AND 16#7FFF;
	Val_int := WORD_TO_INT (IN := Poids_binaire);
END_IF;

(*Conversion BCD vers INT*)
IF (BCD AND NOT Simulation_en_cours) THEN
	 Poids_BCD := Valeur_brut AND 16#7FFF;
	 Poids_BCD_1x:=Poids_BCD AND 16#000F;
	 Poids_BCD_10x:=SHR(Poids_BCD AND 16#00F0, 4);
	 Poids_BCD_100x:=SHR(Poids_BCD AND 16#0F00, 8);
	 Poids_BCD_1000x:=SHR(Poids_BCD AND 16#F000, 12);

	IF (Poids_BCD_1x &gt; 9) OR (Poids_BCD_10x &gt; 9) OR (Poids_BCD_100x &gt; 9) OR (Poids_BCD_1000x &gt; 9) THEN
		VAL_INT := VAL_INT_OLD;
		Debug_Memo_poids_BCD := Poids_BCD;
	ELSE
		VAL_INT := BCD_TO_INT(WORD_TO_INT(Poids_BCD));
		VAL_INT_OLD := VAL_INT;
	END_IF;
END_IF;

(*Gestion du signe*)
IF (Bit_signe XOR Signe_positif_1) THEN 
	POIDS_int := -val_int;
ELSE
	POIDS_int := val_int;
END_IF;

(*23/03/2007 MD : creation de la médiane. Site SAVENAY*)

(*Table des valeurs à utiliser pour la médiane*)
tab_poids[3] := tab_poids[2];	(*poids n-2 *)
tab_poids[2] := tab_poids[1];	(*poids n-1 *)
tab_poids[1] := INT_TO_DINT(Poids_int);	(*poids n   *)

(*Recherche des valeurs Extermes et de leur position dans la table*)
val_maxi_table_E := MAX (IN1 := tab_poids[1],
			 IN2 := tab_poids[2],	
			 IN3 := tab_poids[3]);
val_mini_table_E := MIN (IN1 := tab_poids[1],
			 IN2 := tab_poids[2],	
			 IN3 := tab_poids[3]);
No_index_Val_Max := FIND_EQ_ARDINT (IN1 := tab_poids, IN2 := val_maxi_table_E);
No_index_Val_Min := FIND_EQ_ARDINT (IN1 := tab_poids, IN2 := val_mini_table_E);

(*la ligne de la table qui ne contient pas 
les valeurs Max ou Min contient la médiane *)
IF (No_index_Val_Max&lt;&gt;0) AND (No_index_Val_MIN&lt;&gt;0) THEN
	Index_val_mediane := 1;
END_IF;
IF (No_index_Val_Max&lt;&gt;1) AND (No_index_Val_MIN&lt;&gt;1) THEN
	Index_val_mediane := 2;
END_IF;
IF (No_index_Val_Max&lt;&gt;2) AND (No_index_Val_MIN&lt;&gt;2) THEN
	Index_val_mediane := 3;
END_IF;
val_mediane := DINT_TO_INT(tab_poids[Index_val_mediane]);
Poids_int1 := val_mediane;

POIDS_filtre := Poids_int1;
(*Gestion Hors Plage (pas de gestion de signe ici) *)
IF (Valeur_brut = 16#FFFF) OR  (Valeur_brut = 16#7FFF) THEN (*Hors plage*)
	DEF_hors_plage := 1; 
ELSE
	DEF_hors_plage := 0;
END_IF;

(*calcul des sorties : *)
(*IF hors plage+ ou depassement positif.. ELSE IF hors plage-*)
(*MDU 30/10/2006 ajout d'une temporisation sur le depassement min*)
(*car si cette alarme est temporaire, il n'y à pas lieu de la signaler.*)
IF (Poids_int1&gt;poids_max) OR (DEF_hors_plage AND NOT (Bit_signe XOR Signe_positif_1)) THEN
	DEF_depassement_MAX := TRUE;
	AL_depassement_MIN := FALSE;
ELSIF (Poids_int1&lt;poids_min) OR (DEF_hors_plage AND (Bit_signe XOR Signe_positif_1)) THEN
	AL_depassement_MIN := TRUE;
	DEF_depassement_MAX := FALSE;
ELSE
	DEF_depassement_MAX := FALSE;
	AL_depassement_MIN := FALSE;
END_IF;

(*MDU 30/10/2006 utilisation de l'alarme pour créer le defaut*)
TON_DEP_MIN (IN := AL_depassement_MIN,
 PT := t#5s,
 Q =&gt; DEF_depassement_MIN);



 (*Memorisation des valeurs de de detarrage (max et min) pour diagnostique *)
DEP_POIDS_MAX (CLK := DEF_depassement_MAX);
IF (DEP_POIDS_MAX.Q) THEN
	IF (DEF_hors_plage) THEN
		Valeur_de_depassement_max := 9999;
	ELSE
		Valeur_de_depassement_max := POIDS_filtre;
	END_IF;
END_IF;
DEP_POIDS_MIN (CLK := DEF_depassement_MIN);
IF (DEP_POIDS_MIN.Q) THEN
	IF (DEF_hors_plage) THEN
		Valeur_de_depassement_min := 8999;
	ELSE
		Valeur_de_depassement_min := POIDS_filtre;
	END_IF;
END_IF;
</STSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="OR_BOOL" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>OR function</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="DD29"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="BOOL">
					<comment>Input bit sequence (Extensible)</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Output bit sequence</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="AND_BOOL" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>AND function</comment>
		<attribute name="TypeDescriptiveForm" value="  The function links (acc. to AND logic) the bit sequences at the inputs and assigns  the result to the output. The AND operation is performed bit-by-bit.&#xA;&#xA;  The data types of all input values and output values must be identical.&#xA;  The number of inputs can be increased (max 32).&#xA;&#xA;  Note: This function is not available with boolean variables in LD (Ladder Diagram)&#xA;        since the same functionality can be achieved there with contacts.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="DD29"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="BOOL">
					<comment>Input bit sequence (Extensible)</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Output bit sequence</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="DINT_TO_REAL" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the DINT data type to a  BOOL, BYTE, WORD, DWORD, INT, UINT UDINT, REAL or TIME output value.&#xA;&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function, there will also&#xA;        be a few illogical conversions, e.g. DINT_TO_BOOL.&#xA;&#xA;  When converting the data type DINT to the BOOL, BYTE, WORD, INT or UINT data type,&#xA;  the least significant bits of the input value are transferred to the output.&#xA;&#xA;  Negative input values cannot be converted into data types UDINT or UINT.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="FD21"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="DINT">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="REAL">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="LEC_Basc_gra1" version="0.04" dateTime="dt#2011-09-12-14:53:16">
		<attribute name="TypeCodeCheckSumString" value="5790"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="E81A"></attribute>
		<inputParameters>
			<variables name="NP_Gra1" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="PARAM_SELECT" typeName="INT">
				<comment>1=Numero_Produit 2=Poids_demande 3=Erreur_jetee 4=Limite_correction 5=Options_dosage</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
		</inputParameters>
		<inOutParameters>
			<variables name="Basc_gra1" typeName="ARRAY[1..5] OF Dos_Prod5">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="Basc_gra2" typeName="ARRAY[1..5] OF Dos_Prod5">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
		</inOutParameters>
		<outputParameters>
			<variables name="PARAM_VAL" typeName="INT">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
		</outputParameters>
		<FBProgram name="main">
			<STSource>(* Arrêter l'exécution du DFB si le numéro de produit est hors plage *)
(* pour ne pas risquer de "taper" en dehors des structures *)
IF NP_Gra1&lt;1
OR NP_Gra1&gt;10 THEN
	PARAM_VAL := 0;
	RETURN;
END_IF;


(* Lire la valeur souhaitée en table de gâchée *)

(* Rappel : *)
(* On peut utiliser la structure "Granulat 2" pour les granulats 1 dans le cas où on *)
(* fonctionne en mode "plage étendue" granulat (cela permet de passer de 5 à 10 granulats *)
(* dosable sur une seule chaine granulat). *)

IF PARAM_SELECT = 1 THEN
 (* 1 = Numero_Produit *)
	IF NP_Gra1&lt;=5 THEN
		PARAM_VAL := WORD_TO_INT(Basc_gra1[NP_Gra1].Numero_Produit);
	ELSE
		PARAM_VAL := WORD_TO_INT(Basc_gra2[NP_Gra1-5].Numero_Produit);
	END_IF;


ELSIF PARAM_SELECT = 2 THEN
 (* 2 = Poids_demande *)
	IF NP_Gra1&lt;=5 THEN
		PARAM_VAL := Basc_gra1[NP_Gra1].Poids_demande;
	ELSE
		PARAM_VAL := Basc_gra2[NP_Gra1-5].Poids_demande;
	END_IF;


ELSIF PARAM_SELECT = 3 THEN
 (* 3 = Erreur_jetee *)
	IF NP_Gra1&lt;=5 THEN
		PARAM_VAL := Basc_gra1[NP_Gra1].Erreur_jettee;
	ELSE
		PARAM_VAL := Basc_gra2[NP_Gra1-5].Erreur_jettee;
	END_IF;


ELSIF PARAM_SELECT = 4 THEN
 (* 4 = Limite_correction *)
	IF NP_Gra1&lt;=5 THEN
		PARAM_VAL := Basc_gra1[NP_Gra1].Limite_correction;
	ELSE
		PARAM_VAL := Basc_gra2[NP_Gra1-5].Limite_correction;
	END_IF;


ELSIF PARAM_SELECT = 5 THEN
 (* 5 = Options_dosage *)
	IF NP_Gra1&lt;=5 THEN
		PARAM_VAL := WORD_TO_INT(Basc_gra1[NP_Gra1].Options_dosage);
	ELSE
		PARAM_VAL := WORD_TO_INT(Basc_gra2[NP_Gra1-5].Options_dosage);
	END_IF;
END_IF;
</STSource>
		</FBProgram>
	</FBSource>
	<FBSource nameOfFBType="LEC_ARPEGE" version="0.34" dateTime="dt#2009-01-12-17:17:15">
		<comment>Lecture bascule arpege (par TCP)</comment>
		<attribute name="TypeCodeCheckSumString" value="466B"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="D23B"></attribute>
		<inputParameters>
			<variables name="Pds1_INT" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Pds2_INT" typeName="INT">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="Etat_voie" typeName="INT">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="Pds_max" typeName="INT">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="Pds_min" typeName="INT">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="Multiplicateur" typeName="REAL">
				<comment>coef appliqué par BC-Mix</comment>
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="Surcharge" typeName="BOOL">
				<comment>Alarme Surcharge</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="Detarage" typeName="BOOL">
				<comment>Alarme Détarrage (temporisée)</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="Donnee_non_valide" typeName="BOOL">
				<comment>Alarme Donnée non valide</comment>
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="Poids_S" typeName="REAL">
				<comment>Poids en sortie du DFB</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="Valeur_dep_max" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Valeur_dep_min" typeName="INT">
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="Pds1_DINT" typeName="DINT"></variables>
			<variables name="Pds2_DINT" typeName="DINT"></variables>
			<variables name="Pds_entier" typeName="INT"></variables>
			<variables name="Pds1_DINT_ROL" typeName="DINT">
				<comment>Pds1 apres rotation à gauche de 16 bits</comment>
			</variables>
			<variables name="Pds1_DINT_ROL_MASK" typeName="DINT">
				<comment>Pds1 ROL apres masque avec FFFF0000</comment>
			</variables>
			<variables name="Pds2_DINT_MASK" typeName="DINT">
				<comment>Pds2 apres masque avec 0000FFFF</comment>
			</variables>
			<variables name="detarrage_5s" typeName="BOOL"></variables>
			<variables name="FBI_0" typeName="TON"></variables>
			<variables name="IDE500_Non_Pret" typeName="BOOL"></variables>
			<variables name="IDE500_Erreur" typeName="BOOL"></variables>
			<variables name="Pds_real" typeName="REAL"></variables>
			<variables name="FM_SURCHARGE" typeName="R_TRIG"></variables>
			<variables name="FM_DETARRAGE" typeName="R_TRIG"></variables>
			<variables name="Mult" typeName="REAL"></variables>
		</privateLocalVariables>
		<FBProgram name="Acquis_mesure">
			<STSource>(* Modification MD 11/04/2006 :
   La bascule doit être configuré en codage sur 32 Bits (le codage 16 bit ne fonctionnera pas)
   Modification sur le décodage de la bascule (Masque sur le poids1 et ramplacement du XOR en OR)
   Mise en place d'une temporisation de 5 secondes en cas de détarrage lors de la vidange 
		
   Information Bascules
	Bascule en configuration : bit7
	Reset bascule en cours : bit12
	Err.com : bit6
	Detarrage : bit8
	Surcharge : bit9
	def.alim : bit13
	Donnée stable : bit10   *)

(* Lecture état Bascule *)
IDE500_Non_Pret := Etat_voie.7 OR Etat_voie.12;
IDE500_Erreur := etat_voie.6 OR etat_voie.9 OR etat_voie.13 OR etat_voie.8;

(* Lecture poids Bascule *)		
Pds1_DINT:=int_to_dint(Pds1_INT);
Pds1_DINT_ROL:=ROL (Pds1_DINT, 16);
Pds1_DINT_ROL_MASK:= 16#FFFF0000 AND Pds1_DINT_ROL;

Pds2_DINT:=int_to_dint(Pds2_INT);
Pds2_DINT_MASK:=16#0000FFFF AND Pds2_DINT;

(* Modif MD 14/11/2008
   La bascule fournit un poids en gramme. donc si on divise par 1000
   directement, l'entier pers la notion de "gramme".
   On utilise le multiplicateur BC-Mix pour obtenir un coéficient 
   qui permet de placer dans un entier les valeurs décimale
   Si mult=1, on divise le poids par 1000 =&gt; kg  
   Si mult=0,1, on divise les valeurs par 100 =&gt; kg*10  
   BC-mix divise ensuite les valeur par le multiplicateur pour obtenir de kg*)
(* Modif MD 12/01/2009
   Si le multiplicateur =0, on le met à 1 pour éviter le non mise à jours du poids.
   (sur les ancien bcmix, le multiplicateur n'est pas envoyé,il vaut donc 0!!!) *)
IF Multiplicateur &lt;&gt; 0.0 THEN
   Mult := Multiplicateur;
   ELSE
   Mult := 1.0;
END_IF;

Pds_real:=DINT_TO_REAL((Pds1_DINT_ROL_MASK OR Pds2_DINT_MASK))/(1000.0*Mult);
Pds_entier:=REAL_TO_INT (Pds_real);

(* Gestion des informations *)
IF NOT IDE500_Non_Pret
THEN 
           (*Modif depuis Iteuil : La bascule ne gere pas la stabilité*)
	IF (* Etat_voie.10 AND  *)NOT IDE500_Erreur
	THEN 	(*mise à jours sortie DFB*)
		Poids_S := Pds_real;	
	END_IF;
	
	(*Surcharge ou detarrage *)
	IF (Pds_entier&gt;pds_max) OR Etat_voie.9
	THEN Detarage := FALSE;
     	     surcharge := TRUE;
	ELSE surcharge := FALSE;
	END_IF;

	IF (Pds_entier&lt;pds_min) OR Etat_voie.8 
	THEN detarrage_5s := TRUE;
	ELSE detarrage_5s := FALSE; 
	END_IF;

	FBI_0 (IN := detarrage_5s, PT := t#5s,
	  Q =&gt; Detarage);
END_IF;

donnee_non_valide := OR (IN1 := IDE500_Non_Pret,
                         IN2 := IDE500_Erreur);



(*Memorisation des valeurs de de depassement (max et min) pour diagnostique *)
FM_SURCHARGE (CLK := surcharge);
IF FM_SURCHARGE.Q 
	THEN
	Valeur_dep_max := Pds_entier;
END_IF;

FM_DETARRAGE (CLK := Detarage);
IF FM_DETARRAGE.Q THEN
Valeur_dep_min := Pds_entier;
END_IF;



(************************ FIN SOUS PROGRAMME ****************************)
</STSource>
		</FBProgram>
	</FBSource>
	<DDTSource DDTName="INTARR5" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="995B"></attribute>
		<array>ARRAY[1..5] OF INT</array>
	</DDTSource>
	<EFSource nameOfEFType="ADD" version="1.00" dateTime="dt#2010-02-19-09:59:13">
		<comment>Addition</comment>
		<attribute name="TypeDescriptiveForm" value="  The function adds the input values and assigns the result to the output.&#xA;  The data types of all input values and output values must be identical.&#xA;&#xA;  The number of inputs can be increased for all functions (max 32), except in TIME.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="9411"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_NUM">
					<comment>Summand (Extensible)</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_NUM">
					<comment>Sum</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="flags_pesage_struct" version="0.04" dateTime="dt#2014-01-22-15:06:40">
		<attribute name="TypeSignatureCheckSumString" value="FF12"></attribute>
		<structure>
			<variables name="CGG_ON" typeName="BOOL">
				<comment>Correction gachee sur gachee activee</comment>
			</variables>
			<variables name="Obligation_atteindre_consigne" typeName="BOOL">
				<comment>Obligation d'atteindre la consigne</comment>
			</variables>
			<variables name="Premiere_gachee" typeName="BOOL">
				<comment>Premiere gachee de la fabrication</comment>
			</variables>
			<variables name="Derniere_gachee" typeName="BOOL">
				<comment>Derniere gachee de la fabrication</comment>
			</variables>
			<variables name="Aju_Auto" typeName="BOOL">
				<comment>Ajustement automatique active</comment>
			</variables>
			<variables name="Sens_PV" typeName="BOOL">
				<comment>Sens de la petite vitesse</comment>
			</variables>
			<variables name="mode_decomptage" typeName="BOOL">
				<comment>0= comptage; 1=decomptage</comment>
			</variables>
		</structure>
	</DDTSource>
	<EFSource nameOfEFType="ROL_DWORD" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>Rotate left</comment>
		<attribute name="TypeDescriptiveForm" value="  This function rotates the bit sequence at the input (IN) circularly to the  left by n bits (input N).&#xA;&#xA;  The data types of the input value (IN) and the output value (OUT) must be identical.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="6302"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="DWORD">
					<comment>Bit sequence for rotation</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="N" typeName="UINT">
					<comment>No. of spaces to be rotated</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="DWORD">
					<comment>Rotated bit sequence</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="BOOL_TO_INT" version="1.00" dateTime="dt#2010-02-19-09:30:00">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the BOOL data type to a BYTE, WORD, DWORD, INT,  DINT, UINT, UDINT, REAL or TIME data type.&#xA;  The least significant bit of the output value is set to the input value.&#xA;  All other bits of the output value are set to zero.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="5E14"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="BOOL">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="SUB" version="1.00" dateTime="dt#2010-02-19-09:59:13">
		<comment>Subtraction</comment>
		<attribute name="TypeDescriptiveForm" value="  The function subtracts the value at the input IN2 from the value at the input IN1  and assigns the result to the output OUT.&#xA;&#xA;  The data types of all input values and that of the output value must be identical.&#xA;&#xA;  Formula:    OUT = IN1 - IN2&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="EBAF"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_NUM">
					<comment>Minuend</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="IN2" typeName="ANY_NUM">
					<comment>Subtrahend</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_NUM">
					<comment>Difference</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="DIS_BAL" version="2.00" dateTime="dt#2005-10-12-11:09:48">
		<attribute name="TypeProtectionLevel" value="2#0000_0000"></attribute>
		<attribute name="TypeCodeCheckSumString" value="4DEE"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="9DCE"></attribute>
		<inputParameters>
			<variables name="CDE" typeName="BOOL">
				<comment>Commande de l'organe</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="RETOUR" typeName="BOOL">
				<comment>Retour de marche de l'organe</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="TPS_REAC" typeName="TIME">
				<comment>Temps de réaction de l'organe</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="DISC" typeName="BOOL">
				<comment>Discordance</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="FBI_1_6" typeName="TON"></variables>
		</privateLocalVariables>
		<FBProgram name="Discordance">
			<LDSource nbColumns="11">
				<networkLD>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<FFBBlock instanceName="FBI_1_6" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="3" posY="1"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="tps_reac"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q" effectiveParameter="disc"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="Cde"></contact>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="retour"></contact>
						</shortCircuit>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="closedContact" contactVariableName="Cde"></contact>
						<contact typeContact="closedContact" contactVariableName="retour"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="8"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="96"></emptyLine>
					</typeLine>
					<textBox width="2" height="1">Discordance
    <objPosition posX="0" posY="0"></objPosition>
					</textBox>
				</networkLD>
			</LDSource>
		</FBProgram>
	</FBSource>
	<DDTSource DDTName="INTARR650" version="0.00" dateTime="dt#2010-06-09-15:41:25">
		<attribute name="TypeSignatureCheckSumString" value="868E"></attribute>
		<array>ARRAY[1..650] OF INT</array>
	</DDTSource>
	<EFSource nameOfEFType="MOVE" version="1.00" dateTime="dt#2010-02-19-09:59:13">
		<comment>Assignment</comment>
		<attribute name="TypeDescriptiveForm" value="  The function assigns the input value to the output.&#xA;  This is a generic function, i.e. the data type to be processed will be determined&#xA;  by the variable that was first assigned to the function.&#xA;&#xA;  If a direct address of a variable is to be assigned or vice versa,&#xA;  always assign the variable to the function first.&#xA;  A direct address at input and output of the function is not authorized since&#xA;  this does not allow a clear definition of the data type.&#xA;&#xA;  The data types of the input and output values must be identical.&#xA;&#xA;  Note: This function can not be used in the LD (Ladder Diagram) programming language&#xA;        with the BOOL data type, since the same functionality can be achieved there&#xA;        with contacts and coils.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="47BB"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="ANY">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="WRITE_VAR" version="1.01" dateTime="dt#2010-02-19-10:04:40">
		<comment>Writes the standard objects</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="38FB"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="F867"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="ADR" typeName="ANY_ARRAY_INT">
					<comment>Address buffer given by ADDR/ADDM</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="OBJ" typeName="STRING">
					<comment>Object to write: '%MW', '%M', etc.</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
				<variables name="NUM" typeName="DINT">
					<comment>Address of the first object to write</comment>
					<attribute name="PositionPin" value="3"></attribute>
				</variables>
				<variables name="NB" typeName="INT">
					<comment>Number of consecutive objects to write</comment>
					<attribute name="PositionPin" value="4"></attribute>
				</variables>
				<variables name="EMIS" typeName="ANY_ARRAY_INT">
					<comment>Transmission buffer</comment>
					<attribute name="PositionPin" value="5"></attribute>
				</variables>
			</inputParameters>
			<inOutParameters>
				<variables name="GEST" typeName="ANY_ARRAY_INT">
					<comment>Act.,No.,report,time-out,lgth.,array of size 4</comment>
					<attribute name="PositionPin" value="6"></attribute>
				</variables>
			</inOutParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="Etats2" version="0.02" dateTime="dt#2008-07-25-12:09:29">
		<comment>2 Etats</comment>
		<attribute name="TypeSignatureCheckSumString" value="1CC6"></attribute>
		<structure>
			<variables name="en_cours" typeName="BOOL"></variables>
			<variables name="termine" typeName="BOOL"></variables>
		</structure>
	</DDTSource>
	<DDTSource DDTName="Vid_Dry3" version="0.07" dateTime="dt#2012-02-28-17:09:17">
		<attribute name="TypeSignatureCheckSumString" value="D295"></attribute>
		<structure>
			<variables name="Code_prod" typeName="WORD">
				<comment>16#XXYY / voir section "392_Sequence_de_vidange" pour le codage</comment>
			</variables>
			<variables name="Qte" typeName="INT">
				<comment>Quantité à vidanger (bacule uniquement) en %</comment>
			</variables>
			<variables name="Code_synchro" typeName="WORD">
				<comment>16#XYYY / voir section "392_Sequence_de_vidange" pour le codage</comment>
			</variables>
		</structure>
	</DDTSource>
	<EFSource nameOfEFType="SUB_TOD_TOD" version="1.00" dateTime="dt#2010-02-19-09:13:30">
		<comment>Calculate a duration between two date</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="E146"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="78E5"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="TOD">
					<comment>Time of day number 1</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="IN2" typeName="TOD">
					<comment>Time of day number 2</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="TIME">
					<comment>Time interval</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="Lec_Humidite" version="0.08" dateTime="dt#2014-05-27-14:13:05">
		<attribute name="TypeCodeCheckSumString" value="70F2"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="D7CB"></attribute>
		<inputParameters>
			<variables name="Mesure_Ana" typeName="ARRAY[1..16] OF INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Val1" typeName="ARRAY[1..16] OF REAL">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="Val2" typeName="ARRAY[1..16] OF REAL">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="P1" typeName="ARRAY[1..16] OF INT">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="P2" typeName="ARRAY[1..16] OF INT">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="Humidite" typeName="ARRAY[1..16] OF REAL">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="Alpha" typeName="ARRAY[1..16] OF REAL"></variables>
			<variables name="Beta" typeName="ARRAY[1..16] OF REAL"></variables>
			<variables name="x" typeName="INT"></variables>
		</privateLocalVariables>
		<FBProgram name="Main">
			<STSource>(*Calcul de L'humidite*)
For x:=1 to 17 Do 

	Alpha[x] := 0.0;
	Beta[x] := 0.0;

	IF P2[x] &lt;&gt; P1[x] 
	THEN
		Alpha[x] :=((Val2[x]-Val1[x])/(INT_TO_REAL(P2[x]-P1[x])));
		Beta[x] :=(Val1[x])-(Val2[x]-Val1[x])/(INT_TO_REAL(P2[x]-P1[x]))*INT_TO_REAL(P1[x]);
	END_IF;
	
	Humidite[x] := Alpha[x]*(int_to_real(Mesure_Ana[x]))+beta[x];

END_FOR;
</STSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="MAX_DINT" version="1.00" dateTime="dt#2010-02-19-10:28:11">
		<comment>Maximum value function</comment>
		<attribute name="TypeDescriptiveForm" value="  The function assigns the largest input value to the output.&#xA;  The data types of all input values and output values must be identical.&#xA;&#xA;  The number of inputs can be increased.&#xA;&#xA;  Formula&#xA;  OUT = MAX {IN1, IN2, .., INn}&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="48E0"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="7A88"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="DINT">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="DINT">
					<comment>Maximum value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="Vidange_Basc_Dry2" version="1.22" dateTime="dt#2015-04-03-10:20:27">
		<comment>gestion de la vidange</comment>
		<attribute name="TypeDescriptiveForm" value="&lt;pre&gt;Seconde version du DFB : &#xA;- Prise en compte retard de fermeture des bascules&#xA;- Supression de la régulation&#xA;- Supression de l'utilisation des version Bistable, analogique&lt;/pre&gt;"></attribute>
		<attribute name="TypeCodeCheckSumString" value="B634"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="2312"></attribute>
		<inputParameters>
			<variables name="Taux_vid" typeName="INT">
				<comment>Pourcentage du poids avant vidange qui doit être vidangé. (100 pour vidanger la bascule complétement).</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Demande_de_vidange" typeName="EBOOL">
				<comment>Demande de vidange</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="Idx_vid" typeName="INT">
				<comment>Index produit (sera mémorisé durant la vidange)</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="Init" typeName="EBOOL">
				<comment>Initialiser le bloc et ses sorties</comment>
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="Poids_i" typeName="REAL">
				<comment>Poids instantané sur la bascule</comment>
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="Pause_Vidange" typeName="BOOL">
				<comment>Suspendre la vidange</comment>
				<attribute name="PositionPin" value="14"></attribute>
			</variables>
			<variables name="QdC_bascule" typeName="REAL">
				<comment>Queue de chute de la bascule (pour améliorer la précision des vidanges partielles)</comment>
				<attribute name="PositionPin" value="15"></attribute>
			</variables>
			<variables name="Permettre_VPF" typeName="BOOL">
				<comment>(Flag temporaire en attendant l'uniformisation de la gestion des introductions)</comment>
				<attribute name="PositionPin" value="12"></attribute>
			</variables>
			<variables name="Pause_Tps_ecoule" typeName="BOOL">
				<comment>Stopper le décompte du temps écoulé</comment>
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
			<variables name="Derniere_vidange_terminee" typeName="EBOOL">
				<comment>On a detecté ou admis que la dernière phase de vidange a été faite</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="Vidanger_partiellement" typeName="BOOL">
				<comment>TRUE = Faire une vidange suivant le pourcentage (Taux_vid) indiqué / FALSE = Faire une vidange complète, jusque la fin de vidange</comment>
				<attribute name="PositionPin" value="11"></attribute>
			</variables>
			<variables name="Poids_avant_premiere_vidange" typeName="REAL">
				<comment>Mémorisation du poids atteint avant de lancer les phases de vidange (utilisé dans le cadre de vidanges en plusieurs fois)</comment>
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="Index_produit" typeName="INT">
				<comment>Index produit (mémorisé durant la vidange)</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Vid_En_Cours" typeName="EBOOL">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="Vid_Terminee" typeName="EBOOL">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="Tps_ecoule" typeName="DINT">
				<comment>Temps écoulé depuis le debut de la vidange (1/10s)</comment>
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="TON_2" typeName="TON_P"></variables>
			<variables name="tps_vid" typeName="TIME"></variables>
			<variables name="tps_real" typeName="REAL"></variables>
			<variables name="Consigne_poids" typeName="REAL"></variables>
			<variables name="X" typeName="REAL"></variables>
			<variables name="Tps_Vid_ecoule" typeName="BOOL"></variables>
			<variables name="Arret_vidange" typeName="BOOL"></variables>
			<variables name="TON_FIN_VIDANGE" typeName="TON"></variables>
			<variables name="Seuil_vide" typeName="BOOL"></variables>
			<variables name="consigne_atteinte" typeName="BOOL"></variables>
		</privateLocalVariables>
		<FBProgram name="main">
			<STSource>

(* Calcul du seuil d'arret de la vidange *)
X := (1.0 - (INT_TO_REAL(Taux_vid)/100.0));
Consigne_poids := Poids_avant_premiere_vidange * X;

Consigne_atteinte := Permettre_VPF AND (Poids_i &lt;= (Consigne_poids + QdC_bascule));



(* Calcul de fin de vidange =&gt; Vid_Terminee *)
(* et Confirmation du départ de la vidange =&gt; Vid_En_Cours *)

IF Permettre_VPF THEN
	(* Pour Eau1 (seule ligne modifiée dans cette version), on ne mémorise pas l'état Vid_Terminee *)
	(* car cela n'est plus utile sur la ligne Eau1 et pose problème pour vidanger en plusieurs fois *)
	(* (déclaration prématurée de l'état "Vidange_terminée" pour la deuxième vidange, en phase 3) *)
	IF Init THEN
		Vid_Terminee := FALSE;
		Vid_En_Cours := FALSE;
	ELSE
		IF Vidanger_partiellement THEN
			Vid_Terminee := Consigne_atteinte AND Demande_de_vidange;
		ELSE
			Vid_Terminee := Derniere_vidange_terminee AND Demande_de_vidange;
		END_IF;
		Vid_En_Cours := Demande_de_vidange AND NOT Vid_Terminee;
	END_IF;
ELSE
	(* Pour les autres lignes : Fonctionnement inchangé, on conserve l' "Effet mémoire" *)
	Vid_Terminee := (Derniere_vidange_terminee AND NOT Init) AND Vid_En_Cours (* Mise à TRUE lors d'un cycle*)
		OR (Vid_Terminee AND NOT Init); (* Effet memoire *)
	Vid_En_Cours := (RE(IN:=Demande_de_vidange) OR Vid_En_Cours) AND NOT Vid_Terminee AND NOT Init; (* Effet memoire *)
END_IF;






IF Init THEN (* Correction R.C. 07/02/2013 P859, anomalie #0001922 *)
	Index_produit := 0;
ELSE
	Index_produit := Idx_vid; (* Gardé pour compatibilité, sera à supprimer *)
END_IF;




(* On utilise une TON pour connaitre la durée de la vidange *)
TON_2 (IN := Vid_En_Cours, PT := t#5h, PAUSE := Pause_Vidange OR Pause_Tps_ecoule, ET =&gt; tps_vid);
tps_real := TIME_TO_REAL(IN := tps_vid);

IF Vid_En_Cours THEN
	Tps_ecoule := REAL_TO_DINT(IN := tps_real/100.0); (* Tps écoulé (1/10s) *)
END_IF;
IF RE(Init) THEN
	Tps_ecoule := 0;
END_IF;
</STSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="TIME_TO_REAL" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the data type TIME to a  BOOL, BYTE, WORD, DWORD, INT, DINT, UINT, UDINT or REAL data type.&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function,&#xA;        there will also be a few illogical conversions, e.g. TIME_TO_BOOL.&#xA;  While converting an input value of data type TIME into an output value of data type&#xA;  BOOL, BYTE, WORD, INT or UINT, the least significant bits, respectively,&#xA;  are transferred from the input to the output.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="E2C9"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="TIME">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="REAL">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="INTARR6" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="037A"></attribute>
		<array>ARRAY[1..6] OF INT</array>
	</DDTSource>
	<DDTSource DDTName="table_gachee_in" version="0.42" dateTime="dt#2017-10-18-11:30:06">
		<attribute name="TypeSignatureCheckSumString" value="30C6"></attribute>
		<structure>
			<variables name="Numero_gachee" typeName="INT"></variables>
			<variables name="mot_destination" typeName="WORD"></variables>
			<variables name="Proprietes_gachee" typeName="WORD">
				<comment>Bit1: Dernière gachee de la fab / Bit2: 1ere gachee de la fab / Bit3: Obligation de respecter le temps de malaxage / Bit4: Use Process Tolerances from TG_IN</comment>
			</variables>
			<variables name="Temps_mini_malax" typeName="INT">
				<comment>Correspond au réglage du malaxeur. Utilisé pour vérifier la stabilisation wattmétrique</comment>
			</variables>
			<variables name="Temps_mini_malax_suite" typeName="INT"></variables>
			<variables name="Temps_malax" typeName="INT">
				<comment>Correspond à la durée spécifiée dans la formule (modifiable au lancement de la fabrication). Utilisé pour le chronomètre de malaxage.</comment>
			</variables>
			<variables name="Temps_malax_suite" typeName="INT"></variables>
			<variables name="Val_wathmetre" typeName="INT"></variables>
			<variables name="Code_plasticite" typeName="WORD"></variables>
			<variables name="Retard_transf_glace_eau1" typeName="INT">
				<comment>Retard (en s) entre départ du tapis peseur et vidange de la bascule 'eau1'</comment>
			</variables>
			<variables name="Retard_transf_glace_eau2" typeName="INT">
				<comment>Retard (en s) entre départ du tapis peseur et vidange de la bascule 'eau2'</comment>
			</variables>
			<variables name="Seuil_passage_sortie_2_Gra1" typeName="INT">
				<comment>Utilisé pour bascule à 2 sorties de vidange</comment>
			</variables>
			<variables name="retard_transf_add" typeName="INT">
				<comment>Retard (en s) entre départ du tapis peseur et vidange de la bascule 'Add'</comment>
			</variables>
			<variables name="reserve14" typeName="WORD"></variables>
			<variables name="reserve15" typeName="WORD"></variables>
			<variables name="reserve16" typeName="WORD"></variables>
			<variables name="reserve17" typeName="WORD"></variables>
			<variables name="reserve18" typeName="WORD"></variables>
			<variables name="reserve19" typeName="WORD"></variables>
			<variables name="reserve20" typeName="WORD"></variables>
			<variables name="reserve21" typeName="WORD"></variables>
			<variables name="reserve22" typeName="WORD"></variables>
			<variables name="reserve23" typeName="WORD"></variables>
			<variables name="reserve24" typeName="WORD"></variables>
			<variables name="reserve25" typeName="WORD"></variables>
			<variables name="reserve26" typeName="WORD"></variables>
			<variables name="reserve27" typeName="WORD"></variables>
			<variables name="reserve28" typeName="WORD"></variables>
			<variables name="reserve29" typeName="WORD"></variables>
			<variables name="reserve30" typeName="WORD"></variables>
			<variables name="reserve31" typeName="WORD"></variables>
			<variables name="reserve32" typeName="WORD"></variables>
			<variables name="reserve33" typeName="WORD"></variables>
			<variables name="reserve34" typeName="WORD"></variables>
			<variables name="reserve35" typeName="WORD"></variables>
			<variables name="reserve36" typeName="WORD"></variables>
			<variables name="reserve37" typeName="WORD"></variables>
			<variables name="reserve38" typeName="WORD"></variables>
			<variables name="reserve39" typeName="WORD"></variables>
			<variables name="reserve40" typeName="WORD"></variables>
			<variables name="Table_Balance_granulat1" typeName="WORD"></variables>
			<variables name="Basc_gra1" typeName="ARRAY[1..5] OF Dos_Prod5"></variables>
			<variables name="Table_Balance_granulat2" typeName="WORD"></variables>
			<variables name="Basc_gra2" typeName="ARRAY[1..5] OF Dos_Prod5"></variables>
			<variables name="Table_Balance_cim1" typeName="WORD"></variables>
			<variables name="Basc_Cim1" typeName="ARRAY[1..4] OF Dos_Prod5"></variables>
			<variables name="reserve_cim1_114" typeName="WORD"></variables>
			<variables name="reserve_cim1_115" typeName="WORD"></variables>
			<variables name="reserve_cim1_116" typeName="WORD"></variables>
			<variables name="reserve_cim1_117" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_cim1_118" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="Table_balance_cim2" typeName="WORD"></variables>
			<variables name="Basc_Cim2" typeName="ARRAY[1..4] OF Dos_Prod5"></variables>
			<variables name="reserve_cim2_140" typeName="WORD"></variables>
			<variables name="reserve_cim2_141" typeName="WORD"></variables>
			<variables name="reserve_cim2_142" typeName="WORD"></variables>
			<variables name="reserve_cim2_143" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_cim2_144" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="Table_balance_Eau1" typeName="WORD"></variables>
			<variables name="Basc_Eau1" typeName="ARRAY[1..6] OF Dos_Prod5"></variables>
			<variables name="reserve_eau1_176" typeName="WORD"></variables>
			<variables name="reserve_eau1_177" typeName="WORD"></variables>
			<variables name="reserve_eau1_178" typeName="WORD"></variables>
			<variables name="reserve_eau1_179" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_eau1_180" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_eau1_181" typeName="WORD"></variables>
			<variables name="reserve_eau1_182" typeName="WORD"></variables>
			<variables name="reserve_eau1_183" typeName="WORD"></variables>
			<variables name="reserve_eau1_184" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_eau1_185" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="Table_balance_Eau2" typeName="WORD"></variables>
			<variables name="Basc_Eau2" typeName="ARRAY[1..6] OF Dos_Prod5"></variables>
			<variables name="reserve_eau2_217" typeName="WORD"></variables>
			<variables name="reserve_eau2_218" typeName="WORD"></variables>
			<variables name="reserve_eau2_219" typeName="WORD"></variables>
			<variables name="reserve_eau2_220" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_eau2_221" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_eau2_222" typeName="WORD"></variables>
			<variables name="reserve_eau2_223" typeName="WORD"></variables>
			<variables name="reserve_eau2_224" typeName="WORD"></variables>
			<variables name="reserve_eau2_225" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_eau2_226" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="Table_Balance_Adjuvants" typeName="WORD"></variables>
			<variables name="Basc_Adj" typeName="ARRAY[1..4] OF Dos_Prod5"></variables>
			<variables name="reserve_adj_248" typeName="WORD"></variables>
			<variables name="reserve_adj_249" typeName="WORD"></variables>
			<variables name="reserve_adj_250" typeName="WORD"></variables>
			<variables name="reserve_adj_251" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_adj_252" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_adj_253" typeName="WORD"></variables>
			<variables name="reserve_adj_254" typeName="WORD"></variables>
			<variables name="reserve_adj_255" typeName="WORD"></variables>
			<variables name="reserve_adj_256" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_adj_257" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_adj_258" typeName="WORD"></variables>
			<variables name="reserve_adj_259" typeName="WORD"></variables>
			<variables name="reserve_adj_260" typeName="WORD"></variables>
			<variables name="reserve_adj_261" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_adj_262" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_adj_263" typeName="WORD"></variables>
			<variables name="reserve_adj_264" typeName="WORD"></variables>
			<variables name="reserve_adj_265" typeName="WORD"></variables>
			<variables name="reserve_adj_266" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_adj_267" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="Table_Balance_Additionnelle" typeName="WORD"></variables>
			<variables name="Basc_Add" typeName="ARRAY[1..4] OF Dos_Prod5"></variables>
			<variables name="Table_TT_Granulat" typeName="WORD"></variables>
			<variables name="TT_Gra" typeName="ARRAY[1..4] OF Dos_Prod5"></variables>
			<variables name="reserve_TTGra_310" typeName="WORD"></variables>
			<variables name="reserve_TTGra_311" typeName="WORD"></variables>
			<variables name="reserve_TTGra_312" typeName="WORD"></variables>
			<variables name="reserve_TTGra_313" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_TTGra_314" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_TTGra_315" typeName="WORD"></variables>
			<variables name="reserve_TTGra_316" typeName="WORD"></variables>
			<variables name="reserve_TTGra_317" typeName="WORD"></variables>
			<variables name="reserve_TTGra_318" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_TTGra_319" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="Table_balance_anhydrite" typeName="WORD"></variables>
			<variables name="Basc_Anh" typeName="ARRAY[1..2] OF Dos_Prod5"></variables>
			<variables name="Table_dosage_diff_Dry" typeName="WORD">
				<comment>Ajout avec Reorg mémoire</comment>
			</variables>
			<variables name="Dos_dif_Dry" typeName="ARRAY[1..6] OF Dos_Prod5"></variables>
			<variables name="reserve_dif_dry_362" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_363" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_364" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_365" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_dif_dry_366" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_dif_dry_367" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_368" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_369" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_370" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_dif_dry_371" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_dif_dry_372" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_373" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_374" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_375" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_dif_dry_376" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_dif_dry_377" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_378" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_379" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_380" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_dif_dry_381" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="Table_Compteurs" typeName="WORD"></variables>
			<variables name="Compteurs" typeName="ARRAY[1..5] OF Dos_Prod5"></variables>
			<variables name="reserve_compteurs_408" typeName="WORD"></variables>
			<variables name="reserve_compteurs_409" typeName="WORD"></variables>
			<variables name="reserve_compteurs_410" typeName="WORD"></variables>
			<variables name="reserve_compteurs_411" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_compteurs_412" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_compteurs_413" typeName="WORD"></variables>
			<variables name="reserve_compteurs_414" typeName="WORD"></variables>
			<variables name="reserve_compteurs_415" typeName="WORD"></variables>
			<variables name="reserve_compteurs_416" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_compteurs_417" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_compteurs_418" typeName="WORD"></variables>
			<variables name="reserve_compteurs_419" typeName="WORD"></variables>
			<variables name="reserve_compteurs_420" typeName="WORD"></variables>
			<variables name="reserve_compteurs_421" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_compteurs_422" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve423" typeName="WORD"></variables>
			<variables name="reserve424" typeName="WORD"></variables>
			<variables name="reserve425" typeName="WORD"></variables>
			<variables name="reserve426" typeName="WORD"></variables>
			<variables name="reserve427" typeName="WORD"></variables>
			<variables name="reserve428" typeName="WORD"></variables>
			<variables name="reserve429" typeName="WORD"></variables>
			<variables name="reserve430" typeName="WORD"></variables>
			<variables name="reserve431" typeName="WORD"></variables>
			<variables name="reserve432" typeName="WORD"></variables>
			<variables name="reserve433" typeName="WORD"></variables>
			<variables name="reserve434" typeName="WORD"></variables>
			<variables name="reserve435" typeName="WORD"></variables>
			<variables name="reserve436" typeName="WORD"></variables>
			<variables name="reserve437" typeName="WORD"></variables>
			<variables name="reserve438" typeName="WORD"></variables>
			<variables name="reserve439" typeName="WORD"></variables>
			<variables name="reserve440" typeName="WORD"></variables>
			<variables name="reserve441" typeName="WORD"></variables>
			<variables name="reserve442" typeName="WORD"></variables>
			<variables name="reserve443" typeName="WORD"></variables>
			<variables name="reserve444" typeName="WORD"></variables>
			<variables name="reserve445" typeName="WORD"></variables>
			<variables name="reserve446" typeName="WORD"></variables>
			<variables name="reserve447" typeName="WORD"></variables>
			<variables name="reserve448" typeName="WORD"></variables>
			<variables name="WaterCorrectionOrder" typeName="ARRAY[1..8] OF INT">
				<comment>Define the order of water correction</comment>
			</variables>
			<variables name="reserve457" typeName="WORD"></variables>
			<variables name="reserve458" typeName="WORD"></variables>
			<variables name="reserve459" typeName="WORD"></variables>
			<variables name="reserve460" typeName="WORD"></variables>
			<variables name="reserve461" typeName="WORD"></variables>
			<variables name="reserve462" typeName="WORD"></variables>
			<variables name="reserve463" typeName="WORD"></variables>
			<variables name="reserve464" typeName="WORD"></variables>
			<variables name="reserve465" typeName="WORD"></variables>
			<variables name="reserve466" typeName="WORD"></variables>
			<variables name="reserve467" typeName="WORD"></variables>
			<variables name="reserve468" typeName="WORD"></variables>
			<variables name="reserve469" typeName="WORD"></variables>
			<variables name="reserve470" typeName="WORD"></variables>
			<variables name="reserve471" typeName="WORD"></variables>
			<variables name="reserve472" typeName="WORD"></variables>
			<variables name="reserve473" typeName="WORD"></variables>
			<variables name="reserve474" typeName="WORD"></variables>
			<variables name="reserve475" typeName="WORD"></variables>
			<variables name="reserve476" typeName="WORD"></variables>
			<variables name="reserve477" typeName="WORD"></variables>
			<variables name="reserve478" typeName="WORD"></variables>
			<variables name="reserve479" typeName="WORD"></variables>
			<variables name="Code_Debut_Malaxage" typeName="WORD"></variables>
			<variables name="Table_vidange_dry" typeName="WORD">
				<comment>Ajout avec Reorg mémoire</comment>
			</variables>
			<variables name="Vidange_dry" typeName="ARRAY[1..12] OF Vid_Dry3"></variables>
			<variables name="reserve_vid_dry_518" typeName="WORD"></variables>
			<variables name="reserve_vid_dry_519" typeName="WORD"></variables>
			<variables name="reserve_vid_dry_520" typeName="WORD"></variables>
			<variables name="reserve_vid_dry_521" typeName="WORD"></variables>
			<variables name="reserve_vid_dry_522" typeName="WORD"></variables>
			<variables name="reserve_vid_dry_523" typeName="WORD"></variables>
			<variables name="reserve_vid_dry_524" typeName="WORD"></variables>
			<variables name="reserve_vid_dry_525" typeName="WORD"></variables>
			<variables name="reserve_vid_dry_526" typeName="WORD"></variables>
			<variables name="reserve_vid_dry_527" typeName="WORD"></variables>
			<variables name="reserve_vid_dry_528" typeName="WORD"></variables>
			<variables name="reserve_vid_dry_529" typeName="WORD"></variables>
			<variables name="Conf_Agg_Process_Tol" typeName="INTARR14">
				<comment>Aggregates Process Tolerance in %</comment>
			</variables>
			<variables name="Conf_Cem_Process_Tol" typeName="INTARR6">
				<comment>Cements Process Tolerance in %</comment>
			</variables>
			<variables name="Conf_Water_Process_Tol" typeName="INTARR4">
				<comment>Waters Process Tolerance in %</comment>
			</variables>
			<variables name="Conf_Admix_Process_Tol" typeName="INTARR20">
				<comment>Admixtures Process Tolerance in %</comment>
			</variables>
			<variables name="Conf_PP_Process_Tol" typeName="INTARR20">
				<comment>Pumps Process Tolerance in %</comment>
			</variables>
			<variables name="Conf_Add_Process_Tol" typeName="INTARR4">
				<comment>Additional Process Tolerance in %</comment>
			</variables>
			<variables name="Conf_Anh_Process_Tol" typeName="INT">
				<comment>Anhydrite Process Tolerance in %</comment>
			</variables>
			<variables name="reserve599" typeName="WORD"></variables>
			<variables name="reserve600" typeName="WORD"></variables>
			<variables name="reserve601" typeName="WORD"></variables>
			<variables name="reserve602" typeName="WORD"></variables>
			<variables name="reserve603" typeName="WORD"></variables>
			<variables name="reserve604" typeName="WORD"></variables>
			<variables name="reserve605" typeName="WORD"></variables>
			<variables name="reserve606" typeName="WORD"></variables>
			<variables name="reserve607" typeName="WORD"></variables>
			<variables name="reserve608" typeName="WORD"></variables>
			<variables name="reserve609" typeName="WORD"></variables>
			<variables name="reserve610" typeName="WORD"></variables>
			<variables name="reserve611" typeName="WORD"></variables>
			<variables name="reserve612" typeName="WORD"></variables>
			<variables name="reserve613" typeName="WORD"></variables>
			<variables name="reserve614" typeName="WORD"></variables>
			<variables name="reserve615" typeName="WORD"></variables>
			<variables name="reserve616" typeName="WORD"></variables>
			<variables name="reserve617" typeName="WORD"></variables>
			<variables name="reserve618" typeName="WORD"></variables>
			<variables name="reserve619" typeName="WORD"></variables>
			<variables name="reserve620" typeName="WORD"></variables>
			<variables name="reserve621" typeName="WORD"></variables>
			<variables name="reserve622" typeName="WORD"></variables>
			<variables name="reserve623" typeName="WORD"></variables>
			<variables name="reserve624" typeName="WORD"></variables>
			<variables name="reserve625" typeName="WORD"></variables>
			<variables name="reserve626" typeName="WORD"></variables>
			<variables name="reserve627" typeName="WORD"></variables>
			<variables name="reserve628" typeName="WORD"></variables>
			<variables name="reserve629" typeName="WORD"></variables>
			<variables name="reserve630" typeName="WORD"></variables>
			<variables name="reserve631" typeName="WORD"></variables>
			<variables name="reserve632" typeName="WORD"></variables>
			<variables name="reserve633" typeName="WORD"></variables>
			<variables name="reserve634" typeName="WORD"></variables>
			<variables name="reserve635" typeName="WORD"></variables>
			<variables name="reserve636" typeName="WORD"></variables>
			<variables name="reserve637" typeName="WORD"></variables>
			<variables name="reserve638" typeName="WORD"></variables>
			<variables name="reserve639" typeName="WORD"></variables>
			<variables name="reserve640" typeName="WORD"></variables>
			<variables name="reserve641" typeName="WORD"></variables>
			<variables name="reserve642" typeName="WORD"></variables>
			<variables name="reserve643" typeName="WORD"></variables>
			<variables name="reserve644" typeName="WORD"></variables>
			<variables name="reserve645" typeName="WORD"></variables>
			<variables name="reserve646" typeName="WORD"></variables>
			<variables name="reserve647" typeName="WORD"></variables>
			<variables name="reserve648" typeName="WORD"></variables>
			<variables name="CR_Valid_BcMix" typeName="WORD"></variables>
			<variables name="CR_code_fin" typeName="INT"></variables>
		</structure>
	</DDTSource>
	<EFSource nameOfEFType="ARINT_TO_TOD" version="1.00" dateTime="dt#2010-02-19-09:41:38">
		<comment>Converts an Integer-Array to a TimeOfDay variable</comment>
		<attribute name="TypeDescriptiveForm" value="Converts an Integer-Array with TimeOfDay in BCD format (ss--, hhmm)  to a TimeOfDay variable.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="8FA2"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="4F67"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="ANY_ARRAY_INT">
					<comment>Interger array with TimeOfDay (ss--, hhmm)</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="TOD">
					<comment>This is the output pin</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFBSource nameOfEFBType="SAMPLETM" version="1.02" dateTime="dt#2010-02-19-09:38:17">
		<comment>Sample Time</comment>
		<attribute name="TypeDescriptiveForm" value="  With this function block the function blocks of the control mechanism are  released under time control.&#xA;  To control, the Q output of the SAMPLETM function block is connected with&#xA;  the EN input of the function block to be controlled.&#xA;  The Q output is activated for one program cycle after the stated time at&#xA;  the INTERVAL input has expired.&#xA;  The DELSCAN input was created to prevent the simultaneous start of more than one&#xA;  sample time dependent FFB which are controlled by various SAMPLETM function blocks.&#xA;  At this input the number of cycles is stated according to which the activation of Q after&#xA;  a cold start is delayed. Therefore it is possible to release sample time dependent&#xA;  function blocks step by step to reduce the load on the CPU during the start cycle.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="IsTypeDiagnostic" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="79AA"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="A70D"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="INTERVAL" typeName="TIME">
					<comment>Sample time for connect CLC-FC</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="DELSCANS" typeName="INT">
					<comment>No. of delay scans after Cold-start</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="Q" typeName="BOOL">
					<comment>Enable CLC-FB</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFBSource>
	<EFSource nameOfEFType="SUM_ARINT" version="1.01" dateTime="dt#2010-02-19-09:25:25">
		<comment>Sum of the elements of an integer table</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="EAFB"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="DE50"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="ANY_ARRAY_INT">
					<comment>Source table</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>Sum of IN elements</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="OCCUR_ARREAL" version="1.00" dateTime="dt#2010-02-19-09:25:24">
		<comment>Sum of the number of occurrences of a value in a real value table</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="CD45"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="EAD3"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_ARRAY_REAL">
					<comment>Source table</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="IN2" typeName="REAL">
					<comment>Real value</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>Number of occurrences of IN2 in IN1</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="BOOLARR66" version="0.00" dateTime="dt#2010-09-21-10:13:58">
		<attribute name="TypeSignatureCheckSumString" value="87C6"></attribute>
		<array>ARRAY[1..66] OF BOOL</array>
	</DDTSource>
	<EFSource nameOfEFType="EQ" version="1.00" dateTime="dt#2010-02-19-09:12:06">
		<comment>Equal to</comment>
		<attribute name="TypeDescriptiveForm" value="  This function checks the inputs for equality, i.e. the output becomes &quot;1&quot;  if there is equality at all inputs; otherwise, the output remains at &quot;0&quot;.&#xA;  The data types of all input values must be identical.&#xA;  The number of inputs can be increased (max 32).&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="BE6A"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_ELEMENTARY">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>1: equal, 0:not equal</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="WORD_AS_DINT" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts 2 input values of the WORD data type  to an output of the DINT data type.&#xA;&#xA;  The input values are assigned to the word at the output&#xA;  according to the input names.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="C9D1"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="LOW" typeName="WORD">
					<comment>Least significant word</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="HIGH" typeName="WORD">
					<comment>Most significant word</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="DINT">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="MID_INT" version="1.01" dateTime="dt#2010-02-19-10:15:55">
		<comment>Extract a sub-string</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="65ED"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="E5E5"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="STRING">
					<comment>Operande containing the source string</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="N" typeName="INT">
					<comment>Length of the field to extract</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
				<variables name="P" typeName="INT">
					<comment>Position 1st. character to extract</comment>
					<attribute name="PositionPin" value="3"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="STRING">
					<comment>Operande containing the extracted string</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="INTARR20" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="B619"></attribute>
		<array>ARRAY[1..20] OF INT</array>
	</DDTSource>
	<EFSource nameOfEFType="INT_TO_UDINT" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the INT data type to a  BOOL, BYTE, WORD, DWORD, DINT, UINT UDINT, REAL or TIME output value.&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function,&#xA;        there will also be a few illogical conversions, e.g. INT_TO_BOOL.&#xA;  Negative input values cannot be converted into data types UINT, UDINT or TIME.&#xA;  When converting an input value from the data type INT into data type WORD,&#xA;  the bit pattern from the input is transferred to the output without being modified.&#xA;  When converting an input value of data type INT into the data types BOOL or BYTE,&#xA;  the least significant bits of the input are transferred to the output.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="A1DA"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="INT">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="UDINT">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="DINTARR3" version="0.01" dateTime="dt#2007-03-22-18:11:58">
		<attribute name="TypeSignatureCheckSumString" value="99BF"></attribute>
		<array>ARRAY[1..3] OF DINT</array>
	</DDTSource>
	<EFSource nameOfEFType="GET_BIT" version="1.00" dateTime="dt#2010-02-19-09:57:47">
		<comment>Reading bit</comment>
		<attribute name="TypeDescriptiveForm" value="  This function reads the bit of the IN input selected with NO  and writes the current state to the RES output.&#xA;  The output is the current state of the selected input data bit.&#xA;  The NO parameter shows which input data bit to select.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="AFF6"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="7E49"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="WORD">
					<comment>Input word</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="NO" typeName="UINT">
					<comment>Bit number to be read.</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="RES" typeName="BOOL">
					<comment>Current state of selected bit.</comment>
					<attribute name="PositionPin" value="3"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="LEN_INT" version="1.01" dateTime="dt#2010-02-19-10:15:55">
		<comment>String length</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="5D71"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="890C"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="STRING">
					<comment>Operande containing the source string</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>String length</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFBSource nameOfEFBType="CTU_UDINT" version="1.00" dateTime="dt#2010-02-19-10:12:00">
		<comment>Up counter UDINT values</comment>
		<attribute name="TypeDescriptiveForm" value="  This function block is used for counting UDINT values upward.  A &quot;1&quot; signal at the R input causes the value &quot;0&quot; to be assigned to the CV output.&#xA;  With each transition from &quot;0&quot; to &quot;1&quot; at the CU input, the value of CV is incremented by 1.&#xA;  When CV is &gt;= PV, the Q output is set to &quot;1&quot;.&#xA;&#xA;  Note: The counter only works to the maximum values of the data type being used.&#xA;        No overflow occurs.&#xA;&#xA;  This EFB conforms to IEC 61131-3.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="IsTypeDiagnostic" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="F916"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="8CD8"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="CU" typeName="BOOL">
					<comment>Trigger input</comment>
					<attribute name="PositionPin" value="1"></attribute>
					<attribute name="IsPinDiagnosticable" value="0"></attribute>
				</variables>
				<variables name="R" typeName="BOOL">
					<comment>Reset</comment>
					<attribute name="PositionPin" value="2"></attribute>
					<attribute name="IsPinDiagnosticable" value="0"></attribute>
				</variables>
				<variables name="PV" typeName="UDINT">
					<comment>Preset value</comment>
					<attribute name="PositionPin" value="3"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="Q" typeName="BOOL">
					<comment>Indicator output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="CV" typeName="UDINT">
					<comment>Count value</comment>
					<attribute name="PositionPin" value="3"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFBSource>
	<EFSource nameOfEFType="DIV" version="1.00" dateTime="dt#2010-02-19-09:59:13">
		<comment>Division</comment>
		<attribute name="TypeDescriptiveForm" value="  The function divides the value at the input IN1 with the value at the  input IN2 and assigns the result to the output.&#xA;&#xA;  The data types of the input values and the output values must be identical.&#xA;&#xA;  When dividing INT, DINT, UINT and UDINT data types,&#xA;  any decimal places in the result are omitted, e.g.&#xA;   7 : 3 =  2&#xA;  -7 : 3 = -2&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="EBAF"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_NUM">
					<comment>Dividend</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="IN2" typeName="ANY_NUM">
					<comment>Divisor</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_NUM">
					<comment>Quotient</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="Decomp_numero_produit" version="0.01" dateTime="dt#2011-02-23-14:45:49">
		<comment>Utilisé pour les dosages simultanés</comment>
		<attribute name="TypeCodeCheckSumString" value="D8F7"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="C33E"></attribute>
		<inputParameters>
			<variables name="Numeros_organes" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="Num_organe_principal" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Num_organe_aux1" typeName="INT">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="Num_organe_aux2" typeName="INT">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
		</outputParameters>
		<FBProgram name="main">
			<ILSource>
(*
Description du DFB :
	Ce bloc décompose les numéros de produit (tel qu'indiqué dans
	les zone de dosage de la table des gachées) dans le cas d'un
	dosage simultané sur plusieurs organes de stockage.
 
 
                       -------------
                       |           |
 Numeros_organes -----&gt;| Decomp_   |-----&gt; Num_organe_principal
                       |  numero_  |
                       |  produit  |-----&gt; Num_organe_aux1
                       |           |
                       |           |-----&gt; Num_organe_aux2
                       |           |
		       -------------
 
Format de Numeros_organes :
		 15               8   7               0
		--------------------|--------------------
		| x x x x | x x x x | x x x x | x x x x |
		--------------------|--------------------
		  \     /   \     /   \     /   \     /
		  Réservé   Organe    Organe    Organe
		             Aux2      Aux1    Principal
*)
 
 
(* Récupération de MainBin par masquage ET *)
LD Numeros_organes
AND 16#000F
ST Num_organe_principal
 
(* Récupération de Aux1Bin par masquage ET puis décalage *)
LD Numeros_organes
AND 16#00F0
SHR 4
ST Num_organe_aux1
 
(* Récupération de Aux2Bin par masquage ET puis décalage *)
LD Numeros_organes
AND 16#0F00
SHR 8
ST Num_organe_aux2
</ILSource>
		</FBProgram>
	</FBSource>
	<DDTSource DDTName="TIMEARR4" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="621D"></attribute>
		<array>ARRAY[1..4] OF TIME</array>
	</DDTSource>
	<EFSource nameOfEFType="SUM_ARREAL" version="1.00" dateTime="dt#2010-02-19-09:25:25">
		<comment>Sum of elements in a real value table</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="623D"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="6609"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="ANY_ARRAY_REAL">
					<comment>Source table</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="REAL">
					<comment>Sum of IN elements</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="TIME_TO_UDINT" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the data type TIME to a  BOOL, BYTE, WORD, DWORD, INT, DINT, UINT, UDINT or REAL data type.&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function,&#xA;        there will also be a few illogical conversions, e.g. TIME_TO_BOOL.&#xA;  While converting an input value of data type TIME into an output value of data type&#xA;  BOOL, BYTE, WORD, INT or UINT, the least significant bits, respectively,&#xA;  are transferred from the input to the output.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="A3DF"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="TIME">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="UDINT">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="SWAP_ARINT" version="1.00" dateTime="dt#2010-02-19-09:25:25">
		<comment>Swaps bytes in a integer table</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="A2F0"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="3FA7"></attribute>
		<ExternalToolsOnly>
			<inOutParameters>
				<variables name="INOUT" typeName="ANY_ARRAY_INT">
					<comment>Table in which the bytes of each integer are swapped</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inOutParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="LEC_ANA" version="0.34" dateTime="dt#2014-01-21-18:57:19">
		<comment>Lecture bascule analogique (par EANA)</comment>
		<attribute name="TypeCodeCheckSumString" value="BE67"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="0133"></attribute>
		<inputParameters>
			<variables name="Mesure_Ana" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Simulation_en_cours" typeName="BOOL">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="detarage_min" typeName="INT">
				<attribute name="PositionPin" value="11"></attribute>
			</variables>
			<variables name="detarage_max" typeName="INT">
				<attribute name="PositionPin" value="12"></attribute>
			</variables>
			<variables name="Poids_simulateur" typeName="WORD">
				<attribute name="PositionPin" value="13"></attribute>
			</variables>
			<variables name="conf_correction" typeName="INT">
				<attribute name="PositionPin" value="14"></attribute>
			</variables>
			<variables name="conf_pas" typeName="INT">
				<attribute name="PositionPin" value="15"></attribute>
			</variables>
			<variables name="W1" typeName="REAL">
				<comment>calibration</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="W2" typeName="REAL">
				<comment>calibration</comment>
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="P1" typeName="INT">
				<comment>calibration</comment>
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
			<variables name="P2" typeName="INT">
				<comment>calibration</comment>
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="Poids" typeName="REAL">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Amperemetre" typeName="REAL">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="Poids_reel" typeName="REAL">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="DEF_depassement_Max" typeName="BOOL">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="DEF_depassement_Min" typeName="BOOL">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="Sig_Real" typeName="REAL"></variables>
			<variables name="FBI_0" typeName="TON"></variables>
			<variables name="detarrage_5s" typeName="BOOL"></variables>
			<variables name="Alpha" typeName="REAL"></variables>
			<variables name="Beta" typeName="REAL"></variables>
			<variables name="Pds1" typeName="INT"></variables>
		</privateLocalVariables>
		<FBProgram name="main">
			<STSource>Sig_Real := int_to_real(Mesure_Ana+conf_correction);
(* Correction ajoutée ; Modif Jérémie BOUVET "Inde" 15/02/2010 *)
(*Calcul du courant mesuré*)
Amperemetre := Sig_real*(20.0-4.0)/10000.0+4.0;

IF NOT Simulation_en_cours THEN
(*Calcul du poids*)
	(* Modif MD 09/12/2008 suite dev Jérémie Inde *)
	(*Coeficient to adapt for Analog agg weigher 1 configuration*) 
	IF P2 &lt;&gt; P1 THEN
		Alpha :=((W2-W1)/(INT_TO_REAL(P2-P1)));
		Beta :=(W1)-(W2-W1)/(INT_TO_REAL(P2-P1))*INT_TO_REAL(P1);
	END_IF;
	(* Y= Alpha*x+beta 
	   Avec Alpha = yb-ya / xb-xa *)
	(* Alpha := (int_to_real( Seuil_bascule_Max )-int_to_real( Seuil_bascule_Min))/10000.0;
	Beta  := int_to_real( Seuil_bascule_Min); *)
	Poids_reel := Alpha*(Sig_real)+beta;
	(* Création de l'Arrondi à la précision du pas *)
	(* On prends arrondi à l'entier le plus proche (Pds/Pas) *)
	(* ASM Jan 2014 -P864 : artf 1424232 : Additional balance  *)
	IF conf_pas &gt; 0 THEN
	Pds1 := real_to_int(Poids_reel/int_to_real(conf_pas));
	(* Que l'on multiplie par 5 *)
	Poids := int_to_real(Pds1*conf_pas);
	ELSE
	Poids := Poids_reel;
	END_IF;
ELSE
 	Poids := Int_to_real(word_to_int(Poids_simulateur));
	Poids_reel := Poids;
END_IF;


(*Surcharge ou detarrage *)
IF Poids &gt; int_to_real( detarage_Max )
   THEN DEF_depassement_Min	:= FALSE;
     	DEF_depassement_Max	:= TRUE;
   ELSE DEF_depassement_Max	:= FALSE;
END_IF;

IF Poids &lt; int_to_real( detarage_Min)
   THEN detarrage_5s := TRUE;
   ELSE detarrage_5s := FALSE; 
END_IF;

FBI_0 (IN := detarrage_5s, PT := t#5s,
	  Q =&gt; DEF_depassement_Min);
</STSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="OCCUR_ARINT" version="1.00" dateTime="dt#2010-02-19-09:25:24">
		<comment>Occurrence of a defined value</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="ECD0"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="9D1C"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_ARRAY_INT">
					<comment>Table of source single length integer</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="IN2" typeName="INT">
					<comment>Value to find</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>Number of occurrences</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="TRAP_MAL" version="2.01" dateTime="dt#2008-01-28-14:49:35">
		<attribute name="TypeProtectionLevel" value="2#0000_0000"></attribute>
		<attribute name="TypeCodeCheckSumString" value="5D84"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="BBA0"></attribute>
		<inputParameters>
			<variables name="DEST_SEC" typeName="BOOL">
				<comment>Destination sortie sèche</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="DEST_MAL" typeName="BOOL">
				<comment>Destination malaxeur (malax de la trappe concerné par le DFB</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="MAL_VID" typeName="BOOL">
				<comment>Malaxeur vide (malax de la trappe concerné par le DFB)</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="VAL_TRA" typeName="BOOL">
				<comment>Bit de validation trappe concerné par le DFB</comment>
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="MANU" typeName="BOOL">
				<comment>Manu logiciel</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="TRA1_OUV" typeName="BOOL">
				<comment>Trappe concerné par le DFB ouverte</comment>
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="TRA2_FER" typeName="BOOL">
				<comment>Autre trappe du malaxeur fermée</comment>
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
			<variables name="TRA_AUTO" typeName="BOOL">
				<comment>Trappe de vidange en auto</comment>
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
			<variables name="AUTO_PUP" typeName="BOOL">
				<comment>Auto pupitre sans arret cycle</comment>
				<attribute name="PositionPin" value="9"></attribute>
			</variables>
			<variables name="TRA_BLOQ" typeName="BOOL">
				<comment>Défaut trappe bloquée</comment>
				<attribute name="PositionPin" value="10"></attribute>
			</variables>
			<variables name="MANU_OUV" typeName="BOOL">
				<comment>Demande manuel d'ouverture</comment>
				<attribute name="PositionPin" value="11"></attribute>
			</variables>
			<variables name="MANU_FER" typeName="BOOL">
				<comment>Demande manuel de fermeture</comment>
				<attribute name="PositionPin" value="12"></attribute>
			</variables>
			<variables name="MANU_TEM" typeName="BOOL">
				<comment>Manuel temporisé</comment>
				<attribute name="PositionPin" value="13"></attribute>
			</variables>
			<variables name="T_MANU_O" typeName="TIME">
				<comment>Temps ouverture trappe</comment>
				<attribute name="PositionPin" value="14"></attribute>
			</variables>
			<variables name="OUV_TRA" typeName="BOOL">
				<comment>Demande automatique d'ouverture trappe (séquence)</comment>
				<attribute name="PositionPin" value="15"></attribute>
			</variables>
			<variables name="VIDANGE" typeName="BOOL">
				<comment>Vidange en cours du malaxeur</comment>
				<attribute name="PositionPin" value="16"></attribute>
			</variables>
			<variables name="OUV_SECH" typeName="BOOL">
				<comment>bit pour le retard de fermeture lors d'une sortie sèche</comment>
				<attribute name="PositionPin" value="17"></attribute>
			</variables>
			<variables name="TRA1_FER" typeName="BOOL">
				<comment>Trappe concerné par le DFB fermée</comment>
				<attribute name="PositionPin" value="18"></attribute>
			</variables>
			<variables name="FER_TRA" typeName="BOOL">
				<comment>Demande automatique de fermeture trappe (séquence)</comment>
				<attribute name="PositionPin" value="19"></attribute>
			</variables>
			<variables name="TPS_RET" typeName="TIME">
				<comment>Temps de retard fermeture lors d'une sortie sèche</comment>
				<attribute name="PositionPin" value="20"></attribute>
			</variables>
			<variables name="T_MANU_F" typeName="TIME">
				<comment>Temps fermeture trappe</comment>
				<attribute name="PositionPin" value="21"></attribute>
			</variables>
			<variables name="PRES_TRA" typeName="BOOL">
				<comment>Présence trappe</comment>
				<attribute name="PositionPin" value="22"></attribute>
			</variables>
			<variables name="TPS_REP" typeName="TIME">
				<comment>Temps de réponse de la trappe</comment>
				<attribute name="PositionPin" value="23"></attribute>
			</variables>
			<variables name="TPS_FER" typeName="TIME">
				<comment>Temps de fermeture de la trappe</comment>
				<attribute name="PositionPin" value="24"></attribute>
			</variables>
			<variables name="DEF_OUV" typeName="BOOL">
				<comment>Défaut d'ouverture trappe (calculé dans la séquence)</comment>
				<attribute name="PositionPin" value="25"></attribute>
			</variables>
			<variables name="G_OUV_C8" typeName="BOOL">
				<attribute name="PositionPin" value="26"></attribute>
			</variables>
			<variables name="pup_ouv" typeName="BOOL">
				<comment>(Roumanie) Commande par pupitre</comment>
				<attribute name="PositionPin" value="27"></attribute>
			</variables>
			<variables name="pup_fer" typeName="BOOL">
				<comment>(Roumanie) Commande par pupitre</comment>
				<attribute name="PositionPin" value="28"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="CDE_OUV" typeName="BOOL">
				<comment>Commande ouverture trappe</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="R_MANU_O" typeName="BOOL">
				<comment>Reset demande manuel d'ouverture</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="CDE_FER" typeName="BOOL">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="R_MANU_F" typeName="BOOL">
				<comment>Reset demmande manuel de fermeture</comment>
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="R_OUV_SS" typeName="BOOL">
				<comment>Reset bit retard de fermeture pour sortie sèche</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="DEF_BLOQ" typeName="BOOL">
				<comment>Défaut trappe bloquée</comment>
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="FBI_1_17" typeName="TP"></variables>
			<variables name="FBI_1_29" typeName="TON"></variables>
			<variables name="FBI_1_40" typeName="TP"></variables>
			<variables name="FBI_1_60" typeName="TON"></variables>
			<variables name="FBI_1_61" typeName="TON"></variables>
		</privateLocalVariables>
		<FBProgram name="Commande_et_discordance_trappe">
			<LDSource nbColumns="14">
				<networkLD>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="g_ouv_C8"></contact>
						</shortCircuit>
						<emptyCell nbCells="12"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="Dest_mal"></contact>
						<contact typeContact="openContact" contactVariableName="Dest_sec"></contact>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="mal_vid"></contact>
						</shortCircuit>
						<contact typeContact="openContact" contactVariableName="val_tra"></contact>
						<contact typeContact="closedContact" contactVariableName="manu"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="2"></HLink>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="tra1_ouv"></contact>
						<contact typeContact="openContact" contactVariableName="tra2_fer"></contact>
						<contact typeContact="openContact" contactVariableName="tra_auto"></contact>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="auto_pup"></contact>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="tra_bloq"></contact>
						<coil typeCoil="coil" coilVariableName="cde_ouv"></coil>
						<HLink nbCells="1"></HLink>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="ouv_tra"></contact>
						<HLink nbCells="2"></HLink>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="manu_ouv"></contact>
						<contact typeContact="openContact" contactVariableName="manu"></contact>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="closedContact" contactVariableName="manu_fer"></contact>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="manu_tem"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="3"></HLink>
						</shortCircuit>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName="FBI_1_17" typeName="TP" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="4" posY="5"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="t_manu_o"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<contact typeContact="openContact" contactVariableName="manu_tem"></contact>
						<emptyCell nbCells="2"></emptyCell>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="10"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="pup_ouv"></contact>
						<contact typeContact="closedContact" contactVariableName="pup_fer"></contact>
						<HLink nbCells="5"></HLink>
						<contact typeContact="closedContact" contactVariableName="tra1_ouv"></contact>
						<HLink nbCells="1"></HLink>
						<contact typeContact="closedContact" contactVariableName="tra_auto"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="NContact" contactVariableName="cde_ouv"></contact>
						<HLink nbCells="10"></HLink>
						<coil typeCoil="coil" coilVariableName="r_manu_o"></coil>
						<HLink nbCells="2"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="closedContact" contactVariableName="Dest_mal"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="vidange"></contact>
						<HLink nbCells="1"></HLink>
						<contact typeContact="closedContact" contactVariableName="ouv_sech"></contact>
						<HLink nbCells="1"></HLink>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="closedContact" contactVariableName="g_ouv_C8"></contact>
						</shortCircuit>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="closedContact" contactVariableName="manu"></contact>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="tra1_fer"></contact>
						<contact typeContact="openContact" contactVariableName="tra_auto"></contact>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="auto_pup"></contact>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="tra_bloq"></contact>
						<coil typeCoil="coil" coilVariableName="cde_fer"></coil>
					</typeLine>
					<typeLine>
						<contact typeContact="closedContact" contactVariableName="Dest_sec"></contact>
						<contact typeContact="closedContact" contactVariableName="g_ouv_C8"></contact>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
						<FFBBlock instanceName="FBI_1_29" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="5" posY="13"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="tps_ret"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<VLink></VLink>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="g_ouv_C8"></contact>
						</shortCircuit>
						<VLink></VLink>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="g_ouv_C8"></contact>
						</shortCircuit>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="Dest_mal"></contact>
						<contact typeContact="openContact" contactVariableName="Dest_sec"></contact>
						<contact typeContact="closedContact" contactVariableName="val_tra"></contact>
						<contact typeContact="openContact" contactVariableName="ouv_sech"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="7"></emptyCell>
						<VLink></VLink>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="fer_tra"></contact>
						<contact typeContact="openContact" contactVariableName="val_tra"></contact>
						<HLink nbCells="6"></HLink>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="manu_fer"></contact>
						<contact typeContact="openContact" contactVariableName="manu"></contact>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="closedContact" contactVariableName="manu_ouv"></contact>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="manu_tem"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="5"></HLink>
						</shortCircuit>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
						<FFBBlock instanceName="FBI_1_40" typeName="TP" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="5" posY="19"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="t_manu_f"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="1"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="5"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<contact typeContact="openContact" contactVariableName="manu_tem"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<HLink nbCells="2"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="11"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="pup_fer"></contact>
						<contact typeContact="closedContact" contactVariableName="pup_ouv"></contact>
						<HLink nbCells="5"></HLink>
						<contact typeContact="closedContact" contactVariableName="tra1_fer"></contact>
						<HLink nbCells="2"></HLink>
						<contact typeContact="closedContact" contactVariableName="tra_auto"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="NContact" contactVariableName="cde_fer"></contact>
						<HLink nbCells="10"></HLink>
						<coil typeCoil="coil" coilVariableName="r_manu_f"></coil>
						<HLink nbCells="2"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="tra1_fer"></contact>
						<coil typeCoil="coil" coilVariableName="r_ouv_ss"></coil>
						<HLink nbCells="12"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="4"></emptyCell>
						<FFBBlock instanceName="FBI_1_60" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="4" posY="28"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="tps_rep"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="8"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="pres_tra"></contact>
						</shortCircuit>
						<contact typeContact="openContact" contactVariableName="cde_ouv"></contact>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="tra1_fer"></contact>
						</shortCircuit>
						<emptyCell nbCells="11"></emptyCell>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="cde_fer"></contact>
						</shortCircuit>
						<contact typeContact="openContact" contactVariableName="tra1_ouv"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<coil typeCoil="coil" coilVariableName="def_bloq"></coil>
						<HLink nbCells="6"></HLink>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<VLink></VLink>
						<emptyCell nbCells="4"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<VLink></VLink>
						<emptyCell nbCells="2"></emptyCell>
						<FFBBlock instanceName="FBI_1_61" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="4" posY="32"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="tps_fer"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<VLink></VLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<VLink></VLink>
						<emptyCell nbCells="4"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<emptyCell nbCells="1"></emptyCell>
						<contact typeContact="closedContact" contactVariableName="tra1_fer"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<emptyCell nbCells="5"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<contact typeContact="openContact" contactVariableName="tra1_ouv"></contact>
						<contact typeContact="openContact" contactVariableName="tra1_fer"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="4"></HLink>
						</shortCircuit>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="def_ouv"></contact>
						<contact typeContact="openContact" contactVariableName="val_tra"></contact>
						<HLink nbCells="5"></HLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="62"></emptyLine>
					</typeLine>
					<textBox width="3" height="1">Commande ouverture trappe
    <objPosition posX="0" posY="0"></objPosition>
					</textBox>
					<textBox width="3" height="1">Commande fermeture trappe
    <objPosition posX="0" posY="11"></objPosition>
					</textBox>
					<textBox width="3" height="1">Discordance trappe
    <objPosition posX="0" posY="28"></objPosition>
					</textBox>
				</networkLD>
			</LDSource>
		</FBProgram>
	</FBSource>
	<DDTSource DDTName="CR_Prod4" version="0.01" dateTime="dt#2010-08-04-17:25:51">
		<attribute name="TypeSignatureCheckSumString" value="E7D0"></attribute>
		<structure>
			<variables name="Numero_prod" typeName="WORD"></variables>
			<variables name="Erreur_jettee" typeName="INT"></variables>
			<variables name="Poids_reel_pese" typeName="INT"></variables>
			<variables name="Poids_vise" typeName="INT">
				<comment>Pour la correction gachee sur gachee</comment>
			</variables>
		</structure>
	</DDTSource>
	<DDTSource DDTName="cumuls_pesees_struct" version="0.04" dateTime="dt#2011-09-13-17:57:27">
		<comment>Cumuls des pesées de la fabrication pour la correction gachee sur gachee</comment>
		<attribute name="TypeSignatureCheckSumString" value="76EC"></attribute>
		<structure>
			<variables name="Cumuls_pesees_Gra" typeName="ARRAY[1..14] OF cumuls2"></variables>
			<variables name="Cumuls_pesees_Cim" typeName="ARRAY[1..7] OF cumuls2"></variables>
			<variables name="Cumuls_pesees_Eau" typeName="ARRAY[1..4] OF cumuls2"></variables>
			<variables name="Cumuls_pesees_Adj" typeName="ARRAY[1..20] OF cumuls2"></variables>
			<variables name="Cumuls_pesees_Anh" typeName="ARRAY[1..1] OF cumuls2"></variables>
			<variables name="Cumuls_pesees_Add" typeName="ARRAY[1..4] OF cumuls2"></variables>
		</structure>
	</DDTSource>
	<EFSource nameOfEFType="MOVE_REAL_ARREAL" version="1.00" dateTime="dt#2010-02-19-09:25:24">
		<comment>Assignment of a real value table with a real</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="8416"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="D760"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="REAL">
					<comment>Value to be moved</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_ARRAY_REAL">
					<comment>Real out tables</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="SHR_WORD" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>Shift right</comment>
		<attribute name="TypeDescriptiveForm" value="  This function shifts the bit sequence at the input (IN) to the right by n bits (N).&#xA;  Zeros are filled in from the left.&#xA;&#xA;  The data types of the input value (IN) and the output value (OUT) must be identical.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="011E"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="WORD">
					<comment>Bit sequence for shifting</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="N" typeName="UINT">
					<comment>No. of spaces to shift</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="WORD">
					<comment>Shifted bit sequence</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="MIN" version="1.00" dateTime="dt#2010-02-19-10:28:12">
		<comment>Minimum value function</comment>
		<attribute name="TypeDescriptiveForm" value="  The function assigns the smallest input value to the output.&#xA;  The data types of all input values and output values must be identical.&#xA;&#xA;  The number of inputs can be increased.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="C08A"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_ELEMENTARY">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_ELEMENTARY">
					<comment>Minimum value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="ROR_WORD" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>Rotate right</comment>
		<attribute name="TypeDescriptiveForm" value="  This function rotates the bit sequence at the input (IN) circularly to the  right by n bits ( input N).&#xA;&#xA;  The data types of the input value (IN) and the output value (OUT) must be identical.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="011E"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="WORD">
					<comment>Bit sequence for rotation</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="N" typeName="UINT">
					<comment>No. of spaces to rotate</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="WORD">
					<comment>Rotated bit sequence</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="table_gachee_out" version="0.30" dateTime="dt#2014-03-19-10:35:02">
		<attribute name="TypeSignatureCheckSumString" value="8759"></attribute>
		<structure>
			<variables name="CR_Etat_Gachee" typeName="WORD"></variables>
			<variables name="CR_Etat_Presence_Produit" typeName="WORD"></variables>
			<variables name="CR_Etat_Gachee_2" typeName="WORD"></variables>
			<variables name="CR_Etat_Introduction" typeName="WORD"></variables>
			<variables name="CR_Etat_Introduction_2" typeName="WORD"></variables>
			<variables name="CR_temps_malaxage" typeName="INT"></variables>
			<variables name="reserve2607" typeName="WORD"></variables>
			<variables name="CR_val_wathmetre" typeName="INT"></variables>
			<variables name="reserve2609" typeName="WORD"></variables>
			<variables name="CR_dos_malax_en_cours" typeName="WORD"></variables>
			<variables name="CR_dos_malax_termine" typeName="WORD"></variables>
			<variables name="CR_Etat_Malax1" typeName="WORD"></variables>
			<variables name="CR_Etat_Malax2" typeName="WORD"></variables>
			<variables name="reserve2614" typeName="WORD"></variables>
			<variables name="CR_Humidite_Gra1" typeName="ARRAY[1..5] OF REAL"></variables>
			<variables name="CR_Humidite_Gra2" typeName="ARRAY[1..5] OF REAL"></variables>
			<variables name="reserve2635" typeName="WORD"></variables>
			<variables name="reserve2636" typeName="WORD"></variables>
			<variables name="reserve2637" typeName="WORD"></variables>
			<variables name="reserve2638" typeName="WORD"></variables>
			<variables name="reserve2639" typeName="WORD"></variables>
			<variables name="reserve2640" typeName="WORD"></variables>
			<variables name="CR_Etat_Basc_Gra1" typeName="WORD"></variables>
			<variables name="CR_basc_Gra1" typeName="ARRAY[1..5] OF CR_Prod4"></variables>
			<variables name="CR_Etat_Basc_Gra2" typeName="WORD"></variables>
			<variables name="CR_basc_Gra2" typeName="ARRAY[1..5] OF CR_Prod4"></variables>
			<variables name="CR_Etat_Basc_Cim1" typeName="WORD"></variables>
			<variables name="CR_basc_Cim1" typeName="ARRAY[1..4] OF CR_Prod4"></variables>
			<variables name="reserve_cim1_2700" typeName="WORD"></variables>
			<variables name="reserve_cim1_2701" typeName="WORD"></variables>
			<variables name="reserve_cim1_2702" typeName="WORD"></variables>
			<variables name="reserve_cim1_2703" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="CR_Etat_Basc_Cim2" typeName="WORD"></variables>
			<variables name="CR_basc_Cim2" typeName="ARRAY[1..4] OF CR_Prod4"></variables>
			<variables name="reserve_cim2_2721" typeName="WORD"></variables>
			<variables name="reserve_cim2_2722" typeName="WORD"></variables>
			<variables name="reserve_cim2_2723" typeName="WORD"></variables>
			<variables name="reserve_cim2_2724" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="CR_Etat_Basc_Eau1" typeName="WORD"></variables>
			<variables name="CR_basc_Eau1" typeName="ARRAY[1..6] OF CR_Prod4"></variables>
			<variables name="reserve_eau1_2750" typeName="WORD"></variables>
			<variables name="reserve_eau1_2751" typeName="WORD"></variables>
			<variables name="reserve_eau1_2752" typeName="WORD"></variables>
			<variables name="reserve_eau1_2753" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_eau1_2754" typeName="WORD"></variables>
			<variables name="reserve_eau1_2755" typeName="WORD"></variables>
			<variables name="reserve_eau1_2756" typeName="WORD"></variables>
			<variables name="reserve_eau1_2757" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="CR_Etat_Basc_Eau2" typeName="WORD"></variables>
			<variables name="CR_basc_Eau2" typeName="ARRAY[1..6] OF CR_Prod4"></variables>
			<variables name="reserve_eau2_2783" typeName="WORD"></variables>
			<variables name="reserve_eau2_2784" typeName="WORD"></variables>
			<variables name="reserve_eau2_2785" typeName="WORD"></variables>
			<variables name="reserve_eau2_2786" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_eau2_2787" typeName="WORD"></variables>
			<variables name="reserve_eau2_2788" typeName="WORD"></variables>
			<variables name="reserve_eau2_2789" typeName="WORD"></variables>
			<variables name="reserve_eau2_2790" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="CR_Etat_Basc_Adj" typeName="WORD"></variables>
			<variables name="CR_basc_Adj" typeName="ARRAY[1..4] OF CR_Prod4"></variables>
			<variables name="reserve_adj_2808" typeName="WORD"></variables>
			<variables name="reserve_adj_2809" typeName="WORD"></variables>
			<variables name="reserve_adj_2810" typeName="WORD"></variables>
			<variables name="reserve_adj_2811" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_adj_2812" typeName="WORD"></variables>
			<variables name="reserve_adj_2813" typeName="WORD"></variables>
			<variables name="reserve_adj_2814" typeName="WORD"></variables>
			<variables name="reserve_adj_2815" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_adj_2816" typeName="WORD"></variables>
			<variables name="reserve_adj_2817" typeName="WORD"></variables>
			<variables name="reserve_adj_2818" typeName="WORD"></variables>
			<variables name="reserve_adj_2819" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_adj_2820" typeName="WORD"></variables>
			<variables name="reserve_adj_2821" typeName="WORD"></variables>
			<variables name="reserve_adj_2822" typeName="WORD"></variables>
			<variables name="reserve_adj_2823" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="CR_Etat_Basc_Add" typeName="WORD"></variables>
			<variables name="CR_basc_Add" typeName="ARRAY[1..4] OF CR_Prod4"></variables>
			<variables name="CR_Etat_TTGra" typeName="WORD"></variables>
			<variables name="CR_basc_TTGra" typeName="ARRAY[1..4] OF CR_Prod4"></variables>
			<variables name="reserve_TTGra_2858" typeName="WORD"></variables>
			<variables name="reserve_TTGra_2859" typeName="WORD"></variables>
			<variables name="reserve_TTGra_2860" typeName="WORD"></variables>
			<variables name="reserve_TTGra_2861" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_TTGra_2862" typeName="WORD"></variables>
			<variables name="reserve_TTGra_2863" typeName="WORD"></variables>
			<variables name="reserve_TTGra_2864" typeName="WORD"></variables>
			<variables name="reserve_TTGra_2865" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="CR_Etat_Basc_Anh" typeName="WORD"></variables>
			<variables name="CR_basc_Anh" typeName="ARRAY[1..2] OF CR_Prod4"></variables>
			<variables name="CR_Etat_Dos_Dif_Dry" typeName="WORD">
				<comment>Ajout avec Reorg mémoire</comment>
			</variables>
			<variables name="CR_Dos_Dif_Dry" typeName="ARRAY[1..6] OF CR_Prod4"></variables>
			<variables name="reserve_dif_dry_2900" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_2901" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_2902" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_2903" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_dif_dry_2904" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_2905" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_2906" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_2907" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_dif_dry_2908" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_2909" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_2910" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_2911" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_dif_dry_2912" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_2913" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_2914" typeName="WORD"></variables>
			<variables name="reserve_dif_dry_2915" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="CR_Etat_Compteurs" typeName="WORD"></variables>
			<variables name="CR_Compteurs" typeName="ARRAY[1..5] OF CR_Prod4"></variables>
			<variables name="reserve_compteurs_2937" typeName="WORD"></variables>
			<variables name="reserve_compteurs_2938" typeName="WORD"></variables>
			<variables name="reserve_compteurs_2939" typeName="WORD"></variables>
			<variables name="reserve_compteurs_2940" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_compteurs_2941" typeName="WORD"></variables>
			<variables name="reserve_compteurs_2942" typeName="WORD"></variables>
			<variables name="reserve_compteurs_2943" typeName="WORD"></variables>
			<variables name="reserve_compteurs_2944" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve_compteurs_2945" typeName="WORD"></variables>
			<variables name="reserve_compteurs_2946" typeName="WORD"></variables>
			<variables name="reserve_compteurs_2947" typeName="WORD"></variables>
			<variables name="reserve_compteurs_2948" typeName="WORD">
				<comment>Correction gachee sur gachee</comment>
			</variables>
			<variables name="reserve2949" typeName="WORD"></variables>
			<variables name="reserve2950" typeName="WORD"></variables>
			<variables name="reserve2951" typeName="WORD"></variables>
			<variables name="reserve2952" typeName="WORD"></variables>
			<variables name="reserve2953" typeName="WORD"></variables>
			<variables name="reserve2954" typeName="WORD"></variables>
			<variables name="reserve2955" typeName="WORD"></variables>
			<variables name="reserve2956" typeName="WORD"></variables>
			<variables name="reserve2957" typeName="WORD"></variables>
			<variables name="reserve2958" typeName="WORD"></variables>
			<variables name="reserve2959" typeName="WORD"></variables>
			<variables name="reserve2960" typeName="WORD"></variables>
			<variables name="reserve2961" typeName="WORD"></variables>
			<variables name="reserve2962" typeName="WORD"></variables>
			<variables name="reserve2963" typeName="WORD"></variables>
			<variables name="reserve2964" typeName="WORD"></variables>
			<variables name="reserve2965" typeName="WORD"></variables>
			<variables name="reserve2966" typeName="WORD"></variables>
			<variables name="CR_Etat_vidange_Dry" typeName="WORD">
				<comment>Résume les états 'terminé' des séquences d'intro/vidange</comment>
			</variables>
			<variables name="CR_vidange_Dry" typeName="ARRAY[1..12] OF Etats2"></variables>
			<variables name="reserve_vid_dry_2980" typeName="WORD"></variables>
			<variables name="reserve_vid_dry_2981" typeName="WORD"></variables>
			<variables name="reserve_vid_dry_2982" typeName="WORD"></variables>
			<variables name="reserve_vid_dry_2983" typeName="WORD"></variables>
			<variables name="reserve2984" typeName="WORD"></variables>
			<variables name="reserve2985" typeName="WORD"></variables>
			<variables name="reserve2986" typeName="WORD"></variables>
			<variables name="reserve2987" typeName="WORD"></variables>
			<variables name="reserve2988" typeName="WORD"></variables>
			<variables name="reserve2989" typeName="WORD"></variables>
			<variables name="reserve2990" typeName="WORD"></variables>
			<variables name="reserve2991" typeName="WORD"></variables>
			<variables name="reserve2992" typeName="WORD"></variables>
			<variables name="reserve2993" typeName="WORD"></variables>
			<variables name="reserve2994" typeName="WORD"></variables>
			<variables name="reserve2995" typeName="WORD"></variables>
			<variables name="reserve2996" typeName="WORD"></variables>
			<variables name="reserve2997" typeName="WORD"></variables>
			<variables name="reserve2998" typeName="WORD"></variables>
			<variables name="reserve2999" typeName="WORD"></variables>
			<variables name="reserve3000" typeName="WORD"></variables>
			<variables name="reserve3001" typeName="WORD"></variables>
			<variables name="reserve3002" typeName="WORD"></variables>
			<variables name="reserve3003" typeName="WORD"></variables>
			<variables name="reserve3004" typeName="WORD"></variables>
			<variables name="reserve3005" typeName="WORD"></variables>
			<variables name="reserve3006" typeName="WORD"></variables>
			<variables name="reserve3007" typeName="WORD"></variables>
			<variables name="reserve3008" typeName="WORD"></variables>
			<variables name="reserve3009" typeName="WORD"></variables>
			<variables name="reserve3010" typeName="WORD"></variables>
			<variables name="reserve3011" typeName="WORD"></variables>
			<variables name="reserve3012" typeName="WORD"></variables>
			<variables name="reserve3013" typeName="WORD"></variables>
			<variables name="reserve3014" typeName="WORD"></variables>
			<variables name="reserve3015" typeName="WORD"></variables>
			<variables name="reserve3016" typeName="WORD"></variables>
			<variables name="reserve3017" typeName="WORD"></variables>
			<variables name="reserve3018" typeName="WORD"></variables>
			<variables name="reserve3019" typeName="WORD"></variables>
			<variables name="reserve3020" typeName="WORD"></variables>
			<variables name="reserve3021" typeName="WORD"></variables>
			<variables name="reserve3022" typeName="WORD"></variables>
			<variables name="reserve3023" typeName="WORD"></variables>
			<variables name="reserve3024" typeName="WORD"></variables>
			<variables name="reserve3025" typeName="WORD"></variables>
			<variables name="reserve3026" typeName="WORD"></variables>
			<variables name="reserve3027" typeName="WORD"></variables>
			<variables name="reserve3028" typeName="WORD"></variables>
			<variables name="reserve3029" typeName="WORD"></variables>
			<variables name="reserve3030" typeName="WORD"></variables>
			<variables name="reserve3031" typeName="WORD"></variables>
			<variables name="reserve3032" typeName="WORD"></variables>
			<variables name="reserve3033" typeName="WORD"></variables>
			<variables name="reserve3034" typeName="WORD"></variables>
			<variables name="reserve3035" typeName="WORD"></variables>
			<variables name="reserve3036" typeName="WORD"></variables>
			<variables name="reserve3037" typeName="WORD"></variables>
			<variables name="reserve3038" typeName="WORD"></variables>
			<variables name="reserve3039" typeName="WORD"></variables>
			<variables name="reserve3040" typeName="WORD"></variables>
			<variables name="reserve3041" typeName="WORD"></variables>
			<variables name="reserve3042" typeName="WORD"></variables>
			<variables name="reserve3043" typeName="WORD"></variables>
			<variables name="reserve3044" typeName="WORD"></variables>
			<variables name="reserve3045" typeName="WORD"></variables>
			<variables name="reserve3046" typeName="WORD"></variables>
			<variables name="reserve3047" typeName="WORD"></variables>
			<variables name="reserve3048" typeName="WORD"></variables>
			<variables name="reserve3049" typeName="WORD"></variables>
			<variables name="reserve3050" typeName="WORD"></variables>
		</structure>
	</DDTSource>
	<EFSource nameOfEFType="RE" version="1.00" dateTime="dt#2010-02-19-10:20:31">
		<comment>Rising Edge of an operand</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="8A81"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="EBOOL">
					<comment>BOOL value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Rising Edge of IN</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="STA_TT" version="2.02" dateTime="dt#2014-07-30-10:19:12">
		<attribute name="TypeProtectionLevel" value="2#0000_0000"></attribute>
		<attribute name="TypeCodeCheckSumString" value="E1FC"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="08E0"></attribute>
		<inputParameters>
			<variables name="POIDS_TT" typeName="INT">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="FIN_TRSF" typeName="BOOL">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="TPS_STAB" typeName="TIME">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="TPS_INST" typeName="TIME">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="ECH_STAB" typeName="INT">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="VID_TT" typeName="BOOL">
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="ON_VIB" typeName="TIME">
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
			<variables name="OFF_VIB" typeName="TIME">
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
			<variables name="NB_VIBR" typeName="INT">
				<attribute name="PositionPin" value="9"></attribute>
			</variables>
			<variables name="PRES_VIB" typeName="BOOL">
				<attribute name="PositionPin" value="10"></attribute>
			</variables>
			<variables name="DEFAUT" typeName="BOOL">
				<attribute name="PositionPin" value="11"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="TT_STAB" typeName="BOOL">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="TT_INSTA" typeName="BOOL">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="DEF_ECOU" typeName="BOOL">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="VIBREUR" typeName="BOOL">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="val_mini" typeName="INT"></variables>
			<variables name="val_maxi" typeName="INT"></variables>
			<variables name="fin_tempo_stabilite" typeName="BOOL"></variables>
			<variables name="vibration" typeName="BOOL"></variables>
			<variables name="b1_vibreur" typeName="BOOL"></variables>
			<variables name="b2_vibreur" typeName="BOOL"></variables>
			<variables name="FBI_1_18" typeName="TON"></variables>
			<variables name="FBI_1_25" typeName="TON"></variables>
			<variables name="FBI_2_4" typeName="TON"></variables>
			<variables name="FBI_2_9" typeName="TON"></variables>
			<variables name="FBI_2_14" typeName="CTU"></variables>
		</privateLocalVariables>
		<FBProgram name="Stabilité">
			<LDSource nbColumns="11">
				<networkLD>
					<typeLine>
						<emptyLine nbRows="2"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName=".1.1" typeName="GT" additionnalPinNumber="0" enEnO="true" width="9" height="4">
							<objPosition posX="1" posY="2"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="val_mini"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="poids_TT"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="8"></emptyCell>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName=".1.5" typeName="MOVE" additionnalPinNumber="0" enEnO="true" width="10" height="3">
							<objPosition posX="5" posY="5"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN" effectiveParameter="poids_TT"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT" effectiveParameter="val_mini"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="4"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="PContact" contactVariableName="vid_TT"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<HLink nbCells="3"></HLink>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="PContact" contactVariableName="fin_trsf"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="fin_tempo_stabilite"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<emptyCell nbCells="3"></emptyCell>
						<FFBBlock instanceName=".1.6" typeName="MOVE" additionnalPinNumber="0" enEnO="true" width="10" height="3">
							<objPosition posX="5" posY="8"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN" effectiveParameter="poids_TT"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT" effectiveParameter="val_maxi"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="4"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="def_ecou"></contact>
						<HLink nbCells="1"></HLink>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="2"></HLink>
						</shortCircuit>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName=".1.2" typeName="LT" additionnalPinNumber="0" enEnO="true" width="9" height="4">
							<objPosition posX="1" posY="10"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="val_maxi"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="poids_TT"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<VLink></VLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="2"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<FFBBlock instanceName="FBI_1_18" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="3" posY="15"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="tps_stab"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="vid_TT"></contact>
						</shortCircuit>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="fin_trsf"></contact>
						<contact typeContact="closedContact" contactVariableName="fin_tempo_stabilite"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<coil typeCoil="coil" coilVariableName="fin_tempo_stabilite"></coil>
						<HLink nbCells="5"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="2"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName=".1.20" typeName="SUB" additionnalPinNumber="0" enEnO="true" width="9" height="4">
							<objPosition posX="1" posY="20"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="val_maxi"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="val_mini"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName=".1.21" typeName="LE" additionnalPinNumber="0" enEnO="true" width="9" height="4">
							<objPosition posX="4" posY="20"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="ech_stab"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="5"></emptyCell>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="6"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="fin_tempo_stabilite"></contact>
						</shortCircuit>
						<contact typeContact="openContact" contactVariableName="fin_trsf"></contact>
						<HLink nbCells="1"></HLink>
						<coil typeCoil="coil" coilVariableName="TT_stab"></coil>
						<HLink nbCells="1"></HLink>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="6"></emptyCell>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="def_ecou"></contact>
						<contact typeContact="openContact" contactVariableName="vid_TT"></contact>
						<coil typeCoil="coil" coilVariableName="vibration"></coil>
						<HLink nbCells="1"></HLink>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="vibration"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<HLink nbCells="5"></HLink>
						<emptyCell nbCells="4"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="TT_stab"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="2"></emptyCell>
						<FFBBlock instanceName="FBI_1_25" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="2" posY="27"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="tps_inst"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="fin_trsf"></contact>
						<contact typeContact="closedContact" contactVariableName="TT_insta"></contact>
						<emptyCell nbCells="2"></emptyCell>
						<contact typeContact="closedContact" contactVariableName="TT_stab"></contact>
						<coil typeCoil="coil" coilVariableName="TT_insta"></coil>
						<HLink nbCells="5"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="70"></emptyLine>
					</typeLine>
					<linkFB>
						<linkSource parentObjectName=".1.20" pinName="OUT">
							<objPosition posX="2" posY="22"></objPosition>
						</linkSource>
						<linkDestination parentObjectName=".1.21" pinName="IN1">
							<objPosition posX="4" posY="22"></objPosition>
						</linkDestination>
					</linkFB>
				</networkLD>
			</LDSource>
		</FBProgram>
		<FBProgram name="cde_vibreur">
			<LDSource nbColumns="11">
				<networkLD>
					<typeLine>
						<emptyLine nbRows="2"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="vibration"></contact>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="closedContact" contactVariableName="def_ecou"></contact>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="b1_vibreur"></contact>
						<HLink nbCells="6"></HLink>
						<coil typeCoil="coil" coilVariableName="vibreur"></coil>
						<HLink nbCells="1"></HLink>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName="FBI_2_4" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="3" posY="3"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="on_vib"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="2"></emptyCell>
						<FFBBlock instanceName="FBI_2_9" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="7" posY="3"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="off_vib"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="2"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="2"></emptyCell>
						<contact typeContact="closedContact" contactVariableName="b2_vibreur"></contact>
						<emptyCell nbCells="2"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<coil typeCoil="coil" coilVariableName="b2_vibreur"></coil>
						<HLink nbCells="1"></HLink>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="5"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="5"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="5"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="5"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="6"></emptyCell>
						<HLink nbCells="3"></HLink>
						<coil typeCoil="coil" coilVariableName="b1_vibreur"></coil>
						<HLink nbCells="1"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="2"></emptyCell>
						<FFBBlock instanceName="FBI_2_14" typeName="CTU" additionnalPinNumber="0" enEnO="true" width="10" height="5">
							<objPosition posX="2" posY="10"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="CU"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="R"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PV" effectiveParameter="nb_vibr"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="CV"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<HLink nbCells="2"></HLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="PContact" contactVariableName="b2_vibreur"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="pres_vib"></contact>
						</shortCircuit>
						<coil typeCoil="coil" coilVariableName="def_ecou"></coil>
						<HLink nbCells="5"></HLink>
					</typeLine>
					<typeLine>
						<contact typeContact="NContact" contactVariableName="defaut"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="4"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="closedContact" contactVariableName="pres_vib"></contact>
						<contact typeContact="openContact" contactVariableName="vibration"></contact>
						<HLink nbCells="3"></HLink>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="84"></emptyLine>
					</typeLine>
				</networkLD>
			</LDSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="ROR" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>Rotate right</comment>
		<attribute name="TypeDescriptiveForm" value="  This function rotates the bit sequence at the input (IN) circularly to the  right by n bits ( input N).&#xA;&#xA;  The data types of the input value (IN) and the output value (OUT) must be identical.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="7F09"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="ANY_BIT">
					<comment>Bit sequence for rotation</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="N" typeName="UINT">
					<comment>No. of spaces to rotate</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_BIT">
					<comment>Rotated bit sequence</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="WORD_TO_BIT" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The procedure converts an input value of the WORD data type to  16 output values of the BOOL data type.&#xA;&#xA;  The individual bits of the word at the input are assigned to the&#xA;  outputs according to the output names.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="F240"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="08EB"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="WORD">
					<comment>WORD input</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="BIT0" typeName="BOOL">
					<comment>Output BIT0</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="BIT1" typeName="BOOL">
					<comment>Output BIT1</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
				<variables name="BIT2" typeName="BOOL">
					<comment>Output BIT2</comment>
					<attribute name="PositionPin" value="3"></attribute>
				</variables>
				<variables name="BIT3" typeName="BOOL">
					<comment>Output BIT3</comment>
					<attribute name="PositionPin" value="4"></attribute>
				</variables>
				<variables name="BIT4" typeName="BOOL">
					<comment>Output BIT4</comment>
					<attribute name="PositionPin" value="5"></attribute>
				</variables>
				<variables name="BIT5" typeName="BOOL">
					<comment>Output BIT5</comment>
					<attribute name="PositionPin" value="6"></attribute>
				</variables>
				<variables name="BIT6" typeName="BOOL">
					<comment>Output BIT6</comment>
					<attribute name="PositionPin" value="7"></attribute>
				</variables>
				<variables name="BIT7" typeName="BOOL">
					<comment>Output BIT7</comment>
					<attribute name="PositionPin" value="8"></attribute>
				</variables>
				<variables name="BIT8" typeName="BOOL">
					<comment>Output BIT8</comment>
					<attribute name="PositionPin" value="9"></attribute>
				</variables>
				<variables name="BIT9" typeName="BOOL">
					<comment>Output BIT9</comment>
					<attribute name="PositionPin" value="10"></attribute>
				</variables>
				<variables name="BIT10" typeName="BOOL">
					<comment>Output BIT10</comment>
					<attribute name="PositionPin" value="11"></attribute>
				</variables>
				<variables name="BIT11" typeName="BOOL">
					<comment>Output BIT11</comment>
					<attribute name="PositionPin" value="12"></attribute>
				</variables>
				<variables name="BIT12" typeName="BOOL">
					<comment>Output BIT12</comment>
					<attribute name="PositionPin" value="13"></attribute>
				</variables>
				<variables name="BIT13" typeName="BOOL">
					<comment>Output BIT13</comment>
					<attribute name="PositionPin" value="14"></attribute>
				</variables>
				<variables name="BIT14" typeName="BOOL">
					<comment>Output BIT14</comment>
					<attribute name="PositionPin" value="15"></attribute>
				</variables>
				<variables name="BIT15" typeName="BOOL">
					<comment>Output BIT15</comment>
					<attribute name="PositionPin" value="16"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="TIMEARR14" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="A49D"></attribute>
		<array>ARRAY[1..14] OF TIME</array>
	</DDTSource>
	<FBSource nameOfFBType="NUM_PUP" version="2.00" dateTime="dt#2006-03-21-15:33:01">
		<attribute name="TypeProtectionLevel" value="2#0000_0000"></attribute>
		<attribute name="TypeCodeCheckSumString" value="12A3"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="14AB"></attribute>
		<inputParameters>
			<variables name="BP_1" typeName="BOOL">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="BP_2" typeName="BOOL">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="BP_3" typeName="BOOL">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="BP_4" typeName="BOOL">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="BP_5" typeName="BOOL">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="BP_6" typeName="BOOL">
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="BP_7" typeName="BOOL">
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
			<variables name="BP_8" typeName="BOOL">
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
			<variables name="BP_9" typeName="BOOL">
				<attribute name="PositionPin" value="9"></attribute>
			</variables>
			<variables name="BP_10" typeName="BOOL">
				<attribute name="PositionPin" value="10"></attribute>
			</variables>
			<variables name="BP_11" typeName="BOOL">
				<attribute name="PositionPin" value="11"></attribute>
			</variables>
			<variables name="BP_12" typeName="BOOL">
				<attribute name="PositionPin" value="12"></attribute>
			</variables>
			<variables name="BP_13" typeName="BOOL">
				<attribute name="PositionPin" value="13"></attribute>
			</variables>
			<variables name="BP_14" typeName="BOOL">
				<attribute name="PositionPin" value="14"></attribute>
			</variables>
			<variables name="BP_15" typeName="BOOL">
				<attribute name="PositionPin" value="15"></attribute>
			</variables>
			<variables name="BP_16" typeName="BOOL">
				<attribute name="PositionPin" value="16"></attribute>
			</variables>
			<variables name="BP_17" typeName="BOOL">
				<attribute name="PositionPin" value="17"></attribute>
			</variables>
			<variables name="BP_18" typeName="BOOL">
				<attribute name="PositionPin" value="18"></attribute>
			</variables>
			<variables name="BP_19" typeName="BOOL">
				<attribute name="PositionPin" value="19"></attribute>
			</variables>
			<variables name="BP_20" typeName="BOOL">
				<attribute name="PositionPin" value="20"></attribute>
			</variables>
			<variables name="VALID_BN" typeName="BOOL">
				<attribute name="PositionPin" value="21"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="NUMERO" typeName="INT">
				<comment>numero produit pupitre</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="COMMANDE" typeName="BOOL">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables></privateLocalVariables>
		<FBProgram name="calc_cde">
			<LDSource nbColumns="11">
				<networkLD>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="BP_1"></contact>
						</shortCircuit>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="BP_2"></contact>
						</shortCircuit>
						<HLink nbCells="1"></HLink>
						<contact typeContact="openContact" contactVariableName="valid_bn"></contact>
						<coil typeCoil="coil" coilVariableName="commande"></coil>
						<HLink nbCells="7"></HLink>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="BP_3"></contact>
						</shortCircuit>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="BP_4"></contact>
						</shortCircuit>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="BP_5"></contact>
						</shortCircuit>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="BP_6"></contact>
						</shortCircuit>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="BP_7"></contact>
						</shortCircuit>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="BP_8"></contact>
						</shortCircuit>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="BP_9"></contact>
						</shortCircuit>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="BP_10"></contact>
						</shortCircuit>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="BP_11"></contact>
						</shortCircuit>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="BP_12"></contact>
						</shortCircuit>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="BP_13"></contact>
						</shortCircuit>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="BP_14"></contact>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="86"></emptyLine>
					</typeLine>
				</networkLD>
			</LDSource>
		</FBProgram>
		<FBProgram name="calc_num">
			<ILSource>LD BP_1
 	jmpcn 1_pas_dose
 	LD 1
 	ST numero
 	jmp fin
 	1_pas_dose:
 LD BP_2
 	jmpcn 2_pas_dose
 	LD 2
 	ST numero
 	jmp fin
 	2_pas_dose:
 LD BP_3
 	jmpcn 3_pas_dose
 	LD 3
 	ST numero
 	jmp fin
 	3_pas_dose:
 LD BP_4
 	jmpcn 4_pas_dose
 	LD 4
 	ST numero
 	jmp fin
 	4_pas_dose:
 LD BP_5
 	jmpcn 5_pas_dose
 	LD 5
 	ST numero
 	jmp fin
 	5_pas_dose:
 LD BP_6
 	jmpcn 6_pas_dose
 	LD 6
 	ST numero
 	jmp fin
 	6_pas_dose:
 LD BP_7
 	jmpcn 7_pas_dose
 	LD 7
 	ST numero
 	jmp fin
 	7_pas_dose:
 LD BP_8
 	jmpcn 8_pas_dose
 	LD 8
 	ST numero
 	jmp fin
 	8_pas_dose:
 	
 LD BP_9
 	jmpcn 9_pas_dose
 	LD 9
 	ST numero
 	jmp fin
 	9_pas_dose:
 LD BP_10
 	jmpcn 10_pas_dose
 	LD 10
 	ST numero
 	jmp fin
 	10_pas_dose:
 LD BP_11
 	jmpcn 11_pas_dose
 	LD 11
 	ST numero
 	jmp fin
 	11_pas_dose:
 	
 LD BP_12
 	jmpcn 12_pas_dose
 	LD 12
 	ST numero
 	jmp fin
 	12_pas_dose:
 LD BP_13
 	jmpcn 13_pas_dose
 	LD 13
 	ST numero
 	jmp fin
 	13_pas_dose:
 LD BP_14
 	jmpcn 14_pas_dose
 	LD 14
 	ST numero
 	jmp fin
 	14_pas_dose:
 	
 LD BP_15
 	jmpcn 15_pas_dose
 	LD 15
 	ST numero
 	jmp fin
 	15_pas_dose:
 LD BP_16
 	jmpcn 16_pas_dose
 	LD 16
 	ST numero
 	jmp fin
 	16_pas_dose:
 LD BP_17
 	jmpcn 17_pas_dose
 	LD 17
 	ST numero
 	jmp fin
 	17_pas_dose:
 LD BP_18
 	jmpcn 18_pas_dose
 	LD 18
 	ST numero
 	jmp fin
 	18_pas_dose:
 LD BP_19
 	jmpcn 19_pas_dose
 	LD 19
 	ST numero
 	jmp fin
 	19_pas_dose:
 LD BP_20
 	jmpcn 20_pas_dose
 	LD 20
 	ST numero
 	jmp fin
 	20_pas_dose:
  
  
 fin:
</ILSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="MOVE_AREBOOL_INT" version="1.00" dateTime="dt#2010-02-19-09:25:24">
		<comment>Assignment of a single length integer with a bit table</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="5110"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="A3DD"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="ANY_ARRAY_EBOOL">
					<comment>Bool input tables</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>Integer result</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="MIN_DINT" version="1.00" dateTime="dt#2010-02-19-10:28:12">
		<comment>Minimum value function</comment>
		<attribute name="TypeDescriptiveForm" value="  The function assigns the smallest input value to the output.&#xA;  The data types of all input values and output values must be identical.&#xA;&#xA;  The number of inputs can be increased.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="8053"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="7A88"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="DINT">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="DINT">
					<comment>Minimum value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="INTARR14" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="9F43"></attribute>
		<array>ARRAY[1..14] OF INT</array>
	</DDTSource>
	<EFBSource nameOfEFBType="TRIGGER" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>Detection of all edges</comment>
		<attribute name="TypeDescriptiveForm" value="  The function block recognizes all types of edges (1 -&gt; 0 und 0 -&gt; 1) at the CLK input.&#xA;  Output EDGE becomes &quot;1&quot; if there is a transition from &quot;0&quot; to &quot;1&quot; or from &quot;1&quot; to &quot;0&quot; at CLK;&#xA;  otherwise it remains on &quot;0&quot;.&#xA;&#xA;  If there is a transition from &quot;0&quot; to &quot;1&quot; at the CLK input, the RISE output becomes &quot;1&quot;;&#xA;  if there is a transition from &quot;1&quot; to &quot;0&quot; at the CLK input, the FALL output becomes &quot;1&quot;;&#xA;  if neither of these two instances occurs, both outputs become &quot;0&quot;.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="IsTypeDiagnostic" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="C464"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="3ED5"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="CLK" typeName="BOOL">
					<comment>Clock input</comment>
					<attribute name="PositionPin" value="1"></attribute>
					<attribute name="IsPinDiagnosticable" value="0"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="RISE" typeName="BOOL">
					<comment>Rising edge detected</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="EDGE" typeName="BOOL">
					<comment>Edge detected</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
				<variables name="FALL" typeName="BOOL">
					<comment>Falling edge detected</comment>
					<attribute name="PositionPin" value="3"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFBSource>
	<FBSource nameOfFBType="ECR_CR_Basc_gra1" version="0.05" dateTime="dt#2011-09-12-14:53:16">
		<attribute name="TypeCodeCheckSumString" value="BB7B"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="6E1A"></attribute>
		<inputParameters>
			<variables name="NP_Gra1" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="PARAM_SELECT" typeName="INT">
				<comment>1=Numero_prod 2=Erreur_jetee 3=Poids_reel_pese 4=Poids_vise</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="PARAM_VAL" typeName="INT">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
		</inputParameters>
		<inOutParameters>
			<variables name="CR_Basc_gra1" typeName="ARRAY[1..5] OF CR_Prod4">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="CR_Basc_gra2" typeName="ARRAY[1..5] OF CR_Prod4">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
		</inOutParameters>
		<FBProgram name="main">
			<STSource>(* Arrêter l'exécution du DFB si le numéro de produit est hors plage *)
(* pour ne pas risquer de "taper" en dehors des structures *)
IF NP_Gra1&lt;1
OR NP_Gra1&gt;10 THEN
	RETURN;
END_IF;


(* Ecrire la valeur souhaitée en table de gâchée dans la structure de "compte rendu" *)

(* Rappel : *)
(* On peut utiliser la structure "Granulat 2" pour les granulats 1 dans le cas où on *)
(* fonctionne en mode "plage étendue" granulat (cela permet de passer de 5 à 10 granulats *)
(* dosable sur une seule chaine granulat). *)

IF PARAM_SELECT = 1 THEN
 (* 1 = Numero_prod *)
	IF NP_Gra1&lt;=5 THEN
		CR_Basc_gra1[NP_Gra1].Numero_prod := INT_TO_WORD(PARAM_VAL);
	ELSE
		CR_Basc_gra2[NP_Gra1-5].Numero_prod := INT_TO_WORD(PARAM_VAL);
	END_IF;


ELSIF PARAM_SELECT = 2 THEN
 (* 2 = Erreur_jetee *)
	IF NP_Gra1&lt;=5 THEN
		CR_Basc_gra1[NP_Gra1].Erreur_jettee := PARAM_VAL;
	ELSE
		CR_Basc_gra2[NP_Gra1-5].Erreur_jettee := PARAM_VAL;
	END_IF;


ELSIF PARAM_SELECT = 3 THEN
 (* 3 = Poids_reel_pese *)
	IF NP_Gra1&lt;=5 THEN
		CR_Basc_gra1[NP_Gra1].Poids_reel_pese := PARAM_VAL;
	ELSE
		CR_Basc_gra2[NP_Gra1-5].Poids_reel_pese := PARAM_VAL;
	END_IF;


ELSIF PARAM_SELECT = 4 THEN
 (* 4 = Poids_vise *)
	IF NP_Gra1&lt;=5 THEN
		CR_Basc_gra1[NP_Gra1].Poids_vise := PARAM_VAL;
	ELSE
		CR_Basc_gra2[NP_Gra1-5].Poids_vise := PARAM_VAL;
	END_IF;
END_IF;
</STSource>
		</FBProgram>
	</FBSource>
	<EFBSource nameOfEFBType="TP" version="1.00" dateTime="dt#2010-02-19-10:12:01">
		<comment>Pulse</comment>
		<attribute name="TypeDescriptiveForm" value="  The function block is used for the generation of a pulse with defined duration.  When the function block is called for the first time, the initial state of ET is &quot;0&quot;.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="IsTypeDiagnostic" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="C1F7"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="16D2"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="BOOL">
					<comment>Trigger pulse</comment>
					<attribute name="PositionPin" value="1"></attribute>
					<attribute name="IsPinDiagnosticable" value="0"></attribute>
				</variables>
				<variables name="PT" typeName="TIME">
					<comment>Preset pulse duration</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="Q" typeName="BOOL">
					<comment>Pulse output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="ET" typeName="TIME">
					<comment>Internal time</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFBSource>
	<DDTSource DDTName="BOOLARR46" version="0.00" dateTime="dt#2010-05-31-18:21:17">
		<attribute name="TypeSignatureCheckSumString" value="317B"></attribute>
		<array>ARRAY[1..46] OF BOOL</array>
	</DDTSource>
	<DDTSource DDTName="UDINTARR7" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="E0D0"></attribute>
		<array>ARRAY[1..7] OF UDINT</array>
	</DDTSource>
	<EFSource nameOfEFType="DINT_TO_INT" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the DINT data type to a  BOOL, BYTE, WORD, DWORD, INT, UINT UDINT, REAL or TIME output value.&#xA;&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function, there will also&#xA;        be a few illogical conversions, e.g. DINT_TO_BOOL.&#xA;&#xA;  When converting the data type DINT to the BOOL, BYTE, WORD, INT or UINT data type,&#xA;  the least significant bits of the input value are transferred to the output.&#xA;&#xA;  Negative input values cannot be converted into data types UDINT or UINT.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="99FC"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="DINT">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="ADD_UDINT" version="1.00" dateTime="dt#2010-02-19-09:59:13">
		<comment>Addition</comment>
		<attribute name="TypeDescriptiveForm" value="  The function adds the input values and assigns the result to the output.&#xA;  The data types of all input values and output values must be identical.&#xA;&#xA;  The number of inputs can be increased for all functions (max 32), except in TIME.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="4B89"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="UDINT">
					<comment>Summand (Extensible)</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="UDINT">
					<comment>Sum</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="SET" version="1.00" dateTime="dt#2010-02-19-10:20:31">
		<comment>SET TO 1</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="903F"></attribute>
		<ExternalToolsOnly>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Operand to be setted</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="Adresse_IP_M340" version="0.04" dateTime="dt#2008-11-07-16:24:12">
		<attribute name="TypeDescriptiveForm" value="&lt;pre&gt;Crée une chaine contenant une adresse IP pour module de communication M340&lt;/pre&gt;"></attribute>
		<attribute name="TypeCodeCheckSumString" value="F56B"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="A79B"></attribute>
		<inputParameters>
			<variables name="IP1" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="IP2" typeName="INT">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="IP3" typeName="INT">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="IP4" typeName="INT">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="Adresse" typeName="ADDM_TYPE">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="String_IP_diag" typeName="STRING">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="IP1_str" typeName="STRING"></variables>
			<variables name="IP2_str" typeName="STRING"></variables>
			<variables name="IP3_str" typeName="STRING"></variables>
			<variables name="IP4_str" typeName="STRING"></variables>
			<variables name="IP1_str3" typeName="STRING"></variables>
			<variables name="IP2_str3" typeName="STRING"></variables>
			<variables name="IP3_str3" typeName="STRING"></variables>
			<variables name="IP4_str3" typeName="STRING"></variables>
			<variables name="Adresse_str" typeName="string[27]"></variables>
		</privateLocalVariables>
		<FBProgram name="MAIN">
			<STSource>(* Format de la cfaine à construire :
   Ethernet_1{xxx.xxx.xxx.xxx} soit 27 charactère.
   La chaine adresse doit donc être du type "String[27]"*)

IP1_str := INT_TO_STRING (IN := IP1);
IP2_str := INT_TO_STRING (IN := IP2);
IP3_str := INT_TO_STRING (IN := IP3);
IP4_str := INT_TO_STRING (IN := IP4);

(* la convertion INT-&gt; STRING converti l'INT : xxx en SRING :+00xxx *)
(* Il faut donc ne grader que les 3 caracteres de droite *)

IP1_str3 := RIGHT_INT (IN := IP1_str, N := 3);
IP2_str3 := RIGHT_INT (IN := IP2_str, N := 3);
IP3_str3 := RIGHT_INT (IN := IP3_str, N := 3);
IP4_str3 := RIGHT_INT (IN := IP4_str, N := 3);

(* Attention, même si la chaine est de taille [27], l'affichage ne
   permet que la visualisation des 16 premiers caractères *)
Adresse_str := CONCAT_STR (IN1 := 'Ethernet_1{',IN2 := IP1_str3);
Adresse_str := CONCAT_STR (IN1 := Adresse_str  ,IN2 := '.');
Adresse_str := CONCAT_STR (IN1 := Adresse_str  ,IN2 := IP2_str3);
Adresse_str := CONCAT_STR (IN1 := Adresse_str  ,IN2 := '.');
Adresse_str := CONCAT_STR (IN1 := Adresse_str  ,IN2 := IP3_str3);
Adresse_str := CONCAT_STR (IN1 := Adresse_str  ,IN2 := '.');
Adresse_str := CONCAT_STR (IN1 := Adresse_str  ,IN2 := IP4_str3);
Adresse_str := CONCAT_STR (IN1 := Adresse_str  ,IN2 := '}');


String_IP_diag := MID_INT (IN := Adresse_str,
  N := 15,
  P := 12);

Adresse   := ADDM(IN :=Adresse_str);
</STSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="MAX" version="1.00" dateTime="dt#2010-02-19-10:28:11">
		<comment>Maximum value function</comment>
		<attribute name="TypeDescriptiveForm" value="  The function assigns the largest input value to the output.&#xA;  The data types of all input values and output values must be identical.&#xA;&#xA;  The number of inputs can be increased.&#xA;&#xA;  Formula&#xA;  OUT = MAX {IN1, IN2, .., INn}&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="C08A"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_ELEMENTARY">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_ELEMENTARY">
					<comment>Maximum value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="BCD_TO_INT" version="1.01" dateTime="dt#2010-02-19-09:41:37">
		<comment>Conversion of BCD to single length integer</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="5F94"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="2389"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="INT">
					<comment>BCD value to be converted</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>value of the single length integer</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="Seq_Vid_Basc" version="2.06" dateTime="dt#2011-06-17-12:23:13">
		<attribute name="TypeCodeCheckSumString" value="653E"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="C9A7"></attribute>
		<inputParameters>
			<variables name="Dem_seq_ouv" typeName="BOOL">
				<comment>Demande de séquence d'ouverture</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Fin_ferm" typeName="BOOL">
				<comment>Fermeture terminée</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="Seq_ouv_OK" typeName="BOOL">
				<comment>Séquence d'ouverture terminée</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="Tps_ouv" typeName="TIME">
				<comment>Temps d'ouverture</comment>
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="Tps_att" typeName="TIME">
				<comment>Temps d'attente</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="Defaut" typeName="BOOL">
				<comment>Défaut</comment>
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="Nb_seq_max" typeName="INT">
				<comment>Nombre de séquences avant défaut</comment>
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
			<variables name="Dem_ouv_maint" typeName="BOOL">
				<comment>Demande d'ouverture maintenue</comment>
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="CDE_OUV" typeName="BOOL">
				<comment>Commande ouverture</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="CDE_FER" typeName="BOOL">
				<comment>Commande fermeture</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="DEF_CDE" typeName="BOOL">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="En_attente" typeName="BOOL"></variables>
			<variables name="Cpt_seq" typeName="INT">
				<variableInit value="1"></variableInit>
			</variables>
			<variables name="Tempo_attente" typeName="TON"></variables>
			<variables name="Tempo_ouv" typeName="TON"></variables>
			<variables name="Nouvelle_phase_ouverture" typeName="BOOL"></variables>
		</privateLocalVariables>
		<FBProgram name="Sequence">
			<ILSource> (* COMMANDE D'OUVERTURE *)
 LDN Defaut
 AND (Dem_ouv_maint
 	OR (Dem_seq_ouv
		ANDN En_attente
	)
 )
 ST cde_ouv


 (* SEQUENCE *)
 (* = Phases alternées "Ouverture" et "Attente" *)
 CAL Tempo_ouv (IN := cde_ouv,
 		PT := Tps_ouv)
 LD Tempo_ouv.Q
 S En_attente (* "Ouverture" -&gt; "Attente" *)

 CAL Tempo_attente (IN := En_attente,
                    PT := Tps_att)
 LD Tempo_attente.Q
 ANDN Seq_ouv_OK
 ANDN Dem_ouv_maint
 R En_attente (* "Attente" -&gt; "Ouverture" *)
 ST Nouvelle_phase_ouverture

 
 (* DEFAUT DE SEQUENCE *)
 (* Lorsque le nombre de séquences max est atteint *)

 (* Comptage des séquences *)
 LD Nouvelle_phase_ouverture
 JMPCN fin_comptage_nb_seq
 	LD Cpt_seq
 	ADD 1 
 	ST Cpt_seq
 fin_comptage_nb_seq :
  
 (* Défaut *)
 LD Cpt_seq
 GT Nb_seq_max
 AND Dem_seq_ouv
 ST def_cde

 (* Reset du comptage des séquences *)
 LD def_cde
 ORN Dem_seq_ouv
 JMPCN cde_fermeture
 	LD 1
 	ST Cpt_seq
 cde_fermeture :
  

 (* COMMANDE DE FERMETURE *)
 (* Utilisée pour les bascules commandées en bistable *)
 LDN Dem_seq_ouv
 R En_attente
 ANDN Fin_ferm
 ST cde_fer
</ILSource>
		</FBProgram>
	</FBSource>
	<DDTSource DDTName="TON_TOFF" version="0.01" dateTime="dt#2011-02-24-19:01:14">
		<comment>Structure contenant les durées d'activation (TON) et de repos (TOFF)</comment>
		<attribute name="TypeSignatureCheckSumString" value="BBE7"></attribute>
		<structure>
			<variables name="TON" typeName="TIME"></variables>
			<variables name="TOFF" typeName="TIME"></variables>
		</structure>
	</DDTSource>
	<EFSource nameOfEFType="LT" version="1.00" dateTime="dt#2010-02-19-09:12:06">
		<comment>Less than</comment>
		<attribute name="TypeDescriptiveForm" value="  The function checks the values of successive inputs for an increasing sequence or equality.  The data types of all input values must be identical.&#xA;  The number of inputs can be increased (max 32).&#xA;  STRING variables are compared using the alphabet; variables at the end of the alphabet are&#xA;  higher priority expressions than those at the front.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="BE6A"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_ELEMENTARY">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="RECUP_VOIE_Humidite" version="0.04" dateTime="dt#2013-06-03-15:28:30">
		<attribute name="TypeCodeCheckSumString" value="FD45"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="F31B"></attribute>
		<inputParameters>
			<variables name="voie_basc" typeName="ARRAY[1..16] OF INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Conf_humidite" typeName="ARRAY[1..16] OF BOOL">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="Valeur_ana_tab_1" typeName="INTARR24">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="valeur_ana_tab_2" typeName="INTARR48">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="erreurs_tab" typeName="ARRAY[1..72] OF BOOL">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="saturations_inf_tab" typeName="ARRAY[1..72] OF BOOL">
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="saturations_sup_tab" typeName="ARRAY[1..72] OF BOOL">
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
		</inputParameters>
		<inOutParameters>
			<variables name="AI_Value_Humidity" typeName="ARRAY[1..16] OF INT">
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
		</inOutParameters>
		<privateLocalVariables>
			<variables name="index_tab" typeName="ARRAY[1..16] OF INT"></variables>
			<variables name="err_voie" typeName="BOOL"></variables>
			<variables name="sat_inf_voie" typeName="BOOL"></variables>
			<variables name="sat_sup_voie" typeName="BOOL"></variables>
			<variables name="x" typeName="INT"></variables>
		</privateLocalVariables>
		<FBProgram name="Main">
			<STSource>(* Pour Les sondes d'humidites : Routage des bonnes entrées analogiques vers les buffers  *)
(* "Valeur_ANA" de la Tremie associes et récupération des erreurs correspondantes à *)
(* la voie spécifiée. *)

FOR x:=1 TO 17 DO

	IF (voie_basc[x] &gt;= 1) AND (voie_basc[x] &lt;= 24) THEN
	(* Récupérer l'entrée dans le tableau "1er fragment" *)
		index_tab[x] := voie_basc[x];
		AI_Value_Humidity[x] := valeur_ana_tab_1[index_tab[x]];
	ELSIF (voie_basc[x] &gt;= 25) AND (voie_basc[x] &lt;= 72) THEN
	(* Récupérer l'entrée dans le tableau "2ème fragment" *)
		index_tab[x] := voie_basc[x] - 25 + 1;
		AI_Value_Humidity[x] := valeur_ana_tab_2[index_tab[x]];
	ELSE
		AI_Value_Humidity[x] := 0;
	END_IF;

	IF (voie_basc[x] &gt;= 1) AND (voie_basc[x] &lt;= 72) THEN
	(* Récupérer les erreurs de la voie *)
		err_voie := erreurs_tab[voie_basc[x]];
		sat_inf_voie := saturations_inf_tab[voie_basc[x]];
		sat_sup_voie := saturations_sup_tab[voie_basc[x]];
	ELSE
		err_voie := FALSE;
		sat_inf_voie := FALSE;
		sat_sup_voie := FALSE;
	END_IF;
(*	Saturation_inf[x] := sat_inf_voie AND err_voie;
	Saturation_sup[x] := sat_sup_voie AND err_voie;


	AI_Value_Humidity[x] := 0;
	Saturation_inf[x] := FALSE;
	Saturation_sup[x] := FALSE;*)

END_FOR;
</STSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="LT_DINT" version="1.00" dateTime="dt#2010-02-19-09:12:06">
		<comment>Less than</comment>
		<attribute name="TypeDescriptiveForm" value="  The function checks the values of successive inputs for an increasing sequence or equality.  The data types of all input values must be identical.&#xA;  The number of inputs can be increased (max 32).&#xA;  STRING variables are compared using the alphabet; variables at the end of the alphabet are&#xA;  higher priority expressions than those at the front.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="AD45"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="DINT">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="PESA" version="3.09" dateTime="dt#2016-07-25-13:52:12">
		<attribute name="TypeProtectionLevel" value="2#0000_0000"></attribute>
		<attribute name="TypeCodeCheckSumString" value="468C"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="4513"></attribute>
		<inputParameters>
			<variables name="POIDS_D" typeName="INT">
				<comment>Poids demandé (consigne sans correction gachee sur gachee)</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="ERR_JETE" typeName="INT">
				<comment>Erreur de jetée</comment>
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="TOLERANC" typeName="INT">
				<comment>Tolérance</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="SEUIL_PV" typeName="INT">
				<comment>Seuil pesage fin</comment>
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="TON_TOFF_PV" typeName="TON_TOFF">
				<comment>Durées d'activation et repos d'un battement petite vitesse</comment>
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
			<variables name="SEUIL_DOS_SIMULT" typeName="INT">
				<comment>Seuil d'arret du dosage simultané</comment>
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
			<variables name="TON_TOFF_VIB" typeName="TON_TOFF">
				<comment>Durées d'activation et repos de l'aide a l'extraction</comment>
				<attribute name="PositionPin" value="9"></attribute>
			</variables>
			<variables name="NB_VIB" typeName="INT">
				<comment>Nombre d'activation de l'aide extraction</comment>
				<attribute name="PositionPin" value="10"></attribute>
			</variables>
			<variables name="TON_TOFF_AJU" typeName="TON_TOFF">
				<comment>Durées d'activation et repos des battements d'ajustement</comment>
				<attribute name="PositionPin" value="11"></attribute>
			</variables>
			<variables name="TPS_ecoulement" typeName="TIME">
				<comment>Temps de réponse de l'organe</comment>
				<attribute name="PositionPin" value="14"></attribute>
			</variables>
			<variables name="S_TALUT" typeName="INT">
				<comment>Seuil anti-talutage</comment>
				<attribute name="PositionPin" value="13"></attribute>
			</variables>
			<variables name="DEFAUT" typeName="BOOL">
				<comment>Présence d'un défaut (arret pesage)</comment>
				<attribute name="PositionPin" value="17"></attribute>
			</variables>
			<variables name="INIT" typeName="BOOL">
				<comment>Initialisation</comment>
				<attribute name="PositionPin" value="18"></attribute>
			</variables>
			<variables name="POIDS_I" typeName="INT">
				<comment>Poids instantané</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="POIDS_R" typeName="INT">
				<comment>Poids de référence</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="T_STAB" typeName="TIME">
				<comment>Temps de stabilisation</comment>
				<attribute name="PositionPin" value="19"></attribute>
			</variables>
			<variables name="T_M_STAB" typeName="TIME">
				<comment>Temps maxi de stabilisation</comment>
				<attribute name="PositionPin" value="20"></attribute>
			</variables>
			<variables name="EC_STAB" typeName="INT">
				<comment>Ecart de stabilité</comment>
				<attribute name="PositionPin" value="21"></attribute>
			</variables>
			<variables name="T_M_PESA" typeName="TIME">
				<comment>Temps max de pesage</comment>
				<attribute name="PositionPin" value="22"></attribute>
			</variables>
			<variables name="T_TALUT" typeName="TIME">
				<comment>Temps d'avance anti-talutage</comment>
				<attribute name="PositionPin" value="23"></attribute>
			</variables>
			<variables name="Cde_Arret_dosage" typeName="BOOL">
				<attribute name="PositionPin" value="24"></attribute>
			</variables>
			<variables name="LIM_CORR" typeName="INT">
				<comment>Limite de correction pour la correciton gachee sur gachee</comment>
				<attribute name="PositionPin" value="15"></attribute>
			</variables>
			<variables name="LIM_SDOS" typeName="INT">
				<comment>Limite de sous dosage pour la correction gachee sur gachee</comment>
				<attribute name="PositionPin" value="16"></attribute>
			</variables>
			<variables name="CUMULS" typeName="cumuls2">
				<comment>Cumul des poids demandés et pesés lors des précédentes gachées (pour la correction gachée sur gachée)</comment>
				<attribute name="PositionPin" value="25"></attribute>
			</variables>
			<variables name="Flags_pesage" typeName="flags_pesage_struct">
				<comment>Flags influants sur le comportement du DFB</comment>
				<attribute name="PositionPin" value="26"></attribute>
			</variables>
			<variables name="PORTEE" typeName="INT">
				<comment>Portee de la bascule</comment>
				<attribute name="PositionPin" value="27"></attribute>
			</variables>
			<variables name="POIDS_INIT_DECOMPTAGE" typeName="INT">
				<comment>Poids instantané Add départ  (initial) dosage mode décomptage</comment>
				<attribute name="PositionPin" value="28"></attribute>
			</variables>
			<variables name="POIDS_P_MEMO" typeName="INT">
				<comment>Memoire Poids pesé mode décomptage</comment>
				<attribute name="PositionPin" value="29"></attribute>
			</variables>
			<variables name="Correction_Humidite" typeName="Correction_Humidite">
				<attribute name="PositionPin" value="30"></attribute>
			</variables>
			<variables name="TPS_apres_coulant" typeName="TIME">
				<comment>Temps de réponse de l'organe</comment>
				<attribute name="PositionPin" value="12"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="POIDS_P" typeName="INT">
				<comment>Poids déjà pesé</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="CDE_DOSA" typeName="BOOL">
				<comment>Commande dosage</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="CDE_PV" typeName="BOOL">
				<comment>Commande petite vitesse</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="CDE_VIB" typeName="BOOL">
				<comment>Commande de l'aide extraction</comment>
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="PDS_BLOQ" typeName="BOOL">
				<comment>Poids bloqué</comment>
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="TMAX_PES" typeName="BOOL">
				<comment>Temps maximum de pesage atteint</comment>
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
			<variables name="INSTABLE" typeName="BOOL">
				<comment>Balance instable</comment>
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
			<variables name="AJUST" typeName="BOOL">
				<comment>Ajustement nécessaire ( poids &lt; tolérance )</comment>
				<attribute name="PositionPin" value="9"></attribute>
			</variables>
			<variables name="DEP_TOL" typeName="BOOL">
				<comment>Dépassement tolérance</comment>
				<attribute name="PositionPin" value="10"></attribute>
			</variables>
			<variables name="PESEE_OK" typeName="BOOL">
				<comment>Pesée OK</comment>
				<attribute name="PositionPin" value="11"></attribute>
			</variables>
			<variables name="POIDS_V" typeName="INT">
				<comment>Poids visé après application de la correction gachée sur gachée</comment>
				<attribute name="PositionPin" value="12"></attribute>
			</variables>
			<variables name="CDE_TALU" typeName="BOOL">
				<comment>Commande de l'anti-talutage</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="STAB_OK" typeName="BOOL">
				<comment>Stabilité OK : écriture de l'erreur de jetée dans le compte rendu</comment>
				<attribute name="PositionPin" value="13"></attribute>
			</variables>
			<variables name="POIDS_C" typeName="INT">
				<comment>Poids de consigne</comment>
				<attribute name="PositionPin" value="14"></attribute>
			</variables>
			<variables name="P_C_ATTE" typeName="BOOL">
				<comment>visu poids_c_atteint</comment>
				<attribute name="PositionPin" value="15"></attribute>
			</variables>
			<variables name="P_PV_ATT" typeName="BOOL">
				<comment>visu poids_pv_atteint</comment>
				<attribute name="PositionPin" value="16"></attribute>
			</variables>
			<variables name="LECT_P_C" typeName="INT">
				<attribute name="PositionPin" value="17"></attribute>
			</variables>
			<variables name="ECART_P" typeName="INT">
				<comment>Ecart entre poids pese et consigne (cumul si CGG activee)</comment>
				<attribute name="PositionPin" value="18"></attribute>
			</variables>
			<variables name="CDE_DOS_SIMULT" typeName="BOOL">
				<comment>Commande du dosage simultané</comment>
				<attribute name="PositionPin" value="19"></attribute>
			</variables>
			<variables name="Humudite_utilisee" typeName="REAL">
				<attribute name="PositionPin" value="20"></attribute>
			</variables>
			<variables name="Ecart_CHU_Utilise" typeName="INT">
				<attribute name="PositionPin" value="21"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="nb_anti_talutage" typeName="INT"></variables>
			<variables name="poids_consigne_pv" typeName="INT"></variables>
			<variables name="tolerance_negative" typeName="INT"></variables>
			<variables name="tolerance_positive" typeName="INT"></variables>
			<variables name="dosage_en_cours" typeName="BOOL"></variables>
			<variables name="bit2_pv" typeName="BOOL"></variables>
			<variables name="Battements_pv" typeName="BOOL"></variables>
			<variables name="bit1_aju" typeName="BOOL"></variables>
			<variables name="bit2_aju" typeName="BOOL"></variables>
			<variables name="Battements_aju" typeName="BOOL"></variables>
			<variables name="bit1_vib" typeName="BOOL"></variables>
			<variables name="bit2_vib" typeName="BOOL"></variables>
			<variables name="Valeur_mini" typeName="INT"></variables>
			<variables name="Valeur_maxi" typeName="INT"></variables>
			<variables name="organe_ouvert" typeName="BOOL"></variables>
			<variables name="fin_tempo_stab" typeName="BOOL"></variables>
			<variables name="Stable" typeName="BOOL"></variables>
			<variables name="organe_ferme" typeName="BOOL"></variables>
			<variables name="Fin_de_pesage" typeName="BOOL"></variables>
			<variables name="cde_ajustement" typeName="BOOL"></variables>
			<variables name="defaut_depassement_tolerance" typeName="BOOL"></variables>
			<variables name="cde_antitalutage" typeName="BOOL"></variables>
			<variables name="fin_ajustement" typeName="BOOL"></variables>
			<variables name="bit_stab_ok" typeName="BOOL"></variables>
			<variables name="pesage_fin" typeName="BOOL"></variables>
			<variables name="superieur_egal_consigne" typeName="BOOL"></variables>
			<variables name="vib_pv_ok" typeName="BOOL"></variables>
			<variables name="tolerance_DINT" typeName="DINT"></variables>
			<variables name="poids_c_atteint" typeName="BOOL"></variables>
			<variables name="Initialiser" typeName="BOOL"></variables>
			<variables name="poids_c_pv_atteint" typeName="BOOL"></variables>
			<variables name="superieur_egal_tol_inf" typeName="BOOL"></variables>
			<variables name="superieur_tol_sup" typeName="BOOL"></variables>
			<variables name="Attente_stab_pour_ajust" typeName="BOOL"></variables>
			<variables name="consigne_nulle" typeName="BOOL"></variables>
			<variables name="tps_reponse_f" typeName="TON"></variables>
			<variables name="tps_reponse_o" typeName="TON"></variables>
			<variables name="FBI_3_3" typeName="TON"></variables>
			<variables name="FBI_3_4" typeName="TON"></variables>
			<variables name="FBI_3_21" typeName="TON"></variables>
			<variables name="FBI_3_22" typeName="TON"></variables>
			<variables name="FBI_3_26" typeName="TON"></variables>
			<variables name="FBI_3_27" typeName="TON"></variables>
			<variables name="FBI_3_34" typeName="CTU"></variables>
			<variables name="FBI_3_96" typeName="TON"></variables>
			<variables name="FBI_3_126" typeName="TP"></variables>
			<variables name="FBI_4_18" typeName="TON"></variables>
			<variables name="FBI_4_39" typeName="TON"></variables>
			<variables name="poids_old" typeName="INT"></variables>
			<variables name="poids_c_sans_cgg" typeName="INT"></variables>
			<variables name="ecart_cumule" typeName="INT"></variables>
			<variables name="ecart_a_corriger" typeName="INT"></variables>
			<variables name="moins_lim_corr" typeName="INT"></variables>
			<variables name="lim_sdos_en_unites_de_dos" typeName="INT"></variables>
			<variables name="cumul_d_DINT" typeName="DINT"></variables>
			<variables name="tol_neg" typeName="INT"></variables>
			<variables name="tol_pos" typeName="INT"></variables>
			<variables name="poids_v_max" typeName="INT"></variables>
			<variables name="ecart_p_tolere" typeName="INT"></variables>
			<variables name="dep_sup_ecart_p_tolere" typeName="BOOL"></variables>
			<variables name="dep_inf_ecart_p_tolere" typeName="BOOL"></variables>
			<variables name="pas_de_dosage_en_cours" typeName="BOOL"></variables>
			<variables name="poids_consigne_arret_dos_simult" typeName="INT"></variables>
			<variables name="Poids_Seuil_CHU" typeName="INT"></variables>
			<variables name="Active_CHU" typeName="EBOOL"></variables>
			<variables name="Target_CHU" typeName="INT"></variables>
			<variables name="Derniere_Humidite_Calcule" typeName="REAL"></variables>
			<variables name="Detect_Fin_CHU" typeName="EBOOL"></variables>
			<variables name="FD_Active_CHU" typeName="F_TRIG"></variables>
			<variables name="Calc_sans_Humidite_TRE" typeName="BOOL"></variables>
			<variables name="Ecart_CHU" typeName="INT"></variables>
			<variables name="Humidite_enregistree" typeName="BOOL"></variables>
			<variables name="Copy_POIDS_I" typeName="INT"></variables>
		</privateLocalVariables>
		<FBProgram name="Calcul_consignes">
			<ILSource>(* P864 Copie des entrées dans des variables images pour les versions de Unity &gt; 5 *)
LD poids_i
ST copy_poids_i

(* ASM Jan/2014 -P864 : artf 1347731 : Additional balance  *)
LDN Flags_pesage.mode_decomptage
JMPC pas_decomptage
(* Calcul du "copy_poids_i" utilisé dans le bloc dans le cas du décomptage *)
LD Poids_Init_Decomptage (* poids de départ des Ods *)
SUB copy_poids_i		 (* poids instantané des Ods *)
ADD Poids_p_Memo	 (* mémoire poids pesé sur reprise dosage*)
ADD Poids_r		 (* poids de référence mémorisé à l'INIT du dosage d'un produit. 
				Il est nul lors du dosage du 1er produit, ensuite il correspond à la somme des dosages effectués *)
ST copy_poids_i		 (* poids instantané qui sera utilisé dans les sections du bloc PESA*) 
pas_decomptage:

(* Calcul des consignes poids *)
(*----------------------------*)

LD Flags_pesage.CGG_ON
 JMPC calculs_corr_g_g
 LD 0
 ST ecart_a_corriger (* pas d'écart à corriger si la CGG est désactivée *)
 JMP calculs_corr_g_g__fin
 calculs_corr_g_g :

 (* Correction gâchée sur gâchée &gt; Calculs préparatoires *)
 LD lim_corr
 MUL -1
 ST moins_lim_corr
 LD cumuls.cumul_consignes_sans_correct_g_g
 ST cumul_d_DINT
 LD lim_sdos
 INT_TO_DINT
 MUL cumul_d_DINT
 DIV -1000
 DINT_TO_INT
 ST lim_sdos_en_unites_de_dos

 (* Correction gâchée sur gâchée &gt; Calcul de l'écart cumulé pour la CGG *)
 LD cumuls.cumul_poids_reellement_peses
 SUB cumuls.cumul_consignes_sans_correct_g_g
 DINT_TO_INT
 ST ecart_cumule (* Ecart cumulé pour ce produit lors des précédentes gâchées de la fabrication *)

 (* Correction gâchée sur gâchée &gt; Calcul de l'écart à corriger pour la CGG *)
 (* à partir de l'écart cumulé auquel on applique des "fonctions" *)
 LD ecart_cumule
 ST ecart_a_corriger (* Par défaut, l'écart à corriger est égal à l'écart cumulé. *)

 (* Fonction 1 : *)
 (* Les sur-dosages sont corrigés dans la limite de "+lim_corr" au maximum*)
 LD ecart_cumule
 LE lim_corr
 JMPC fonction_1_non_applicable
 (* XX/09/2015 - P868B - ARTF1598100 *)
 (* on applique la limite de correction aussi à la dernière gachée. *)
 	(* On applique la fonction *)
	LD lim_corr
	ST ecart_a_corriger
 fonction_1_non_applicable:

 (* Fonction 2 :*)
 (* Les sous-dosages sont corrigés dans la limite de "-lim_corr" au minimum*)
 LD ecart_cumule
 GT moins_lim_corr
 JMPC fonction_2_non_applicable
 LD Flags_pesage.Obligation_atteindre_consigne
 JMPC fonction_2_non_applicable (* on ne fait pas de limite de correction sur *)
    (* les sous-dosages dans le cas d'une obligation d'atteindre la consigne *)
    (* Confirmé par Patrick HUGON le 22/10/2010 : "[...] seule la dernière gâchée *)
    (* de la charge (livraison) doit avoir la tolérance négative à 0 pour *)
    (* 'obligation d'atteindre la consigne' indépendamment de la limite de *)
    (* correction". *)
    (* XX/09/2015 - P868B - ARTF1598100 *)
    (* on applique la limite de correction aussi à la dernière gachée. *)
	(* On applique la fonction *)
	LD moins_lim_corr
	ST ecart_a_corriger
 fonction_2_non_applicable:

 (* Fonction 3 : *)
 (* Pas de correction si on a cumulé un léger sous dosage dans les précédentes gâchées *) 
 LD ecart_cumule
 GT 0
 JMPC fonction_3_non_applicable
 LD ecart_cumule
 LT lim_sdos_en_unites_de_dos
 JMPC fonction_3_non_applicable
 LD Flags_pesage.Obligation_atteindre_consigne
 JMPC fonction_3_non_applicable (* on n'applique pas la limite de sous *)
    (* dosage dans le cas d'une obligation d'atteindre la consigne *)
 	(* On applique la fonction *)
	LD 0
	ST ecart_a_corriger
 fonction_3_non_applicable:
 calculs_corr_g_g__fin:




 (*Consigne arret commande de dosage*)
 Ld poids_d
 add poids_r
 sub err_jete
 ST poids_c_sans_cgg (* consigne relative sans CGG *)
 SUB ecart_a_corriger (* CGG *)
 ADD Ecart_CHU (*Ajout N.Y Correction Humidite*)
 ST poids_c (* consigne absolue *)

 LD poids_d
 SUB ecart_a_corriger (* CGG *)
 ADD Ecart_CHU (*Ajout N.Y Correction Humidite*)
 ST poids_v (* Poids visé *)

 LD PORTEE
 SUB poids_r
 ST poids_v_max
 LD poids_v
 GT poids_v_max
 JMPCN poids_vise_ok_1
 poids_vise_sup_max:
 	(* On limite le poids visé à la portée de la bascule. *)
	(* Décision Patrick HUGON 01/12/2010 *)
 	LD poids_v_max
	ST poids_v (* Poids visé *)
 poids_vise_ok_1:

 LD poids_v
 LT 0
 JMPCN poids_vise_ok_2
 poids_vise_negatif:
 	(* On borne le poids visé à 0 pour ne pas risquer d'écrire *)
	(* "-1" qui est réservé pour signifier "non disponible" *)
 	LD 0
	ST poids_v (* Poids visé *)
 poids_vise_ok_2:

 

 (*Consigne pesage fin*)
 ld seuil_pv
 GE poids_v
 jmpcn suite_consigne
  
 ld poids_r
 st poids_consigne_pv
  
 jmp suite2_consigne
  
 suite_consigne: 
  
 ld poids_c
 sub seuil_pv
 st poids_consigne_pv
  
 suite2_consigne:
  
 (*Consigne d'arret du dosage simultané *)
 (* Ajout R.C. 25/02/2011 P804 *)
 LD seuil_dos_simult
 GE poids_v
 JMPCN suite3_consigne
 	(* La quantité à doser est inférieure ou égale à la quantité à faire *)
	(* en non-simultané =&gt; Faire tout le dosage en non-simultané *)
	LD poids_r
	ADD Ecart_CHU (*Ajout N.Y Prise en compte de l'humidite*)
	ST poids_consigne_arret_dos_simult
 JMP suite4_consigne
 suite3_consigne:
 	(* Au moins une partie du dosage se fera en dosage simultané *)
	(* =&gt; Calculer le poids de consigne pour l'arret du dosage simultané.*)
	LD poids_c
	SUB seuil_dos_simult
	ST poids_consigne_arret_dos_simult
 suite4_consigne:

 (*Calcul des tolérances*)
 ld toleranc
 int_to_dint
 st tolerance_DINT
 
 LD poids_v
 int_to_dint
 mul tolerance_DINT
 div 1000
 dint_to_int
 ST tol_pos
 MUL -1
 ST tol_neg

 (* S'il y a obligation d'atteindre la consigne pour ce dosage, *)
 (* alors ne pas permettre de tolérance négative *)
 LD Flags_pesage.Obligation_atteindre_consigne
 JMPCN Obl_att_cons__fin
 Obl_att_cons:
 	LD 0
	ST tol_neg
 Obl_att_cons__fin:

 (*Tolérance négative*)
 ld poids_r
 ADD poids_v
 ADD tol_neg
 st tolerance_negative
  
 (*Tolérance positive*)
 ld poids_r
 ADD poids_v
 ADD tol_pos
 st tolerance_positive

 (* XX/09/2015 - P868A - ARTF1598100 *)
 (* Ecart pesé toléré *)
 (* L'écart de pesée toléré est calculé en fonction du poids visé *)
 (* (AVEC prise en compte de la correction de gachée sur gachée*)
 (* et de la correction Humidité) et de la tolérance process admise. *)
 LD poids_v (* Poids visé *)
 INT_TO_DINT
 MUL tolerance_DINT
 DIV 1000
 DINT_TO_INT
 ST ecart_p_tolere
 
   
 (*Temps de réponse ouverture organe*)
 CAL tps_reponse_o (IN := cde_dosa,
                  PT := TPS_ecoulement)
 LD tps_reponse_o.Q
 ST organe_ouvert
  
 (*Temps de réponse fermeture organe*)
 ldn cde_dosa
 st tps_reponse_f.IN
 CAL tps_reponse_f (PT := TPS_apres_coulant)
 LD tps_reponse_f.Q
 ST organe_ferme
  
 (*Poids déjà pesée*)
 ld copy_poids_i
 sub poids_r
 st poids_p
  
 (*Consigne anti-talutage*)
 ld S_talut
 eq 0
 or (nb_anti_talutage
 eq 0
 )
 jmpc fin_antitalutage
  
 ld poids_p
 ge (S_talut
 mul nb_anti_talutage
 )
 st cde_antitalutage
 jmpcn fin_antitalutage
  
 ld nb_anti_talutage
 add 1
 st nb_anti_talutage
  
 fin_antitalutage:
  
 LD TON_TOFF_PV.TON
 gt (TPS_ecoulement
 ADD T_stab
 )
 st vib_pv_ok
  
  
 (* apres init, cde_dosa passe à un car les filtres Empeche PI&gt;=PCPC *) 
 LD poids_v
 EQ 0
 st consigne_nulle

 LD poids_d
 EQ 0
 ST pas_de_dosage_en_cours
 
 (* XX/09/2015 - P868A - ARTF1598100 *)
 (* Calcul de l'écart de pesée devient l'écart entre le poids pesé *)
 (* et le poids visé (avec toutes les corrections) *)
 (* L'écart de pesée ne prend plus en compte l'écart des gachées précedentes que l'on soit en CGG ou non *)
 (* (utilisé pour déterminer un éventuel dépassement de tolérance.) *)
 LD poids_p
 SUB poids_v (* Poids visé *)
 ST ECART_P (* Ecart de pesée, utilisé par BC-Mix pour afficher la valeur des *)
 	(* dépassements de tolérance. *)
  
  
  
 (* Calcul et filtrage des seuils *)
  
 LD Init
 OR Pesee_OK
 ST Initialiser
 R poids_c_pv_atteint
 R poids_c_atteint
  
  
(*Modif MD pour Filtrer le passage sur les seuils. 
  Il faudrait mieu réaliser un bon filtre mais nous 
  n'avons pas les moyens de tester le filtre pour le moment *)
LD true
ANDN pas_de_dosage_en_cours (* modif MD RECETTE 25/09/08 *)
	(* Modif R.C. 08/12/2010, suite à la correction gachée sur gachée *)
	(* pour ne pas bloquer la production si le poids visé est à 0 : on *)
	(* remplace "ANDN consigne_nulle" par "ANDN pas_de_dosage_en_cours". *)
AND ( copy_poids_i
      GE poids_consigne_pv
     )
AND (poids_old
      GE poids_consigne_pv
     )
S poids_c_pv_atteint
  
  
LD true
ANDN pas_de_dosage_en_cours (* modif MD RECETTE 25/09/08 *)(* Modif R.C. 08/12/2010 *)
	(* Modif R.C. 08/12/2010, suite à la correction gachée sur gachée *)
	(* pour ne pas bloquer la production si le poids visé est à 0 : on *)
	(* remplace "ANDN consigne_nulle" par "ANDN pas_de_dosage_en_cours". *)
AND ( copy_poids_i
      GE poids_c
    )
AND (poids_old
      GE poids_c
     )
(* OR Cde_Arret_dosage *)
ST superieur_egal_consigne
S poids_c_atteint


LD copy_poids_i
ST poids_old
 
 (* test poids_c *) 
 LD superieur_egal_consigne
 JMPCN fin_test
 LD copy_poids_i
 ST lect_p_c
 fin_test:
 (* test poids_c *) 
  
 LD copy_poids_i
 GE tolerance_negative
 ST superieur_egal_tol_inf
  
  
 LD copy_poids_i
 GT tolerance_positive
 ST superieur_tol_sup

 LD ECART_P
 GT ecart_p_tolere
 ST dep_sup_ecart_p_tolere

 LD ECART_P
 LE (ecart_p_tolere
 MUL -1
 )
 ST dep_inf_ecart_p_tolere


 LD poids_c_atteint
 ST P_C_ATTE
</ILSource>
		</FBProgram>
		<FBProgram name="Calcul_Humidite">
			<STSource>(*Correction de L'humidite*)

(*RAZ DES VALEURS CALCULEES EN FIN DE PESAGE*)
IF PESEE_OK
THEN 
Derniere_Humidite_Calcule 	:= 0.0;
Humudite_utilisee 		:= 0.0;
Ecart_CHU_Utilise 		:= 0;
Calc_sans_Humidite_TRE 		:= 0;	
Active_CHU 			:= 0;
Humidite_enregistree 		:= 1;
END_IF;
(**)

(*Calculs du POIDS LIMITE DE CORRECTION et de la nouvelle target(consigne) *)
Poids_Seuil_CHU := Poids_r + REAL_TO_INT(INT_TO_REAL(poids_d) *(INT_TO_REAL(Correction_Humidite.Seuil_Correction)/100.0)); (*Modif NY 22/11/13 : suite a un mauvais calcul du seuil d'arret de correction*) 
Target_CHU      := Poids_d + Ecart_CHU;
(**)


	
	IF 	(Poids_i &lt; Poids_Seuil_CHU) 
		
	THEN
	 	Active_CHU :=1; (*On Active la correction de l'humidite en temps reel 
				si le poids i. est inferieur au poid seuil de correction*)
			
	ELSE	Active_CHU :=0;
	END_IF;


	FD_Active_CHU(Clk:=Active_CHU, Q=&gt;Detect_Fin_CHU);
	IF Detect_Fin_CHU THEN
	(*Memorisation de la derniere humidite lue pour l'appliquer sur la target restante*)
	Derniere_Humidite_Calcule := Correction_Humidite.Humidite;
	Humudite_utilisee := Derniere_Humidite_Calcule;
	Ecart_CHU_Utilise := Ecart_CHU;
	END_IF;



IF Active_CHU (*AND NOT Calc_sans_Humidite_TRE*) AND NOT Correction_Humidite.Dosage_Eau
THEN (*CALCUL AVEC HUMIDITE EN TEMPS REEL*)


	Ecart_CHU  := REAL_TO_INT((INT_TO_REAL(Poids_d)*Correction_Humidite.Humidite)/(100.0-Correction_Humidite.Humidite)); (*Modif ALE 04/07/2016 : Modification du calcule d'humidité*) 
	(*Ecart correction humidite*)

ELSIF NOT Active_CHU (*AND NOT Calc_sans_Humidite_TRE*) AND NOT Correction_Humidite.Dosage_Eau
THEN (*CALCUL AVEC SEULEMENT LA DERNIERE HUMIDITE LUE OU HUMIDITE MANU*)
	

	Ecart_CHU  := REAL_TO_INT((INT_TO_REAL(Poids_d)*Derniere_Humidite_Calcule)/(100.0-Derniere_Humidite_Calcule)); (*Modif ALE 04/07/2016 : Modification du calcule d'humidité*) 
	(*Ecart avec correction humidite*)

ELSIF Correction_Humidite.Dosage_Eau
THEN (*CALCUL DE L'HUMIDITE POUR LE DOSAGE DE L'EAU*)
	Ecart_CHU := -Correction_Humidite.Correction_eau;
	(*Ecart cumulle sur le dosage des granulats*)

ELSE
	Ecart_CHU  := 0;
	(*PAS DE CORRECTION D'HUMIDITE*)

END_IF;
</STSource>
		</FBProgram>
		<FBProgram name="Dosage">
			<LDSource nbColumns="13">
				<networkLD>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<HLink nbCells="8"></HLink>
						<coil typeCoil="coil" coilVariableName="pesage_fin"></coil>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="poids_c_pv_atteint"></contact>
						<contact typeContact="closedContact" contactVariableName="poids_c_atteint"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="2"></HLink>
						</shortCircuit>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName="FBI_3_3" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="5" posY="2"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="TON_TOFF_pv.TOFF"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="3"></emptyCell>
						<FFBBlock instanceName="FBI_3_4" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="10" posY="2"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="TON_TOFF_PV.TON"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="1"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="4"></emptyCell>
						<contact typeContact="closedContact" contactVariableName="bit2_pv"></contact>
						<emptyCell nbCells="2"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<compareBlock width="2">
							<expression>TON_TOFF_PV.TON &lt;&gt; t#0s</expression>
						</compareBlock>
						<emptyCell nbCells="2"></emptyCell>
						<coil typeCoil="coil" coilVariableName="bit2_pv"></coil>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="7"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="5"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="8"></emptyCell>
						<HLink nbCells="4"></HLink>
						<coil typeCoil="coil" coilVariableName="Battements_pv"></coil>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="cde_ajustement"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="3"></HLink>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="bit1_aju"></contact>
						<HLink nbCells="7"></HLink>
						<coil typeCoil="coil" coilVariableName="Battements_aju"></coil>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName="FBI_3_22" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="5" posY="10"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="TON_TOFF_AJU.TON"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="3"></emptyCell>
						<FFBBlock instanceName="FBI_3_21" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="10" posY="10"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="TON_TOFF_aju.TOFF"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="1"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="4"></emptyCell>
						<contact typeContact="closedContact" contactVariableName="bit2_aju"></contact>
						<emptyCell nbCells="2"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<compareBlock width="2">
							<expression>TON_TOFF_aju.TOFF &lt;&gt; t#0s</expression>
						</compareBlock>
						<emptyCell nbCells="2"></emptyCell>
						<coil typeCoil="coil" coilVariableName="bit2_aju"></coil>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="7"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="5"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="8"></emptyCell>
						<HLink nbCells="4"></HLink>
						<coil typeCoil="coil" coilVariableName="bit1_aju"></coil>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="closedContact" contactVariableName="poids_c_pv_atteint"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="Tmax_pes"></contact>
						<contact typeContact="closedContact" contactVariableName="Defaut"></contact>
						<contact typeContact="closedContact" contactVariableName="cde_talu"></contact>
						<contact typeContact="closedContact" contactVariableName="consigne_nulle"></contact>
						<contact typeContact="closedContact" contactVariableName="Cde_Arret_dosage"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<HLink nbCells="1"></HLink>
						<coil typeCoil="coil" coilVariableName="cde_dosa"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="Battements_pv"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<emptyCell nbCells="6"></emptyCell>
						<contact typeContact="openContact" contactVariableName="organe_ouvert"></contact>
						<coil typeCoil="setCoil" coilVariableName="dosage_en_cours"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="Battements_aju"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="11"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="pesage_fin"></contact>
						</shortCircuit>
						<HLink nbCells="2"></HLink>
						<contact typeContact="openContact" contactVariableName="Flags_pesage.sens_pv"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<HLink nbCells="2"></HLink>
						<coil typeCoil="coil" coilVariableName="cde_pv"></coil>
						<HLink nbCells="5"></HLink>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="cde_ajustement"></contact>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="8"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="closedContact" contactVariableName="cde_ajustement"></contact>
						<contact typeContact="closedContact" contactVariableName="pesage_fin"></contact>
						<HLink nbCells="1"></HLink>
						<contact typeContact="closedContact" contactVariableName="Flags_pesage.sens_pv"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="8"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="4"></emptyCell>
						<FFBBlock instanceName=".1" typeName="LT_INT" additionnalPinNumber="0" enEnO="true" width="10" height="4">
							<objPosition posX="4" posY="24"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="poids_i"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="poids_consigne_arret_dos_simult"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<HLink nbCells="4"></HLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="6"></emptyCell>
						<HLink nbCells="1"></HLink>
						<coil typeCoil="coil" coilVariableName="cde_dos_simult"></coil>
						<HLink nbCells="5"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="2"></emptyLine>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<contact typeContact="closedContact" contactVariableName="superieur_egal_consigne"></contact>
						<contact typeContact="openContact" contactVariableName="organe_ouvert"></contact>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="Stable"></contact>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="bit1_vib"></contact>
						<HLink nbCells="6"></HLink>
						<coil typeCoil="coil" coilVariableName="cde_vib"></coil>
						<HLink nbCells="1"></HLink>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName="FBI_3_26" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="5" posY="31"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="TON_TOFF_VIB.TON"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="3"></emptyCell>
						<FFBBlock instanceName="FBI_3_27" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="10" posY="31"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="TON_TOFF_vib.TOFF"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="1"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="4"></emptyCell>
						<contact typeContact="closedContact" contactVariableName="bit2_vib"></contact>
						<emptyCell nbCells="2"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<compareBlock width="2">
							<expression>TON_TOFF_vib.TOFF &lt;&gt; t#0s</expression>
						</compareBlock>
						<emptyCell nbCells="2"></emptyCell>
						<coil typeCoil="coil" coilVariableName="bit2_vib"></coil>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="7"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="5"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="8"></emptyCell>
						<HLink nbCells="4"></HLink>
						<coil typeCoil="coil" coilVariableName="bit1_vib"></coil>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="cde_ajustement"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="4"></HLink>
						</shortCircuit>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="pesage_fin"></contact>
						<contact typeContact="closedContact" contactVariableName="vib_pv_ok"></contact>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName="FBI_3_34" typeName="CTU" additionnalPinNumber="0" enEnO="false" width="10" height="5">
							<objPosition posX="3" posY="38"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="CU"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="R"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PV" effectiveParameter="Nb_vib"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="CV"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<VLink></VLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="5"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="PContact" contactVariableName="bit2_vib"></contact>
						<HLink nbCells="2"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<HLink nbCells="1"></HLink>
						<contact typeContact="openContact" contactVariableName="Stable"></contact>
						<contact typeContact="openContact" contactVariableName="organe_ouvert"></contact>
						<contact typeContact="closedContact" contactVariableName="pesee_ok"></contact>
						<coil typeCoil="coil" coilVariableName="Pds_bloq"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<contact typeContact="closedContact" contactVariableName="cde_dosa"></contact>
						<HLink nbCells="2"></HLink>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="2"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName="FBI_3_126" typeName="TP" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="1" posY="44"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="T_talut"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="cde_antitalutage"></contact>
						<emptyCell nbCells="2"></emptyCell>
						<HLink nbCells="6"></HLink>
						<coil typeCoil="coil" coilVariableName="cde_talu"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="2"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="4"></emptyCell>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
						<contact typeContact="closedContact" contactVariableName="Flags_pesage.Aju_auto"></contact>
						<HLink nbCells="2"></HLink>
						<coil typeCoil="coil" coilVariableName="Ajust"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<contact typeContact="closedContact" contactVariableName="superieur_egal_tol_inf"></contact>
						<contact typeContact="openContact" contactVariableName="poids_c_atteint"></contact>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="organe_ferme"></contact>
						</shortCircuit>
						<contact typeContact="openContact" contactVariableName="Stable"></contact>
						<HLink nbCells="1"></HLink>
						<contact typeContact="openContact" contactVariableName="Flags_pesage.Aju_auto"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<HLink nbCells="1"></HLink>
						<coil typeCoil="setCoil" coilVariableName="cde_ajustement"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="4"></emptyCell>
						<HLink nbCells="1"></HLink>
						<coil typeCoil="resetCoil" coilVariableName="Fin_de_pesage"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="4"></emptyCell>
						<HLink nbCells="5"></HLink>
						<coil typeCoil="coil" coilVariableName="Attente_stab_pour_ajust"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<contact typeContact="openContact" contactVariableName="superieur_egal_tol_inf"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="5"></HLink>
						</shortCircuit>
						<HLink nbCells="1"></HLink>
						<coil typeCoil="resetCoil" coilVariableName="cde_ajustement"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<contact typeContact="openContact" contactVariableName="Init"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="5"></emptyCell>
						<HLink nbCells="1"></HLink>
						<coil typeCoil="setCoil" coilVariableName="fin_ajustement"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<contact typeContact="openContact" contactVariableName="dep_sup_ecart_p_tolere"></contact>
						<contact typeContact="openContact" contactVariableName="organe_ferme"></contact>
						<contact typeContact="openContact" contactVariableName="Stable"></contact>
						<contact typeContact="closedContact" contactVariableName="pesee_ok"></contact>
						<HLink nbCells="4"></HLink>
						<coil typeCoil="coil" coilVariableName="Dep_tol"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<contact typeContact="PContact" contactVariableName="Dep_tol"></contact>
						<HLink nbCells="8"></HLink>
						<coil typeCoil="setCoil" coilVariableName="defaut_depassement_tolerance"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<FFBBlock instanceName="FBI_3_96" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="3" posY="60"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="T_m_pesa"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="8"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="closedContact" contactVariableName="pesee_ok"></contact>
						</shortCircuit>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="dosage_en_cours"></contact>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="Defaut"></contact>
						<emptyCell nbCells="2"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="3"></HLink>
						</shortCircuit>
						<HLink nbCells="1"></HLink>
						<coil typeCoil="coil" coilVariableName="Tmax_pes"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<contact typeContact="openContact" contactVariableName="cde_ajustement"></contact>
						<emptyCell nbCells="6"></emptyCell>
						<HLink nbCells="1"></HLink>
						<coil typeCoil="resetCoil" coilVariableName="dosage_en_cours"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="2"></emptyLine>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<contact typeContact="openContact" contactVariableName="defaut_depassement_tolerance"></contact>
						<HLink nbCells="1"></HLink>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="NContact" contactVariableName="Defaut"></contact>
						</shortCircuit>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<contact typeContact="closedContact" contactVariableName="dep_sup_ecart_p_tolere"></contact>
						<contact typeContact="openContact" contactVariableName="bit_stab_ok"></contact>
						<contact typeContact="openContact" contactVariableName="Stable"></contact>
						<contact typeContact="openContact" contactVariableName="superieur_egal_tol_inf"></contact>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="closedContact" contactVariableName="cde_ajustement"></contact>
						</shortCircuit>
						<contact typeContact="openContact" contactVariableName="organe_ferme"></contact>
						<HLink nbCells="2"></HLink>
						<coil typeCoil="coil" coilVariableName="pesee_ok"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<contact typeContact="openContact" contactVariableName="Cde_Arret_dosage"></contact>
						<HLink nbCells="1"></HLink>
						<contact typeContact="openContact" contactVariableName="Stable"></contact>
						<HLink nbCells="2"></HLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="Init"></contact>
						</shortCircuit>
						<emptyCell nbCells="12"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="pesee_ok"></contact>
						</shortCircuit>
						<emptyCell nbCells="12"></emptyCell>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<coil typeCoil="resetCoil" coilVariableName="poids_c_atteint"></coil>
						<HLink nbCells="11"></HLink>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<coil typeCoil="resetCoil" coilVariableName="poids_c_pv_atteint"></coil>
						<HLink nbCells="11"></HLink>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<coil typeCoil="resetCoil" coilVariableName="bit_stab_ok"></coil>
						<HLink nbCells="11"></HLink>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<coil typeCoil="resetCoil" coilVariableName="Fin_de_pesage"></coil>
						<HLink nbCells="11"></HLink>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<coil typeCoil="resetCoil" coilVariableName="defaut_depassement_tolerance"></coil>
						<HLink nbCells="11"></HLink>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<coil typeCoil="resetCoil" coilVariableName="dosage_en_cours"></coil>
						<HLink nbCells="11"></HLink>
					</typeLine>
					<typeLine>
						<VLink></VLink>
						<coil typeCoil="resetCoil" coilVariableName="fin_ajustement"></coil>
						<HLink nbCells="11"></HLink>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="3"></HLink>
						</shortCircuit>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName=".3.130" typeName="MOVE" additionnalPinNumber="0" enEnO="true" width="10" height="3">
							<objPosition posX="5" posY="80"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN" effectiveParameter="1"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT" effectiveParameter="nb_anti_talutage"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName=".3.139" typeName="EQ" additionnalPinNumber="0" enEnO="true" width="9" height="4">
							<objPosition posX="1" posY="81"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="nb_anti_talutage"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="0"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="8"></emptyCell>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="16"></emptyLine>
					</typeLine>
					<textBox width="3" height="1">Contrôle du nombre d'aide extraction
    <objPosition posX="0" posY="33"></objPosition>
					</textBox>
					<textBox width="3" height="1">Ajustement nécessaire
    <objPosition posX="0" posY="49"></objPosition>
					</textBox>
					<textBox width="3" height="1">Commande du dosage simultané
   Ajout R.C. 25/02/2011 P804
    <objPosition posX="0" posY="23"></objPosition>
					</textBox>
					<textBox width="3" height="1">Battements ajustement
    <objPosition posX="0" posY="6"></objPosition>
					</textBox>
					<textBox width="3" height="1">Temps maxi de pesage
    <objPosition posX="0" posY="59"></objPosition>
					</textBox>
					<textBox width="2" height="1">Pesée OK
    <objPosition posX="0" posY="65"></objPosition>
					</textBox>
					<textBox width="3" height="1">Commande de dosage
    <objPosition posX="0" posY="14"></objPosition>
					</textBox>
					<textBox width="3" height="1">Dépassement tolérance
    <objPosition posX="0" posY="56"></objPosition>
					</textBox>
					<textBox width="3" height="1">Commande anti-talutage
    <objPosition posX="0" posY="43"></objPosition>
					</textBox>
					<textBox width="2" height="2">xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    <objPosition posX="6" posY="15"></objPosition>
					</textBox>
					<textBox width="3" height="1">Syncopage aide extraction
    <objPosition posX="0" posY="28"></objPosition>
					</textBox>
					<textBox width="3" height="1">Commande petite vitesse
    <objPosition posX="0" posY="19"></objPosition>
					</textBox>
				</networkLD>
			</LDSource>
		</FBProgram>
		<FBProgram name="Stabilité">
			<LDSource nbColumns="11">
				<networkLD>
					<typeLine>
						<emptyLine nbRows="2"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName=".4.11" typeName="GT" additionnalPinNumber="0" enEnO="true" width="9" height="4">
							<objPosition posX="1" posY="2"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="Valeur_mini"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="poids_i"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="8"></emptyCell>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="2"></HLink>
						</shortCircuit>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="4"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName=".4.4" typeName="MOVE" additionnalPinNumber="0" enEnO="true" width="10" height="3">
							<objPosition posX="6" posY="5"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN" effectiveParameter="poids_i"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT" effectiveParameter="Valeur_mini"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="PContact" contactVariableName="cde_dosa"></contact>
						<contact typeContact="closedContact" contactVariableName="pesage_fin"></contact>
						<HLink nbCells="1"></HLink>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="closedContact" contactVariableName="cde_ajustement"></contact>
						</shortCircuit>
						<HLink nbCells="2"></HLink>
						<emptyCell nbCells="5"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="Defaut"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="3"></HLink>
						</shortCircuit>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="fin_tempo_stab"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="3"></HLink>
						</shortCircuit>
						<emptyCell nbCells="2"></emptyCell>
						<FFBBlock instanceName=".4.5" typeName="MOVE" additionnalPinNumber="0" enEnO="true" width="10" height="3">
							<objPosition posX="6" posY="8"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN" effectiveParameter="poids_i"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT" effectiveParameter="Valeur_maxi"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="4"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="5"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName=".4.12" typeName="LT" additionnalPinNumber="0" enEnO="true" width="9" height="4">
							<objPosition posX="1" posY="10"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="Valeur_maxi"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="poids_i"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="1"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<HLink nbCells="2"></HLink>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="2"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="poids_c_atteint"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="closedContact" contactVariableName="cde_ajustement"></contact>
						</shortCircuit>
						<contact typeContact="openContact" contactVariableName="organe_ferme"></contact>
						<contact typeContact="closedContact" contactVariableName="pesee_ok"></contact>
						<contact typeContact="closedContact" contactVariableName="Init"></contact>
						<coil typeCoil="setCoil" coilVariableName="Fin_de_pesage"></coil>
						<HLink nbCells="4"></HLink>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<VLink></VLink>
						<VLink></VLink>
						<emptyCell nbCells="8"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="2"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="fin_ajustement"></contact>
						</shortCircuit>
						<emptyCell nbCells="8"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="Cde_Arret_dosage"></contact>
						<HLink nbCells="2"></HLink>
						<emptyCell nbCells="8"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="2"></emptyLine>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="pesage_fin"></contact>
						</shortCircuit>
						<emptyCell nbCells="7"></emptyCell>
						<FFBBlock instanceName="FBI_4_18" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="8" posY="21"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="T_stab"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="1"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="Attente_stab_pour_ajust"></contact>
						</shortCircuit>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="organe_ouvert"></contact>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="fin_tempo_stab"></contact>
						<contact typeContact="closedContact" contactVariableName="Defaut"></contact>
						<contact typeContact="closedContact" contactVariableName="CDE_TALU"></contact>
						<HLink nbCells="4"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<coil typeCoil="coil" coilVariableName="fin_tempo_stab"></coil>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="Fin_de_pesage"></contact>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName=".2" typeName="SUB_INT" additionnalPinNumber="0" enEnO="true" width="10" height="4">
							<objPosition posX="1" posY="26"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="Valeur_maxi"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="Valeur_mini"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName=".1" typeName="LT_INT" additionnalPinNumber="0" enEnO="true" width="10" height="4">
							<objPosition posX="4" posY="26"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="ec_stab"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="5"></emptyCell>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="6"></emptyCell>
						<contact typeContact="openContact" contactVariableName="fin_tempo_stab"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<coil typeCoil="coil" coilVariableName="Stable"></coil>
						<HLink nbCells="2"></HLink>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="7"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="7"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="organe_ouvert"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="Defaut"></contact>
						<HLink nbCells="1"></HLink>
						<contact typeContact="closedContact" contactVariableName="fin_tempo_stab"></contact>
						<HLink nbCells="1"></HLink>
						<contact typeContact="openContact" contactVariableName="Stable"></contact>
						<contact typeContact="closedContact" contactVariableName="pesee_ok"></contact>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="Fin_de_pesage"></contact>
						<contact typeContact="openContact" contactVariableName="organe_ferme"></contact>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="closedContact" contactVariableName="bit_stab_ok"></contact>
						<contact typeContact="openContact" contactVariableName="Fin_de_pesage"></contact>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="Stable"></contact>
						</shortCircuit>
						<coil typeCoil="coil" coilVariableName="stab_ok"></coil>
						<HLink nbCells="7"></HLink>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<coil typeCoil="setCoil" coilVariableName="bit_stab_ok"></coil>
						<HLink nbCells="7"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="4"></emptyCell>
						<FFBBlock instanceName="FBI_4_39" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="4" posY="37"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="T_m_stab"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="5"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="closedContact" contactVariableName="Defaut"></contact>
						<contact typeContact="openContact" contactVariableName="Fin_de_pesage"></contact>
						<contact typeContact="closedContact" contactVariableName="Instable"></contact>
						<contact typeContact="closedContact" contactVariableName="cde_dosa"></contact>
						<emptyCell nbCells="2"></emptyCell>
						<contact typeContact="closedContact" contactVariableName="Stable"></contact>
						<coil typeCoil="coil" coilVariableName="Instable"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="60"></emptyLine>
					</typeLine>
					<linkFB>
						<linkSource parentObjectName=".2" pinName="OUT">
							<objPosition posX="2" posY="28"></objPosition>
						</linkSource>
						<linkDestination parentObjectName=".1" pinName="IN1">
							<objPosition posX="4" posY="28"></objPosition>
						</linkDestination>
					</linkFB>
					<textBox width="2" height="1">Balance instable
    <objPosition posX="0" posY="36"></objPosition>
					</textBox>
					<textBox width="2" height="1">Balance stable
    <objPosition posX="0" posY="20"></objPosition>
					</textBox>
					<textBox width="3" height="1">Stabilité Ok pour compte-rendu
    <objPosition posX="0" posY="33"></objPosition>
					</textBox>
					<textBox width="2" height="1">Copie du poids
    <objPosition posX="0" posY="0"></objPosition>
					</textBox>
					<textBox width="2" height="1">Fin de pesage
    <objPosition posX="0" posY="14"></objPosition>
					</textBox>
					<textBox width="2" height="1"><objPosition posX="0" posY="18"></objPosition>
					</textBox>
				</networkLD>
			</LDSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="INT_TO_WORD" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the INT data type to a  BOOL, BYTE, WORD, DWORD, DINT, UINT UDINT, REAL or TIME output value.&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function,&#xA;        there will also be a few illogical conversions, e.g. INT_TO_BOOL.&#xA;  Negative input values cannot be converted into data types UINT, UDINT or TIME.&#xA;  When converting an input value from the data type INT into data type WORD,&#xA;  the bit pattern from the input is transferred to the output without being modified.&#xA;  When converting an input value of data type INT into the data types BOOL or BYTE,&#xA;  the least significant bits of the input are transferred to the output.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="5CEA"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="INT">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="WORD">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="Weighing_Tolerances" version="0.14" dateTime="dt#2015-09-16-11:26:00">
		<attribute name="TypeCodeCheckSumString" value="697D"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="9A0F"></attribute>
		<inputParameters>
			<variables name="IDFB_Conf_Process_Tol" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="IDFB_Conf_Process_Tol_Default" typeName="INT">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="IDFB_Batch_Properties" typeName="WORD">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="ODFB_Conf_Process_Tol_Used" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="Conf_Process_Tol" typeName="INT"></variables>
			<variables name="Conf_Process_Tol_Default" typeName="INT"></variables>
			<variables name="Batch_Properties" typeName="WORD"></variables>
			<variables name="Conf_Process_Tol_Used" typeName="INT"></variables>
		</privateLocalVariables>
		<FBProgram name="Main">
			<STSource>(* XX/09/2015 - P868A - artf1598100 *)

(* Reading DFB's inputs *)
Conf_Process_Tol 		:= IDFB_Conf_Process_Tol;
Conf_Process_Tol_Default	:= IDFB_Conf_Process_Tol_Default;
Batch_Properties 		:= IDFB_Batch_Properties;
(* Reading DFB's inputs *)

IF NOT Batch_Properties.3 THEN
	Conf_Process_Tol_Used := Conf_Process_Tol_Default;
ELSE
	IF Conf_Process_Tol &lt;&gt; 0 THEN
		Conf_Process_Tol_Used := Conf_Process_Tol;
	ELSE
		Conf_Process_Tol_Used := Conf_Process_Tol_Default;
	END_IF;
END_IF;

(* Writing DFB's outputs *)
ODFB_Conf_Process_Tol_Used	:= Conf_Process_Tol_Used;
(* Writing DFB's outputs *)
</STSource>
		</FBProgram>
	</FBSource>
	<FBSource nameOfFBType="VIB_BAL" version="2.03" dateTime="dt#2014-01-24-13:17:21">
		<attribute name="TypeProtectionLevel" value="2#0000_0000"></attribute>
		<attribute name="TypeCodeCheckSumString" value="2D02"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="3872"></attribute>
		<inputParameters>
			<variables name="POIDS_I" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="VALIDE" typeName="BOOL">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="T_STAB" typeName="TIME">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="PR_DEF" typeName="BOOL">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="TON_VIB" typeName="TIME">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="TOFF_VIB" typeName="TIME">
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="NB_VIB" typeName="INT">
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
			<variables name="E_STAB" typeName="INT">
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
			<variables name="mode_decomptage" typeName="BOOL">
				<attribute name="PositionPin" value="9"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="CDE_VIB" typeName="BOOL">
				<comment>Commande du vibreur</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="ALARME" typeName="BOOL">
				<comment>Défaut d'écoulement bascule</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="Val_maxi" typeName="INT"></variables>
			<variables name="Val_mini" typeName="INT"></variables>
			<variables name="bascule_stable" typeName="BOOL"></variables>
			<variables name="bit_alarme" typeName="BOOL"></variables>
			<variables name="b1_vibreur" typeName="BOOL"></variables>
			<variables name="b2_vibreur" typeName="BOOL"></variables>
			<variables name="TPO_STAB" typeName="TON"></variables>
			<variables name="FBI_2_1" typeName="TON"></variables>
			<variables name="FBI_2_2" typeName="TON"></variables>
			<variables name="FBI_2_17" typeName="CTU"></variables>
		</privateLocalVariables>
		<FBProgram name="Stab">
			<STSource>If not mode_decomptage then	(* ASM Nov 2013 -P864 : Additional balance *)
	if not valide then
	 	bascule_stable:=false;
	 end_if;
  
	 (* RAZ mini et maxi pour le test suivant *)
	 if not valide OR TPO_STAB.Q then
	 	Val_mini:=poids_I;
	 	Val_maxi:=poids_I;
	 end_if;
  
  
	 (* TEST DE STABILITE *)
	 TPO_STAB(IN:=not TPO_STAB.Q AND valide AND NOT Pr_def,
	 		 PT:= T_stab);
  
	 (* Sauvegarde des poids mini et maxi *)		 
	 if valide and not Pr_def then
 	
	 	if Val_mini&gt;poids_I then 
	 		Val_mini:=poids_I;
	 	end_if;
 	
	 	if Val_maxi&lt;poids_I then
	 		Val_maxi:=poids_I;
	 	end_if;
	 end_if;
  
	 (* Test l'écart de poids à la fin de la tempo de stabilité *)
	 if TPO_STAB.Q and Val_maxi-Val_mini&lt;e_stab then
	 	bascule_stable:=true;
	 end_if;
  
	 (* Présence d'un défaut *)
	 if Pr_def or Val_maxi-Val_mini&gt;e_stab then
	 	bascule_stable:=false;
	 end_if;
end_if;

(* ASM Nov 2013 -P864 : Additional balance *)
if mode_decomptage then
	if valide and not Pr_def then
		bascule_stable:=true;
	else
		bascule_stable:=false;
	end_if;
end_if;
</STSource>
		</FBProgram>
		<FBProgram name="Vibreur">
			<LDSource nbColumns="11">
				<networkLD>
					<typeLine>
						<emptyLine nbRows="2"></emptyLine>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="bascule_stable"></contact>
						</shortCircuit>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="closedContact" contactVariableName="alarme"></contact>
						</shortCircuit>
						<contact typeContact="closedContact" contactVariableName="b1_vibreur"></contact>
						<HLink nbCells="6"></HLink>
						<coil typeCoil="coil" coilVariableName="cde_vib"></coil>
						<HLink nbCells="1"></HLink>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="cde_vib"></contact>
						<VLink></VLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName="FBI_2_1" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="3" posY="4"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="TON_vib"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="2"></emptyCell>
						<FFBBlock instanceName="FBI_2_2" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="7" posY="4"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="TOFF_vib"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="2"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="1"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="2"></emptyCell>
						<contact typeContact="closedContact" contactVariableName="b2_vibreur"></contact>
						<emptyCell nbCells="2"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<coil typeCoil="coil" coilVariableName="b2_vibreur"></coil>
						<HLink nbCells="1"></HLink>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="5"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="5"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="5"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="5"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="6"></emptyCell>
						<HLink nbCells="3"></HLink>
						<coil typeCoil="coil" coilVariableName="b1_vibreur"></coil>
						<emptyCell nbCells="1"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="2"></emptyCell>
						<FFBBlock instanceName="FBI_2_17" typeName="CTU" additionnalPinNumber="0" enEnO="true" width="10" height="5">
							<objPosition posX="2" posY="11"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="CU"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="R"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PV" effectiveParameter="nb_vib"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="CV"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="closedContact" contactVariableName="mode_decomptage"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="PContact" contactVariableName="b2_vibreur"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<coil typeCoil="coil" coilVariableName="bit_alarme"></coil>
						<HLink nbCells="6"></HLink>
					</typeLine>
					<typeLine>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="closedContact" contactVariableName="bascule_stable"></contact>
						</shortCircuit>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="NContact" contactVariableName="Pr_def"></contact>
						<emptyCell nbCells="10"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="2"></emptyCell>
						<FFBBlock instanceName=".2.33" typeName="GT" additionnalPinNumber="0" enEnO="true" width="9" height="4">
							<objPosition posX="2" posY="17"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="nb_vib"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="0"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="closedContact" contactVariableName="mode_decomptage"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="4"></emptyCell>
						<shortCircuit>
							<VLink></VLink>
							<contact typeContact="openContact" contactVariableName="bit_alarme"></contact>
						</shortCircuit>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="4"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="2"></emptyCell>
						<FFBBlock instanceName=".2.29" typeName="EQ" additionnalPinNumber="0" enEnO="true" width="9" height="4">
							<objPosition posX="2" posY="21"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="nb_vib"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="0"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<VLink></VLink>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="closedContact" contactVariableName="mode_decomptage"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="2"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="4"></emptyCell>
						<contact typeContact="openContact" contactVariableName="bascule_stable"></contact>
						<HLink nbCells="1"></HLink>
						<coil typeCoil="coil" coilVariableName="alarme"></coil>
						<HLink nbCells="4"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="76"></emptyLine>
					</typeLine>
					<textBox width="2" height="1">ASM-Dec 2013 - artf1347731
    <objPosition posX="0" posY="20"></objPosition>
					</textBox>
					<textBox width="3" height="1">Commande du vibreur
    <objPosition posX="0" posY="0"></objPosition>
					</textBox>
					<textBox width="2" height="1">ASM-Dec 2013 - artf1347731
    <objPosition posX="0" posY="10"></objPosition>
					</textBox>
				</networkLD>
			</LDSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="WORD_TO_UINT" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the WORD data type to a  BOOL, BYTE, DWORD, INT, DINT, UINT, UDINT, REAL or TIME data type.&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function,&#xA;        there will also be a few illogical conversions, e.g. WORD_TO_TIME.&#xA;        It must be noted here, that the input byte pattern will be transferred&#xA;        into the most significant word of the output word.&#xA;  When converting the WORD data type to the DWORD, DINT, UDINT, REAL or TIME data type,&#xA;  the bit pattern of the input is transferred to the least significant bits of the output.&#xA;  The most significant bits of the output are set to zero.&#xA;  When converting the data type WORD to the data type BOOL or BYTE,&#xA;  the least significant bits of the input value are transferred to the output.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="F741"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="WORD">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="UINT">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFBSource nameOfEFBType="SR" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>Bistable function block, set dominant</comment>
		<attribute name="TypeDescriptiveForm" value="  The function block is used as SR memory with the property &quot;Set dominant&quot;.&#xA;  Output Q1 becomes &quot;1&quot; when the S1 input becomes &quot;1&quot;.&#xA;  This state remains even if input S1 reverts back to &quot;0&quot;.&#xA;  Output Q1 changes back to &quot;0&quot; when input R becomes &quot;1&quot;.&#xA;  If the inputs S1 and R are both &quot;1&quot; simultaneously,&#xA;  the dominating input S1 will set the output Q1 to &quot;1&quot;.&#xA;&#xA;  When the function block is called for the first time, the initial state of Q1 is &quot;0&quot;.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="IsTypeDiagnostic" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="4F9E"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="ED9A"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="S1" typeName="BOOL">
					<comment>Set (dominant)</comment>
					<attribute name="PositionPin" value="1"></attribute>
					<attribute name="IsPinDiagnosticable" value="0"></attribute>
				</variables>
				<variables name="R" typeName="BOOL">
					<comment>Reset</comment>
					<attribute name="PositionPin" value="2"></attribute>
					<attribute name="IsPinDiagnosticable" value="0"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="Q1" typeName="BOOL">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFBSource>
	<FBSource nameOfFBType="RECUP_VOIE_ANA" version="0.03" dateTime="dt#2011-02-09-16:56:47">
		<attribute name="TypeCodeCheckSumString" value="4374"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="4466"></attribute>
		<inputParameters>
			<variables name="voie_basc" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Conf_techno_basc" typeName="INT">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="valeur_ana_tab_1" typeName="INTARR24">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="valeur_ana_tab_2" typeName="INTARR48">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="erreurs_tab" typeName="ARRAY[1..72] OF BOOL">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="saturations_inf_tab" typeName="ARRAY[1..72] OF BOOL">
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="saturations_sup_tab" typeName="ARRAY[1..72] OF BOOL">
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
		</inputParameters>
		<inOutParameters>
			<variables name="Valeur_ANA_basc" typeName="INT">
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
		</inOutParameters>
		<outputParameters>
			<variables name="Saturation_inf" typeName="BOOL">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Saturation_sup" typeName="BOOL">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="index_tab" typeName="INT"></variables>
			<variables name="err_voie" typeName="BOOL"></variables>
			<variables name="sat_inf_voie" typeName="BOOL"></variables>
			<variables name="sat_sup_voie" typeName="BOOL"></variables>
		</privateLocalVariables>
		<FBProgram name="main">
			<STSource>(* Pour 1 bascule : Routage de la bonne entrée analogique vers le buffer  *)
(* "Valeur_ANA" de la bascule et récupération des erreurs correspondantes à *)
(* la voie spécifiée. *)
(* Ajout R.C. 12/01/2010 P706 : Récupération des valeurs *)
(* Modif R.C. 09/02/2011 P803 : Récupération des erreurs *)


IF (Conf_techno_basc = 3) THEN
(* Il s'agit bien d'une bascule analogique *)
(* =&gt; Autoriser la récupération de la valeur et des erreurs *)

	IF (voie_basc &gt;= 1) AND (voie_basc &lt;= 24) THEN
	(* Récupérer l'entrée dans le tableau "1er fragment" *)
		index_tab := voie_basc;
		Valeur_ANA_basc := valeur_ana_tab_1[index_tab];
	ELSIF (voie_basc &gt;= 25) AND (voie_basc &lt;= 72) THEN
	(* Récupérer l'entrée dans le tableau "2ème fragment" *)
		index_tab := voie_basc - 25 + 1;
		Valeur_ANA_basc := valeur_ana_tab_2[index_tab];
	ELSE
		Valeur_ANA_basc := 0;
	END_IF;

	IF (voie_basc &gt;= 1) AND (voie_basc &lt;= 72) THEN
	(* Récupérer les erreurs de la voie *)
		err_voie := erreurs_tab[voie_basc];
		sat_inf_voie := saturations_inf_tab[voie_basc];
		sat_sup_voie := saturations_sup_tab[voie_basc];
	ELSE
		err_voie := FALSE;
		sat_inf_voie := FALSE;
		sat_sup_voie := FALSE;
	END_IF;
	Saturation_inf := sat_inf_voie AND err_voie;
	Saturation_sup := sat_sup_voie AND err_voie;

ELSE
	Valeur_ANA_basc := 0;
	Saturation_inf := FALSE;
	Saturation_sup := FALSE;
END_IF;
</STSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="EQ_INT" version="1.00" dateTime="dt#2010-02-19-09:12:06">
		<comment>Equal to</comment>
		<attribute name="TypeDescriptiveForm" value="  This function checks the inputs for equality, i.e. the output becomes &quot;1&quot;  if there is equality at all inputs; otherwise, the output remains at &quot;0&quot;.&#xA;  The data types of all input values must be identical.&#xA;  The number of inputs can be increased (max 32).&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="97B0"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="INT">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>1: equal, 0:not equal</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="INTARR4" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="174B"></attribute>
		<array>ARRAY[1..4] OF INT</array>
	</DDTSource>
	<EFSource nameOfEFType="LE_INT" version="1.00" dateTime="dt#2010-02-19-09:12:06">
		<comment>Less than or equal to</comment>
		<attribute name="TypeDescriptiveForm" value="  The function checks the values of successive inputs for an increasing sequence or equality.  The data types of all input values must be identical.&#xA;  The number of inputs can be increased (max 32).&#xA;  STRING variables are compared using the alphabet; variables at the end of the alphabet are higher&#xA;  priority expressions than those at the front.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="97B0"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="INT">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="INTARR450" version="0.00" dateTime="dt#2010-06-09-15:41:36">
		<attribute name="TypeSignatureCheckSumString" value="3033"></attribute>
		<array>ARRAY[1..450] OF INT</array>
	</DDTSource>
	<EFSource nameOfEFType="LE" version="1.00" dateTime="dt#2010-02-19-09:12:06">
		<comment>Less than or equal to</comment>
		<attribute name="TypeDescriptiveForm" value="  The function checks the values of successive inputs for an increasing sequence or equality.  The data types of all input values must be identical.&#xA;  The number of inputs can be increased (max 32).&#xA;  STRING variables are compared using the alphabet; variables at the end of the alphabet are higher&#xA;  priority expressions than those at the front.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="BE6A"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_ELEMENTARY">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="LENGTH_ARINT" version="1.00" dateTime="dt#2010-02-19-09:25:23">
		<comment>Length of an integer table</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="DE50"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="ANY_ARRAY_INT">
					<comment>Source table</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>Number of elements in the source table</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="WORD_AS_TIME" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts 2 input values of the WORD data type  to an output of the TIME data type.&#xA;&#xA;  The input values are assigned to the word at the output&#xA;  according to the input names.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="C916"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="LOW" typeName="WORD">
					<comment>Least significant word</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="HIGH" typeName="WORD">
					<comment>Most significant word</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="TIME">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="UDINTARR20" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="3050"></attribute>
		<array>ARRAY[1..20] OF UDINT</array>
	</DDTSource>
	<DDTSource DDTName="UDINTARR4" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="893B"></attribute>
		<array>ARRAY[1..4] OF UDINT</array>
	</DDTSource>
	<EFBSource nameOfEFBType="F_TRIG" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>Falling edge detection</comment>
		<attribute name="TypeDescriptiveForm" value="  This function block is used for the detection of falling edges 1 -&gt; 0.&#xA;  Output Q becomes &quot;1&quot; if there is a transition from &quot;1&quot; to &quot;0&quot; at the CLK input.&#xA;  The output will remain at &quot;1&quot; from one function block execution to the next;&#xA;  the output subsequently returns to &quot;0&quot;.&#xA;&#xA;  Note: This function block is not available in the LD (Ladder Diagram) programming language,&#xA;        since the same functionality can be achieved there with the &quot;Contact - negative edge&quot;.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="IsTypeDiagnostic" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="D0FC"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="576B"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="CLK" typeName="BOOL">
					<comment>Clock input</comment>
					<attribute name="PositionPin" value="1"></attribute>
					<attribute name="IsPinDiagnosticable" value="0"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="Q" typeName="BOOL">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFBSource>
	<EFSource nameOfEFType="READ_VAR" version="1.00" dateTime="dt#2010-02-19-10:04:40">
		<comment>Reads the standard objects</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="644C"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="5346"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="ADR" typeName="ANY_ARRAY_INT">
					<comment>Address buffer given by ADDR/ADDM</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="OBJ" typeName="STRING">
					<comment>Object to read:'%MW','%M', etc</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
				<variables name="NUM" typeName="DINT">
					<comment>Address of the first object to read</comment>
					<attribute name="PositionPin" value="3"></attribute>
				</variables>
				<variables name="NB" typeName="INT">
					<comment>Number of consecutive objects to read</comment>
					<attribute name="PositionPin" value="4"></attribute>
				</variables>
			</inputParameters>
			<inOutParameters>
				<variables name="GEST" typeName="ANY_ARRAY_INT">
					<comment>Act.,No.,report,time-out,lgth.,array of size 4</comment>
					<attribute name="PositionPin" value="5"></attribute>
				</variables>
			</inOutParameters>
			<outputParameters>
				<variables name="RECP" typeName="ANY_ARRAY_INT">
					<comment>Reception buffer</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFBSource nameOfEFBType="TOF" version="1.00" dateTime="dt#2010-02-19-10:12:01">
		<comment>Off delay</comment>
		<attribute name="TypeDescriptiveForm" value="  The function block is used as the Off delay.  When the function block is called for the first time, the initial state of ET is &quot;0&quot;.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="IsTypeDiagnostic" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="6203"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="16D2"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="BOOL">
					<comment>Start delay</comment>
					<attribute name="PositionPin" value="1"></attribute>
					<attribute name="IsPinDiagnosticable" value="0"></attribute>
				</variables>
				<variables name="PT" typeName="TIME">
					<comment>Preset delay time</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="Q" typeName="BOOL">
					<comment>Delayed output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="ET" typeName="TIME">
					<comment>Internal time</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFBSource>
	<EFSource nameOfEFType="UINT_TO_INT" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the UINT data type to an output value  of the BOOL, BYTE, WORD, DWORD, INT, DINT, UDINT, REAL or TIME.data type.&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function,&#xA;        there will also be a few illogical conversions, e.g. UINT_TO_BOOL.&#xA;  When converting an input value of data type UINT into data type WORD,&#xA;  the bit pattern from the input is transferred to the output without being modified.&#xA;  When converting an input value of data type UINT into the data types BOOL or BYTE,&#xA;  the least significant bits of the input are transferred to the output.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="40E9"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="UINT">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="Simulation_dosage" version="0.16" dateTime="dt#2014-06-11-14:50:06">
		<comment>simulation du dosage sur une bascule</comment>
		<attribute name="TypeCodeCheckSumString" value="A5BA"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="F371"></attribute>
		<inputParameters>
			<variables name="INIT" typeName="BOOL">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="PARAM_Debit_dosage" typeName="INT">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="PARAM_Debit_vidange_basc" typeName="INT">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="PARAM_Seuil_vide" typeName="REAL">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="PARAM_Instabilite" typeName="INT">
				<comment>(prévu, mais non implémenté pour le moment)</comment>
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="PARAM_Tps_avant_coulant" typeName="TIME">
				<comment>(prévu, mais non implémenté pour le moment)</comment>
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
			<variables name="PARAM_Tps_apres_coulant" typeName="TIME">
				<comment>(prévu, mais non implémenté pour le moment)</comment>
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
			<variables name="PARAM_Delai_vidange" typeName="TIME">
				<comment>(prévu, mais non implémenté pour le moment)</comment>
				<attribute name="PositionPin" value="9"></attribute>
			</variables>
			<variables name="Code_prod" typeName="INT">
				<comment>1:gra 2:cim 3:eau_pesee 4:adj_pese 5:anh 6:produit_compte 7:add</comment>
				<attribute name="PositionPin" value="10"></attribute>
			</variables>
			<variables name="Conf_Adj_dest_cuves" typeName="ARRAY[1..20] OF INT">
				<attribute name="PositionPin" value="11"></attribute>
			</variables>
			<variables name="Conf_Eau_dest_cuves" typeName="ARRAY[1..4] OF INT">
				<attribute name="PositionPin" value="12"></attribute>
			</variables>
			<variables name="Cde_vidange_bascule" typeName="BOOL">
				<attribute name="PositionPin" value="15"></attribute>
			</variables>
			<variables name="Index_min_organe_stockage" typeName="INT">
				<attribute name="PositionPin" value="17"></attribute>
			</variables>
			<variables name="Index_max_organe_stockage" typeName="INT">
				<attribute name="PositionPin" value="18"></attribute>
			</variables>
			<variables name="PARAM_Seuil_maxi" typeName="REAL">
				<comment>Utile en mode décomptage sur la ligne additionnelle</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="Cde_rempl_organe_stock_Add" typeName="ARRAY[1..4] OF BOOL">
				<comment>Utile en mode décomptage sur la ligne additionnelle</comment>
				<attribute name="PositionPin" value="16"></attribute>
			</variables>
			<variables name="Conf_mode_decomptage" typeName="EBOOL">
				<attribute name="PositionPin" value="13"></attribute>
			</variables>
			<variables name="Conf_pesage_individuel" typeName="EBOOL">
				<attribute name="PositionPin" value="14"></attribute>
			</variables>
		</inputParameters>
		<inOutParameters>
			<variables name="Cdes_dosage" typeName="ARRAY[1..72] OF BOOL">
				<attribute name="PositionPin" value="19"></attribute>
			</variables>
			<variables name="Cde_dosage_anhydrite" typeName="EBOOL">
				<attribute name="PositionPin" value="20"></attribute>
			</variables>
			<variables name="poids_real" typeName="REAL">
				<attribute name="PositionPin" value="21"></attribute>
			</variables>
			<variables name="Poids_instantane" typeName="INT">
				<attribute name="PositionPin" value="22"></attribute>
			</variables>
			<variables name="Pds_Add" typeName="ARRAY[1..4] OF REAL">
				<comment>Contient le détail des lignes de poids de la ligne additionnelle</comment>
				<attribute name="PositionPin" value="23"></attribute>
			</variables>
			<variables name="Compteur_ppe" typeName="INTARR20">
				<comment>Nombre d'impulsions actuel sur les carte de comptage (redispatché dans le cas du comptage multiplexé) ou sur simulateur</comment>
				<attribute name="PositionPin" value="25"></attribute>
			</variables>
		</inOutParameters>
		<outputParameters>
			<variables name="Dosage_en_cours" typeName="BOOL">
				<attribute name="PositionPin" value="24"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="idx_P1" typeName="INT"></variables>
			<variables name="offset_cdes_dosage" typeName="INT"></variables>
			<variables name="idx_P2" typeName="INT"></variables>
			<variables name="Organe_en_cours" typeName="INT"></variables>
			<variables name="poids_organe_en_cours" typeName="REAL"></variables>
			<variables name="Recalc_Pds_Add_sur_org_en_cours" typeName="BOOL"></variables>
			<variables name="Recalc_Pds_Add_suite_a_vidange" typeName="BOOL"></variables>
			<variables name="Nb_Organes" typeName="INT"></variables>
			<variables name="Nb_lignes_de_poids_non_vides" typeName="INT"></variables>
			<variables name="Pds_Add_Vide" typeName="REAL"></variables>
			<variables name="Nb_lignes_de_poids_vides" typeName="INT"></variables>
		</privateLocalVariables>
		<FBProgram name="main">
			<STSource>(*IF EN THEN*)


	(* Detecter qu'un dosage est en cours *)

	Dosage_en_cours := FALSE; (* par défaut *)
	Recalc_Pds_Add_sur_org_en_cours := FALSE; (* par défaut *)
	Recalc_Pds_Add_suite_a_vidange := FALSE; (* par défaut *)

	IF (Code_prod=5) THEN
	(* Anhydrite *)
		Dosage_en_cours := Cde_dosage_anhydrite;
	ELSE
		IF (Code_prod=1) THEN
		(* Granulats *)
			offset_cdes_dosage := 0;
		ELSIF (Code_prod=2) THEN
		(* Ciments *)
			offset_cdes_dosage := 14; (* décalé de 14 car il y a 14 trémies avant *)
		ELSIF (Code_prod=3) THEN
		(* Eaux pesées *)
			offset_cdes_dosage := 22; (* décalé de 22 car il y a 14 trémies + 8 silos avant *)
		ELSIF (Code_prod=4) THEN
		(* Adjuvants pesés *)
			offset_cdes_dosage := 26; (* décalé de 26 car il y a 14 trémies + 8 silos + 4 cuves avant *)
		ELSIF (Code_prod=6) THEN
		(* Produits comptés *)
			offset_cdes_dosage := 46; (* décalé de 46 car il y a 14 trémies + 8 silos + 4 cuves + 20 cuves avant *)
		ELSIF (Code_prod=7) THEN
		(* Ligne Additionnelle *)
			offset_cdes_dosage := 66; (* décalé de 46 car il y a 14 trémies + 8 silos + 4 cuves + 20 cuves + 20 pompes avant *)
		END_IF;
		FOR idx_P2:=Index_min_organe_stockage TO Index_max_organe_stockage BY 1 DO
			idx_P1 := idx_P2 + offset_cdes_dosage;
			IF Cdes_dosage[idx_P1] THEN
				IF (Code_prod=3) THEN
				(* Eaux pesées *)
					IF (Conf_Eau_dest_cuves[idx_P2] = 0) THEN
					(* 0: pesé *)
						Dosage_en_cours := TRUE;
						Organe_en_cours := idx_P2;
						Cdes_dosage[idx_P1] := FALSE; (* évite le dosage physique *)
					END_IF;
				ELSIF (Code_prod=4) THEN
				(* Adjuvants pesés *)
					IF (Conf_Adj_dest_cuves[idx_P2] = 0) THEN
					(* 0: pesé *)
						Dosage_en_cours := TRUE;
						Organe_en_cours := idx_P2;
						Cdes_dosage[idx_P1] := FALSE; (* évite le dosage physique *)
					END_IF;
				ELSIF (Code_prod=6) THEN
				(* Produits comptés *)
					IF (Conf_Adj_dest_cuves[idx_P2] &lt;&gt; 0) 
					OR (Conf_Eau_dest_cuves[idx_P2] &lt;&gt; 0) THEN
					(* &lt;&gt;0: cuve associée à la pompe *)
						Dosage_en_cours := TRUE;
						Organe_en_cours := idx_P2;
						Cdes_dosage[idx_P1] := FALSE; (* évite le dosage physique *)

					END_IF;

				ELSE
		       			Dosage_en_cours := TRUE;
					Organe_en_cours := idx_P2;
					Cdes_dosage[idx_P1] := FALSE; (* évite le dosage physique *)
				END_IF;
			END_IF;
		END_FOR;
	END_IF;




	(* Initialisation *)
	IF (INIT) THEN
		(* Init du poids *)
		IF (NOT Conf_mode_decomptage) THEN
		(* Mode "à Comptage" (classique) *)
			poids_real := PARAM_seuil_vide;
		ELSE
		(* Mode "à Décomptage" *)
			poids_real := PARAM_Seuil_maxi;
		END_IF;
	END_IF;

	(* Dosage *)
	IF Dosage_en_cours THEN
		IF (NOT Conf_mode_decomptage) THEN
		(* Mode "à Comptage" (classique) *)
			(* =&gt; Simuler augmentation du poids *)
			poids_real := poids_real + 1.0*(INT_TO_REAL(PARAM_Debit_dosage)/100.0);
		ELSE
		(* Mode "à Décomptage" *)
			(* =&gt; Simuler diminution du poids *)
			poids_real := poids_real - 1.0*(INT_TO_REAL(PARAM_Debit_dosage)/100.0);
		END_IF;
		IF (Conf_pesage_individuel) THEN
		(* Mode "à Décomptage" &gt; "n lignes de poids" *)
			(* =&gt; Mettre à jour les lignes de poids *)
			Recalc_Pds_Add_sur_org_en_cours := TRUE;
		END_IF;
		
                Compteur_ppe[Organe_en_cours]:= Compteur_ppe[Organe_en_cours] + PARAM_Debit_dosage;
                
	END_IF;

	(* Vidange *)
	IF Cde_vidange_bascule
	AND (poids_real&gt;=PARAM_seuil_vide)
	THEN
		IF (NOT Conf_mode_decomptage) THEN
	 	(* Impacte uniquement le mode "à Comptage" (classique) *)
			(* =&gt; Simuler diminution du poids *)
			poids_real := poids_real - 1.0*(INT_TO_REAL(PARAM_Debit_vidange_basc)/100.0);
			Recalc_Pds_Add_suite_a_vidange := TRUE;
		END_IF;
	END_IF;

	(* Remplissage d'un organe de stockage *)
	IF (Conf_mode_decomptage) THEN
	(* Impacte uniquement le mode "à Décomptage" *)
		FOR idx_P2:=Index_min_organe_stockage TO Index_max_organe_stockage BY 1 DO
			IF (Cde_rempl_organe_stock_Add[idx_P2])
			AND (Pds_Add[idx_P2]&lt;=32000.0) THEN
				IF (Code_prod=7) THEN (* (Géré uniquement pour la ligne additionnelle) *)
					(* =&gt; Simuler une augmentation du poids *)
					poids_real := poids_real + 3.0*(INT_TO_REAL(PARAM_Debit_dosage)/100.0);
					(* =&gt; Mettre à jour les lignes de poids *)
					Organe_en_cours := idx_P2;
					Recalc_Pds_Add_sur_org_en_cours := TRUE;
				END_IF;
			END_IF;
		END_FOR;
	END_IF;



	(* Création des poids à partir du "poids_real" *)

	(* Mise à jour du poids instantané *)
	Poids_instantane := REAL_TO_INT(poids_real);

	(* Mise à jour des lignes de poids (Pds_Add[]) *)
	IF (Code_prod=7) THEN (* (Géré uniquement pour la ligne additionnelle) *)
		IF (Conf_pesage_individuel) THEN
		(* Mode "à Décomptage" &gt; "n lignes de poids" *)
			(* - Calculs préparatoires *)
			Nb_Organes := ((Index_max_organe_stockage - Index_min_organe_stockage) + 1);
			IF (Nb_Organes &gt; 0) THEN (* Ce test évite la division par zéro *)
				Pds_Add_Vide := PARAM_seuil_vide / INT_TO_REAL(Nb_Organes);
			END_IF;
			(* - Mise à jour de Pds_Add[] *)
			IF (INIT) 
			OR ((poids_real &lt;= PARAM_seuil_vide) AND (NOT Conf_mode_decomptage)) THEN
				(* =&gt; Répartir le poids équitablement entre les différentes lignes de poids *)
				FOR idx_P2:=Index_min_organe_stockage TO Index_max_organe_stockage BY 1 DO
					Pds_Add[idx_P2] := poids_real / INT_TO_REAL(Nb_Organes);
				END_FOR;
			ELSIF (Recalc_Pds_Add_suite_a_vidange) THEN
				(* On met à jour les lignes de poids si le poids de la bascule a évolué suite à une vidange *)
				(* Note R.C. 08/11/2011 : Ce cas ne concerne que les modes "comptage"+"n lignes de poids" ce qui *)
				(* n'est pas une configuration gérée, mais cela est utile pour des faire tests sur les 'n lignes de poids'. *)
				(* - Compter le nombre de lignes de poids vides et non vides *)
				Nb_lignes_de_poids_non_vides := 0;
				Nb_lignes_de_poids_vides := 0;
				FOR idx_P2:=Index_min_organe_stockage TO Index_max_organe_stockage BY 1 DO
					IF (Pds_Add[idx_P2] &gt; Pds_Add_Vide) THEN
						Nb_lignes_de_poids_non_vides := Nb_lignes_de_poids_non_vides + 1;
					ELSE
						Nb_lignes_de_poids_vides := Nb_lignes_de_poids_vides + 1;
					END_IF;
				END_FOR;
				(* - Répartir le poids entre les lignes de poids non vides *)
				FOR idx_P2:=Index_min_organe_stockage TO Index_max_organe_stockage BY 1 DO
					IF (Pds_Add[idx_P2] &gt; Pds_Add_Vide) THEN
						Pds_Add[idx_P2] := (poids_real - (INT_TO_REAL(Nb_lignes_de_poids_vides) * Pds_Add_Vide)) / INT_TO_REAL(Nb_lignes_de_poids_non_vides);
					ELSE
						Pds_Add[idx_P2] := Pds_Add_Vide;
					END_IF;
				END_FOR;
			ELSIF (Recalc_Pds_Add_sur_org_en_cours) THEN
				(* On détermine le poids restant sur l'organe de stockage en cours *)	
				(* en soustrayant au poids_real les poids des autres organes *)
				poids_organe_en_cours := poids_real; (* Init par défaut *)
				FOR idx_P2:=Index_min_organe_stockage TO Index_max_organe_stockage BY 1 DO
					IF (idx_P2 &lt;&gt; Organe_en_cours) THEN
						poids_organe_en_cours := poids_organe_en_cours - pds_Add[idx_P2];
					END_IF;
				END_FOR;
				Pds_Add[Organe_en_cours] := poids_organe_en_cours;
			END_IF;
		ELSE
		(* Mode "à Décomptage" &gt; "1 ligne de poids" *)
			(* =&gt; Mettre tout le poids sur la ligne de poids #1  *)
			Pds_Add[1] := poids_real;
			Pds_Add[2] := 0.0;
			Pds_Add[3] := 0.0;
			Pds_Add[4] := 0.0;
		END_IF;
	END_IF;


(*END_IF;*)
</STSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="SHR" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>Shift right</comment>
		<attribute name="TypeDescriptiveForm" value="  This function shifts the bit sequence at the input (IN) to the right by n bits (N).&#xA;  Zeros are filled in from the left.&#xA;&#xA;  The data types of the input value (IN) and the output value (OUT) must be identical.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="7F09"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="ANY_BIT">
					<comment>Bit sequence for shifting</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="N" typeName="UINT">
					<comment>No. of spaces to shift</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_BIT">
					<comment>Shifted bit sequence</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="STOCK5" version="2.04" dateTime="dt#2007-11-09-11:35:37">
		<attribute name="TypeProtectionLevel" value="2#0000_0000"></attribute>
		<attribute name="TypeCodeCheckSumString" value="852E"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="5875"></attribute>
		<inputParameters>
			<variables name="STOCK_A" typeName="BOOL">
				<comment>Stockage en automatique</comment>
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
			<variables name="CD_DO_G1" typeName="BOOL">
				<comment>Commande de dosage de granulats</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="P_INSTAN" typeName="INT">
				<comment>poids instantané sur la balance</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="T_STAB" typeName="TIME">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="T_M_STAB" typeName="TIME">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="E_STAB" typeName="INT">
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="FIN_DOS" typeName="BOOL">
				<attribute name="PositionPin" value="13"></attribute>
			</variables>
			<variables name="P_ENTREE" typeName="UDINT">
				<attribute name="PositionPin" value="14"></attribute>
			</variables>
			<variables name="BOITE_N" typeName="BOOL">
				<comment>=1 =&gt; boite dévalidée</comment>
				<attribute name="PositionPin" value="15"></attribute>
			</variables>
			<variables name="STOCK_ML" typeName="BOOL">
				<attribute name="PositionPin" value="16"></attribute>
			</variables>
			<variables name="STOCK_MP" typeName="BOOL">
				<attribute name="PositionPin" value="17"></attribute>
			</variables>
			<variables name="STOCK_M" typeName="BOOL">
				<attribute name="PositionPin" value="18"></attribute>
			</variables>
			<variables name="STOCK_AA" typeName="BOOL">
				<attribute name="PositionPin" value="19"></attribute>
			</variables>
			<variables name="MODE" typeName="BOOL">
				<comment>connecter en auto ou manu log ou pupitre</comment>
				<attribute name="PositionPin" value="20"></attribute>
			</variables>
			<variables name="MODE_M" typeName="BOOL">
				<comment>ne connecter qu'en mode manu log et pupitre</comment>
				<attribute name="PositionPin" value="21"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="DEPTSTAB" typeName="BOOL">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="STABLE" typeName="BOOL">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="P_ENCOUR" typeName="INT">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="P_SORTIE" typeName="UDINT">
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
			<variables name="MEM_DOSA" typeName="BOOL">
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="poids_depart" typeName="INT"></variables>
			<variables name="poids_nul" typeName="INT"></variables>
			<variables name="memoire_dosage" typeName="BOOL"></variables>
			<variables name="FBI_1_11" typeName="STABILI"></variables>
			<variables name="FBI_1_13" typeName="TON"></variables>
		</privateLocalVariables>
		<FBProgram name="stoc">
			<LDSource nbColumns="13">
				<networkLD>
					<typeLine>
						<emptyCell nbCells="8"></emptyCell>
						<FFBBlock instanceName=".1.213" typeName="MOVE" additionnalPinNumber="0" enEnO="true" width="10" height="3">
							<objPosition posX="8" posY="0"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN" effectiveParameter="p_instan"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT" effectiveParameter="poids_depart"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="mode"></contact>
						<HLink nbCells="5"></HLink>
						<contact typeContact="PContact" contactVariableName="memoire_dosage"></contact>
						<HLink nbCells="1"></HLink>
						<emptyCell nbCells="5"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="2"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="mode"></contact>
						<HLink nbCells="1"></HLink>
						<contact typeContact="openContact" contactVariableName="cd_do_g1"></contact>
						<HLink nbCells="3"></HLink>
						<coil typeCoil="setCoil" coilVariableName="memoire_dosage"></coil>
						<HLink nbCells="6"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="mode_m"></contact>
						<contact typeContact="openContact" contactVariableName="memoire_dosage"></contact>
						<contact typeContact="NContact" contactVariableName="boite_n"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="7"></HLink>
						</shortCircuit>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="9"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="mode"></contact>
						<contact typeContact="openContact" contactVariableName="memoire_dosage"></contact>
						<HLink nbCells="1"></HLink>
						<contact typeContact="openContact" contactVariableName="fin_dos"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="6"></HLink>
						</shortCircuit>
						<HLink nbCells="1"></HLink>
						<coil typeCoil="coil" coilVariableName="stable"></coil>
						<HLink nbCells="1"></HLink>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="7"></emptyCell>
						<FFBBlock instanceName="FBI_1_11" typeName="STABILI" additionnalPinNumber="0" enEnO="false" width="13" height="8">
							<objPosition posX="7" posY="9"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="POIDS_I" effectiveParameter="p_instan"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="T_STAB" effectiveParameter="t_stab"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="VALIDE"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PR_DEF"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="E_STAB" effectiveParameter="e_stab"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="BAS_STAB"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="9"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="3"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="closedContact" contactVariableName="mode"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<HLink nbCells="2"></HLink>
						<contact typeContact="openContact" contactVariableName="memoire_dosage"></contact>
						<shortCircuit>
							<VLink></VLink>
							<HLink nbCells="1"></HLink>
						</shortCircuit>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="mode_m"></contact>
						<contact typeContact="closedContact" contactVariableName="cd_do_g1"></contact>
						<emptyCell nbCells="3"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="5"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="5"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="5"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="3"></emptyCell>
						<FFBBlock instanceName="FBI_1_13" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="9" posY="18"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="t_m_stab"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="2"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="5"></emptyCell>
						<VLink></VLink>
						<emptyCell nbCells="7"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="6"></emptyCell>
						<contact typeContact="closedContact" contactVariableName="stable"></contact>
						<emptyCell nbCells="4"></emptyCell>
						<coil typeCoil="coil" coilVariableName="deptstab"></coil>
						<HLink nbCells="1"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="2"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="2"></emptyCell>
						<FFBBlock instanceName=".1.146" typeName="SUB" additionnalPinNumber="0" enEnO="true" width="9" height="4">
							<objPosition posX="2" posY="23"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="p_instan"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="poids_depart"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT" effectiveParameter="p_encour"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="9"></emptyCell>
					</typeLine>
					<typeLine>
						<HLink nbCells="1"></HLink>
						<contact typeContact="openContact" contactVariableName="memoire_dosage"></contact>
						<emptyCell nbCells="11"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="3"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="3"></emptyCell>
						<FFBBlock instanceName=".1.145" typeName="LT" additionnalPinNumber="0" enEnO="true" width="9" height="4">
							<objPosition posX="3" posY="28"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="p_encour"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="poids_nul"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="8"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="7"></emptyCell>
						<FFBBlock instanceName=".1.144" typeName="MOVE" additionnalPinNumber="0" enEnO="true" width="10" height="3">
							<objPosition posX="7" posY="29"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN" effectiveParameter="poids_nul"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT" effectiveParameter="p_encour"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="4"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="3"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="stable"></contact>
						<HLink nbCells="8"></HLink>
						<coil typeCoil="resetCoil" coilVariableName="memoire_dosage"></coil>
						<HLink nbCells="3"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="1"></emptyLine>
					</typeLine>
					<typeLine>
						<emptyCell nbCells="2"></emptyCell>
						<FFBBlock instanceName=".1.168" typeName="INT_TO_UDINT" additionnalPinNumber="0" enEnO="true" width="14" height="3">
							<objPosition posX="2" posY="35"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN" effectiveParameter="p_encour"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="1"></emptyCell>
						<FFBBlock instanceName=".1.169" typeName="ADD" additionnalPinNumber="0" enEnO="true" width="12" height="4">
							<objPosition posX="5" posY="35"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN1"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="p_entree"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="OUT" effectiveParameter="p_sortie"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
						<emptyCell nbCells="6"></emptyCell>
					</typeLine>
					<typeLine>
						<contact typeContact="PContact" contactVariableName="stable"></contact>
						<emptyCell nbCells="12"></emptyCell>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="3"></emptyLine>
					</typeLine>
					<typeLine>
						<contact typeContact="openContact" contactVariableName="mem_dosa"></contact>
						<HLink nbCells="7"></HLink>
						<coil typeCoil="coil" coilVariableName="mem_dosa"></coil>
						<HLink nbCells="4"></HLink>
					</typeLine>
					<typeLine>
						<emptyLine nbRows="59"></emptyLine>
					</typeLine>
					<linkFB>
						<linkSource parentObjectName="" pinName="OUT1">
							<objPosition posX="5" posY="14"></objPosition>
						</linkSource>
						<linkDestination parentObjectName="FBI_1_11" pinName="VALIDE">
							<objPosition posX="7" posY="14"></objPosition>
						</linkDestination>
					</linkFB>
					<linkFB>
						<linkSource parentObjectName="" pinName="OUT1">
							<objPosition posX="0" posY="36"></objPosition>
						</linkSource>
						<linkDestination parentObjectName=".1.168" pinName="EN">
							<objPosition posX="2" posY="36"></objPosition>
						</linkDestination>
					</linkFB>
					<linkFB>
						<linkSource parentObjectName=".1.168" pinName="OUT">
							<objPosition posX="3" posY="37"></objPosition>
						</linkSource>
						<linkDestination parentObjectName=".1.169" pinName="IN1">
							<objPosition posX="5" posY="37"></objPosition>
						</linkDestination>
					</linkFB>
					<linkFB>
						<linkSource parentObjectName=".1.168" pinName="ENO">
							<objPosition posX="3" posY="36"></objPosition>
						</linkSource>
						<linkDestination parentObjectName=".1.169" pinName="EN">
							<objPosition posX="5" posY="36"></objPosition>
						</linkDestination>
					</linkFB>
					<linkFB>
						<linkSource parentObjectName="" pinName="OUT29">
							<objPosition posX="0" posY="29"></objPosition>
						</linkSource>
						<linkDestination parentObjectName=".1.145" pinName="EN">
							<objPosition posX="3" posY="29"></objPosition>
						</linkDestination>
					</linkFB>
					<linkFB>
						<linkSource parentObjectName="FBI_1_13" pinName="Q">
							<objPosition posX="10" posY="20"></objPosition>
						</linkSource>
						<linkDestination parentObjectName="" pinName="IN1">
							<objPosition posX="11" posY="20"></objPosition>
						</linkDestination>
					</linkFB>
					<linkFB>
						<linkSource parentObjectName="" pinName="OUT1">
							<objPosition posX="1" posY="24"></objPosition>
						</linkSource>
						<linkDestination parentObjectName=".1.146" pinName="EN">
							<objPosition posX="2" posY="24"></objPosition>
						</linkDestination>
					</linkFB>
					<linkFB>
						<linkSource parentObjectName=".1.145" pinName="OUT">
							<objPosition posX="4" posY="30"></objPosition>
						</linkSource>
						<linkDestination parentObjectName=".1.144" pinName="EN">
							<objPosition posX="7" posY="30"></objPosition>
						</linkDestination>
					</linkFB>
					<linkFB>
						<linkSource parentObjectName="" pinName="OUT1">
							<objPosition posX="6" posY="20"></objPosition>
						</linkSource>
						<linkDestination parentObjectName="FBI_1_13" pinName="IN">
							<objPosition posX="9" posY="20"></objPosition>
						</linkDestination>
					</linkFB>
					<linkFB>
						<linkSource parentObjectName="FBI_1_11" pinName="BAS_STAB">
							<objPosition posX="8" posY="11"></objPosition>
						</linkSource>
						<linkDestination parentObjectName="" pinName="IN2">
							<objPosition posX="9" posY="11"></objPosition>
						</linkDestination>
					</linkFB>
					<textBox width="10" height="1">On utilise front descendant "devalidation _boite_noire" pour dire dosage terminé quand on est en pupitre
   MODIF MD 07/11/2007 : ajout de memoire_dosage à la ligne suivante pour empecher un boudle passage à stable lors de la dévalidation BN
    <objPosition posX="0" posY="5"></objPosition>
					</textBox>
					<textBox width="5" height="1">Un front sur stabilité, initialise la memorisation du dosage
    <objPosition posX="0" posY="32"></objPosition>
					</textBox>
					<textBox width="6" height="2">si on est plus en mode auto, mais qu'on à commancé un dosage 
("memoire_dosage"=1), on attend la stabilité
    <objPosition posX="0" posY="11"></objPosition>
					</textBox>
					<textBox width="4" height="1">Evolution du poids sur la bascule :
    <objPosition posX="0" posY="22"></objPosition>
					</textBox>
					<textBox width="9" height="1">On utilise "pese_ok" du dfb pesa pour dire dosage terminé quand on est en auto.
-&gt; qui devient "fin_dos" dans le dfb.
    <objPosition posX="0" posY="7"></objPosition>
					</textBox>
					<textBox width="5" height="1">un seul le mode (auto, monu log, ou pupitre) est connecté à une entrée.
    <objPosition posX="0" posY="3"></objPosition>
					</textBox>
				</networkLD>
			</LDSource>
		</FBProgram>
	</FBSource>
	<DDTSource DDTName="INTARR24" version="0.00" dateTime="dt#2010-01-12-12:23:47">
		<attribute name="TypeSignatureCheckSumString" value="9E7B"></attribute>
		<array>ARRAY[1..24] OF INT</array>
	</DDTSource>
	<DDTSource DDTName="INTARR48" version="0.00" dateTime="dt#2010-01-12-12:23:52">
		<attribute name="TypeSignatureCheckSumString" value="E4AD"></attribute>
		<array>ARRAY[1..48] OF INT</array>
	</DDTSource>
	<EFBSource nameOfEFBType="R_TRIG" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>Rising edge detection</comment>
		<attribute name="TypeDescriptiveForm" value="  This function block is used for the detection of rising edges 0 -&gt; 1.&#xA;  Output Q becomes &quot;1&quot; if there is a transition from &quot;0&quot; to &quot;1&quot; at the CLK input.&#xA;  The output remains at &quot;1&quot; from one function block execution to the next (one cycle);&#xA;  the output subsequently returns to &quot;0&quot;.&#xA;&#xA;  Note: This function block is not available in the LD (Ladder Diagram) programming language,&#xA;        since the same functionality can be achieved there with the &quot;Contact - positive edge&quot;.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="IsTypeDiagnostic" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="323D"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="576B"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="CLK" typeName="BOOL">
					<comment>Clock input</comment>
					<attribute name="PositionPin" value="1"></attribute>
					<attribute name="IsPinDiagnosticable" value="0"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="Q" typeName="BOOL">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFBSource>
	<EFSource nameOfEFType="INT_TO_DINT" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the INT data type to a  BOOL, BYTE, WORD, DWORD, DINT, UINT UDINT, REAL or TIME output value.&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function,&#xA;        there will also be a few illogical conversions, e.g. INT_TO_BOOL.&#xA;  Negative input values cannot be converted into data types UINT, UDINT or TIME.&#xA;  When converting an input value from the data type INT into data type WORD,&#xA;  the bit pattern from the input is transferred to the output without being modified.&#xA;  When converting an input value of data type INT into the data types BOOL or BYTE,&#xA;  the least significant bits of the input are transferred to the output.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="CE5B"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="INT">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="DINT">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="GE_DINT" version="1.00" dateTime="dt#2010-02-19-09:12:06">
		<comment>Greater than or equal to</comment>
		<attribute name="TypeDescriptiveForm" value="  The function checks the values of successive inputs for a decreasing sequence or equality.  The data types of all input values must be identical.&#xA;  The number of inputs can be increased (max 32).&#xA;  STRING variables are compared using the alphabet; variables at the end of the alphabet are&#xA;  higher priority expressions than those at the front.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="AD45"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="DINT">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="LT_INT" version="1.00" dateTime="dt#2010-02-19-09:12:06">
		<comment>Less than</comment>
		<attribute name="TypeDescriptiveForm" value="  The function checks the values of successive inputs for an increasing sequence or equality.  The data types of all input values must be identical.&#xA;  The number of inputs can be increased (max 32).&#xA;  STRING variables are compared using the alphabet; variables at the end of the alphabet are&#xA;  higher priority expressions than those at the front.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="97B0"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="INT">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="UDINT_TO_INT" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the UDINT data type to an output value  of the BOOL, BYTE, WORD, DWORD, INT, DINT, UINT, REAL or TIME data type.&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function,&#xA;        there will also be a few illogical conversions, e.g. UDINT_TO_BOOL.&#xA;  When converting the data type DINT to the BOOL, BYTE, WORD, INT or UINT data type,&#xA;  the least significant bits of the input value are transferred to the output.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="AD34"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="UDINT">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="MOVE_INT_ARINT" version="1.00" dateTime="dt#2010-02-19-09:25:24">
		<comment>Assignment of a single length integer table with a single length integer</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="74E6"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="AFB1"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="INT">
					<comment>Value to be moved</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_ARRAY_INT">
					<comment>Integer out tables</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="MUL" version="1.00" dateTime="dt#2010-02-19-09:59:13">
		<comment>Multiplication</comment>
		<attribute name="TypeDescriptiveForm" value="  The function multiplies the input values and assigns the result to the output.&#xA;  The data types of all input values and output values must be identical.&#xA;&#xA;  The number of inputs can be increased (max 32).&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="9411"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_NUM">
					<comment>Factor (Extensible)</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_NUM">
					<comment>Product</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="TIMEARR6" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="9BC2"></attribute>
		<array>ARRAY[1..6] OF TIME</array>
	</DDTSource>
	<EFBSource nameOfEFBType="CTU_DINT" version="1.00" dateTime="dt#2010-02-19-10:12:00">
		<comment>Up counter DINT values</comment>
		<attribute name="TypeDescriptiveForm" value="  This function block is used for counting DINT values upward.  A &quot;1&quot; signal at the R input causes the value &quot;0&quot; to be assigned to the CV output.&#xA;  With each transition from &quot;0&quot; to &quot;1&quot; at the CU input, the value of CV is incremented by 1.&#xA;  When CV is &gt;= PV, the Q output is set to &quot;1&quot;.&#xA;&#xA;  Note: The counter only works to the maximum values of the data type being used.&#xA;        No overflow occurs.&#xA;&#xA;  This EFB conforms to IEC 61131-3.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="IsTypeDiagnostic" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="5B45"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="A2B8"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="CU" typeName="BOOL">
					<comment>Count trigger input</comment>
					<attribute name="PositionPin" value="1"></attribute>
					<attribute name="IsPinDiagnosticable" value="0"></attribute>
				</variables>
				<variables name="R" typeName="BOOL">
					<comment>Reset</comment>
					<attribute name="PositionPin" value="2"></attribute>
					<attribute name="IsPinDiagnosticable" value="0"></attribute>
				</variables>
				<variables name="PV" typeName="DINT">
					<comment>Preset value</comment>
					<attribute name="PositionPin" value="3"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="Q" typeName="BOOL">
					<comment>Indicator output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="CV" typeName="DINT">
					<comment>Count value</comment>
					<attribute name="PositionPin" value="3"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFBSource>
	<DDTSource DDTName="Diag_dataset" version="0.01" dateTime="dt#2011-05-16-13:20:05">
		<attribute name="TypeSignatureCheckSumString" value="7114"></attribute>
		<structure>
			<variables name="VAL_INT_1" typeName="INT"></variables>
			<variables name="VAL_INT_2" typeName="INT"></variables>
			<variables name="VAL_DINT" typeName="DINT"></variables>
			<variables name="VAL_BOOL_1" typeName="BOOL"></variables>
			<variables name="VAL_BOOL_2" typeName="BOOL"></variables>
			<variables name="VAL_BOOL_3" typeName="BOOL"></variables>
			<variables name="VAL_REAL" typeName="REAL"></variables>
			<variables name="VAL_TIME" typeName="TIME"></variables>
		</structure>
	</DDTSource>
	<EFSource nameOfEFType="WORD_TO_INT" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the WORD data type to a  BOOL, BYTE, DWORD, INT, DINT, UINT, UDINT, REAL or TIME data type.&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function,&#xA;        there will also be a few illogical conversions, e.g. WORD_TO_TIME.&#xA;        It must be noted here, that the input byte pattern will be transferred&#xA;        into the most significant word of the output word.&#xA;  When converting the WORD data type to the DWORD, DINT, UDINT, REAL or TIME data type,&#xA;  the bit pattern of the input is transferred to the least significant bits of the output.&#xA;  The most significant bits of the output are set to zero.&#xA;  When converting the data type WORD to the data type BOOL or BYTE,&#xA;  the least significant bits of the input value are transferred to the output.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="163A"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="WORD">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="INT">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="ADDM" version="1.02" dateTime="dt#2010-02-19-10:04:40">
		<comment>Reads topologic address</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="4051"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="C057"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="STRING">
					<comment>String containing the topologic address</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ADDM_TYPE">
					<comment>This is the output pin</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="OR" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>OR function</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="198D"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_BIT">
					<comment>Input bit sequence (Extensible)</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_BIT">
					<comment>Output bit sequence</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="IDE_channel_ARR12" version="0.00" dateTime="dt#2007-04-12-14:06:22">
		<comment>Contenu des données d'un IDE 500-I</comment>
		<attribute name="TypeSignatureCheckSumString" value="204C"></attribute>
		<array>ARRAY[1..12] OF IDE_channel</array>
	</DDTSource>
	<DDTSource DDTName="IDE_channel" version="0.01" dateTime="dt#2007-04-12-13:52:02">
		<comment>Données d'une voie</comment>
		<attribute name="TypeSignatureCheckSumString" value="DBF2"></attribute>
		<structure>
			<variables name="Etat" typeName="INT">
				<comment>Mot d'etat</comment>
			</variables>
			<variables name="Pds1" typeName="INT">
				<comment>Mot 1 (poids fort)</comment>
			</variables>
			<variables name="Pds2" typeName="INT">
				<comment>Mot 2 (poids faible)</comment>
			</variables>
		</structure>
	</DDTSource>
	<EFBSource nameOfEFBType="CTU" version="1.00" dateTime="dt#2010-02-19-10:12:00">
		<comment>Up counter only INT values</comment>
		<attribute name="TypeDescriptiveForm" value="  This function block is used for counting INT values upward.  A &quot;1&quot; signal at the R input causes the value &quot;0&quot; to be assigned to the CV output.&#xA;  With each transition from &quot;0&quot; to &quot;1&quot; at the CU input, the value of CV is incremented by 1.&#xA;  When CV is &gt;= PV, the Q output is set to &quot;1&quot;.&#xA;&#xA;  Note: The counter only works to the maximum values of the data type being used.&#xA;        No overflow occurs.&#xA;&#xA;  This function block specification is defined in IEC 61131-3 and&#xA;  only works with the INT data type.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="IsTypeDiagnostic" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="36F2"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="6526"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="CU" typeName="BOOL">
					<comment>Trigger input</comment>
					<attribute name="PositionPin" value="1"></attribute>
					<attribute name="IsPinDiagnosticable" value="0"></attribute>
				</variables>
				<variables name="R" typeName="BOOL">
					<comment>Reset</comment>
					<attribute name="PositionPin" value="2"></attribute>
					<attribute name="IsPinDiagnosticable" value="0"></attribute>
				</variables>
				<variables name="PV" typeName="INT">
					<comment>Preset value</comment>
					<attribute name="PositionPin" value="3"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="Q" typeName="BOOL">
					<comment>Indicator output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="CV" typeName="INT">
					<comment>Count value</comment>
					<attribute name="PositionPin" value="3"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFBSource>
	<EFSource nameOfEFType="REAL_TO_DINT" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the REAL data type to a  BOOL, BYTE, WORD , DWORD, INT, DINT, UINT, UDINT data type or into the TIME data type.&#xA;&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function,&#xA;        there will also be a few illogical conversions, e.g. REAL_TO_BOOL.&#xA;&#xA;  When converting to BOOL, BYTE, WORD, INT or UINT, the least significant bits of the&#xA;  input value are transferred to the output.&#xA;&#xA;  When converting to INT, DINT, UINT, UDINT and TIME, the IEC 559 rules for rounding are applied.&#xA;&#xA;  The following example shows how the IEC 559 rounding is applied.&#xA;  1.4 =&gt; 1&#xA;  1.5 =&gt; 2&#xA;  2.4 =&gt; 2&#xA;  2.5 =&gt; 2&#xA;  2.6 =&gt; 3&#xA;&#xA;  Negative input values can not be converted into data types UINT, UDINT or TIME.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="B38E"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="REAL">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="DINT">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="TIMEARR20" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="36D9"></attribute>
		<array>ARRAY[1..20] OF TIME</array>
	</DDTSource>
	<EFSource nameOfEFType="XOR" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>Exclusive OR function</comment>
		<attribute name="TypeDescriptiveForm" value="  The function links (acc. to exclusive OR logic) the bit sequences at the inputs  and returns the result at the output. The operation is performed bit-by-bit.&#xA;&#xA;  The data types of all input values and output values must be identical.&#xA;&#xA;  The number of inputs can be increased (max 32).&#xA;&#xA;  Formula:     OUT = IN1 XOR IN2 XOR .. XOR INn&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="198D"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_BIT">
					<comment>Input bit sequence (Extensible)</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_BIT">
					<comment>Output bit sequence</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="Diag_Horodatage_v3" version="0.25" dateTime="dt#2012-07-11-20:39:22">
		<attribute name="TypeCodeCheckSumString" value="9B49"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="9B67"></attribute>
		<inputParameters>
			<variables name="IN_01_BOOL" typeName="EBOOL">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="1"></attribute>
				<variableInit value="FALSE"></variableInit>
			</variables>
			<variables name="IN_02_BOOL" typeName="EBOOL">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="2"></attribute>
				<variableInit value="FALSE"></variableInit>
			</variables>
			<variables name="IN_03_BOOL" typeName="EBOOL">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="3"></attribute>
				<variableInit value="FALSE"></variableInit>
			</variables>
			<variables name="IN_04_BOOL" typeName="EBOOL">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="4"></attribute>
				<variableInit value="FALSE"></variableInit>
			</variables>
			<variables name="IN_05_BOOL" typeName="EBOOL">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="5"></attribute>
				<variableInit value="FALSE"></variableInit>
			</variables>
			<variables name="IN_06_BOOL" typeName="EBOOL">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="6"></attribute>
				<variableInit value="FALSE"></variableInit>
			</variables>
			<variables name="IN_07_BOOL" typeName="EBOOL">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="7"></attribute>
				<variableInit value="FALSE"></variableInit>
			</variables>
			<variables name="IN_08_BOOL" typeName="EBOOL">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="8"></attribute>
				<variableInit value="FALSE"></variableInit>
			</variables>
			<variables name="IN_09_BOOL" typeName="EBOOL">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="9"></attribute>
				<variableInit value="FALSE"></variableInit>
			</variables>
			<variables name="IN_10_BOOL" typeName="EBOOL">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="10"></attribute>
				<variableInit value="FALSE"></variableInit>
			</variables>
			<variables name="IN_11_INT" typeName="INT">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="11"></attribute>
				<variableInit value="0"></variableInit>
			</variables>
			<variables name="IN_12_INT" typeName="INT">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="12"></attribute>
				<variableInit value="0"></variableInit>
			</variables>
			<variables name="IN_13_INT" typeName="INT">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="13"></attribute>
				<variableInit value="0"></variableInit>
			</variables>
			<variables name="IN_14_INT" typeName="INT">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="14"></attribute>
				<variableInit value="0"></variableInit>
			</variables>
			<variables name="IN_15_INT" typeName="INT">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="15"></attribute>
				<variableInit value="0"></variableInit>
			</variables>
			<variables name="IN_16_INT" typeName="INT">
				<comment>Any change on this input will be recorded</comment>
				<attribute name="PositionPin" value="16"></attribute>
				<variableInit value="0"></variableInit>
			</variables>
			<variables name="INIT" typeName="EBOOL">
				<comment>If TRUE : initialise the outputs</comment>
				<attribute name="PositionPin" value="18"></attribute>
				<variableInit value="FALSE"></variableInit>
			</variables>
			<variables name="DATASET" typeName="Diag_dataset">
				<comment>Value to be recorded on an edge</comment>
				<attribute name="PositionPin" value="21"></attribute>
			</variables>
			<variables name="HALT_CONDITION" typeName="EBOOL">
				<comment>Sets HALT mode ON if this condition has been TRUE</comment>
				<attribute name="PositionPin" value="19"></attribute>
				<variableInit value="FALSE"></variableInit>
			</variables>
			<variables name="HALT_NB_MAX_EVENTS" typeName="INT">
				<comment>Sets HALT mode ON if the number of events recorded reaches this limit. Set this input to 0 to make it unactive.</comment>
				<attribute name="PositionPin" value="20"></attribute>
				<variableInit value="0"></variableInit>
			</variables>
			<variables name="INPUTS_TAG" typeName="ARRAY[1..16] OF string[40]">
				<comment>Give a name to each input to make the (output) event list more readable</comment>
				<attribute name="PositionPin" value="17"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="OUT" typeName="ARRAY[0..49] OF Diag_timestamp">
				<comment>List of timestamped events (FIFO, most recent on the top)</comment>
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="HALT" typeName="EBOOL">
				<comment>HALT -&gt; No more event will be recorded until an INIT is made</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="TIME_SINCE_LAST_EVT" typeName="TIME">
				<comment>Elapsed time since the last event record</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="CPT_EVT" typeName="INT">
				<comment>Event counter</comment>
				<attribute name="PositionPin" value="2"></attribute>
				<variableInit value="0"></variableInit>
			</variables>
			<variables name="TIME_DAY" typeName="TOD">
				<comment>Time of day of the last call of the DFB instance</comment>
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="CYCLE_NUM" typeName="UDINT">
				<comment>Cycle # of the last call of the DFB</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="Inputs_BOOL" typeName="ARRAY[1..10] OF EBOOL"></variables>
			<variables name="Inputs_INT" typeName="ARRAY[11..16] OF INT"></variables>
			<variables name="Now_ARINT" typeName="ARRAY[1..2] OF INT"></variables>
			<variables name="Now_TOD" typeName="TOD"></variables>
			<variables name="Index_OUT" typeName="INT"></variables>
			<variables name="Nb_Items_OUT" typeName="INT"></variables>
			<variables name="Cycle_Number" typeName="UDINT"></variables>
			<variables name="Index_IN" typeName="INT"></variables>
			<variables name="Inputs_val" typeName="ARRAY[1..16] OF DINT"></variables>
			<variables name="Inputs_val_prev" typeName="ARRAY[1..16] OF DINT"></variables>
			<variables name="Halt_mem" typeName="EBOOL">
				<variableInit value="FALSE"></variableInit>
			</variables>
			<variables name="TOD_last_event" typeName="TOD"></variables>
			<variables name="Inputs_tag_2" typeName="ARRAY[1..16] OF string[40]"></variables>
			<variables name="Index_IN_STR" typeName="STRING"></variables>
		</privateLocalVariables>
		<FBProgram name="main">
			<STSource>
(*

Exemple d'utilisation : On met le code suivant dans une section ST toujours active
  et on regarde le résultat en animant zzHorodatage_1


"
WIP := TRUE;

zzInitEspions := zzInitEspions_Manu (*OR Init_API_en_cours*);

zzDiag_Dataset_1.VAL_INT_1 := temps_malax1;
zzDiag_Dataset_1.VAL_INT_2 := 0;
zzDiag_Dataset_1.VAL_DINT := UDINT_TO_DINT(Temps_dep_SVD);
zzDiag_Dataset_1.VAL_BOOL_1 := FALSE;
zzDiag_Dataset_1.VAL_BOOL_2 := FALSE;
zzDiag_Dataset_1.VAL_BOOL_3 := FALSE;
zzDiag_Dataset_1.VAL_REAL := 0.0;
zzDiag_Dataset_1.VAL_TIME := t#0s;

zzDiag_Inputs_tag_1[1] := 'En_attente_du_debut_intro_gra';
zzDiag_Inputs_tag_1[2] := 'Vid_Gra_En_Cours';
zzDiag_Inputs_tag_1[3] := 'Vid_Gra_Terminee';
zzDiag_Inputs_tag_1[4] := 'Cde_vidange_bascule_Gra1';
zzDiag_Inputs_tag_1[5] := 'Cde_vidange_bascule_Cim1';
zzDiag_Inputs_tag_1[6] := 'Cde_vidange_tampon_ppe[2]';
zzDiag_Inputs_tag_1[7] := 'Cde_vidange_tampon_ppe[7]';
zzDiag_Inputs_tag_1[8] := '';
zzDiag_Inputs_tag_1[9] := '';
zzDiag_Inputs_tag_1[10] := '';
zzDiag_Inputs_tag_1[11] := 'NG_Intro';
zzDiag_Inputs_tag_1[12] := 'NG_Mal1';
zzDiag_Inputs_tag_1[13] := '';
zzDiag_Inputs_tag_1[14] := '';
zzDiag_Inputs_tag_1[15] := '';
zzDiag_Inputs_tag_1[16] := '';

zzHorodatage_1( (* est un Function Block de type "Diag_Horodatage_v3" *)
	IN_01_BOOL := En_attente_du_debut_intro_gra,
	IN_02_BOOL := Vid_Gra_En_Cours,
	IN_03_BOOL := Vid_Gra_Terminee,
	IN_04_BOOL := Cde_vidange_bascule_Gra1,
	IN_05_BOOL := Cde_vidange_bascule_Cim1,
	IN_06_BOOL := Cde_vidange_tampon_ppe[2],
	IN_07_BOOL := Cde_vidange_tampon_ppe[7],
	IN_08_BOOL := FALSE,
	IN_09_BOOL := FALSE,
	IN_10_BOOL := FALSE,
	IN_11_INT := NG_Intro,
	IN_12_INT := NG_Mal1,
	IN_13_INT := 0,
	IN_14_INT := 0,
	IN_15_INT := 0,
	IN_16_INT := 0,
	INPUTS_TAG := zzDiag_Inputs_tag_1, (* ARRAY[1..16] OF string[40] *)
	INIT := zzInitEspions, (*&lt;- Pour initialisation à la main par une table d'animation *)(* EBOOL *)
	DATASET := zzDiag_Dataset_1, (* Diag_dataset *)
	OUT =&gt; zzDiag_Timestamp_1); (* ARRAY[0..49] OF Diag_timestamp *)
"
*)





Nb_Items_OUT := 50; (* Constante : Nb d'éléments dans OUT *)

Cycle_Number := Cycle_Number + 1;

(* Récupérer l'heure actuelle *)
Now_ARINT[1] := %SW50;
Now_ARINT[2] := %SW51;
Now_TOD := ARINT_TO_TOD(Now_ARINT);


(* Mettre les entrées dans un buffer *)
(* -&gt; Input_val[] *)
Inputs_BOOL[1] := IN_01_BOOL;
Inputs_BOOL[2] := IN_02_BOOL;
Inputs_BOOL[3] := IN_03_BOOL;
Inputs_BOOL[4] := IN_04_BOOL;
Inputs_BOOL[5] := IN_05_BOOL;
Inputs_BOOL[6] := IN_06_BOOL;
Inputs_BOOL[7] := IN_07_BOOL;
Inputs_BOOL[8] := IN_08_BOOL;
Inputs_BOOL[9] := IN_09_BOOL;
Inputs_BOOL[10] := IN_10_BOOL;
Inputs_INT[11] := IN_11_INT;
Inputs_INT[12] := IN_12_INT;
Inputs_INT[13] := IN_13_INT;
Inputs_INT[14] := IN_14_INT;
Inputs_INT[15] := IN_15_INT;
Inputs_INT[16] := IN_16_INT;
FOR Index_IN := 1 TO 16 DO
	IF (Index_IN &gt;= 1) AND (Index_IN &lt;= 10) THEN
	(* Entrée type BOOL *)
		IF (Inputs_BOOL[Index_IN] = TRUE) THEN
			Inputs_val[Index_IN] := 1;
		ELSE
			Inputs_val[Index_IN] := 0;
		END_IF;
	ELSIF (Index_IN &gt;= 11) AND (Index_IN &lt;= 16) THEN
	(* Entrée type INT *)
		Inputs_val[Index_IN] := INT_TO_DINT(Inputs_INT[Index_IN]);
	END_IF;
END_FOR;


(* Init *)
IF INIT THEN

	FOR Index_OUT := 0 TO (Nb_Items_OUT - 1) DO
		OUT[Index_OUT].EVT_TIME := tod#00:00:00;
		OUT[Index_OUT].EVT_CYCLE_NUM := 0;
		OUT[Index_OUT].DATASET.VAL_INT_1 := 0;
		OUT[Index_OUT].DATASET.VAL_INT_2 := 0;
		OUT[Index_OUT].DATASET.VAL_DINT := 0;
		OUT[Index_OUT].DATASET.VAL_BOOL_1 := FALSE;
		OUT[Index_OUT].DATASET.VAL_BOOL_2 := FALSE;
		OUT[Index_OUT].DATASET.VAL_BOOL_3 := FALSE;
		OUT[Index_OUT].DATASET.VAL_REAL := 0.0;
		OUT[Index_OUT].DATASET.VAL_TIME := t#0s;
		OUT[Index_OUT].INPUT_TAG := '';
		OUT[Index_OUT].INPUT_OLD_VAL := -9999;
		OUT[Index_OUT].INPUT_NEW_VAL := -9999;
	END_FOR;
	FOR Index_IN := 1 TO 16 DO
		Inputs_val_prev[Index_IN] := -9999;
	END_FOR;

	Halt_mem := FALSE;
	Cycle_Number := 0;
	CPT_EVT := 0;

	(* Détermination de la liste des tags des entrées *)
	(* -&gt; Inputs_tag_2*)
	FOR Index_IN := 1 TO 16 DO
		IF (LEN_INT(Inputs_tag[Index_IN]) &gt; 0) THEN
			Inputs_tag_2[Index_IN] := Inputs_tag[Index_IN];
		ELSE
			Index_IN_STR := INT_TO_STRING(Index_IN);
			Index_IN_STR := RIGHT_INT(Index_IN_STR,2);
			Inputs_tag_2[Index_IN] := CONCAT_STR('(Input No' , Index_IN_STR);
			Inputs_tag_2[Index_IN] := CONCAT_STR(Inputs_tag_2[Index_IN] , ')');
		END_IF;
	END_FOR;
END_IF;





FOR Index_IN := 1 TO 16 DO

	(* Détermination de l'état HALT *)
	(* -&gt; Halt_mem *)
	IF (HALT_CONDITION)
	OR ((CPT_EVT &gt;= HALT_NB_MAX_EVENTS) AND (HALT_NB_MAX_EVENTS &gt; 0)) THEN
		Halt_mem := TRUE;
	END_IF;

	(* Remplissage de la table d'horodates, si événement détecté *)
	(* -&gt; OUT[] *)
	IF INIT
	OR ((Inputs_val[Index_IN] &lt;&gt; Inputs_val_prev[Index_IN]) AND NOT Halt_mem)
	THEN
		(* Décaler le buffer de sorties pour laisser la place à de nouveaux événements *)
		FOR Index_OUT := ((Nb_Items_OUT - 1) - 1) TO 0 BY -1 DO
			OUT[Index_OUT + 1].EVT_TIME := OUT[Index_OUT].EVT_TIME;
			OUT[Index_OUT + 1].EVT_CYCLE_NUM := OUT[Index_OUT].EVT_CYCLE_NUM;
			OUT[Index_OUT + 1].DATASET := OUT[Index_OUT].DATASET;
			OUT[Index_OUT + 1].INPUT_TAG := OUT[Index_OUT].INPUT_TAG;
			OUT[Index_OUT + 1].INPUT_OLD_VAL := OUT[Index_OUT].INPUT_OLD_VAL;
			OUT[Index_OUT + 1].INPUT_NEW_VAL := OUT[Index_OUT].INPUT_NEW_VAL;
		END_FOR;

		(* Remplir le buffer de sorties *)
		OUT[0].EVT_TIME := Now_TOD;
		OUT[0].EVT_CYCLE_NUM := Cycle_Number;
		OUT[0].DATASET := DATASET;
		OUT[0].INPUT_TAG := Inputs_tag_2[Index_IN];
		OUT[0].INPUT_OLD_VAL := Inputs_val_prev[Index_IN];
		OUT[0].INPUT_NEW_VAL := Inputs_val[Index_IN];

		(* Compter l'événement *)
		IF INIT THEN
			CPT_EVT := 0;
			TOD_last_event := tod#00:00:00;
		ELSE
			CPT_EVT := CPT_EVT + 1;
			TOD_last_event := Now_TOD;
		END_IF;
	END_IF;

END_FOR;


(* Mémoriser la valeur précédente des variables (pour permettre la détection d'un changement de valeur) *)
Inputs_val_prev := Inputs_val;


(* Outputs *)
CYCLE_NUM := Cycle_Number;
TIME_DAY := Now_TOD;
IF (CPT_EVT &gt; 0) THEN
	TIME_SINCE_LAST_EVT := SUB_TOD_TOD(TOD_last_event, Now_TOD);
ELSE
	TIME_SINCE_LAST_EVT := t#3599s; (* Valeur par défaut *)
END_IF;
HALT := Halt_mem;
</STSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="MOVE_BOOL_AREBOOL" version="1.00" dateTime="dt#2010-02-19-09:25:24">
		<comment>Assignment of a bit table with a bool</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="BBE3"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="359D"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="BOOL">
					<comment>Value to be moved</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_ARRAY_EBOOL">
					<comment>Bool out tables</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="STABILI" version="2.00" dateTime="dt#2005-10-12-11:09:20">
		<attribute name="TypeCodeCheckSumString" value="2312"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="CFF2"></attribute>
		<inputParameters>
			<variables name="POIDS_I" typeName="INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="VALIDE" typeName="BOOL">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="T_STAB" typeName="TIME">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="PR_DEF" typeName="BOOL">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="E_STAB" typeName="INT">
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="BAS_STAB" typeName="BOOL">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="Val_maxi" typeName="INT"></variables>
			<variables name="Val_mini" typeName="INT"></variables>
			<variables name="TPO_STAB" typeName="TON"></variables>
		</privateLocalVariables>
		<FBProgram name="Stab">
			<STSource>if not valide then
 	bas_stab:=false;
 end_if;
  
 (* RAZ mini et maxi pour le test suivant *)
 if not valide OR TPO_STAB.Q then
 	Val_mini:=poids_I;
 	Val_maxi:=poids_I;
 end_if;
  
  
 (* TEST DE STABILITE *)
 TPO_STAB(IN:=not TPO_STAB.Q AND valide and not bas_stab AND NOT Pr_def,
 		 PT:= T_stab);
  
 (* Sauvegarde des poids mini et maxi *)		 
 if valide and not Pr_def then
 	
 	if Val_mini&gt;poids_I then 
 		Val_mini:=poids_I;
 	end_if;
 	
 	if Val_maxi&lt;poids_I then
 		Val_maxi:=poids_I;
 	end_if;
 end_if;
  
 (* Test l'écart de poids à la fin de la tempo de stabilité *)
 if TPO_STAB.Q and Val_maxi-Val_mini&lt;e_stab then
 	bas_stab:=true;
 end_if;
  
 (* Présence d'un défaut *)
 if Pr_def then
 	bas_stab:=false;
 end_if;
</STSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="COPY_ARINT_AREBOOL" version="1.00" dateTime="dt#2010-02-19-09:25:22">
		<comment>Copies a word table to a bit table</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="10F1"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="1F7D"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="ANY_ARRAY_INT">
					<comment>Input word table</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="P1" typeName="INT">
					<comment>Row in the word table</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
				<variables name="N" typeName="INT">
					<comment>Number of words</comment>
					<attribute name="PositionPin" value="3"></attribute>
				</variables>
				<variables name="P2" typeName="INT">
					<comment>Row in the bit table</comment>
					<attribute name="PositionPin" value="4"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_ARRAY_EBOOL">
					<comment>Bit table</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="BOOLARR6" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="4DC6"></attribute>
		<array>ARRAY[1..6] OF BOOL</array>
	</DDTSource>
	<EFSource nameOfEFType="AND" version="1.00" dateTime="dt#2010-02-19-09:48:01">
		<comment>AND function</comment>
		<attribute name="TypeDescriptiveForm" value="  The function links (acc. to AND logic) the bit sequences at the inputs and assigns  the result to the output. The AND operation is performed bit-by-bit.&#xA;&#xA;  The data types of all input values and output values must be identical.&#xA;  The number of inputs can be increased (max 32).&#xA;&#xA;  Note: This function is not available with boolean variables in LD (Ladder Diagram)&#xA;        since the same functionality can be achieved there with contacts.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="198D"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_BIT">
					<comment>Input bit sequence (Extensible)</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="ANY_BIT">
					<comment>Output bit sequence</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="CONCAT_STR" version="1.01" dateTime="dt#2010-02-19-10:15:55">
		<comment>Concatenate two strings</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="3CA7"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="7AAC"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="STRING">
					<comment>Operande containing the 1st. string</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="IN2" typeName="STRING">
					<comment>Operande containing the 2nd. string</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="STRING">
					<comment>Operande containing the concatenated string</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="INT_TO_STRING" version="1.01" dateTime="dt#2010-02-19-09:41:37">
		<comment>Convert a single length integer into a string</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="A5EA"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="B757"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="INT">
					<comment>Single length integer to be converted</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="STRING">
					<comment>7 char. string representing the integer</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="Com_ModbusTCP_M340" version="0.28" dateTime="dt#2008-05-20-18:00:37">
		<attribute name="TypeCodeCheckSumString" value="1A9E"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="B133"></attribute>
		<inputParameters>
			<variables name="TimeOut" typeName="INT">
				<comment>1 = 100ms</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="BDT_Com" typeName="TIME">
				<comment>cycle de communication</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="Cible_TCP" typeName="ADDM_TYPE">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="Tableau_envoi" typeName="ANY_ARRAY_INT">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="Longeur_envoi" typeName="INT">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="Longueur_Reception" typeName="INT">
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="Adresse_Lecture" typeName="DINT">
				<comment>@ dans l'equipement cible</comment>
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
			<variables name="Adresse_Ecriture" typeName="DINT">
				<comment>@ dans l'equipement cible</comment>
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="Tableau_Reception" typeName="ANY_ARRAY_INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Alarme_Com_API_ModbusTCP_1" typeName="BOOL">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="Diag_Lecture" typeName="ARRAY[0..3] OF INT">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="Diag_Ecriture" typeName="ARRAY[0..3] OF INT">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="Nb_Essais" typeName="INT">
				<comment>Nb essai avant Alarme</comment>
			</variables>
			<variables name="Lec_active" typeName="EBOOL">
				<comment>Lecture en cours</comment>
			</variables>
			<variables name="Cpt_Err_Lec" typeName="INT"></variables>
			<variables name="def_Com_Lec" typeName="BOOL"></variables>
			<variables name="TOF_PAUSE_LEC" typeName="TOF"></variables>
			<variables name="TOF_PAUSE_ECR" typeName="TOF"></variables>
			<variables name="Rapport_Lec" typeName="ARRAY[0..3] OF INT"></variables>
			<variables name="Rapport_Ecr" typeName="ARRAY[0..3] OF INT"></variables>
			<variables name="Ecr_active" typeName="EBOOL">
				<comment>ecriture en cours</comment>
			</variables>
			<variables name="Cpt_Err_Ecr" typeName="INT"></variables>
			<variables name="Def_Com_Ecr" typeName="BOOL"></variables>
		</privateLocalVariables>
		<FBProgram name="Main">
			<STSource>(*----------------- GESTION DES TRAMES  ------------------------------------*)
(*
En fonctionnement normal, on effectue une lecture/écriture toute les 20ms (mise à jour Siwarex).
En cas de Time Out (100ms), Il on rééemmet 3 fois la trame. Au bout des 3 fois, on active le défaut communication.
Le processus n'est pas des plus simple mais il permet de détecter rapidement un defaut communication.

Une methode plus simple en codage serait de considérer le time out com comme défaut communication. mais dans ce cas, le time out doit 
accepter le plus long des temps de réponse ... mesuré à environ 700ms sur la centrale de Stefanisti Roumanie, ce qui est plutot long en cours de dosage!

*)

(*Parametrage de la section*)
Rapport_Ecr[2]:=TimeOut;
Rapport_Lec[2]:=TimeOut;
Nb_Essais := 3;

			(*-------------------- LECTURE --------------------*)
Lec_active := Rapport_Lec[0].0;
(*Calcul trame TCP en erreur*)
IF FE(Lec_active) (*Détection fin de communication*)
   THEN
      IF (Rapport_Lec[1] AND 16#00FF) =0
         THEN
	 (*Detection trame OK*)
         Cpt_Err_Lec :=0;
	 ELSE
	 (*Detection trame en erreur*)
         Cpt_Err_Lec := Cpt_Err_Lec + 1;
      END_IF;
END_IF;
(*Mise a jour Alarme si plus de 3 erreurs*)
def_Com_Lec := Cpt_Err_Lec &gt; Nb_Essais;
(*Attente de communication si tramme précédente OK sion, la sortie rest à 0*)
TOF_PAUSE_LEC (
   IN := FE(Lec_active)
	 AND (Cpt_Err_Lec =0 OR Cpt_Err_Lec &gt;= Nb_Essais) ,
   PT := BDT_Com);
(*Envoi Trame*)
IF NOT TOF_PAUSE_LEC.Q 
   THEN
      READ_VAR (ADR := Cible_TCP,
      OBJ := '%mw',
      NUM := Adresse_Lecture,
      NB :=  LENGTH_ARINT (IN := Tableau_Reception) ,
      RECP =&gt; Tableau_Reception,
      GEST := Rapport_Lec);
END_IF;

			(*-------------------- ECRITURE --------------------*)
Ecr_active := Rapport_Lec[0].0;

(*Calcul trame TCP en erreur*)
IF FE(Ecr_active)(*Détection fin de communication*)
   THEN
      IF (Rapport_Ecr[1] AND 16#00FF) =0
         THEN
	 (*Detection trame OK*)
         Cpt_Err_Ecr :=0;
	 ELSE
	 (*Detection trame en erreur*)
         Cpt_Err_Ecr := Cpt_Err_Ecr + 1;
      END_IF;
END_IF;
(*Mise a jour Alarme si plus de 3 erreurs*)
Def_Com_Ecr := Cpt_Err_Ecr &gt; Nb_Essais;
(*Attente de communication si tramme précédente OK sion, la sortie rest à 0*)
TOF_PAUSE_ECR (
   IN := FE(Ecr_active) 
	 AND (Cpt_Err_Lec =0 OR Cpt_Err_Lec &gt;= Nb_Essais) ,
   PT := BDT_Com);
(*Envoi Trame*)
IF NOT TOF_PAUSE_ECR.Q 
   THEN
      WRITE_VAR (ADR := Cible_TCP,
      OBJ := '%mw',
      NUM := Adresse_Ecriture,
      NB := LENGTH_ARINT (IN := Tableau_envoi),
      EMIS := Tableau_envoi,
      GEST := Rapport_Ecr);
END_IF;
(*ALARME MODBUS TCP*)
Alarme_Com_API_ModbusTCP_1 := Def_Com_Ecr 
                              OR def_Com_Lec;

Diag_Lecture  := Rapport_Lec;
Diag_Ecriture := Rapport_Ecr;
</STSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="RIGHT_INT" version="1.01" dateTime="dt#2010-02-19-10:15:55">
		<comment>Extract the right part of a string</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="9CD6"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="CAD9"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="STRING">
					<comment>Operande containing the source string</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="N" typeName="INT">
					<comment>Number of characters to extract</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="STRING">
					<comment>Operande containing the extracted string</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="BOOLARR20" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="E0DD"></attribute>
		<array>ARRAY[1..20] OF BOOL</array>
	</DDTSource>
	<FBSource nameOfFBType="Auto_Calibration_Check" version="0.49" dateTime="dt#2015-08-11-11:29:17">
		<attribute name="TypeCodeCheckSumString" value="7263"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="AA51"></attribute>
		<inputParameters>
			<variables name="IDFB_Activation" typeName="BOOL">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="IDFB_Poids_Instantane" typeName="INT">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="IDFB_Tps_Verif_Calib" typeName="TIME">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="ODFB_Test_Termine" typeName="BOOL">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="ODFB_Poids_Retenu" typeName="INT">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="ODFB_Cde_Verif_Calib" typeName="EBOOL">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="Pulse_Activation" typeName="EBOOL"></variables>
			<variables name="Pulse_Fin_Attente" typeName="EBOOL"></variables>
			<variables name="TON_Attente_Verif_Calib" typeName="TON"></variables>
			<variables name="Activation" typeName="BOOL"></variables>
			<variables name="Poids_Instantane" typeName="INT"></variables>
			<variables name="Tps_Verif_Calib" typeName="TIME"></variables>
			<variables name="Test_Termine" typeName="BOOL"></variables>
			<variables name="Poids_Retenu" typeName="INT"></variables>
			<variables name="Cde_Verif_Calib" typeName="EBOOL"></variables>
		</privateLocalVariables>
		<FBProgram name="Main">
			<STSource>(* Le principe est simple BCmix demande de faire un test de calibration sur une bascule via la variable ici "Activation" *)
(* Cette variable est positionnée à 1 par BCmix jusqu'à ce que BCmix lise que la variable Test Terminé est positionné à 1 *)
(* Une fois que BCmix a lu que le Test est Terminé, "Activation" est positionnée à 0 par BCmix*)
(* Le Principe est de faire lever des poids pendant un temps donné "Conf_Tps_Calibration" pour verifier la calibration d'une bascule *)
(* Une fois le test terminé, le poids mesuré par l'API est récupéré par BCmix  *)
(* XX/12/2014 - P865 - artf1517141 *)

(* Acquisition des entrées du DFB *)
Activation 		:= IDFB_Activation;
Poids_Instantane	:= IDFB_Poids_Instantane;
Tps_Verif_Calib 	:= IDFB_Tps_Verif_Calib;
(* Acquisition des entrées du DFB *)


(* Lorsque nous n'avons pas la commande "Activation" venant de BCmix on init les valeurs à 0 *)
IF NOT Activation THEN
	Cde_Verif_Calib := FALSE;
	Test_Termine := FALSE;
	Poids_Retenu := 0;
END_IF;


TON_Attente_Verif_Calib (IN := Activation, PT := Tps_Verif_Calib);	
Pulse_Fin_Attente := TON_Attente_Verif_Calib.Q;

IF RE(Pulse_Fin_Attente) THEN	(* Sur "RE" de la fin d'attente on considère que la bascule est stable donc on déclare le test terminé et on sauvegarde le poids *)
	Poids_Retenu := Poids_Instantane;
	Test_Termine := TRUE;
END_IF;


IF Activation AND NOT TON_Attente_Verif_Calib.Q THEN	(* On active la STOR pendant le temps d'attente *)
	Cde_Verif_Calib := TRUE;
ELSE
	Cde_Verif_Calib := FALSE;
END_IF;


(* Restitution des sorties du DFB *)
ODFB_Test_Termine 	:= Test_Termine;
ODFB_Poids_Retenu	:= Poids_Retenu;
ODFB_Cde_Verif_Calib 	:= Cde_Verif_Calib;
(* Restitution des sorties du DFB *)
</STSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="GT" version="1.00" dateTime="dt#2010-02-19-09:12:06">
		<comment>Greater than</comment>
		<attribute name="TypeDescriptiveForm" value="  The function checks the values of successive inputs for a decreasing sequence.  The data types of all input values must be identical.&#xA;  The number of inputs can be increased (max 32).&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="BE6A"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_ELEMENTARY">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="BIT_TO_WORD" version="1.00" dateTime="dt#2010-02-19-09:30:00">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts 16 input values from data type BOOL into an  output value of data type WORD.&#xA;&#xA;  The input values are assigned to the individual bits of the word&#xA;  at the output according to the input names.&#xA;&#xA;  BIT15 becomes the most significant bit.&#xA;&#xA;  Block formula:&#xA;  OUT = {BIT15,BIT14,...,BIT0}&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="B84B"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="F062"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="BIT0" typeName="BOOL">
					<comment>Input Bit0</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="BIT1" typeName="BOOL">
					<comment>Input Bit1</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
				<variables name="BIT2" typeName="BOOL">
					<comment>Input Bit2</comment>
					<attribute name="PositionPin" value="3"></attribute>
				</variables>
				<variables name="BIT3" typeName="BOOL">
					<comment>Input Bit3</comment>
					<attribute name="PositionPin" value="4"></attribute>
				</variables>
				<variables name="BIT4" typeName="BOOL">
					<comment>Input Bit4</comment>
					<attribute name="PositionPin" value="5"></attribute>
				</variables>
				<variables name="BIT5" typeName="BOOL">
					<comment>Input Bit5</comment>
					<attribute name="PositionPin" value="6"></attribute>
				</variables>
				<variables name="BIT6" typeName="BOOL">
					<comment>Input Bit6</comment>
					<attribute name="PositionPin" value="7"></attribute>
				</variables>
				<variables name="BIT7" typeName="BOOL">
					<comment>Input Bit7</comment>
					<attribute name="PositionPin" value="8"></attribute>
				</variables>
				<variables name="BIT8" typeName="BOOL">
					<comment>Input Bit8</comment>
					<attribute name="PositionPin" value="9"></attribute>
				</variables>
				<variables name="BIT9" typeName="BOOL">
					<comment>Input Bit9</comment>
					<attribute name="PositionPin" value="10"></attribute>
				</variables>
				<variables name="BIT10" typeName="BOOL">
					<comment>Input Bit10</comment>
					<attribute name="PositionPin" value="11"></attribute>
				</variables>
				<variables name="BIT11" typeName="BOOL">
					<comment>Input Bit11</comment>
					<attribute name="PositionPin" value="12"></attribute>
				</variables>
				<variables name="BIT12" typeName="BOOL">
					<comment>Input Bit12</comment>
					<attribute name="PositionPin" value="13"></attribute>
				</variables>
				<variables name="BIT13" typeName="BOOL">
					<comment>Input Bit13</comment>
					<attribute name="PositionPin" value="14"></attribute>
				</variables>
				<variables name="BIT14" typeName="BOOL">
					<comment>Input Bit14</comment>
					<attribute name="PositionPin" value="15"></attribute>
				</variables>
				<variables name="BIT15" typeName="BOOL">
					<comment>Input Bit15</comment>
					<attribute name="PositionPin" value="16"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="WORD">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="BOOLARR14" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="7299"></attribute>
		<array>ARRAY[1..14] OF BOOL</array>
	</DDTSource>
	<FBSource nameOfFBType="Rolling_analysis" version="0.05" dateTime="dt#2011-07-29-16:08:31">
		<comment>Enables calculating rolling min, max and average with few resources (Shifting every 1/3 to 1/10 periods)</comment>
		<attribute name="TypeCodeCheckSumString" value="1939"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="3ADB"></attribute>
		<inputParameters>
			<variables name="In" typeName="INT">
				<comment>Value to analyse</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Period" typeName="TIME">
				<comment>Time period</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="Reset" typeName="EBOOL">
				<comment>Reset</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="Nb_fragments" typeName="INT">
				<comment>Input 2 for shifting every 1/2 period to 10 for shifting every 1/10 period</comment>
				<attribute name="PositionPin" value="4"></attribute>
				<variableInit value="3"></variableInit>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="Min" typeName="INT">
				<comment>Minimum value recorded within the timebase</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Avg" typeName="REAL">
				<comment>Average value recorded within the timebase</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="Max" typeName="INT">
				<comment>Maximum value recorded within the timebase</comment>
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="Rolling_record_min" typeName="ARRAY[1..10] OF INT"></variables>
			<variables name="Rolling_record_avg" typeName="ARRAY[1..10] OF REAL"></variables>
			<variables name="Rolling_record_max" typeName="ARRAY[1..10] OF INT"></variables>
			<variables name="Record_index" typeName="INT">
				<comment>Most recent index of the table (incrementing)</comment>
			</variables>
			<variables name="idx" typeName="INT"></variables>
			<variables name="Value_count" typeName="UDINT">
				<comment>Number of values of the record (used for calculating the average)</comment>
			</variables>
			<variables name="TON_Shifting" typeName="TON"></variables>
			<variables name="Nb_fragments_used" typeName="INT"></variables>
			<variables name="NB_FRAGMENTS_USED_MIN" typeName="INT">
				<comment>(constant)</comment>
				<variableInit value="2"></variableInit>
			</variables>
			<variables name="NB_FRAGMENTS_USED_MAX" typeName="INT">
				<comment>(constant)</comment>
				<variableInit value="10"></variableInit>
			</variables>
		</privateLocalVariables>
		<FBProgram name="main">
			<STSource>
Nb_fragments_used := Nb_fragments;
IF (Nb_fragments_used &lt; NB_FRAGMENTS_USED_MIN) THEN
	Nb_fragments_used := NB_FRAGMENTS_USED_MIN;
ELSIF (Nb_fragments_used &gt; NB_FRAGMENTS_USED_MAX) THEN
	Nb_fragments_used := NB_FRAGMENTS_USED_MAX;
END_IF;


IF Reset
OR (Record_index &lt; 1)
OR (Record_index &gt; Nb_fragments_used) THEN
	(* RESET *)
	FOR idx := 1 TO Nb_fragments_used DO
		Rolling_record_min[idx] := In;
		Rolling_record_max[idx] := In;
		Rolling_record_avg[idx] := INT_TO_REAL(In);
	END_FOR;
	Record_index := 1;
	Value_count := 1;
ELSE
	IF TON_Shifting.Q THEN
	(* Shift once every 1/n of the timebase : *)
		(* Increment the record index *)
		IF Record_index &lt; Nb_fragments_used THEN
			Record_index := Record_index + 1;
		ELSE
			Record_index := 1;
		END_IF;
		(* Initialise the pointed record *)
		(* It was the oldest one, and will become the newest one *)
		Rolling_record_min[Record_index] := In;
		Rolling_record_max[Record_index] := In;
		Value_count := 1;
		Rolling_record_avg[Record_index] := INT_TO_REAL(In);
	ELSE
		IF (In &lt; Rolling_record_min[Record_index]) THEN
			Rolling_record_min[Record_index] := In;
		END_IF;
		IF (In &gt; Rolling_record_max[Record_index]) THEN
			Rolling_record_max[Record_index] := In;
		END_IF;
		Value_count := Value_count + 1;
		Rolling_record_avg[Record_index] := (INT_TO_REAL(In) + (Rolling_record_avg[Record_index] * (UDINT_TO_REAL(Value_count) - 1.0))) / UDINT_TO_REAL(Value_count);
	
	END_IF;
END_IF;

(* MANAGE THE TIMING *)
TON_Shifting (IN := Reset OR NOT TON_Shifting.Q,
              PT := Period/Nb_fragments_used);

(* RETRIEVE MIN, MAX, AND AVERAGE FROM THE RECORDS *)
Min := Rolling_record_min[1];
Max := Rolling_record_max[1];
FOR idx := 2 TO Nb_fragments_used DO
	IF Rolling_record_min[idx] &lt; Min THEN
		Min := Rolling_record_min[idx];
	END_IF;
	IF Rolling_record_max[idx] &gt; Max THEN
		Max := Rolling_record_max[idx];
	END_IF;
END_FOR;
Avg := 0.0;
FOR idx := 1 TO Nb_fragments_used DO
	Avg := Avg + (Rolling_record_avg[idx] / INT_TO_REAL(Nb_fragments_used));
END_FOR;
</STSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="GE_INT" version="1.00" dateTime="dt#2010-02-19-09:12:06">
		<comment>Greater than or equal to</comment>
		<attribute name="TypeDescriptiveForm" value="  The function checks the values of successive inputs for a decreasing sequence or equality.  The data types of all input values must be identical.&#xA;  The number of inputs can be increased (max 32).&#xA;  STRING variables are compared using the alphabet; variables at the end of the alphabet are&#xA;  higher priority expressions than those at the front.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="97B0"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="INT">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<EFSource nameOfEFType="FE" version="1.00" dateTime="dt#2010-02-19-10:20:31">
		<comment>Falling Edge of an operand</comment>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="8A81"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="EBOOL">
					<comment>EBOOL value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Falling Edge of IN</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="LEC_MESOMATIC" version="0.14" dateTime="dt#2008-04-10-16:00:33">
		<comment>Lecture bascule mesomatic (par Profibus + passerelle TCP)</comment>
		<attribute name="TypeCodeCheckSumString" value="33D3"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="926D"></attribute>
		<inputParameters>
			<variables name="DATA_IN" typeName="ARRAY[1..5] OF INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="poids_min" typeName="INT">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="poids_max" typeName="INT">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="Poids_simulateur" typeName="WORD">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="Simulation_en_cours" typeName="BOOL">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="Poids" typeName="REAL">
				<comment>Poids en réel</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Err" typeName="BOOL">
				<comment>Module Mésomatic en erreur</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="DEF_depassement_MIN" typeName="BOOL">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="DEF_depassement_MAX" typeName="BOOL">
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="Poids_32B" typeName="DINT"></variables>
			<variables name="TON_DEP_MIN" typeName="TON"></variables>
			<variables name="AL_depassement_MIN" typeName="BOOL"></variables>
		</privateLocalVariables>
		<FBProgram name="traitement">
			<STSource>IF NOT Simulation_en_cours THEN
   Poids_32B := WORD_AS_DINT (LOW  := INT_TO_WORD(DATA_IN[1]),
                     HIGH := INT_TO_WORD(DATA_IN[2]));
   ELSE
   Poids_32B := INT_TO_DINT(WORD_TO_INT (Poids_simulateur));
END_IF;

(*CALCUL DES ALARMES DE DEPASSEMENT DE POIDS*)
IF poids_32B&gt;INT_to_DINT(poids_max) 
   OR poids_32B = 16#7FFFFFFF
   THEN 
     DEF_depassement_MAX := TRUE;
     AL_depassement_MIN := FALSE;
     ELSIF poids_32B&lt;INT_to_DINT(poids_min) 
           THEN AL_depassement_MIN := TRUE;
                DEF_depassement_MAX := FALSE;
           ELSE DEF_depassement_MAX := FALSE;
     	        AL_depassement_MIN := FALSE;
END_IF;
(*temporisation qui compense le phénomène d'aspiration de certaines bascules*)
TON_DEP_MIN (IN := AL_depassement_MIN,
 PT := t#5s,
 Q =&gt; DEF_depassement_MIN); 

(*Adaptation automatique à la valeur décimal*)
(*NON UTILISE, ADAPTATION PAR BCMIX (Coefitient)*)
(*IF NOT DATA_IN[3].0
   AND NOT DATA_IN[3].1
   AND NOT DATA_IN[3].2 
   THEN
      Poids_final := Poids_real;
   ELSIF DATA_IN[3].0 THEN
      Poids_final := Poids_real/10.0;
   ELSIF DATA_IN[3].1 THEN
      Poids_final := Poids_real/100.0; 
   ELSIF DATA_IN[3].2 THEN
      Poids_final := Poids_real/1000.0;
END_IF;*)

Poids := DINT_TO_REAL(poids_32B);

Err :=DATA_IN[3].6 OR DATA_IN[3].7;
</STSource>
		</FBProgram>
	</FBSource>
	<EFSource nameOfEFType="GE" version="1.00" dateTime="dt#2010-02-19-09:12:06">
		<comment>Greater than or equal to</comment>
		<attribute name="TypeDescriptiveForm" value="  The function checks the values of successive inputs for a decreasing sequence or equality.  The data types of all input values must be identical.&#xA;  The number of inputs can be increased (max 32).&#xA;  STRING variables are compared using the alphabet; variables at the end of the alphabet are&#xA;  higher priority expressions than those at the front.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="BE6A"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_ELEMENTARY">
					<comment>Input 1..32</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="nin" typeName="DWORD">
					<attribute name="PositionPin" value="0"></attribute>
					<attribute name="IsVariableHidden" value="-1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<FBSource nameOfFBType="LEC_5ANA" version="0.34" dateTime="dt#2011-04-08-16:14:06">
		<attribute name="TypeCodeCheckSumString" value="2869"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="9B2C"></attribute>
		<inputParameters>
			<variables name="Tab_Mesure" typeName="ARRAY[1..5] OF INT">
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Tab_Statut" typeName="ARRAY[1..5] OF BOOL">
				<attribute name="PositionPin" value="6"></attribute>
			</variables>
			<variables name="Simulation_en_cours" typeName="BOOL">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="Detarage_min" typeName="INT">
				<comment>identique pour les 5 bascules</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
			<variables name="Detarage_max" typeName="INT">
				<comment>identique pour les 5 bascules</comment>
				<attribute name="PositionPin" value="7"></attribute>
			</variables>
			<variables name="Poids_simulateur" typeName="WORD">
				<attribute name="PositionPin" value="8"></attribute>
			</variables>
			<variables name="conf_correction" typeName="INT">
				<attribute name="PositionPin" value="9"></attribute>
			</variables>
			<variables name="W1" typeName="ARRAY[1..5] OF REAL">
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="W2" typeName="ARRAY[1..5] OF REAL">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="P1" typeName="ARRAY[1..5] OF INT">
				<attribute name="PositionPin" value="31"></attribute>
			</variables>
			<variables name="P2" typeName="ARRAY[1..5] OF INT">
				<attribute name="PositionPin" value="32"></attribute>
			</variables>
		</inputParameters>
		<outputParameters>
			<variables name="Poids_real" typeName="REAL">
				<comment>Poids total</comment>
				<attribute name="PositionPin" value="1"></attribute>
			</variables>
			<variables name="Tab_Ampermetre" typeName="ARRAY[1..5] OF REAL">
				<comment>ampermetre pour chaque entrée</comment>
				<attribute name="PositionPin" value="2"></attribute>
			</variables>
			<variables name="DEF_depassement_Max" typeName="BOOL">
				<attribute name="PositionPin" value="3"></attribute>
			</variables>
			<variables name="DEF_depassement_Min" typeName="BOOL">
				<attribute name="PositionPin" value="4"></attribute>
			</variables>
			<variables name="BCMix_Pds_ADJ" typeName="ARRAY[1..5] OF INT">
				<comment>Poids décomposés pour affichage BC-Mix</comment>
				<attribute name="PositionPin" value="5"></attribute>
			</variables>
		</outputParameters>
		<privateLocalVariables>
			<variables name="Sig_Real" typeName="ARRAY[1..5] OF REAL"></variables>
			<variables name="Alpha" typeName="ARRAY[1..5] OF REAL"></variables>
			<variables name="Beta" typeName="ARRAY[1..5] OF REAL"></variables>
			<variables name="Poids" typeName="ARRAY[1..5] OF REAL"></variables>
			<variables name="idx" typeName="INT"></variables>
			<variables name="depassement_Min" typeName="ARRAY[1..5] OF BOOL"></variables>
			<variables name="depassement_Max" typeName="ARRAY[1..5] OF BOOL"></variables>
			<variables name="TON_1" typeName="TON"></variables>
			<variables name="TON_2" typeName="TON"></variables>
			<variables name="TON_3" typeName="TON"></variables>
			<variables name="TON_4" typeName="TON"></variables>
			<variables name="TON_5" typeName="TON"></variables>
			<variables name="idx_A" typeName="INT"></variables>
			<variables name="idx_B" typeName="INT"></variables>
		</privateLocalVariables>
		<FBProgram name="main">
			<STSource>FOR idx:=1 TO 5 DO
	Sig_Real[idx] := int_to_real(tab_Mesure[idx]+conf_correction);
	(* Correction ajoutée ; Modif Jérémie BOUVET "Inde" 15/02/2010 *)
	(*Calcul du courant mesuré*)
	Tab_Ampermetre[idx] := Sig_real[idx]*(20.0-4.0)/10000.0+4.0;

	(*Calcul du poids*)
	(* Y= Alpha*x+beta 
	   Avec Alpha = yb-ya / xb-xa *)
(* 	Alpha := (int_to_real( Seuil_bascule_Max )-int_to_real( Seuil_bascule_Min))/10000.0;
	Beta  := int_to_real( Seuil_bascule_Min);*)
		
	(*Coeficient to adapt for Analog admix weighers configuration*) 
	IF P2[idx]&lt;&gt;P1[idx] THEN
	Alpha[idx]:=((W2[idx]-W1[idx])/(INT_TO_REAL(P2[idx]-P1[idx])));
	Beta[idx]:=(W1[idx])-(W2[idx]-W1[idx])/(INT_TO_REAL(P2[idx]-P1[idx]))*INT_TO_REAL(P1[idx]);
	(* Poids bascule 1*)	
	Poids[idx] := Alpha[idx]*(Sig_real[idx])+beta[idx];
	END_IF;
END_FOR;


IF  NOT Simulation_en_cours
    THEN
       Poids_real :=0.0;
       FOR idx_B:=1 TO 5 DO
	   (* Calcule du poids total pour les bascules *)
	   BCMix_Pds_ADJ[idx_B]:=0;
	   IF Tab_Statut[Idx_B] THEN
	      BCMix_Pds_ADJ[idx_B]:= real_to_int(100.0*Poids[idx_B]);
	      Poids_real := Poids_real + 100.0*Poids[Idx_B];
	   END_IF;
       END_FOR;
    ELSE
       (* Cas : en simulation *)
       	Poids_real := Int_to_real(word_to_int(Poids_simulateur));
END_IF;	







(*Surcharge ou detarrage *)
FOR idx_A := 1 TO 5 DO
    IF Tab_Statut[Idx_A] THEN
       depassement_Max[idx_A] := Poids[idx_A] &gt; int_to_real( detarage_Max);
    END_IF;   
END_FOR;
TON_1 (IN := Poids[1] &lt; int_to_real( detarage_Min ),PT := t#5s);
depassement_Min[1] := TON_1.Q AND Tab_Statut[1];

TON_2 (IN := Poids[2] &lt; int_to_real( detarage_Min ), PT := t#5s);
depassement_Min[2] := TON_2.Q AND Tab_Statut[2];

TON_3 (IN := Poids[3] &lt; int_to_real( detarage_Min ),PT := t#5s);
depassement_Min[3] := TON_3.Q AND Tab_Statut[3];

TON_4 (IN := Poids[4] &lt; int_to_real( detarage_Min ), PT := t#5s);
depassement_Min[4] := TON_4.Q AND Tab_Statut[4];

TON_5 (IN := Poids[5] &lt; int_to_real( detarage_Min ),PT := t#5s);
depassement_Min[5] := TON_5.Q AND Tab_Statut[5];

	      
DEF_depassement_Min := depassement_Min[1]
		       OR depassement_Min[2]
		       OR depassement_Min[3]
		       OR depassement_Min[4]
		       OR depassement_Min[5];

DEF_depassement_Max := depassement_Max[1]
		       OR depassement_Max[2]
		       OR depassement_Max[3]
		       OR depassement_Max[4]
		       OR depassement_Max[5];

(* *************************** *)
(* 
IF NOT Simulation_API
   AND DATA_IN[2].0 THEN
   (* Pas de simulation = utilisation valeur Analogique *)
   poids_real := int_to_real(DATA_IN[1]);
END_IF;
 
(* SIMULATION de POIDS au DOSAGE *)
IF  Simulation_API 
    AND Dosage 
    AND Poids_real &lt; int_to_real(poids_max-2) THEN
    poids_real := poids_real + 1.0*(INT_TO_REAL(Coef_simulation)/100.0);
END_IF;

(* SIMULATION de POIDS au VIDANGE *)
IF  Simulation_API 
    AND Vidange 
    AND Poids_real &gt; int_to_real(poids_min+2) THEN
    poids_real := poids_real - 1.0*(INT_TO_REAL(Coef_simulation)/100.0);
END_IF;

DEF_depassement_MIN := poids_real &lt; int_to_real(poids_min);
DEF_depassement_Max := poids_real &gt; int_to_real(poids_max);

poids := poids_real;
 *)
</STSource>
		</FBProgram>
	</FBSource>
	<DDTSource DDTName="INTARR3" version="2.00" dateTime="dt#2002-11-30-12:00:00">
		<attribute name="TypeSignatureCheckSumString" value="A508"></attribute>
		<array>ARRAY[1..3] OF INT</array>
	</DDTSource>
	<EFSource nameOfEFType="NE" version="1.00" dateTime="dt#2010-02-19-09:12:06">
		<comment>Not equal to</comment>
		<attribute name="TypeDescriptiveForm" value="  The function checks the input values for inequality.  The data types of the input values must be identical.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="D306"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN1" typeName="ANY_ELEMENTARY">
					<comment>Input 1</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
				<variables name="IN2" typeName="ANY_ELEMENTARY">
					<comment>Input 2</comment>
					<attribute name="PositionPin" value="2"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="BOOL">
					<comment>Output</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<DDTSource DDTName="Correction_Humidite" version="0.04" dateTime="dt#2013-07-17-11:55:22">
		<attribute name="TypeSignatureCheckSumString" value="F2A5"></attribute>
		<structure>
			<variables name="Active_Correction" typeName="BOOL">
				<comment>Correction de l'humidite active pour le produit</comment>
			</variables>
			<variables name="Humidite" typeName="REAL">
				<comment>Valeur de l'humidite en TRE (temps reel)</comment>
			</variables>
			<variables name="Seuil_Correction" typeName="INT">
				<comment>Seuil sur lequel on applique la correction</comment>
			</variables>
			<variables name="Correction_Eau" typeName="INT">
				<comment>Correction de 'leau (ecart cumulle sur dosage gra)</comment>
			</variables>
			<variables name="Dosage_eau" typeName="BOOL">
				<comment>Dosage de l'eau en cours</comment>
			</variables>
		</structure>
	</DDTSource>
	<EFSource nameOfEFType="INT_TO_REAL" version="1.00" dateTime="dt#2010-02-19-09:30:01">
		<comment>Type conversion</comment>
		<attribute name="TypeDescriptiveForm" value="  The function converts an input value of the INT data type to a  BOOL, BYTE, WORD, DWORD, DINT, UINT UDINT, REAL or TIME output value.&#xA;  Note: The function converts strictly in accordance with IEC rules.&#xA;        Since this function has been realized as a generic function,&#xA;        there will also be a few illogical conversions, e.g. INT_TO_BOOL.&#xA;  Negative input values cannot be converted into data types UINT, UDINT or TIME.&#xA;  When converting an input value from the data type INT into data type WORD,&#xA;  the bit pattern from the input is transferred to the output without being modified.&#xA;  When converting an input value of data type INT into the data types BOOL or BYTE,&#xA;  the least significant bits of the input are transferred to the output.&#xA;"></attribute>
		<attribute name="IsTypeHidden" value="FALSE"></attribute>
		<attribute name="TypeCodeCheckSumString" value="0000"></attribute>
		<attribute name="TypeSignatureCheckSumString" value="698C"></attribute>
		<ExternalToolsOnly>
			<inputParameters>
				<variables name="IN" typeName="INT">
					<comment>Input value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</inputParameters>
			<outputParameters>
				<variables name="OUT" typeName="REAL">
					<comment>Output value</comment>
					<attribute name="PositionPin" value="1"></attribute>
				</variables>
			</outputParameters>
		</ExternalToolsOnly>
	</EFSource>
	<dataBlock>
		<variables name="Index_A" typeName="INT"></variables>
		<variables name="Index_B" typeName="INT"></variables>
		<variables name="Conf_malaxeur1_present" typeName="EBOOL" topologicalAddress="%M465"></variables>
		<variables name="Debug_BoolAlarme2" typeName="EBOOL" topologicalAddress="%M647"></variables>
		<variables name="Debug_Controle2" typeName="EBOOL" topologicalAddress="%M652"></variables>
		<variables name="Conf_Anhydrite_dest" typeName="INT" topologicalAddress="%MW7716"></variables>
		<variables name="Conf_adj2_nb_cuves" typeName="INT" topologicalAddress="%MW8174"></variables>
		<variables name="Conf_eau_TON_vibreur_bal" typeName="TIME" topologicalAddress="%MW7992">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Vid_seq_Cim2" typeName="EBOOL"></variables>
		<variables name="DI_Water_Aid_Extract_PB_PLC_ON" typeName="EBOOL">
			<comment>Aid extraction on water lines' pushbutton pressed (vibrator, air shock, …) - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Presence_prod_Adj" typeName="EBOOL"></variables>
		<variables name="W1_adj_Weight1" typeName="REAL" topologicalAddress="%MW8108">
			<comment>Value in kg for low point of the calibration for adm weigher 1</comment>
		</variables>
		<variables name="W2_TT_gra" typeName="REAL" topologicalAddress="%MW8412">
			<comment>Value in kg for high point of the calibration for hopper bin</comment>
		</variables>
		<variables name="IDX_init1" typeName="INT"></variables>
		<variables name="Pup_Cde_vibreur_Eau1" typeName="BOOL"></variables>
		<variables name="Dosage_simultane_Gra2" typeName="BOOL"></variables>
		<variables name="AI_40_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="LEC_ANA_Gra2" typeName="LEC_ANA"></variables>
		<variables name="CPT15_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.6.1.3"></variables>
		<variables name="Conf_TT_Gra_ctrl_vide_actif0" typeName="EBOOL" topologicalAddress="%M431"></variables>
		<variables name="Info_vidange_vers_mal2_s_seche" typeName="EBOOL" topologicalAddress="%M21"></variables>
		<variables name="Conf_AU_pupitre_Actif0" typeName="EBOOL" topologicalAddress="%M433"></variables>
		<variables name="TG_Vides" typeName="EBOOL"></variables>
		<variables name="PESA_Anh" typeName="PESA"></variables>
		<variables name="TON_manu_Anh" typeName="TON"></variables>
		<variables name="fm_cumul_Anh_manu_stable" typeName="R_TRIG"></variables>
		<variables name="DI_Tank2_Solid_Content_Available" typeName="EBOOL">
			<comment>Water 'tank 4' solid content measure sensor available ['1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_35" typeName="INT">
			<comment>Old %IW99</comment>
		</variables>
		<variables name="AI_16_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Doser_Adj_auto" typeName="BOOL"></variables>
		<variables name="transfert_granulat_OK" typeName="EBOOL"></variables>
		<variables name="Ecart_pesee_Gra2" typeName="INT" topologicalAddress="%MW4791">
			<comment>Ecart de pesee en unités de dosage pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="DI_76" typeName="EBOOL" topologicalAddress="%I0.2.11">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="bit_ouverture_deuxieme_comp" typeName="EBOOL"></variables>
		<variables name="Pret_pour_vidange_Mal2" typeName="EBOOL"></variables>
		<variables name="DI_Plant_In_Auto" typeName="EBOOL" topologicalAddress="%I0.1.0">
			<comment>Plant in auto/manu mode' selector is on 'auto' mode (if Direct-to-process console) or 'Force auto mode' (if Profibus console) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Cde_petite_vitesse_Anh" typeName="EBOOL" topologicalAddress="%M224"></variables>
		<variables name="AI_18_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Intro_en_cours" typeName="EBOOL"></variables>
		<variables name="DO_29" typeName="EBOOL" topologicalAddress="%Q0.3.28">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Cycle_Stop" typeName="EBOOL" topologicalAddress="%I0.1.1">
			<comment>Stop cycle' rotary switch is activated - Freezes the production, but does not 'break' the batch ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_70" typeName="EBOOL" topologicalAddress="%Q0.4.5">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_48_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="CPT13_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.10.4.4"></variables>
		<variables name="TON_ARRET_MAL2" typeName="TON"></variables>
		<variables name="CPT02_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.9.1.4"></variables>
		<variables name="BCMix_DO_113" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_35_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Cond_Vid_Dry3" typeName="BOOL"></variables>
		<variables name="Simuler_dosage_Cim1" typeName="BOOL"></variables>
		<variables name="DI_Admix_Tank5_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.36">
			<comment>Open admixture 'tank 5'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Dire_transfert_Cim_termine" typeName="EBOOL"></variables>
		<variables name="Conf_TT_Gra_BCD" typeName="EBOOL" topologicalAddress="%M427">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="Malax_2_t1_ouvert_sortie_seche" typeName="EBOOL"></variables>
		<variables name="Surcharge_Anh" typeName="BOOL"></variables>
		<variables name="DI_14" typeName="EBOOL" topologicalAddress="%I0.1.13">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Conf_Eau_dest_basc" typeName="ARRAY[1..2] OF INT" topologicalAddress="%MW8080">
			<comment>0=Bypass_ou_malax, 1=Tapis_pes_gra1, 2=Tapis_pes_gra2</comment>
		</variables>
		<variables name="Poids_real_TT_Cim" typeName="REAL" topologicalAddress="%MW4698">
			<comment>Poids tremis tampon ciment en reel</comment>
		</variables>
		<variables name="DO_84" typeName="EBOOL" topologicalAddress="%Q0.4.19">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Defaut_vidange_TT_granulat" typeName="EBOOL" topologicalAddress="%M601"></variables>
		<variables name="Conf_TT_granulat_seuil_maxi" typeName="INT" topologicalAddress="%MW8387"></variables>
		<variables name="Pesee_Eau2_terminee" typeName="EBOOL"></variables>
		<variables name="AI_64_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Conf_cim2_TOFF_vibreur_bal" typeName="TIME" topologicalAddress="%MW7942"></variables>
		<variables name="consigne_ppe4" typeName="INT" topologicalAddress="%MW5941"></variables>
		<variables name="sens_pesage_fin_eau1" typeName="EBOOL" topologicalAddress="%M344"></variables>
		<variables name="Conf_skip_tps_GVHaut_GVBas" typeName="TIME" topologicalAddress="%MW8376"></variables>
		<variables name="Conf_multipl_Cim1" typeName="REAL" topologicalAddress="%MW7906"></variables>
		<variables name="Idx_Vid_Dry_Cim2" typeName="INT"></variables>
		<variables name="BCMix_DO_53" typeName="EBOOL" topologicalAddress="%M853">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_tap_trans_vit_rotation_mini" typeName="TIME" topologicalAddress="%MW8344"></variables>
		<variables name="Numero_produit_Gra2_aux1" typeName="INT"></variables>
		<variables name="Info_prot_mot_skip" typeName="EBOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="AI_8_Value_Module1" typeName="INT" topologicalAddress="%MW4419"></variables>
		<variables name="Info_bac1_adj_plein" typeName="BOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Conf_cim2_filtre_Nb_Vals" typeName="INT" topologicalAddress="%MW7946">
			<variableInit value="3"></variableInit>
		</variables>
		<variables name="Poids_sup_seuil_vide_Cim2" typeName="EBOOL" topologicalAddress="%M755"></variables>
		<variables name="Conf_presence_bypass" typeName="EBOOL" topologicalAddress="%M450"></variables>
		<variables name="DO_100" typeName="EBOOL" topologicalAddress="%Q0.4.35">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Info_skip_defaut_ext_grde_vit" typeName="EBOOL"></variables>
		<variables name="Conf_granulat1_tps_vidange" typeName="TIME" topologicalAddress="%MW7750">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Recup_voie_ana_Adj_Weight3" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="Simuler_dosage_Eau2" typeName="BOOL"></variables>
		<variables name="Conf_eau_TON_pesage_fin" typeName="TIMEARR4" topologicalAddress="%MW7108"></variables>
		<variables name="Conf_granulat_tps_apres_coulant" typeName="TIMEARR14" topologicalAddress="%MW6718"></variables>
		<variables name="DO_90" typeName="EBOOL" topologicalAddress="%Q0.4.25">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_Voltage_Control_TON" typeName="TIME">
			<comment>Time Before fault appear</comment>
		</variables>
		<variables name="AI_Adj_Weight_3_Value" typeName="INT"></variables>
		<variables name="AI_Admix_Weigher_4_Status" typeName="BOOL">
			<comment>Adress in M340 only</comment>
		</variables>
		<variables name="DI_PB_PLC_Plant_Manu" typeName="EBOOL">
			<comment>Plant in manual mode' pushbutton is pushed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Seuil_vide_atteint_Gra2" typeName="EBOOL"></variables>
		<variables name="AI_27_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="CPT04_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.3.1.3"></variables>
		<variables name="fin_malaxeur2_ouvert" typeName="EBOOL"></variables>
		<variables name="Seuil_a_depasser_TT_Gra" typeName="INT"></variables>
		<variables name="TON_dis_tapis_trans" typeName="TON"></variables>
		<variables name="Ecart_pesee_en_taux_Cim1" typeName="INT" topologicalAddress="%MW4801">
			<comment>Ecart de pesee en pour dix-millieme pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="AI_Value_Cem_WH" typeName="INT"></variables>
		<variables name="Conf_granulat2_TOFF_vibreur_bal" typeName="TIME" topologicalAddress="%MW7824">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Conf_TT_cim_TOFF_vibreur" typeName="TIME" topologicalAddress="%MW8488"></variables>
		<variables name="Stock_manu_Cim_1" typeName="BOOL"></variables>
		<variables name="DI_21" typeName="EBOOL" topologicalAddress="%I0.1.20">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Info_Marche_RAMPE" typeName="BOOL"></variables>
		<variables name="AI_25_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="conf_mal1_sens_fc_trap2_ouv" typeName="EBOOL" topologicalAddress="%M461"></variables>
		<variables name="mot1_temps_malaxage1" typeName="WORD"></variables>
		<variables name="Conf_granulat1_tapis" typeName="EBOOL" topologicalAddress="%M304"></variables>
		<variables name="Cde_BCMix_PPE" typeName="BOOLARR20" topologicalAddress="%MW5593">
			<comment>on crée la cde BC-MIX à  l'@ de l'ancien start comptage</comment>
		</variables>
		<variables name="Conf_granulat2_TON_vibreur_bal" typeName="TIME" topologicalAddress="%MW7822">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Conf_adjuvant_comp2_vers_eau1" typeName="EBOOL" topologicalAddress="%M362"></variables>
		<variables name="DI_Agg_WH_PB_PLC_Open" typeName="EBOOL">
			<comment>Open aggregate hopper bin' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_60_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="FD_manu_2_Gra" typeName="F_TRIG"></variables>
		<variables name="Numero_produit_Anh" typeName="INT" topologicalAddress="%MW4550"></variables>
		<variables name="Transfert_bonbonne_en_cours" typeName="EBOOL" topologicalAddress="%M504"></variables>
		<variables name="Limite_correction_Gra1" typeName="INT"></variables>
		<variables name="FM_Cde_Manu_PPE_17" typeName="R_TRIG"></variables>
		<variables name="Conf_techno_basc_eau2" typeName="INT" topologicalAddress="%MW8052">
			<comment>0=Bin 1=BCD 2=TCP_Arpege 3=Ana 4=Profibus</comment>
		</variables>
		<variables name="mot_entree1_ccr1" typeName="WORD" topologicalAddress="%MW5932"></variables>
		<variables name="Alarme_prot_Thermique_malax1" typeName="EBOOL" topologicalAddress="%M692">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="AI_58" typeName="INT">
			<comment>Old %IW122</comment>
		</variables>
		<variables name="cde_manu_ppe_en_cours" typeName="BOOLARR20" topologicalAddress="%MW5603">
			<comment>La différence par rapport à "Cde_BCMix_ppe" n'est pas bien claire</comment>
		</variables>
		<variables name="Info_arret_cycle" typeName="EBOOL" topologicalAddress="%M34"></variables>
		<variables name="Conf_Skip_Slack_Steel_Act0" typeName="EBOOL">
			<comment>use of slack steel</comment>
		</variables>
		<variables name="BCMix_DO_75" typeName="EBOOL" topologicalAddress="%M875">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Poids_instantane_Gra4" typeName="INT">
			<comment>(*non mis en service*)</comment>
		</variables>
		<variables name="Derniere_gachee_malaxeur2" typeName="EBOOL"></variables>
		<variables name="consigne_ppe16" typeName="INT" topologicalAddress="%MW5974"></variables>
		<variables name="Poids_deja_pese_Anh" typeName="INT" topologicalAddress="%MW4595"></variables>
		<variables name="TOF_cde_descente_skip" typeName="TOF"></variables>
		<variables name="Detarage_Gra3" typeName="BOOL"></variables>
		<variables name="Malaxage_termine_Mal2" typeName="EBOOL"></variables>
		<variables name="Pup_Descente_Skip" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="Conf_granulat2_tps_max_pesage" typeName="TIME" topologicalAddress="%MW7820">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="P1_eau1" typeName="INT" topologicalAddress="%MW8006">
			<comment>Value in points for low point of the calibration for water weigher 1</comment>
		</variables>
		<variables name="DI_44" typeName="EBOOL" topologicalAddress="%I0.1.43">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Numero_produit_Cim1_aux1" typeName="INT"></variables>
		<variables name="test_fuite_PPE" typeName="BOOLARR20"></variables>
		<variables name="Manu_cde_vidange_TT_cim" typeName="EBOOL" topologicalAddress="%M737"></variables>
		<variables name="Num_index_dos_diff_ppe" typeName="INTARR20">
			<comment>Numéro de l'index du dosage différé qui a conduit à l'activation de la pompe</comment>
		</variables>
		<variables name="Info_skip_defaut_ext_capt_GV" typeName="EBOOL"></variables>
		<variables name="Alarme_vidange_Eau1" typeName="EBOOL" topologicalAddress="%M558"></variables>
		<variables name="AI_67_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="anticipation_skip_TT" typeName="EBOOL"></variables>
		<variables name="TON_cable_mou" typeName="TON"></variables>
		<variables name="Poids_simu_TT_Cim" typeName="WORD" topologicalAddress="%MW5412"></variables>
		<variables name="Element_TG_Valide" typeName="EBOOL"></variables>
		<variables name="TOF_77_955" typeName="TOF"></variables>
		<variables name="BP_dosage_Gra_10" typeName="EBOOL" topologicalAddress="%M151"></variables>
		<variables name="Conf_Anh_seuil_vide" typeName="INT" topologicalAddress="%MW8238"></variables>
		<variables name="Conf_cim_TON_vibreur" typeName="TIMEARR6" topologicalAddress="%MW6936">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Alarme_Mesomatic5" typeName="BOOL"></variables>
		<variables name="Pesee_incomplete_Adj" typeName="EBOOL" topologicalAddress="%M565"></variables>
		<variables name="Temps_dep_SVD" typeName="UDINT">
			<comment>temps écoulé depuis le départ de la séquence en 1/10 sec</comment>
		</variables>
		<variables name="Seuil_vide_atteint_Mal1" typeName="EBOOL"></variables>
		<variables name="conf_granulat2_positif_a_1" typeName="EBOOL" topologicalAddress="%M327"></variables>
		<variables name="Cumul_Eau1_auto" typeName="STOCK5"></variables>
		<variables name="CPT17_COUNTER_CURRENT_VALUE" typeName="DINT"></variables>
		<variables name="Idx_MUX" typeName="INT"></variables>
		<variables name="Stock_manu_Gra_4" typeName="BOOL"></variables>
		<variables name="AI_29_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Conf_tps_retard_RAMPE" typeName="TIME" topologicalAddress="%MW8646"></variables>
		<variables name="Klaxon_fin_prod_mal1" typeName="BOOL"></variables>
		<variables name="TOF_Arret_ASPI_ET" typeName="TIME"></variables>
		<variables name="Manu_Log_Vibreur_Eau2" typeName="BOOL"></variables>
		<variables name="DO_39" typeName="EBOOL" topologicalAddress="%Q0.3.38">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_cim1_TOFF_vibreur_bal" typeName="TIME" topologicalAddress="%MW7890">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Gachee_terminee_Mal1" typeName="EBOOL"></variables>
		<variables name="BP_activation_Klaxon" typeName="BOOL"></variables>
		<variables name="DI_Cem_Ailock_Fault" typeName="EBOOL">
			<comment>Cement airlock (=primary hopper) external fault - This fault prohibits any cement transfer from the airlock. - Made for an independant system in Bercy &amp; Mirabeau, France. ['1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_2" typeName="INT" topologicalAddress="%IW0.6.1">
			<comment>Old %IW17</comment>
		</variables>
		<variables name="DI_Mixer2_ON" typeName="EBOOL">
			<comment>Mixer 2' is running ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_TT_cim_tps_reponse" typeName="TIME" topologicalAddress="%MW8482">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="DI_31" typeName="EBOOL" topologicalAddress="%I0.1.30">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Alarme_arret_urgence_adjuvant" typeName="EBOOL" topologicalAddress="%M792"></variables>
		<variables name="conf_adjuvant_sens_fc_vidange" typeName="EBOOL" topologicalAddress="%M357"></variables>
		<variables name="LEC_ARPEGE_Cim2" typeName="LEC_ARPEGE"></variables>
		<variables name="Defaut_positionnement_bypass" typeName="EBOOL" topologicalAddress="%M599"></variables>
		<variables name="Manu_Pup_ouv_basc_Eau2" typeName="BOOL"></variables>
		<variables name="AI_12_Higher_Saturation" typeName="BOOL" topologicalAddress="%IW0.8.3.1.5">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="TON_TT_gra_ctrl_non_vide" typeName="TON"></variables>
		<variables name="DI_Water_Tank2_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.25">
			<comment>Open water 'tank 2'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="FM_Cde_Manu_PPE_07" typeName="R_TRIG"></variables>
		<variables name="Pesee_terminee_Gra2" typeName="EBOOL"></variables>
		<variables name="mot1_temps_mini_malaxage2" typeName="WORD"></variables>
		<variables name="PD_Cim1_A_Doser" typeName="INT"></variables>
		<variables name="Alarme_satur_sup_Anh" typeName="EBOOL" topologicalAddress="%M798"></variables>
		<variables name="DO_06" typeName="EBOOL" topologicalAddress="%Q0.3.5">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="BCMix_DO_87" typeName="EBOOL" topologicalAddress="%M887">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Cem_Transfer_Done" typeName="EBOOL">
			<comment>Cement transfer is finished (Secondary cement hopper is filled up and ready for introduction into mixer or truck. The airlock (=primary hopper) or the weigher has emptied.) - Made for an independant system in Bercy &amp; Mirabeau, France ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Idx_SVD_synchro" typeName="INT"></variables>
		<variables name="FM_dos_Manulog_PPE_14" typeName="R_TRIG"></variables>
		<variables name="Info_balance_eau1_fermee" typeName="EBOOL" topologicalAddress="%M4"></variables>
		<variables name="TON_skip_bas_haut" typeName="TON"></variables>
		<variables name="Conf_eau2_tps_stabilisation" typeName="TIME" topologicalAddress="%MW8032"></variables>
		<variables name="P2_gra2" typeName="INT" topologicalAddress="%MW7838">
			<comment>Value in points for the high point of the calibration for agg weigher 2</comment>
		</variables>
		<variables name="NP_Gra1" typeName="INT"></variables>
		<variables name="Conf_Cim1_nb_sequence" typeName="INT" topologicalAddress="%MW7914"></variables>
		<variables name="Auto_Marche_Tapis_Trans" typeName="BOOL"></variables>
		<variables name="Alarme_Niveau_haut_ADJ_Comp3" typeName="EBOOL" topologicalAddress="%M660">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="TON_ctrle_rotation_G1" typeName="TON"></variables>
		<variables name="Bit_validation_camion_s_seche" typeName="EBOOL" topologicalAddress="%M491"></variables>
		<variables name="TON_TOFF_PV_Gra1" typeName="TON_TOFF"></variables>
		<variables name="DI_Mixer1_Gate1_PB_PLC_Open" typeName="EBOOL">
			<comment>Open 'mixer 1' 'Gate 1'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_7_Value_Module1" typeName="INT" topologicalAddress="%MW4418"></variables>
		<variables name="DO_78" typeName="EBOOL" topologicalAddress="%Q0.4.13">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TON_malaxage_mal1" typeName="TON_P"></variables>
		<variables name="FBI_77_500" typeName="VIB_BAL"></variables>
		<variables name="Info_prot_mot_compresseur" typeName="EBOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="DI_Aux1_Emergency_Stop" typeName="EBOOL">
			<comment>Auxiliary 1' emergency stop is pushed - Displays an alarm - To be used with 'ETOR_etat_arret_urgence' ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Agg_Bin10_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.9">
			<comment>Open aggregate 'bin 10'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_eau1_filtre_Coef" typeName="INT" topologicalAddress="%MW7997">
			<comment>Modifs_M340</comment>
			<variableInit value="100"></variableInit>
		</variables>
		<variables name="Dosage_Adj_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Conf_granulat1_TOFF_vibreur_bal" typeName="TIME" topologicalAddress="%MW7760">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Conf_AU_malaxeur_Actif0" typeName="EBOOL" topologicalAddress="%M453"></variables>
		<variables name="AI_7_Higher_Saturation" typeName="BOOL" topologicalAddress="%IW0.7.2.1.5">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="CPT03_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.9.2.2"></variables>
		<variables name="AI_25" typeName="INT">
			<comment>Old %IW89</comment>
		</variables>
		<variables name="Pup_Cde_dos_Gra" typeName="ARRAY[1..14] OF BOOL">
			<comment>(Roumanie) à envoer sur le sortie</comment>
		</variables>
		<variables name="Info_prot_tapis_pes_Gra" typeName="EBOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="index_fermeture_organes_dosage" typeName="INT"></variables>
		<variables name="Mem_autorisation_RAZ" typeName="BOOL"></variables>
		<variables name="P2_adj_Weight1" typeName="INT" topologicalAddress="%MW8114">
			<comment>Value in point for high point of the calibration for adm weigher 1</comment>
		</variables>
		<variables name="Conf_skip_gde_vit_montee" typeName="EBOOL" topologicalAddress="%M293"></variables>
		<variables name="Cde_cuve1_mes_occupee" typeName="EBOOL" topologicalAddress="%M256"></variables>
		<variables name="DI_68" typeName="EBOOL" topologicalAddress="%I0.2.3">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="conf_ppe_apres_coulant" typeName="INT" topologicalAddress="%MW8124">
			<comment>Modifs_M340 Utilisation CCR uniquement</comment>
		</variables>
		<variables name="AI_21_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="CPT13_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.10.4.2"></variables>
		<variables name="Info_prot_therm_skip" typeName="EBOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="AI_32_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="DO_12" typeName="EBOOL" topologicalAddress="%Q0.3.11">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="BCMix_DO_103" typeName="EBOOL" topologicalAddress="%M903">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="P1_gra1" typeName="INT" topologicalAddress="%MW7772">
			<comment>Value in points for low point of the calibration for agg weigher 1</comment>
		</variables>
		<variables name="DI_Agg_Bin4_PB_PLC_Open" typeName="EBOOL">
			<comment>Open aggregate 'bin 4'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_68_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Conf_Mixer2_Auto_Stop" typeName="EBOOL">
			<comment>Enable Mixer 2 automatic Stop</comment>
		</variables>
		<variables name="Conf_Anh_Ana_Offset" typeName="INT">
			<comment>offset for anhydrite weigher</comment>
		</variables>
		<variables name="Pesee_Cim1_terminee" typeName="EBOOL"></variables>
		<variables name="TON_skip_haut" typeName="TON"></variables>
		<variables name="Debug_MotStatus7_Word" typeName="WORD" topologicalAddress="%MW4514"></variables>
		<variables name="DI_29" typeName="EBOOL" topologicalAddress="%I0.1.28">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="AI_13" typeName="INT">
			<comment>Old %IW77</comment>
		</variables>
		<variables name="Surcharge_TT_granulat" typeName="BOOL"></variables>
		<variables name="FM_FIN_DOS_Eau1" typeName="R_TRIG"></variables>
		<variables name="P2_cim2" typeName="INT" topologicalAddress="%MW7956">
			<comment>Value in points for high point of the calibration for cement weigher 2</comment>
		</variables>
		<variables name="Cde_Ouv_XV2" typeName="EBOOL">
			<comment>Colorant - Ouv (remplissage) reservoir D'expedition</comment>
		</variables>
		<variables name="Conf_basc_cim1_tps_reponse" typeName="TIME" topologicalAddress="%MW7884"></variables>
		<variables name="Manu_Pup_ouv_basc_Adj" typeName="BOOL"></variables>
		<variables name="DI_Admix_Tank13_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.44">
			<comment>Open admixture 'tank 13'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="TON_seuil_vide_Gra1" typeName="TON"></variables>
		<variables name="Init_API_Terminee" typeName="EBOOL">
			<comment>Remis à 0 par BC-Mix (valibdation)</comment>
		</variables>
		<variables name="AI_Admix_Array_W2" typeName="ARRAY[1..5] OF REAL"></variables>
		<variables name="dem_valcamion_av_vidange" typeName="EBOOL"></variables>
		<variables name="Stockage_inter_Gra_ACTIVE" typeName="EBOOL"></variables>
		<variables name="FM_dos_pupitre_PPE_11" typeName="R_TRIG"></variables>
		<variables name="Conf_TT_Gra_val_actif_1" typeName="EBOOL" topologicalAddress="%M428">
			<variableInit value="TRUE"></variableInit>
		</variables>
		<variables name="TON_TOFF_VIB_Cim2" typeName="TON_TOFF"></variables>
		<variables name="Ecart_pesee_en_taux_Adj" typeName="INT" topologicalAddress="%MW4805">
			<comment>Ecart de pesee en pour dix-millieme pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="CGG_activee_Eau2" typeName="BOOL"></variables>
		<variables name="memo_transfert_termine" typeName="EBOOL"></variables>
		<variables name="DI_39" typeName="EBOOL" topologicalAddress="%I0.1.38">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Conf_skip_tps_haut_bas" typeName="TIME" topologicalAddress="%MW8366"></variables>
		<variables name="CPT06_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.5.0.5"></variables>
		<variables name="FBI_76_1057" typeName="STA_TT"></variables>
		<variables name="Conf_multipl_Adjuvant" typeName="REAL" topologicalAddress="%MW8116"></variables>
		<variables name="AI_50" typeName="INT">
			<comment>Old %IW114</comment>
		</variables>
		<variables name="Autorisation_descente_skip" typeName="EBOOL"></variables>
		<variables name="AI_69_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Conf_TT_Gra_pesee" typeName="EBOOL" topologicalAddress="%M421"></variables>
		<variables name="AI_53_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="TON_TOFF_VIB_Adj" typeName="TON_TOFF"></variables>
		<variables name="RE_adj5" typeName="R_TRIG"></variables>
		<variables name="Tol_inf_Anh" typeName="EBOOL" topologicalAddress="%M580">
			<comment>tolérance inférieure</comment>
		</variables>
		<variables name="Alarme_arret_urgence_aux1" typeName="EBOOL" topologicalAddress="%M794"></variables>
		<variables name="Conf_Admix_Dis_PP_Mot_Prot_Act0" typeName="EBOOL">
			<comment>Admixtures discharging pumps motor protection</comment>
		</variables>
		<variables name="Type_produit_anhydrite" typeName="EBOOL" topologicalAddress="%M496"></variables>
		<variables name="DO_55" typeName="EBOOL" topologicalAddress="%Q0.3.54">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_124" typeName="EBOOL" topologicalAddress="%Q0.4.59">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Glace_Eau1_a_transferer" typeName="BOOL"></variables>
		<variables name="Valeur_wattmetre1" typeName="INT"></variables>
		<variables name="temp1" typeName="BOOL"></variables>
		<variables name="BP_dosage_Adj_4" typeName="EBOOL" topologicalAddress="%M169"></variables>
		<variables name="PESA_Cim2" typeName="PESA"></variables>
		<variables name="BCMix_DO_23" typeName="EBOOL" topologicalAddress="%M823">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TON_TOFF_AJU_Eau1" typeName="TON_TOFF"></variables>
		<variables name="CPT07_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.9.6.4"></variables>
		<variables name="FM_dos_ManuLog_PPE_5" typeName="R_TRIG"></variables>
		<variables name="Premier_Prod_Cim1" typeName="BOOL"></variables>
		<variables name="AI_72_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Conf_HMS_Profibus_IP4" typeName="INT" topologicalAddress="%MW8683">
			<comment>Format IP1.IP2.IP3.IP4</comment>
		</variables>
		<variables name="DIS_BAL_Eau2" typeName="DIS_BAL"></variables>
		<variables name="TON_seuil_vide_Anh" typeName="TON"></variables>
		<variables name="conf_anhydrite_val_actif_1" typeName="EBOOL" topologicalAddress="%M399"></variables>
		<variables name="Conf_Cim2_retard_ferm_balance" typeName="TIME" topologicalAddress="%MW7934">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="FBI_77_497" typeName="VIB_BAL"></variables>
		<variables name="DI_PB_Pro_Switch_Mixer_PB_Pro_ON" typeName="EBOOL">
			<comment>Switch mixer ON' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Alarme_Controle_Tension" typeName="EBOOL" topologicalAddress="%M696">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Pup_Cde_vibreur_Cim2" typeName="BOOL"></variables>
		<variables name="DI_Cem1_Weigher_PB_PLC_Open" typeName="EBOOL">
			<comment>Open 'cement 1' weigher' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_Arpege_IP1" typeName="INT" topologicalAddress="%MW8676">
			<comment>Format IP1.IP2.IP3.IP4</comment>
		</variables>
		<variables name="Simulation_dosage_Eau2" typeName="Simulation_dosage"></variables>
		<variables name="Manu_Log_Vibreur_Cim1" typeName="BOOL"></variables>
		<variables name="TOF_77_225" typeName="TOF"></variables>
		<variables name="CPT06_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.9.5.2"></variables>
		<variables name="conf_Eau2_binaire" typeName="EBOOL" topologicalAddress="%M385">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="AI_40_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="skip_transfert_vide" typeName="EBOOL" topologicalAddress="%M497"></variables>
		<variables name="DI_Skip_Thermal_Relay_CBT" typeName="EBOOL">
			<comment>Skip thermal relay tripped - An alarm stop the skip ['0' or '1' for 'TRUE' - see 'Conf_prot_therm_skip_Actif0' variable]</comment>
		</variables>
		<variables name="qdc" typeName="INTARR20"></variables>
		<variables name="TOF_feu_trappe2_mal2" typeName="TOF"></variables>
		<variables name="TON_skip_mou" typeName="TON"></variables>
		<variables name="Stock_manu_Adj_10" typeName="BOOL"></variables>
		<variables name="Defaut_vidange_TT_cim" typeName="EBOOL" topologicalAddress="%M610"></variables>
		<variables name="Depart_verif_Cim2" typeName="BOOL"></variables>
		<variables name="DO_20" typeName="EBOOL" topologicalAddress="%Q0.3.19">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_adjuvant_filtre_Nb_Vals" typeName="INT" topologicalAddress="%MW8105">
			<variableInit value="3"></variableInit>
		</variables>
		<variables name="Vid_Cim1_En_Cours" typeName="EBOOL"></variables>
		<variables name="Bit_validation_camion_mal1" typeName="EBOOL" topologicalAddress="%M489"></variables>
		<variables name="Limite_correction_Cim2" typeName="INT"></variables>
		<variables name="DO_108" typeName="EBOOL" topologicalAddress="%Q0.4.43">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Poids_deja_pese_Cim2" typeName="INT" topologicalAddress="%MW4590"></variables>
		<variables name="Manu_cde_dosage_adjuvant" typeName="EBOOL" topologicalAddress="%M735"></variables>
		<variables name="DI_Water1_Weigher_Dis_PP_Closed" typeName="EBOOL">
			<comment>Pump command OFF and emptying control valve closed for the pump-emptied water weigher ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Alarme_detare_TT_cim" typeName="EBOOL" topologicalAddress="%M616">
			<comment>pas vraiment utilisé pour le moment</comment>
		</variables>
		<variables name="FM_Info_skip_grde_vit_haut" typeName="R_TRIG"></variables>
		<variables name="Cde_vibreur_TT_gra" typeName="EBOOL" topologicalAddress="%M240"></variables>
		<variables name="COUNTER_CURRENT_VALUE_CPT" typeName="INTARR20">
			<comment>Copie directe des infos de la carte</comment>
		</variables>
		<variables name="W1_cim1" typeName="REAL" topologicalAddress="%MW7898">
			<comment>Value in kg for low point of the calibration for cement weigher 1</comment>
		</variables>
		<variables name="DI_Agg_Extraction_Aid_PB_PLC_ON" typeName="EBOOL">
			<comment>Aid extraction on aggregate weighing lines' pushbutton pressed (vibrator, air shock, …) - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="conf_Cim2_avec_sequence" typeName="EBOOL" topologicalAddress="%M379"></variables>
		<variables name="Conf_multipl_Cim2" typeName="REAL" topologicalAddress="%MW7958"></variables>
		<variables name="bit_valide_TT" typeName="EBOOL"></variables>
		<variables name="Conf_eau2_tps_max_pesage" typeName="TIME" topologicalAddress="%MW8042">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Cumul_Gra2_auto_stable" typeName="BOOL"></variables>
		<variables name="TON_45" typeName="TON"></variables>
		<variables name="Numeros_produits_granulat2" typeName="INT"></variables>
		<variables name="Numero_produit_Cim2_aux2" typeName="INT"></variables>
		<variables name="TON_DISCORD_ASPI_ET" typeName="TIME"></variables>
		<variables name="DO_Admix_Cpt3_PP_ON" typeName="EBOOL">
			<comment>Run the admixture weigher 'compartment 3' emptying pump - For the Romanian-type admixture process</comment>
		</variables>
		<variables name="CPT17_COMPARE_ENABLE" typeName="BOOL"></variables>
		<variables name="Info_trappe1_ouverte_mal2" typeName="EBOOL" topologicalAddress="%M29"></variables>
		<variables name="BALANCE_TT_Gra" typeName="WORD">
			<comment>Adresse en Qt uniquement</comment>
		</variables>
		<variables name="Conf_malaxeur1_puissance_max" typeName="INT" topologicalAddress="%MW8548"></variables>
		<variables name="DI_87" typeName="EBOOL" topologicalAddress="%I0.2.22">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="LEC_MESOMATIC_Eau2" typeName="LEC_MESOMATIC"></variables>
		<variables name="DO_Cem_Silo3_Open" typeName="EBOOL" topologicalAddress="%Q0.4.18">
			<comment>Open cement 'silo 3'</comment>
		</variables>
		<variables name="TON_29" typeName="TON"></variables>
		<variables name="BCMix_DO_120" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Admix_Weigher_Cpt6_PB_PLC_Op" typeName="EBOOL">
			<comment>Open admixture weigher 'compartment 6'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="test_fm_dos_manu" typeName="BOOL"></variables>
		<variables name="DI_Admix_Tank2_PB_PLC_Open" typeName="EBOOL">
			<comment>Open admixture 'tank 2'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Vibreur_tremies_Gra2" typeName="EBOOL"></variables>
		<variables name="AI_2_Lower_Saturation" typeName="BOOL" topologicalAddress="%IW0.6.1.1.6">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Manu_Pup_ouv_basc_Eau1" typeName="BOOL"></variables>
		<variables name="Dos_dif_Poids_demande" typeName="INT">
			<comment>Récupéré dans TG_IN[].Dos_dif_Dry[].Poids_demande</comment>
		</variables>
		<variables name="Cde_fermeture_trappe1_mal2" typeName="EBOOL" topologicalAddress="%M251"></variables>
		<variables name="Pesee_bloquee_Cim1" typeName="EBOOL" topologicalAddress="%M539"></variables>
		<variables name="Temps_malaxage2" typeName="TIME"></variables>
		<variables name="AI_28_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Voyant_manque_air1" typeName="BOOL"></variables>
		<variables name="Cde_dosage_generale_Cim2" typeName="EBOOL"></variables>
		<variables name="AI_61_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Conf_granulat1_seuil_mini" typeName="INT" topologicalAddress="%MW7744">
			<comment>Seuil de détarrage</comment>
		</variables>
		<variables name="CPT06_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.9.5.6"></variables>
		<variables name="Pup_Cde_ouv_TT_gra" typeName="BOOL"></variables>
		<variables name="DIS_BAL_Cim2" typeName="DIS_BAL"></variables>
		<variables name="W1_gra2" typeName="REAL" topologicalAddress="%MW7832">
			<comment>Value in kg for low point of the calibration for agg weigher 2</comment>
		</variables>
		<variables name="DI_Agg_Bin3_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.2">
			<comment>Open aggregate 'bin 3'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_Value_Module_6" typeName="INTARR8a" topologicalAddress="%MW4452">
			<comment>Not used</comment>
		</variables>
		<variables name="DI_56" typeName="EBOOL" topologicalAddress="%I0.1.55">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="TON_904" typeName="TON"></variables>
		<variables name="AI_15_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Montee_skip" typeName="EBOOL"></variables>
		<variables name="Idx_PPE" typeName="INT"></variables>
		<variables name="BCMix_DO_97" typeName="EBOOL" topologicalAddress="%M897">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Bit_cde_dos_Gra2" typeName="BOOL"></variables>
		<variables name="Stockage_inter_Cim_ACTIVE" typeName="EBOOL"></variables>
		<variables name="conf_Eau2_bcd" typeName="EBOOL" topologicalAddress="%M386">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="Transfert_Glace_Pret_Gra1" typeName="EBOOL"></variables>
		<variables name="Conf_klaxon_tps_marche" typeName="TIME" topologicalAddress="%MW8644">
			<comment>Modifs_M340</comment>
			<variableInit value="t#5s"></variableInit>
		</variables>
		<variables name="BP_dosage_Gra_3" typeName="EBOOL" topologicalAddress="%M144"></variables>
		<variables name="Cumuls_pesees" typeName="cumuls_pesees_struct">
			<comment>Cumuls des pesées de la fabrication pour la correction gachee sur gachee</comment>
		</variables>
		<variables name="AI_71_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Info_bac2_adj_plein" typeName="BOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="LC_Eau1_A_Doser" typeName="INT"></variables>
		<variables name="FORCE_ENABLE_CPT" typeName="ARRAY[1..20] OF EBOOL"></variables>
		<variables name="DENSITE_MES_BCD" typeName="WORD">
			<comment>ancien %IW25</comment>
		</variables>
		<variables name="Conf_adjuvant_comp2_vers_malax" typeName="EBOOL" topologicalAddress="%M364"></variables>
		<variables name="DI_Cem2_Weigher_Closed" typeName="EBOOL">
			<comment>Cement 2' weigher closed ['1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_59_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="DI_67" typeName="EBOOL" topologicalAddress="%I0.2.2">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="AI_64" typeName="INT">
			<comment>Old %IW128</comment>
		</variables>
		<variables name="Alarme_prot_mot_vis_cim" typeName="EBOOL" topologicalAddress="%M668">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Debug_BoolAlarme1" typeName="EBOOL" topologicalAddress="%M646"></variables>
		<variables name="Stock_manu_Adj_2" typeName="BOOL"></variables>
		<variables name="DO_Mixer2_Gate2_Close" typeName="EBOOL">
			<comment>Close 'mixer 2' 'gate 2'</comment>
		</variables>
		<variables name="DO_Agg_Bin9_Open" typeName="EBOOL" topologicalAddress="%Q0.4.8">
			<comment>Open aggregate 'bin 9'</comment>
		</variables>
		<variables name="mot_travail4_anhydrite" typeName="WORD"></variables>
		<variables name="Demande_Init_API" typeName="EBOOL"></variables>
		<variables name="DI_20" typeName="EBOOL" topologicalAddress="%I0.1.19">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Presence_cde_pupitre_Cim" typeName="BOOL"></variables>
		<variables name="AI_62_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Auto_Vibreur_Gra2" typeName="BOOL"></variables>
		<variables name="Intro_Glace_Prete_Gra1" typeName="EBOOL"></variables>
		<variables name="LIVE_LIST" typeName="ARRAY[1..4] OF INT"></variables>
		<variables name="LOWER_TH_VALUE_CPT" typeName="INTARR20"></variables>
		<variables name="DO_32" typeName="EBOOL" topologicalAddress="%Q0.3.31">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TON_TOFF_AJU_Adj" typeName="TON_TOFF"></variables>
		<variables name="FM_dos_pupitre_PPE_19" typeName="R_TRIG"></variables>
		<variables name="DO_47" typeName="EBOOL" topologicalAddress="%Q0.3.46">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Cumul_Cim_manu_stable" typeName="BOOL"></variables>
		<variables name="Conf_Gra3_seuil_mini" typeName="INT">
			<comment>Seuil de détarrage</comment>
		</variables>
		<variables name="Vid_Adj_C2_Terminee" typeName="EBOOL"></variables>
		<variables name="AI_4_Value_Module_1" typeName="INT" topologicalAddress="%MW4415"></variables>
		<variables name="transfert_terminee_granulat" typeName="EBOOL"></variables>
		<variables name="DO_Admix_Tank5_Open" typeName="EBOOL" topologicalAddress="%Q0.4.36">
			<comment>Open admixture 'tank 5'</comment>
		</variables>
		<variables name="Data_Mesomatic4" typeName="ARRAY[1..5] OF INT">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Mem_Depart_Vid_Dry_Ppe" typeName="BOOL"></variables>
		<variables name="BP_dosage_Adj_16" typeName="EBOOL" topologicalAddress="%M181"></variables>
		<variables name="DO_Cem_Weigher_Extraction_Aid" typeName="EBOOL" topologicalAddress="%Q0.3.26">
			<comment>Activate extraction aid of 'cement 1' and 'cement 2' lines (for silos and weighers) - To be used on open silos/weigher (connected in series with the 'open' outputs)</comment>
		</variables>
		<variables name="BCMix_DO_112" typeName="EBOOL" topologicalAddress="%M912">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="BALANCE_TT_Cim_M340" typeName="ARRAY[1..16] OF EBOOL">
			<comment>Adresse en M340 uniquement</comment>
		</variables>
		<variables name="BP_arret_malaxeur" typeName="BOOL"></variables>
		<variables name="Cde_vibreur_balance_Eau2" typeName="EBOOL" topologicalAddress="%M267"></variables>
		<variables name="Discordance_vidange_TT_granulat" typeName="EBOOL" topologicalAddress="%M600"></variables>
		<variables name="CPT16_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.10.7.7"></variables>
		<variables name="DI_05" typeName="EBOOL" topologicalAddress="%I0.1.4">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="BCMix_DO_64" typeName="EBOOL" topologicalAddress="%M864">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Temps_vid_Dry_Adj" typeName="DINT"></variables>
		<variables name="TOF_76_886" typeName="TOF"></variables>
		<variables name="AI_30_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Conf_adj_limite_sous_dosage" typeName="INTARR20" topologicalAddress="%MW7232">
			<comment>Correction gachee sur gachee</comment>
		</variables>
		<variables name="DO_Skip_Move_Down" typeName="EBOOL" topologicalAddress="%Q0.3.12">
			<comment>Move the skip back/down to the weighing line</comment>
		</variables>
		<variables name="LEC_ARPEGE_Gra1" typeName="LEC_ARPEGE"></variables>
		<variables name="Conf_TT_Cim_tps_vidange" typeName="TIME" topologicalAddress="%MW8478">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Stock_manu_Adj_18" typeName="BOOL"></variables>
		<variables name="BCMix_DO_33" typeName="EBOOL" topologicalAddress="%M833">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Cem_Silo5_PB_PLC_Open" typeName="EBOOL">
			<comment>Open cement 'silo 5'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_Cem_WH_Extraction_Aid" typeName="EBOOL" topologicalAddress="%Q0.3.30">
			<comment>Activate extraction aid of secondary cement hopper</comment>
		</variables>
		<variables name="TOF_77_290" typeName="TOF"></variables>
		<variables name="Tol_inf_Cim1" typeName="EBOOL" topologicalAddress="%M541">
			<comment>tolérance inférieure</comment>
		</variables>
		<variables name="Vibreur_TT_cim_non_pesee" typeName="EBOOL"></variables>
		<variables name="CPT02_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.9.1.2"></variables>
		<variables name="fm_cumul_Cim1_auto_stable" typeName="R_TRIG"></variables>
		<variables name="Depassement_tolerance_Adj" typeName="EBOOL" topologicalAddress="%M568"></variables>
		<variables name="Malax_2_t2_ouvert_sortie_seche" typeName="EBOOL"></variables>
		<variables name="Manu_Log_ouv_basc_Eau2" typeName="BOOL"></variables>
		<variables name="AI_16_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Conf_anhydrite_nb_vibreur_bal" typeName="INT" topologicalAddress="%MW8258"></variables>
		<variables name="DI_Cem_Airlock_pressure_OK" typeName="EBOOL" topologicalAddress="%I0.1.2">
			<comment>Air pressure OK for cement airlock (=primary hopper) - Made for an independant system in Bercy &amp; Mirabeau, France. ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_TT_Gra_tps_filtre_ctrl_vide" typeName="TIME" topologicalAddress="%MW8420"></variables>
		<variables name="Cde_dosage_generale_Cim1" typeName="EBOOL"></variables>
		<variables name="Saturation_inf_Adj_Weight1" typeName="BOOL"></variables>
		<variables name="LEC_ANA_TT_cim" typeName="LEC_ANA"></variables>
		<variables name="DO_61" typeName="EBOOL" topologicalAddress="%Q0.3.60">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Cumul_Cim1_auto" typeName="STOCK5"></variables>
		<variables name="Alarme_discordance_Malaxeur1" typeName="EBOOL" topologicalAddress="%M623">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Sequence_dry_en_cours" typeName="EBOOL"></variables>
		<variables name="AI_42" typeName="INT">
			<comment>Old %IW106</comment>
		</variables>
		<variables name="Ppe_Etape2_Attente_init" typeName="BOOLARR20"></variables>
		<variables name="Seuil_a_depasser_TT_cim" typeName="INT"></variables>
		<variables name="Alarme_vidange_TT_granulat" typeName="EBOOL" topologicalAddress="%M603"></variables>
		<variables name="BCMix_DO_15" typeName="EBOOL" topologicalAddress="%M815">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Mixer_Emergency_Stop" typeName="EBOOL">
			<comment>Mixing area' emergency stop is pushed - Displays an alarm - To be used with 'ETOR_etat_arret_urgence' ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_techno_basc_eau1" typeName="INT" topologicalAddress="%MW8000">
			<comment>0=Bin 1=BCD 2=TCP_Arpege 3=Ana 4=Profibus</comment>
		</variables>
		<variables name="Tol_inf_Cim2" typeName="EBOOL" topologicalAddress="%M758">
			<comment>tolérance inférieure</comment>
		</variables>
		<variables name="Transf_Presence_Glace_Gra1" typeName="BOOL"></variables>
		<variables name="Seuil_vide_atteint_TT_Cim" typeName="EBOOL"></variables>
		<variables name="DO_111" typeName="EBOOL" topologicalAddress="%Q0.4.46">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="FD_VAL_CAM_B" typeName="F_TRIG"></variables>
		<variables name="Manu_cde_vibreur_bal_granulat2" typeName="EBOOL" topologicalAddress="%M714"></variables>
		<variables name="IDE500_info_voie" typeName="IDE_channel_ARR12" topologicalAddress="%MW5984">
			<comment>IDE500_Voie[1] = donnée de la voie 1</comment>
		</variables>
		<variables name="Gachee_terminee_Mal2" typeName="EBOOL"></variables>
		<variables name="LEC_ARPEGE_Adj2" typeName="LEC_ARPEGE"></variables>
		<variables name="Alarme_satur_inf_Cim2" typeName="EBOOL" topologicalAddress="%M767"></variables>
		<variables name="CCR_Simulees" typeName="BOOL"></variables>
		<variables name="FD_manu_1_Adj" typeName="F_TRIG"></variables>
		<variables name="trappe_mal1_ouverte" typeName="EBOOL"></variables>
		<variables name="Dosage_ppe_en_cours" typeName="EBOOL"></variables>
		<variables name="BCMix_DO_6" typeName="EBOOL" topologicalAddress="%M806">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Alarme_detare_Eau1" typeName="EBOOL" topologicalAddress="%M561"></variables>
		<variables name="TON_seuil_vide_Eau2" typeName="TON"></variables>
		<variables name="BCMix_DO_42" typeName="EBOOL" topologicalAddress="%M842">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_Admix_Tank16_Open" typeName="EBOOL" topologicalAddress="%Q0.4.47">
			<comment>Open admixture 'tank 16'</comment>
		</variables>
		<variables name="No_prod_Section392" typeName="INT">
			<comment>Numéro d'index du dosage dans la table des dosages differés</comment>
		</variables>
		<variables name="DO_99" typeName="EBOOL" topologicalAddress="%Q0.4.34">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_32_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="TON_89" typeName="TON"></variables>
		<variables name="Conf_granulat_vidange_parallele" typeName="EBOOL" topologicalAddress="%M313"></variables>
		<variables name="Poids_simu_Gra2" typeName="WORD" topologicalAddress="%MW5403"></variables>
		<variables name="Surcharge_Gra2" typeName="BOOL"></variables>
		<variables name="Defaut_Anh" typeName="EBOOL"></variables>
		<variables name="CPT01_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.0.0.5"></variables>
		<variables name="DO_Water_Tank1_Open" typeName="EBOOL" topologicalAddress="%Q0.4.24">
			<comment>Open water 'tank 1'</comment>
		</variables>
		<variables name="Numero_produit_Cim1_cumul" typeName="INT"></variables>
		<variables name="Adresse_Arpege_TCP" typeName="ADDM_TYPE"></variables>
		<variables name="BCMix_DO_72" typeName="EBOOL" topologicalAddress="%M872">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="CPT04_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.9.3.2"></variables>
		<variables name="Cde_vidange_bascule_Gra2" typeName="EBOOL" topologicalAddress="%M226"></variables>
		<variables name="Saturation_sup_TT_cim" typeName="BOOL"></variables>
		<variables name="consigne_ppe17" typeName="INT" topologicalAddress="%MW5976"></variables>
		<variables name="CPT13_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.10.4.6"></variables>
		<variables name="Doser_eau_manu" typeName="BOOL"></variables>
		<variables name="Conf_cim_TOFF_ajustement" typeName="TIMEARR6" topologicalAddress="%MW6992">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Poids_vise_deja_ecrit_Eau2" typeName="BOOL"></variables>
		<variables name="BCMix_DO_128" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="consigne_ppe3" typeName="INT" topologicalAddress="%MW5939"></variables>
		<variables name="Conf_malaxeur1_retard_s_seche" typeName="TIME" topologicalAddress="%MW8558"></variables>
		<variables name="Init_From_BCMiX" typeName="EBOOL" topologicalAddress="%M482">
			<comment>Mis à 1 et à 0 par BC-Mix</comment>
		</variables>
		<variables name="Detarage_Gra2" typeName="BOOL"></variables>
		<variables name="Descente_skip" typeName="EBOOL"></variables>
		<variables name="CPT04_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.9.3.2"></variables>
		<variables name="Conf_Admix_Anh_Step" typeName="INT">
			<comment>step for anhydrite weigher</comment>
		</variables>
		<variables name="AI_Adj_Weight_2_Value" typeName="INT"></variables>
		<variables name="Manu_Log_Vibreur_Gra1" typeName="BOOL"></variables>
		<variables name="BP_dosage_Anh" typeName="EBOOL" topologicalAddress="%M188"></variables>
		<variables name="Introduction_Eau1_terminee" typeName="EBOOL"></variables>
		<variables name="DO_Admix_Cpt8_PP_ON" typeName="EBOOL">
			<comment>Run the admixture weigher 'compartment 8' emptying pump - For the Romanian-type admixture process</comment>
		</variables>
		<variables name="Poids_sup_seuil_vide_Gra2" typeName="EBOOL" topologicalAddress="%M524"></variables>
		<variables name="Cde_petite_vitesse_Eau1" typeName="EBOOL" topologicalAddress="%M223"></variables>
		<variables name="DI_77" typeName="EBOOL" topologicalAddress="%I0.2.12">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Conf_cim1_TON_vibreur_bal" typeName="TIME" topologicalAddress="%MW7888">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="voie_basc_TT_cim" typeName="INT" topologicalAddress="%MW8491">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="DO_119" typeName="EBOOL" topologicalAddress="%Q0.4.54">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Vidange_Dry_Eau1" typeName="Vidange_Basc_Dry2"></variables>
		<variables name="DI_Tank1_Solid_Content_Available" typeName="EBOOL">
			<comment>Water 'tank 3' solid content measure sensor available ['1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_34" typeName="INT">
			<comment>Old %IW98</comment>
		</variables>
		<variables name="conf_ppe_debit" typeName="INTARR20" topologicalAddress="%MW7482"></variables>
		<variables name="BALANCE_Adj_M340" typeName="ARRAY[1..16] OF EBOOL">
			<comment>Adresse en M340 uniquement</comment>
		</variables>
		<variables name="DI_Water1_PB_PLC_Slow_Weighing" typeName="EBOOL">
			<comment>Slow weighing on 'water 1' line' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_69_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="FM_dos_pupitre_PPE_8" typeName="R_TRIG"></variables>
		<variables name="Erreur_jetee_Gra2" typeName="INT" topologicalAddress="%MW5520"></variables>
		<variables name="DI_Water2_Weigher_Closed" typeName="EBOOL">
			<comment>Water 2' weigher closed ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_Anh_retard_ferm_balance" typeName="TIME" topologicalAddress="%MW8248">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Alarme_IDE500_Cim1" typeName="EBOOL" topologicalAddress="%M549"></variables>
		<variables name="DO_91" typeName="EBOOL" topologicalAddress="%Q0.4.26">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_32_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Etape_155_010_Prod" typeName="EBOOL"></variables>
		<variables name="AI_5_Lower_Saturation" typeName="BOOL" topologicalAddress="%IW0.7.0.1.6">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Conf_sens_fc_skip_grde_vit_haut" typeName="EBOOL" topologicalAddress="%M296"></variables>
		<variables name="DO_101" typeName="EBOOL" topologicalAddress="%Q0.4.36">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TON_Demarrage_RAMPE_ET" typeName="TIME"></variables>
		<variables name="Erreur_jetee_Cim1" typeName="INT" topologicalAddress="%MW5521"></variables>
		<variables name="Simuler_dosage_Cim2" typeName="BOOL"></variables>
		<variables name="Poids_sup_seuil_vide_Adj" typeName="EBOOL" topologicalAddress="%M563"></variables>
		<variables name="debut_intro_tapis_transfert" typeName="EBOOL"></variables>
		<variables name="Numero_manu_Eau" typeName="INT" topologicalAddress="%MW5564"></variables>
		<variables name="Conf_Cem1_Vib_Mot_Prot_Act0" typeName="EBOOL">
			<comment>Cement weigher1 vibrator motor protection</comment>
		</variables>
		<variables name="DI_Skip_SCHG_Low_Position" typeName="EBOOL">
			<comment>Skip in low position for speed change ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Sortie_seche" typeName="EBOOL"></variables>
		<variables name="Conf_cim2_tps_max_pesage" typeName="TIME" topologicalAddress="%MW7938"></variables>
		<variables name="Vidange_terminee_Gra" typeName="EBOOL"></variables>
		<variables name="DO_71" typeName="EBOOL" topologicalAddress="%Q0.4.6">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Numero_manu_Adj" typeName="INT" topologicalAddress="%MW5566"></variables>
		<variables name="TG_Cim1_Valide" typeName="BOOL"></variables>
		<variables name="DO_28" typeName="EBOOL" topologicalAddress="%Q0.3.27">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_Admix_Cpt10_PP_ON" typeName="EBOOL">
			<comment>Run the admixture weigher 'compartment 10' emptying pump - For the Romanian-type admixture process</comment>
		</variables>
		<variables name="CPT15_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.10.6.2"></variables>
		<variables name="Ouv_XV1" typeName="EBOOL">
			<comment>Colorant - Ouv tréie de pesage colorant</comment>
		</variables>
		<variables name="Cumul_Adj_manu_deptstab" typeName="BOOL"></variables>
		<variables name="FM_dos_Manulog_PPE_17" typeName="R_TRIG"></variables>
		<variables name="AI_19_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="AI_29_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="AI_14_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="TON_seuil_vide_Eau1" typeName="TON"></variables>
		<variables name="Presence_cde_pupitre_Gra" typeName="BOOL"></variables>
		<variables name="DIS_BAL_Comp_Adj" typeName="DIS_BAL"></variables>
		<variables name="Stock_manu_Adj_20" typeName="BOOL"></variables>
		<variables name="Malaxage_encours_Mal1" typeName="EBOOL"></variables>
		<variables name="Simu_dosage_en_cours_Gra2" typeName="BOOL"></variables>
		<variables name="Recup_voie_ana_Adj_Weight2" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="Saturation_sup_Gra2" typeName="BOOL"></variables>
		<variables name="TON_Alarme_PSL1" typeName="TON"></variables>
		<variables name="Init_Numeros_Gachee" typeName="EBOOL"></variables>
		<variables name="FM_BP_pupitre_PPE" typeName="BOOLARR20"></variables>
		<variables name="DI_15" typeName="EBOOL" topologicalAddress="%I0.1.14">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Discordance_vidange_TT_cim" typeName="EBOOL" topologicalAddress="%M609"></variables>
		<variables name="DO_Admix_Tank5_Simulation" typeName="EBOOL" topologicalAddress="%Q0.5.1">
			<comment>Generate a 'counting pulse' for simulating a counting on the admixture pump of 'tank 5' (has no effect on site, only for simulation)</comment>
		</variables>
		<variables name="No_Comp_ADJ" typeName="INTARR20" topologicalAddress="%MW7442">
			<comment>(Roumanie) No de compartiment pour chaque cuve ADJ</comment>
		</variables>
		<variables name="mot_entree3_ccr4" typeName="WORD" topologicalAddress="%MW5973"></variables>
		<variables name="AI_30_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Raz_CTU_graissage" typeName="BOOL"></variables>
		<variables name="DI_Agg_Weigher_CBT" typeName="EBOOL">
			<comment>Aggregate weigher and bins extraction aid circuit breaker tripped - A non-blocking alarm appears. An eventual 'flow fault' may stop the weighing ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_adjuvant_basc_tps_vidange" typeName="TIME" topologicalAddress="%MW8092">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="LED_Pupitre_Not_Used" typeName="ARRAY[1..5] OF INT">
			<comment>(Roumanie) Diode electro lumincente non utilisés</comment>
		</variables>
		<variables name="tremie_tampon_granulat_vide" typeName="EBOOL" topologicalAddress="%M499"></variables>
		<variables name="Defaut_Intro" typeName="EBOOL"></variables>
		<variables name="Manu_cde_PV_anhydrite" typeName="EBOOL" topologicalAddress="%M704"></variables>
		<variables name="Cond_Vid_Dry2" typeName="BOOL"></variables>
		<variables name="DI_Admix_Weigher_Cpt10_PB_PLC_Op" typeName="EBOOL">
			<comment>Open admixture weigher 'compartment 10'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="memo_skip_haut" typeName="EBOOL"></variables>
		<variables name="LEC_BIN_BCD_TT_gra" typeName="LEC_BIN_BCD"></variables>
		<variables name="TON_ctrle_rotation_G2" typeName="TON"></variables>
		<variables name="DO_Mixer1_Gate2_Open" typeName="EBOOL" topologicalAddress="%Q0.3.15">
			<comment>Open 'mixer 1' 'door 2'</comment>
		</variables>
		<variables name="Seuil_pv_Anh_Gra" typeName="INT"></variables>
		<variables name="sous_debit_ppe" typeName="BOOLARR20" topologicalAddress="%MW5242"></variables>
		<variables name="conf_mal2_sens_fc_trap2_ouv" typeName="EBOOL" topologicalAddress="%M472"></variables>
		<variables name="Discordance_vidange_adjuvant" typeName="EBOOL" topologicalAddress="%M569"></variables>
		<variables name="FM_Cde_Manu_PPE_16" typeName="R_TRIG"></variables>
		<variables name="DI_Admix_Tank2_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.33">
			<comment>Open admixture 'tank 2'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Cde_vidange_TT_cim" typeName="EBOOL" topologicalAddress="%M241"></variables>
		<variables name="Cde_simulation_cpt_adj2" typeName="BOOL"></variables>
		<variables name="DO_69" typeName="EBOOL" topologicalAddress="%Q0.4.4">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Alarme_Mesomatic2" typeName="BOOL">
			<comment>defaut Hardware NOT USED YET</comment>
		</variables>
		<variables name="DI_Main_Water_PP_CBT" typeName="EBOOL">
			<comment>Main water pump (water supply of the plant) circuit breaker tripped - An alarm stop the pump ['1' for 'TRUE']</comment>
		</variables>
		<variables name="P1_adj_Weight1" typeName="INT" topologicalAddress="%MW8112">
			<comment>Value in point for low point of the calibration for adm weigher 1</comment>
		</variables>
		<variables name="AI_56_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Manu_Tps_dosage_Gra" typeName="TIME" topologicalAddress="%MW5536"></variables>
		<variables name="TON_910" typeName="TON"></variables>
		<variables name="Idx_Comp" typeName="INT"></variables>
		<variables name="Conf_granulat_TON_ajustement" typeName="TIMEARR14" topologicalAddress="%MW6634"></variables>
		<variables name="Intro_dif_en_cours_Mal2" typeName="EBOOL"></variables>
		<variables name="Manu_Pup_Vibreur_Cim2" typeName="BOOL"></variables>
		<variables name="Pulse_Cmd_Gate_Mode_Auto" typeName="EBOOL"></variables>
		<variables name="Info_balance_Gra1_fermee" typeName="EBOOL" topologicalAddress="%M1"></variables>
		<variables name="Conf_AU_aux1_Actif0" typeName="EBOOL" topologicalAddress="%M434"></variables>
		<variables name="Manu_cde_vibreur_bal_cim2" typeName="EBOOL" topologicalAddress="%M744"></variables>
		<variables name="FD_manu_1_Gra" typeName="F_TRIG"></variables>
		<variables name="TON_seuil_vide_Gra2" typeName="TON"></variables>
		<variables name="Conf_Eau_dest_cuves" typeName="ARRAY[1..4] OF INT" topologicalAddress="%MW7178">
			<comment>0=cuve eau pesee, &gt;0=numero de pompe (cuve eau comptee)</comment>
		</variables>
		<variables name="Pulse_Pup_marche_Tapis_Trans" typeName="EBOOL"></variables>
		<variables name="Numero_produit_Eau1_cumul" typeName="INT"></variables>
		<variables name="fm_transfert_termine" typeName="R_TRIG"></variables>
		<variables name="Detarage_Anh" typeName="BOOL"></variables>
		<variables name="Cde_ouverture_trappe1_mal1" typeName="EBOOL" topologicalAddress="%M246"></variables>
		<variables name="CPT18_FORCE_ENABLE" typeName="EBOOL"></variables>
		<variables name="TG1_nouvelle" typeName="BOOL"></variables>
		<variables name="AI_35_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Def_com_IDE500" typeName="BOOL"></variables>
		<variables name="AI_12" typeName="INT" topologicalAddress="%IW0.8.3">
			<comment>Old %IW76</comment>
		</variables>
		<variables name="NP_Gra2" typeName="INT"></variables>
		<variables name="Info_prot_mot_PPE_gen_EAU" typeName="EBOOL"></variables>
		<variables name="DI_Admix_Tank12_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.43">
			<comment>Open admixture 'tank 12'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="P2_cim1" typeName="INT" topologicalAddress="%MW7904">
			<comment>Value in points for high point of the calibration for cement weigher 1</comment>
		</variables>
		<variables name="Vidange_Dry_Anh" typeName="Vidange_Basc_Dry2"></variables>
		<variables name="DO_13" typeName="EBOOL" topologicalAddress="%Q0.3.12">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="BP_dosage_Gra_11" typeName="EBOOL" topologicalAddress="%M152"></variables>
		<variables name="DI_Agg_Bin11_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.10">
			<comment>Open aggregate 'bin 11'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_52" typeName="EBOOL" topologicalAddress="%Q0.3.51">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_53" typeName="INT">
			<comment>Old %IW117</comment>
		</variables>
		<variables name="CPT18_FORCE_SYNC" typeName="EBOOL"></variables>
		<variables name="Cde_Bypass2" typeName="EBOOL"></variables>
		<variables name="Numero_manu_Eau_secondaire" typeName="INT" topologicalAddress="%MW5565">
			<comment>pilotage d'une seconde cuve a eau en manu</comment>
		</variables>
		<variables name="Defaut_sequence_Cim1" typeName="EBOOL" topologicalAddress="%M950"></variables>
		<variables name="Vibreur_balance_Cim2" typeName="EBOOL"></variables>
		<variables name="RE_adj2" typeName="R_TRIG"></variables>
		<variables name="DI_Cem_WH_Closed" typeName="EBOOL">
			<comment>Secondary cement hopper closed ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_anhydrite_seuil_mini" typeName="INT" topologicalAddress="%MW8240">
			<comment>Seuil de detarrage</comment>
		</variables>
		<variables name="DO_Cem1_Weigher_Open" typeName="EBOOL" topologicalAddress="%Q0.3.2">
			<comment>Open 'cement 1' weigher</comment>
		</variables>
		<variables name="Stock_manu_Gra_3" typeName="BOOL"></variables>
		<variables name="Numero_produit_Cim1_aux2" typeName="INT"></variables>
		<variables name="Poids_de_reference_Adj" typeName="INT"></variables>
		<variables name="Pesee_suivante_Eau2" typeName="EBOOL"></variables>
		<variables name="CPT17_FORCE_ENABLE" typeName="EBOOL"></variables>
		<variables name="Auto_arret_mal1_IN" typeName="EBOOL">
			<comment>Arret type Inde</comment>
		</variables>
		<variables name="Conf_inhib_arret_auto_mals" typeName="EBOOL"></variables>
		<variables name="Pulse_TG_Vides" typeName="EBOOL"></variables>
		<variables name="DI_28" typeName="EBOOL" topologicalAddress="%I0.1.27">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Temps_skip_gv_max" typeName="TIME"></variables>
		<variables name="liste_Seq_PPE" typeName="ARRAY[1..6] OF INT">
			<comment>N° des sequence DRY pour chaque dosage DRY</comment>
		</variables>
		<variables name="Defaut_Mal1" typeName="EBOOL"></variables>
		<variables name="pause_vidange_Gra" typeName="BOOL"></variables>
		<variables name="LEC_ANA_Cim2" typeName="LEC_ANA"></variables>
		<variables name="DI_PB_PLC_Plant_Auto" typeName="EBOOL">
			<comment>Plant in automatic mode' pushbutton is pushed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Premier_Prod_Cim2" typeName="BOOL"></variables>
		<variables name="Conf_granulat_seuil_antitalutage" typeName="INTARR14" topologicalAddress="%MW6753"></variables>
		<variables name="CPT15_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.10.6.4"></variables>
		<variables name="Conf_AU_Granulat1_Actif0" typeName="EBOOL" topologicalAddress="%M302"></variables>
		<variables name="Poids_sup_seuil_vide_TT_gra" typeName="EBOOL" topologicalAddress="%M605"></variables>
		<variables name="FBI_77_503" typeName="VIB_BAL"></variables>
		<variables name="Cde_vidange_bascule_Eau1_active" typeName="BOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="DO_Agg_Bin1_Open" typeName="EBOOL" topologicalAddress="%Q0.4.0">
			<comment>Open aggregate 'bin 1'</comment>
		</variables>
		<variables name="FM_Cde_Manu_PPE_04" typeName="R_TRIG"></variables>
		<variables name="Discordance_vidange_comp_adj" typeName="EBOOL" topologicalAddress="%M572"></variables>
		<variables name="mot1_temps_mini_malaxage1" typeName="WORD"></variables>
		<variables name="bit_intermediaire_vid_G2A" typeName="EBOOL"></variables>
		<variables name="DO_79" typeName="EBOOL" topologicalAddress="%Q0.4.14">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Dosage_Gra2_ACTIVE" typeName="EBOOL"></variables>
		<variables name="BCMix_DO_86" typeName="EBOOL" topologicalAddress="%M886">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TON_ctrle_rotation_tapis_trans" typeName="TON"></variables>
		<variables name="TON_XV2_Ferme" typeName="TON"></variables>
		<variables name="TON_99" typeName="TON"></variables>
		<variables name="conf_TT_Cim_positif_a_1" typeName="EBOOL" topologicalAddress="%M449"></variables>
		<variables name="CPT11_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.10.2.7"></variables>
		<variables name="Conf_malaxeur2_seuil_vide" typeName="INT" topologicalAddress="%MW8564"></variables>
		<variables name="Auto_ouv_basc_Cim2" typeName="BOOL"></variables>
		<variables name="Vidange_Dry_Eau2" typeName="Vidange_Basc_Dry2"></variables>
		<variables name="conf_mal1_sens_fc_trap2_fer" typeName="EBOOL" topologicalAddress="%M462"></variables>
		<variables name="Cpt_marche_manulog_PPE" typeName="INTARR20"></variables>
		<variables name="Gestion_Gachees_ACTIVE" typeName="EBOOL"></variables>
		<variables name="memo_skip_bas" typeName="EBOOL"></variables>
		<variables name="conf_anhydrite_binaire" typeName="EBOOL" topologicalAddress="%M397">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="Alarme_Niveau_haut_ADJ_Comp2" typeName="EBOOL" topologicalAddress="%M661">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="FBI_77_250" typeName="STABILI"></variables>
		<variables name="AI_22_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="DO_109" typeName="EBOOL" topologicalAddress="%Q0.4.44">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="PESA_Adj" typeName="PESA"></variables>
		<variables name="DI_Cem_Silo6_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.21">
			<comment>Open cement 'silo 6'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_Adj_dest_cuves" typeName="ARRAY[1..20] OF INT" topologicalAddress="%MW7462">
			<comment>0=cuve adj pesee, &gt;0=numero de pompe (cuve adj comptee)</comment>
		</variables>
		<variables name="BP_fermeture_trappe1_mal1" typeName="BOOL"></variables>
		<variables name="Conf_eau2_seuil_vid_ppe" typeName="INT" topologicalAddress="%MW8065">
			<comment>(roumanie) seuil limite de vidange par pompe</comment>
		</variables>
		<variables name="fm_doser_Gra1_auto" typeName="R_TRIG"></variables>
		<variables name="DO_Tank1_Measure_Busy" typeName="EBOOL">
			<comment>(Signal for solid content measure system) The water 'tank 3' valve is commanded open (delayed)</comment>
		</variables>
		<variables name="DI_Agg_Bin2_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.1">
			<comment>Open aggregate 'bin 2'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Bypass_Position2" typeName="EBOOL" topologicalAddress="%I0.1.21">
			<comment>Bypass in 'position 2' ('mixer 2' or 'dry output') ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Transfert_C_terminee" typeName="EBOOL"></variables>
		<variables name="AI_3" typeName="INT" topologicalAddress="%IW0.6.2">
			<comment>Old %IW18</comment>
		</variables>
		<variables name="Cde_vid_basc_Eau1_Ppe" typeName="BOOL">
			<comment>(*Roumanie*)</comment>
		</variables>
		<variables name="DO_83" typeName="EBOOL" topologicalAddress="%Q0.4.18">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="conf_adjuvant_bcd" typeName="EBOOL" topologicalAddress="%M359">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="DI_2_5_bars" typeName="EBOOL">
			<comment>Cement transfer system is pressurized - This input determines when the airlock (=primary cement hopper) is empty (if there is no secondary hopper silo) - Made for an independant system in Bercy &amp; Mirabeau, France. ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_47" typeName="EBOOL" topologicalAddress="%I0.1.46">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="DI_Water_Tank3_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.26">
			<comment>Open water 'tank 3'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="NP_Eau1_A_Doser" typeName="INT"></variables>
		<variables name="DO_Water_Weigher_Extraction_Aid" typeName="EBOOL">
			<comment>Activate extraction aid of 'water 1' and 'water 2' lines (for tanks and weighers) - To be used on open silos/weigher (connected in series with the 'open' outputs)</comment>
		</variables>
		<variables name="bit_dosage_parallele" typeName="EBOOL" topologicalAddress="%M366"></variables>
		<variables name="BCMix_DO_54" typeName="EBOOL" topologicalAddress="%M854">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_05" typeName="EBOOL" topologicalAddress="%Q0.3.4">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Simu_dosage_en_cours_Cim1" typeName="BOOL"></variables>
		<variables name="Manu_Station_Auto_Mode" typeName="BOOL">
			<comment>PB Desk (Roumania)</comment>
		</variables>
		<variables name="Conf_silo_anhydrite_tps_reponse" typeName="TIME" topologicalAddress="%MW7712"></variables>
		<variables name="TON_dis_tremie_tampon_ciment" typeName="TON"></variables>
		<variables name="cde_klaxon_pupitre" typeName="BOOL"></variables>
		<variables name="Numero_manu_Cim_cumul" typeName="INT"></variables>
		<variables name="Depart_Dosage_Eau2" typeName="BOOL"></variables>
		<variables name="Conf_TT_cim_TON_vibreur" typeName="TIME" topologicalAddress="%MW8486"></variables>
		<variables name="CPT02_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.9.1.7"></variables>
		<variables name="Alarme_arret_urgence_granulat2" typeName="EBOOL" topologicalAddress="%M787"></variables>
		<variables name="Auto_Vibreur_Cim2" typeName="BOOL"></variables>
		<variables name="Ecart_pesee_Anh" typeName="INT" topologicalAddress="%MW4798">
			<comment>Ecart de pesee en unités de dosage pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="FM_Init_Seq_Intro" typeName="R_TRIG"></variables>
		<variables name="AI_39_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="CPT09_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.0.0.5"></variables>
		<variables name="DI_Agg_Bin5_PB_PLC_Open" typeName="EBOOL">
			<comment>Open aggregate 'bin 5'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="BCMix_DO_104" typeName="EBOOL" topologicalAddress="%M904">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Com_ETH_HMS" typeName="Com_ModbusTCP_M340"></variables>
		<variables name="DI_Admix_Tank9_PB_PLC_Open" typeName="EBOOL">
			<comment>Open admixture 'tank 9'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="MANU_Pup_Vibreur_Gra1" typeName="BOOL"></variables>
		<variables name="CPT11_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.10.2.2"></variables>
		<variables name="conf_cim1_Val_actif_1" typeName="EBOOL" topologicalAddress="%M337"></variables>
		<variables name="AI_6_Higher_Saturation" typeName="BOOL" topologicalAddress="%IW0.7.1.1.5">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Extract_dest_Mal1" typeName="EBOOL"></variables>
		<variables name="DO_Emergency_Stop_Ack" typeName="EBOOL">
			<comment>Do remote 'emergency stop' acknowledgement on external systems - This output is set to 'ON' when the PLC leaves the 'emergency stop mode'</comment>
		</variables>
		<variables name="Conf_Cim1_retard_ferm_balance" typeName="TIME" topologicalAddress="%MW7882">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="CPT14_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.10.5.4"></variables>
		<variables name="AI_Value_Module_5" typeName="INTARR8a" topologicalAddress="%MW4444">
			<comment>Not used</comment>
		</variables>
		<variables name="Vidange_Dry_Gra1" typeName="Vidange_Basc_Dry2"></variables>
		<variables name="DO_23" typeName="EBOOL" topologicalAddress="%Q0.3.22">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Simu_dosage_en_cours_Eau2" typeName="BOOL"></variables>
		<variables name="AI_22" typeName="INT">
			<comment>Old %IW86</comment>
		</variables>
		<variables name="CPT04_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="BCMix_DO_98" typeName="EBOOL" topologicalAddress="%M898">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="conf_adjuvant_binaire" typeName="EBOOL" topologicalAddress="%M358">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="Doser_Gra_manu" typeName="BOOL"></variables>
		<variables name="top_seconde" typeName="SAMPLETM"></variables>
		<variables name="Surcharge_TT_cim" typeName="BOOL"></variables>
		<variables name="mot_entree2_ccr1" typeName="WORD" topologicalAddress="%MW5933"></variables>
		<variables name="Poids_deja_pese_Gra2" typeName="INT" topologicalAddress="%MW4588"></variables>
		<variables name="FM_dos_pupitre_PPE_10" typeName="R_TRIG"></variables>
		<variables name="Alarme_reset_API" typeName="EBOOL" topologicalAddress="%M507"></variables>
		<variables name="Cumul_Gra1_auto_stable" typeName="BOOL"></variables>
		<variables name="CPT10_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.10.1.7"></variables>
		<variables name="Pup_Cde_vid_basc_Adj_comp" typeName="ARRAY[1..10] OF BOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Recup_voie_ana_Gra1" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="Conf_Water1_Ana_Offset" typeName="INT">
			<comment>offset for water weigher 1</comment>
		</variables>
		<variables name="DO_Skip_Move_Up" typeName="EBOOL" topologicalAddress="%Q0.3.11">
			<comment>Move the skip toward/up to the mixer or truck</comment>
		</variables>
		<variables name="Conf_Mixer2_Gate_DI_Filter" typeName="EBOOL">
			<comment>if set to one the filter on the mixer gate sensors is activated</comment>
		</variables>
		<variables name="Pesee_Anh_terminee" typeName="EBOOL"></variables>
		<variables name="Bit_cde_dos_Gra1" typeName="BOOL"></variables>
		<variables name="Demande_ajustement_ppe" typeName="BOOLARR20"></variables>
		<variables name="DI_Ice_General_Alarm" typeName="EBOOL">
			<comment>External general alarm of the ice machine ['1' for 'TRUE']</comment>
		</variables>
		<variables name="BP_dosage_Adj_5" typeName="EBOOL" topologicalAddress="%M170"></variables>
		<variables name="Alarme_prot_mot_vib_Cim" typeName="EBOOL" topologicalAddress="%M693">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="BCMix_ETOR_81a96" typeName="WORD">
			<comment>ETOR_81a96 %IW26</comment>
		</variables>
		<variables name="Petite_vitesse_Anh" typeName="EBOOL"></variables>
		<variables name="DI_86" typeName="EBOOL" topologicalAddress="%I0.2.21">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Conf_eau1_tps_vidange" typeName="TIME" topologicalAddress="%MW7984">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="anticipation_montee_skip" typeName="EBOOL"></variables>
		<variables name="DO_Mixer1_ON" typeName="EBOOL" topologicalAddress="%Q0.3.32">
			<comment>Turn the 'mixer 1' ON - Controlable with a profibus console and a direct-to-PLC console</comment>
		</variables>
		<variables name="TON_SIMUL_BONBONNE_FERMeE" typeName="TON"></variables>
		<variables name="Pulse_Etape_155_030_Etat_AU" typeName="EBOOL"></variables>
		<variables name="inversion_info_presence" typeName="EBOOL" topologicalAddress="%M476"></variables>
		<variables name="Poids_real_Cim1" typeName="REAL" topologicalAddress="%MW4682">
			<comment>Poids ciment 1 en reel</comment>
		</variables>
		<variables name="Pese_Cim_auto" typeName="UDINTARR7" topologicalAddress="%MW4958">
			<comment>Suivi conso (lec BCMIX)</comment>
		</variables>
		<variables name="trappe_mal1_fermee" typeName="EBOOL"></variables>
		<variables name="TOF_Mem_vidange_adj2" typeName="TOF"></variables>
		<variables name="DI_57" typeName="EBOOL" topologicalAddress="%I0.1.56">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="PD_Eau2_A_Doser" typeName="INT"></variables>
		<variables name="Conf_granulat_tps_ecoulement" typeName="TIMEARR14" topologicalAddress="%MW6690"></variables>
		<variables name="Info_trappe2_ouverte_mal2" typeName="EBOOL" topologicalAddress="%M31"></variables>
		<variables name="Numero_pupitre_eau_cumul" typeName="INT"></variables>
		<variables name="Voyant_defaut2" typeName="BOOL"></variables>
		<variables name="conf_granulat2_sens_fc_vidange" typeName="EBOOL" topologicalAddress="%M323"></variables>
		<variables name="BCMix_DO_22" typeName="EBOOL" topologicalAddress="%M822">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="En_attente_du_debut_intro_gra" typeName="EBOOL">
			<comment>Bloque le chrono d'intro tant que les granulats ne sont pas physiquement en train de se verser dans le malaxeur</comment>
		</variables>
		<variables name="Ordre_intro_Gra1" typeName="BOOL"></variables>
		<variables name="FM_dos_ManuLog_PPE_6" typeName="R_TRIG"></variables>
		<variables name="TON_mini_malaxage_mal1" typeName="TON_P"></variables>
		<variables name="Perte_info_position_skip" typeName="EBOOL" topologicalAddress="%M593"></variables>
		<variables name="TON_455" typeName="TON"></variables>
		<variables name="Conf_CGG_activee" typeName="EBOOL" topologicalAddress="%M437">
			<comment>Correction gachee sur gachee</comment>
		</variables>
		<variables name="AI_33_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Conf_Arpege_IP2" typeName="INT" topologicalAddress="%MW8677">
			<comment>Format IP1.IP2.IP3.IP4</comment>
		</variables>
		<variables name="Debug_MotStatus5_Word" typeName="WORD" topologicalAddress="%MW4512"></variables>
		<variables name="Poids_vise_deja_ecrit_Anh" typeName="BOOL"></variables>
		<variables name="DO_Cem_Silo4_Open" typeName="EBOOL" topologicalAddress="%Q0.4.19">
			<comment>Open cement 'silo 4'</comment>
		</variables>
		<variables name="LEC_ARPEGE_Anh" typeName="LEC_ARPEGE"></variables>
		<variables name="TON_ARRET_MAL1_IN" typeName="TON"></variables>
		<variables name="BALANCE_Anh_M340" typeName="ARRAY[1..16] OF EBOOL">
			<comment>Adresse en M340 uniquement</comment>
		</variables>
		<variables name="TT_Gra_vide" typeName="BOOL"></variables>
		<variables name="DI_Conveyor_Belt_Running" typeName="EBOOL" topologicalAddress="%I0.1.19">
			<comment>Conveyor belt running ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Manu_Station_Manu_Mode" typeName="BOOL">
			<comment>PB Desk Communication (Roumania)</comment>
		</variables>
		<variables name="Trappe2_malaxeur1_bloquee" typeName="EBOOL" topologicalAddress="%M625"></variables>
		<variables name="Conf_techno_TT_cim" typeName="INT">
			<comment>0=Bin 1=BCD 2=TCP_Arpege 3=Ana 4=Profibus</comment>
		</variables>
		<variables name="CPT08_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="Manu_cde_vibreur_bal_anhydrite" typeName="EBOOL" topologicalAddress="%M716"></variables>
		<variables name="CPT02_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.9.1.6"></variables>
		<variables name="Conf_AU_Granulat2_Actif0" typeName="EBOOL" topologicalAddress="%M317"></variables>
		<variables name="Transfert_bonbonne_dans_TT" typeName="EBOOL"></variables>
		<variables name="LEC_ARPEGE_Eau2" typeName="LEC_ARPEGE"></variables>
		<variables name="CPT08_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.9.7.4"></variables>
		<variables name="Poids_real_Adj" typeName="REAL" topologicalAddress="%MW4690">
			<comment>Poids adjuvant 1 en reel</comment>
		</variables>
		<variables name="Conf_eau1_filtre_Nb_Vals" typeName="INT" topologicalAddress="%MW7998">
			<variableInit value="3"></variableInit>
		</variables>
		<variables name="Info_prot_mot_vis_cim" typeName="EBOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="AI_65_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Presence_prod_Cim1" typeName="EBOOL"></variables>
		<variables name="Init_API_en_cours" typeName="EBOOL">
			<comment>Anciennement en conflit sur %M482</comment>
		</variables>
		<variables name="Auto_ouv_basc_Eau2" typeName="BOOL"></variables>
		<variables name="LEC_ANA_Cim1" typeName="LEC_ANA"></variables>
		<variables name="fm_doser_Gra_manu" typeName="R_TRIG">
			<comment>DFB gestion du cumul "cumul_a pour auto"*)</comment>
		</variables>
		<variables name="Decomp_num_prod" typeName="Decomp_numero_produit">
			<comment>Utilisé pour les dosages simultanés</comment>
		</variables>
		<variables name="W2_gra2" typeName="REAL" topologicalAddress="%MW7834">
			<comment>Value in kg for the high point of the calibration for agg weigher 2</comment>
		</variables>
		<variables name="fm_rotation_tapis_G1" typeName="R_TRIG"></variables>
		<variables name="Conf_ppe_multiplexe" typeName="EBOOL" topologicalAddress="%M367"></variables>
		<variables name="TOF_77_244" typeName="TOF"></variables>
		<variables name="Prod_Suivant_Cim2" typeName="BOOL"></variables>
		<variables name="TON_DIS_MAL1" typeName="TON"></variables>
		<variables name="DO_60" typeName="EBOOL" topologicalAddress="%Q0.3.59">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TON_manu_Eau" typeName="TON"></variables>
		<variables name="AI_43" typeName="INT">
			<comment>Old %IW107</comment>
		</variables>
		<variables name="Numero_produit_Cim2_aux1" typeName="INT"></variables>
		<variables name="TON_1146" typeName="TON"></variables>
		<variables name="BCMix_DO_121" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_granulat2_filtre_Coef" typeName="INT" topologicalAddress="%MW7827">
			<variableInit value="100"></variableInit>
		</variables>
		<variables name="Conf_adjuvant_basc_tps_vid_comp2" typeName="TIME" topologicalAddress="%MW8094">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="fm_doser_Eau_manu" typeName="R_TRIG"></variables>
		<variables name="Conf_Cem_WH_Ana_Step" typeName="INT">
			<comment>step for cement waiting hopper</comment>
		</variables>
		<variables name="util_watt_mal2_plasticite" typeName="EBOOL" topologicalAddress="%M469"></variables>
		<variables name="Compteur_ppe" typeName="INTARR20" topologicalAddress="%MW4596">
			<comment>Nombre d'impulsions actuel sur les carte de comptage (redispatché dans le cas du comptage multiplexé) ou sur simulateur</comment>
		</variables>
		<variables name="malaxeur_1_vide" typeName="EBOOL" topologicalAddress="%M502"></variables>
		<variables name="temps_malax1" typeName="INT" topologicalAddress="%MW4650"></variables>
		<variables name="CPT20_FORCE_SYNC" typeName="EBOOL"></variables>
		<variables name="AI_49_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="AI_63_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="DI_36" typeName="EBOOL" topologicalAddress="%I0.1.35">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="DI_Admix_Tank1_PB_PLC_Open" typeName="EBOOL">
			<comment>Open admixture 'tank 1'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Vibreur_tremies_Gra1" typeName="EBOOL"></variables>
		<variables name="Top_depart_Vid_Eau2" typeName="EBOOL"></variables>
		<variables name="Temps_malaxage1" typeName="TIME"></variables>
		<variables name="AI_17_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Stock_Eau_manu" typeName="BOOL"></variables>
		<variables name="top_100ms" typeName="SAMPLETM"></variables>
		<variables name="DO_Cem2_Fine_Weighing" typeName="EBOOL">
			<comment>Activate fine weighing on the current silo of the 'cement 2' weighing line ['0' or '1' for 'ON']</comment>
		</variables>
		<variables name="Alarme_etat_Arret_urgence" typeName="EBOOL" topologicalAddress="%M674"></variables>
		<variables name="DI_Agg_Conveyor_Belt_PB_PLC_ON" typeName="EBOOL">
			<comment>Start/stop aggregate conveyor belt' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Cumul_Adj_auto_stable" typeName="BOOL"></variables>
		<variables name="Numero_pupitre_Gra_cumul" typeName="INT"></variables>
		<variables name="DO_125" typeName="EBOOL" topologicalAddress="%Q0.4.60">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_cim1_seuil_maxi" typeName="INT" topologicalAddress="%MW7873"></variables>
		<variables name="Alarme_vidange_Cim1" typeName="EBOOL" topologicalAddress="%M545"></variables>
		<variables name="Simuler_dosage_Adj_pese" typeName="BOOL"></variables>
		<variables name="DI_Admix_Weigher_Cpt7_PB_PLC_Op" typeName="EBOOL">
			<comment>Open admixture weigher 'compartment 7'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="TON_958" typeName="TON"></variables>
		<variables name="Conf_Agg2_Ana_Step" typeName="INT">
			<comment>step for aggregate weigher 2</comment>
		</variables>
		<variables name="Numero_produit_Gra1" typeName="INT" topologicalAddress="%MW4542"></variables>
		<variables name="DO_Admix_Tank17_Open" typeName="EBOOL" topologicalAddress="%Q0.4.48">
			<comment>Open admixture 'tank 17'</comment>
		</variables>
		<variables name="Alarme_Pression_PPE_Graisse1" typeName="EBOOL" topologicalAddress="%M698">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Cde_vidange_TT_gra" typeName="EBOOL" topologicalAddress="%M239"></variables>
		<variables name="FM_dos_pupitre_PPE_1" typeName="R_TRIG"></variables>
		<variables name="Fin_vidange_skip_Gra" typeName="EBOOL"></variables>
		<variables name="TT_granulat_instable" typeName="EBOOL" topologicalAddress="%M602"></variables>
		<variables name="Cde_vidange_bascule_Gra1" typeName="EBOOL" topologicalAddress="%M225"></variables>
		<variables name="AI_Admix_Status_1" typeName="EBOOL"></variables>
		<variables name="BP_dosage_Gra_2" typeName="EBOOL" topologicalAddress="%M143"></variables>
		<variables name="Cumul_Anh_manu_stable" typeName="BOOL"></variables>
		<variables name="Vibreur_TT_gra_non_pesee" typeName="EBOOL"></variables>
		<variables name="Info_TT_Gra_fermee" typeName="EBOOL" topologicalAddress="%M17"></variables>
		<variables name="DI_Agg_WH_Aid_Extract_PB_PLC_ON" typeName="EBOOL">
			<comment>Aid extraction on aggregate transfer (hopper bin)' pushbutton pressed (vibrator, air shock, …) - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Numero_manu_Cim" typeName="INT" topologicalAddress="%MW5563"></variables>
		<variables name="Surcharge_Gra3" typeName="BOOL">
			<comment>Non utilise</comment>
		</variables>
		<variables name="Conf_TT_Cim_retard_ferm" typeName="TIME" topologicalAddress="%MW8480"></variables>
		<variables name="Auto_Montee_Skip" typeName="BOOL"></variables>
		<variables name="Conf_eau2_tps_max_stab" typeName="TIME" topologicalAddress="%MW8034"></variables>
		<variables name="FD_manu_2_Adj" typeName="F_TRIG"></variables>
		<variables name="TP_AU_Acquittes" typeName="TP"></variables>
		<variables name="Manu_Log_Vibreur_Gra2" typeName="BOOL"></variables>
		<variables name="voie_basc_Gra4" typeName="INT" topologicalAddress="%MW7871">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="AI_65" typeName="INT">
			<comment>Old %IW129</comment>
		</variables>
		<variables name="FM_DOS_Eau2" typeName="R_TRIG"></variables>
		<variables name="Stock_manu_Adj_3" typeName="BOOL"></variables>
		<variables name="DO_Mixer1_Gate2_Close" typeName="EBOOL" topologicalAddress="%Q0.3.16">
			<comment>Close 'mixer 1' 'gate 2'</comment>
		</variables>
		<variables name="DI_Cem_Screw_CBT" typeName="EBOOL">
			<comment>Cement screw circuit breaker tripped - A non-blocking alarm appears. An eventual 'flow fault' may stop the weighing ['1' for 'TRUE']</comment>
		</variables>
		<variables name="CPT03_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.2.0.5"></variables>
		<variables name="Intro_Presence_Glace_Gra2" typeName="BOOL"></variables>
		<variables name="Vid_Mal1_OK" typeName="EBOOL"></variables>
		<variables name="Manu_Tps_dosage_Eau" typeName="TIME" topologicalAddress="%MW5540"></variables>
		<variables name="Auto_Vibreur_Gra1" typeName="BOOL"></variables>
		<variables name="DO_33" typeName="EBOOL" topologicalAddress="%Q0.3.32">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_basc_eau1_tps_reponse" typeName="TIME" topologicalAddress="%MW7988">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Trappe1_malaxeur1_bloquee" typeName="EBOOL" topologicalAddress="%M624"></variables>
		<variables name="BCMix_DO_90" typeName="EBOOL" topologicalAddress="%M890">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TON_Poids_sup_seuil_vide_TT_Gra" typeName="TON"></variables>
		<variables name="Erreur_jetee_Gra1" typeName="INT" topologicalAddress="%MW5519"></variables>
		<variables name="Manu_Log_ouv_basc_Gra1" typeName="BOOL"></variables>
		<variables name="Surcharge_Eau2" typeName="BOOL"></variables>
		<variables name="FD_manu_1_Eau" typeName="F_TRIG"></variables>
		<variables name="DI_Agg_Weighing_Belt_CBT" typeName="EBOOL">
			<comment>Aggregate weighing belt circuit breaker tripped - An alarm stops the belt ['1' for 'TRUE']</comment>
		</variables>
		<variables name="TON_TOFF_PV_Cim2" typeName="TON_TOFF"></variables>
		<variables name="Seuil_vide_atteint_Anh" typeName="EBOOL"></variables>
		<variables name="NP_Cim1_Aux2_A_Doser" typeName="INT"></variables>
		<variables name="DI_Cem_Silo4_PB_PLC_Open" typeName="EBOOL">
			<comment>Open cement 'silo 4'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Mixer1_Gate2_Opened" typeName="EBOOL" topologicalAddress="%I0.1.26">
			<comment>Mixer 1' Gate 2' open ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_37_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Alarme_vidange_Gra2" typeName="EBOOL" topologicalAddress="%M531"></variables>
		<variables name="Manu_Pup_ouv_basc_Gra1" typeName="BOOL"></variables>
		<variables name="DI_Solid_Content_Measure_ON" typeName="EBOOL">
			<comment>Solid content measure system is in working order ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_Admix_Tank4_Open" typeName="EBOOL" topologicalAddress="%Q0.4.35">
			<comment>Open admixture 'tank 4'</comment>
		</variables>
		<variables name="Saturation_inf_Anh" typeName="BOOL"></variables>
		<variables name="CPT09_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.10.0.4"></variables>
		<variables name="Data_Mesomatic5" typeName="ARRAY[1..5] OF INT"></variables>
		<variables name="DI_Mixer2_Gate1_Closed" typeName="EBOOL">
			<comment>Mixer 2' Gate 1' closed ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="CPT10_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.1.0.5"></variables>
		<variables name="BP_dosage_Adj_19" typeName="EBOOL" topologicalAddress="%M184"></variables>
		<variables name="Info_TT_Cim_ouverte" typeName="EBOOL" topologicalAddress="%M18"></variables>
		<variables name="Info_arret_urgence_skip" typeName="EBOOL" topologicalAddress="%M53"></variables>
		<variables name="conf_TT_sens_fc_fermee" typeName="EBOOL" topologicalAddress="%M424"></variables>
		<variables name="DO_46" typeName="EBOOL" topologicalAddress="%Q0.3.45">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_TT_granulat_TON_vibreur" typeName="TIME" topologicalAddress="%MW8402"></variables>
		<variables name="AI_63_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Manu_logiciel" typeName="EBOOL" topologicalAddress="%M483"></variables>
		<variables name="Conf_avec_tapis_et_skip" typeName="EBOOL"></variables>
		<variables name="Cde_raz_simu_compteurs_ppe" typeName="EBOOL" topologicalAddress="%M272"></variables>
		<variables name="Cumul_Cim1_auto_deptstab" typeName="BOOL"></variables>
		<variables name="BCMix_DO_63" typeName="EBOOL" topologicalAddress="%M863">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="conf_eau1_positif_a_1" typeName="EBOOL" topologicalAddress="%M349"></variables>
		<variables name="AI_8_Lower_Saturation" typeName="BOOL" topologicalAddress="%IW0.7.3.1.6">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="fin_tpo_vidange_adjuvant" typeName="EBOOL"></variables>
		<variables name="BP_dosage_Eau_1" typeName="EBOOL" topologicalAddress="%M162"></variables>
		<variables name="BI_Ouverture_trappe1_mal1" typeName="BOOL"></variables>
		<variables name="trappe_1_malaxeur_2" typeName="TRAP_MAL"></variables>
		<variables name="Stock_manu_Adj_17" typeName="BOOL"></variables>
		<variables name="AI_9_Error" typeName="BOOL" topologicalAddress="%I0.8.0.ERR">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="DI_04" typeName="EBOOL" topologicalAddress="%I0.1.3">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Alarme_satur_inf_Gra1" typeName="EBOOL" topologicalAddress="%M676"></variables>
		<variables name="Info_arret_urgence_silo" typeName="EBOOL" topologicalAddress="%M55"></variables>
		<variables name="Depart_malax1" typeName="BOOL"></variables>
		<variables name="Conf_eau_tps_ecoulement" typeName="TIMEARR4" topologicalAddress="%MW7160"></variables>
		<variables name="tps_reponse_anh_gra" typeName="TIME"></variables>
		<variables name="Conf_HMS_Profibus_IP3" typeName="INT" topologicalAddress="%MW8682">
			<comment>Format IP1.IP2.IP3.IP4</comment>
		</variables>
		<variables name="Conf_TT_cim_tps_stab" typeName="TIME" topologicalAddress="%MW8474">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Simulation_dosage_Cim1" typeName="Simulation_dosage"></variables>
		<variables name="BCMix_ETOR_65a80" typeName="WORD" topologicalAddress="%MW4406">
			<comment>ETOR_65a80</comment>
		</variables>
		<variables name="Conf_anhydrite_TON_vibreur_bal" typeName="TIME" topologicalAddress="%MW8254">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Conf_anhydrite_tps_sequence_ouv" typeName="TIME" topologicalAddress="%MW8274"></variables>
		<variables name="AI_2_Higher_Saturation" typeName="BOOL" topologicalAddress="%IW0.6.1.1.5">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="alarme_malaxeur2_arrete" typeName="EBOOL" topologicalAddress="%M639"></variables>
		<variables name="Conf_granulat2_pres_capteur_rot" typeName="EBOOL" topologicalAddress="%M321"></variables>
		<variables name="TON_capteur_chgt_vitesse_haut" typeName="TON"></variables>
		<variables name="AI_65_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="fm_doser_Adj_auto" typeName="R_TRIG"></variables>
		<variables name="TON_Demarrage_ASPI_ET" typeName="TIME"></variables>
		<variables name="Ecart_pesee_Cim1" typeName="INT" topologicalAddress="%MW4792">
			<comment>Ecart de pesee en unités de dosage pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="DI_Admix_Cpt_Closed" typeName="EBOOL" topologicalAddress="%I0.1.8">
			<comment>Admixture weigher 'compartment 2' closed - For French-type admixture process (1 weigher with 1 or 2 destinations (among water weigher and mixer) and each weigher valve must have a sensor) ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_Admix_Ana_Offset" typeName="INT">
			<comment>offset for admixture weigher</comment>
		</variables>
		<variables name="Simuler_dosage_Gra2" typeName="BOOL"></variables>
		<variables name="Vibreur_organes_Anh" typeName="EBOOL"></variables>
		<variables name="Conf_Skip_SCHG_DI_Filter" typeName="EBOOL">
			<comment>if set to one the filter on the speed change sensors of the skip is activated</comment>
		</variables>
		<variables name="DI_90" typeName="EBOOL" topologicalAddress="%I0.2.25">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Manu_cde_PV_eau1" typeName="EBOOL" topologicalAddress="%M703"></variables>
		<variables name="AI_47_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Transf_Presence_Glace_Gra2" typeName="BOOL"></variables>
		<variables name="BCMix_DO_30" typeName="EBOOL" topologicalAddress="%M830">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Presence_prod_Cim2" typeName="EBOOL"></variables>
		<variables name="Info_Machine_Colorant_OK" typeName="EBOOL">
			<comment>Machine a colorant prete à fonctionner</comment>
		</variables>
		<variables name="TON_trappe1_fermee_mal1" typeName="TON"></variables>
		<variables name="DI_66" typeName="EBOOL" topologicalAddress="%I0.2.1">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="DO_110" typeName="EBOOL" topologicalAddress="%Q0.4.45">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="BCMix_DO_16" typeName="EBOOL" topologicalAddress="%M816">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="FD_VAL_CAM_C" typeName="F_TRIG"></variables>
		<variables name="CPT07_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="AI_Array_Value_Part_2" typeName="INTARR48" topologicalAddress="%MW4436"></variables>
		<variables name="Conf_granulat2_seuil_mini" typeName="INT" topologicalAddress="%MW7808">
			<comment>Seuil de détarrage</comment>
		</variables>
		<variables name="FM_dos_pupitre_PPE_18" typeName="R_TRIG"></variables>
		<variables name="LEC_ARPEGE_Adj1" typeName="LEC_ARPEGE"></variables>
		<variables name="TON_debut_intro" typeName="TON"></variables>
		<variables name="BCMix_DO_115" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Manu_Gra_tps_stabilisation" typeName="TIME"></variables>
		<variables name="Cde_bascule_Cim1_vide" typeName="EBOOL"></variables>
		<variables name="CPT05_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.9.4.4"></variables>
		<variables name="DI_Admix_Tank3_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.34">
			<comment>Open admixture 'tank 3'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Solid_Content_Measure_OFF" typeName="EBOOL">
			<comment>Solid content measure system is temporarily unavailable ['1' for 'TRUE']</comment>
		</variables>
		<variables name="BCMix_DO_105" typeName="EBOOL" topologicalAddress="%M905">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Seq_Vid_Code_synchro_partie1" typeName="INT">
			<comment>Récupéré dans TG_IN[].Vidange_dry[].Code_synchro</comment>
		</variables>
		<variables name="DO_68" typeName="EBOOL" topologicalAddress="%Q0.4.3">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Poids_demande_Adj" typeName="INT" topologicalAddress="%MW4561"></variables>
		<variables name="CPT13_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="ouverture_trappe_mal1" typeName="EBOOL"></variables>
		<variables name="Conf_malaxeur2_retard_s_seche" typeName="TIME" topologicalAddress="%MW8580"></variables>
		<variables name="BCMix_DO_73" typeName="EBOOL" topologicalAddress="%M873">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Pup_Cde_PV_Gra2" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="TON_Demarrage_ASPI" typeName="TON"></variables>
		<variables name="NG_Mal1" typeName="INT" topologicalAddress="%MW4535"></variables>
		<variables name="DI_Compr_CBT" typeName="EBOOL">
			<comment>Compressor circuit breaker tripped - An alarm stops the compressor ['0' or '1' for 'TRUE' - see 'Conf_prot_mot_compr_Actif0' variable]</comment>
		</variables>
		<variables name="Conf_multipl_Adjuvant2" typeName="REAL"></variables>
		<variables name="Poids_vise_deja_ecrit_Eau1" typeName="BOOL"></variables>
		<variables name="Conf_Agg1_Vib_Mot_Prot_Act0" typeName="EBOOL">
			<comment>Aggregate weigher1 vibrator motor protection</comment>
		</variables>
		<variables name="conf_sens_fc_skip_attente" typeName="EBOOL" topologicalAddress="%M415"></variables>
		<variables name="Temps_vid_Dry_Anh" typeName="DINT"></variables>
		<variables name="AI_58_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="conf_granulat1_val_actif_1" typeName="EBOOL" topologicalAddress="%M311"></variables>
		<variables name="BCMix_DO_38" typeName="EBOOL" topologicalAddress="%M838">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_19_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="CPT01_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.9.0.7"></variables>
		<variables name="AI_46_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="TON_Discordance_RAMPE" typeName="TON"></variables>
		<variables name="NP_Cim2_A_Doser" typeName="INT"></variables>
		<variables name="P1_adj_Weight2" typeName="INT" topologicalAddress="%MW8168">
			<comment>Value in point for low point of the calibration for adm weigher 2</comment>
		</variables>
		<variables name="DO_Water1_Weigher_PP_ON" typeName="EBOOL" topologicalAddress="%Q0.3.62">
			<comment>Run the 'water 1' weigher emptying pump and/or the valve to the emptying pump - This output is turned on (rather than 'STOR_vidange_bascule_eau1') if the weight is higher than a user-definable threshold</comment>
		</variables>
		<variables name="Cde_fermeture_bascule_anhydrite" typeName="EBOOL" topologicalAddress="%M260"></variables>
		<variables name="BCMix_DO_1" typeName="EBOOL" topologicalAddress="%M801">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Numero_produit_Eau1" typeName="INT" topologicalAddress="%MW4546"></variables>
		<variables name="DO_Admix_Cpt9_PP_ON" typeName="EBOOL">
			<comment>Run the admixture weigher 'compartment 9' emptying pump - For the Romanian-type admixture process</comment>
		</variables>
		<variables name="Conf_bonbonne_tps_max_transfert" typeName="TIME" topologicalAddress="%MW8506"></variables>
		<variables name="Conf_malaxeur2_tps_mal_gd_ouvert" typeName="TIME" topologicalAddress="%MW8572"></variables>
		<variables name="suite_index_sortie_g2" typeName="INT"></variables>
		<variables name="DO_72" typeName="EBOOL" topologicalAddress="%Q0.4.7">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="FBI_77_502" typeName="VIB_BAL"></variables>
		<variables name="Conf_malaxeur1_seuil_vide" typeName="INT" topologicalAddress="%MW8542"></variables>
		<variables name="BCMix_DO_45" typeName="EBOOL" topologicalAddress="%M845">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Pup_Cde_vibreur_Gra1" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="mot_entree1_ccr3" typeName="WORD" topologicalAddress="%MW5958"></variables>
		<variables name="Vibreur_balance_Gra1" typeName="EBOOL"></variables>
		<variables name="Doser_Adj_manu" typeName="BOOL"></variables>
		<variables name="DI_Skip_Very_High_Position" typeName="EBOOL">
			<comment>Skip in 'very high' position ['1' for 'TRUE']</comment>
		</variables>
		<variables name="FM_dos_pupitre_PPE_9" typeName="R_TRIG"></variables>
		<variables name="remplacement_Eau2" typeName="EBOOL" topologicalAddress="%M494"></variables>
		<variables name="Stock_manu_Gra_2" typeName="BOOL"></variables>
		<variables name="consigne_ppe14" typeName="INT" topologicalAddress="%MW5967"></variables>
		<variables name="Simulation_dosage_Gra2" typeName="Simulation_dosage"></variables>
		<variables name="Vibreur_balance_Eau1" typeName="EBOOL"></variables>
		<variables name="Simu_dosage_en_cours_Gra1" typeName="BOOL"></variables>
		<variables name="Defaut_Gra2" typeName="EBOOL"></variables>
		<variables name="Amp_Adj" typeName="ARRAY[1..5] OF REAL">
			<comment>valeur en Ampere (debug)</comment>
		</variables>
		<variables name="Poids_sup_seuil_vide_Anh" typeName="EBOOL" topologicalAddress="%M577"></variables>
		<variables name="AI_Adj_Weight_5_Value" typeName="INT"></variables>
		<variables name="DI_74" typeName="EBOOL" topologicalAddress="%I0.2.9">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Ouv_XV2" typeName="EBOOL">
			<comment>Colorant - Ouv (remplissage) reservoir D'expedition</comment>
		</variables>
		<variables name="Conf_eau_limite_sous_dosage" typeName="INTARR4" topologicalAddress="%MW7096">
			<comment>Correction gachee sur gachee</comment>
		</variables>
		<variables name="TG4_nouvelle" typeName="BOOL"></variables>
		<variables name="memo_fuite_pompe" typeName="INTARR20"></variables>
		<variables name="Alarme_Mesomatic3" typeName="BOOL">
			<comment>defaut Hardware NOT USED YET</comment>
		</variables>
		<variables name="TON_seuil_vide_Cim2" typeName="TON"></variables>
		<variables name="DI_Admix_Tank8_PB_PLC_Open" typeName="EBOOL">
			<comment>Open admixture 'tank 8'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Info_trappe1_fermee_mal2" typeName="EBOOL" topologicalAddress="%M30"></variables>
		<variables name="Cond_Vid_Dry1" typeName="BOOL"></variables>
		<variables name="Doser_eau1_auto" typeName="BOOL"></variables>
		<variables name="Version_Number" typeName="INT" topologicalAddress="%MW4493">
			<comment>M340 Version</comment>
		</variables>
		<variables name="AI_2_Value_Module_1" typeName="INT" topologicalAddress="%MW4413"></variables>
		<variables name="AI_26_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="AI_26_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="AI_14_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="CPT11_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.10.2.4"></variables>
		<variables name="pause_vidange_Adj" typeName="BOOL"></variables>
		<variables name="DI_16" typeName="EBOOL" topologicalAddress="%I0.1.15">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="TT_Gra_non_vide" typeName="BOOL"></variables>
		<variables name="Produit_remplacement_Gra1" typeName="INT" topologicalAddress="%MW5502"></variables>
		<variables name="DI_Agg_Bin6_PB_PLC_Open" typeName="EBOOL">
			<comment>Open aggregate 'bin 6'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_Agg2_Ana_Offset" typeName="INT">
			<comment>offset for aggregate weigher 2</comment>
		</variables>
		<variables name="pause_vidange_Cim1" typeName="BOOL"></variables>
		<variables name="Cde_vidange_bascule_Eau2" typeName="EBOOL" topologicalAddress="%M263"></variables>
		<variables name="Pres_prod_Cim1" typeName="BOOL"></variables>
		<variables name="Produit_remplacement_Eau1" typeName="INT" topologicalAddress="%MW5506"></variables>
		<variables name="Pese_Adj_manu" typeName="UDINTARR20" topologicalAddress="%MW5046">
			<comment>Suivi conso (lec BCMIX)</comment>
		</variables>
		<variables name="BP_Pupitre_PROFIBUS" typeName="ARRAY[1..4] OF INT">
			<comment>BP Pupitre Stetter</comment>
		</variables>
		<variables name="Stock_Adj_auto" typeName="BOOL"></variables>
		<variables name="FM_dos_Manulog_PPE_16" typeName="R_TRIG"></variables>
		<variables name="Conf_granulat2_seuil_maxi" typeName="INT" topologicalAddress="%MW7807"></variables>
		<variables name="Fermeture_Mal1" typeName="EBOOL"></variables>
		<variables name="Poids_demande_Gra2" typeName="INT" topologicalAddress="%MW4556"></variables>
		<variables name="AI_53_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Introduction_Cim2_encours" typeName="EBOOL"></variables>
		<variables name="Info_TT_Gra_ctrl_vide_filtr" typeName="EBOOL"></variables>
		<variables name="Trappe2_malaxeur2_bloquee" typeName="EBOOL" topologicalAddress="%M634"></variables>
		<variables name="AI_45_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="DI_89" typeName="EBOOL" topologicalAddress="%I0.2.24">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Cde_vidange_bascule_Adj" typeName="EBOOL" topologicalAddress="%M229"></variables>
		<variables name="Info_skip_haut" typeName="EBOOL" topologicalAddress="%M11"></variables>
		<variables name="AI_10_Higher_Saturation" typeName="BOOL" topologicalAddress="%IW0.8.1.1.5">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="fm_init_from_BCMix" typeName="R_TRIG"></variables>
		<variables name="Recup_voie_ana_Adj_Weight1" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="Manu_cde_PV_granulat2" typeName="EBOOL" topologicalAddress="%M701"></variables>
		<variables name="BP_marche_malaxeur" typeName="BOOL"></variables>
		<variables name="Basc_instable_Cim1" typeName="EBOOL" topologicalAddress="%M542"></variables>
		<variables name="DO_96" typeName="EBOOL" topologicalAddress="%Q0.4.31">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_TT_Cim_seuil_vide" typeName="INT" topologicalAddress="%MW8470"></variables>
		<variables name="Saturation_inf_Eau2" typeName="BOOL"></variables>
		<variables name="Stock_manu_Cim_3" typeName="BOOL"></variables>
		<variables name="CPT04_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.9.3.6"></variables>
		<variables name="AI_70_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="DO_Agg_WH_Open" typeName="EBOOL" topologicalAddress="%Q0.3.9">
			<comment>Open aggregate hopper</comment>
		</variables>
		<variables name="consigne_ppe2" typeName="INT" topologicalAddress="%MW5937"></variables>
		<variables name="DO_106" typeName="EBOOL" topologicalAddress="%Q0.4.41">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Poids_pesee_ppe_eau1" typeName="INT" topologicalAddress="%MW4616"></variables>
		<variables name="mot2_temps_malaxage1" typeName="WORD"></variables>
		<variables name="Conf_Cim1_tps_sequence_att" typeName="TIME" topologicalAddress="%MW7912"></variables>
		<variables name="Produit_remplacement_Eau2" typeName="INT" topologicalAddress="%MW5507"></variables>
		<variables name="Cde_vid_basc_Eau2_Ppe" typeName="BOOL">
			<comment>(*Roumanie*)</comment>
		</variables>
		<variables name="Cumul_Anh_auto_deptstab" typeName="BOOL"></variables>
		<variables name="DO_118" typeName="EBOOL" topologicalAddress="%Q0.4.53">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="BP_dosage_Adj_11" typeName="EBOOL" topologicalAddress="%M176"></variables>
		<variables name="AI_Admix_Array_W1" typeName="ARRAY[1..5] OF REAL"></variables>
		<variables name="AI_18_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="fm_cumul_Anh_auto_stable" typeName="R_TRIG"></variables>
		<variables name="declaration_malaxeur_2_vide" typeName="EBOOL"></variables>
		<variables name="Conf_ppe_ctrl_fuite_base_temps" typeName="EBOOL" topologicalAddress="%M368"></variables>
		<variables name="LEC_BIN_BCD_Anh" typeName="LEC_BIN_BCD"></variables>
		<variables name="Conf_trappe2_mal2_tps_reponse" typeName="TIME" topologicalAddress="%MW8578"></variables>
		<variables name="AI_4" typeName="INT" topologicalAddress="%IW0.6.3">
			<comment>Old %IW19</comment>
		</variables>
		<variables name="Cde_marche_tapis_transfert" typeName="EBOOL" topologicalAddress="%M238"></variables>
		<variables name="Conf_silo_anhydrite_TON_ajust" typeName="TIME" topologicalAddress="%MW7708"></variables>
		<variables name="remplacement_cim1" typeName="EBOOL" topologicalAddress="%M479"></variables>
		<variables name="Info_TT_Gra_ctrl_vide" typeName="EBOOL"></variables>
		<variables name="AI_50_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="bit_valide_skip" typeName="EBOOL"></variables>
		<variables name="Cumul_Eau_manu_deptstab" typeName="BOOL"></variables>
		<variables name="FM_Cde_Manu_PPE_15" typeName="R_TRIG"></variables>
		<variables name="AI_1_Lower_Saturation" typeName="BOOL" topologicalAddress="%IW0.6.0.1.6">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="AI_62_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="CPT02_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.1.0.5"></variables>
		<variables name="fm_descente_skip" typeName="R_TRIG"></variables>
		<variables name="Discordance_vidange_eau1" typeName="EBOOL" topologicalAddress="%M557"></variables>
		<variables name="Alarme_IDE500_TT_cim" typeName="EBOOL" topologicalAddress="%M615"></variables>
		<variables name="DI_Mixer2_Gate1_Opened" typeName="EBOOL">
			<comment>Mixer 2' Gate 1' open ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="CPT03_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.2.1.3"></variables>
		<variables name="DO_Admix_Cpt1_PP_ON" typeName="EBOOL">
			<comment>Run the admixture weigher 'compartment 1' emptying pump - For the Romanian-type admixture process</comment>
		</variables>
		<variables name="Conf_cim1_pesage_fin" typeName="INTARR6" topologicalAddress="%MW6896">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Presence_Cim1" typeName="EBOOL"></variables>
		<variables name="Conf_adjuvant_comp1_vers_eau1" typeName="EBOOL" topologicalAddress="%M361"></variables>
		<variables name="Simu_dosage_en_cours_Cim2" typeName="BOOL"></variables>
		<variables name="TON_Ctrl_volt" typeName="TON"></variables>
		<variables name="AI_15" typeName="INT">
			<comment>Old %IW79</comment>
		</variables>
		<variables name="DO_Admix_Tank20_Open" typeName="EBOOL" topologicalAddress="%Q0.4.51">
			<comment>Open admixture 'tank 20'</comment>
		</variables>
		<variables name="Manu_Log_Descente_Skip" typeName="BOOL"></variables>
		<variables name="Alarme_Com_HMS_Profibus_Pupitre" typeName="EBOOL" topologicalAddress="%M680">
			<comment>(Roumanie) Defaut : esclave Profibus ne rÃ©ponds pas</comment>
		</variables>
		<variables name="Conf_TT_Cim_binaire" typeName="EBOOL" topologicalAddress="%M446">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="Tol_inf_Eau1" typeName="EBOOL" topologicalAddress="%M554">
			<comment>tolérance inférieure</comment>
		</variables>
		<variables name="Cde_autorisation_trans_cim" typeName="EBOOL" topologicalAddress="%M258"></variables>
		<variables name="DI_Cem_Airlock_Ready" typeName="EBOOL">
			<comment>Cement airlock (=primary hopper) is ready to be filled, and not yet ready to be emptied. - Made for an independant system in Bercy &amp; Mirabeau, France ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_cim2_ecart_stabilite" typeName="INT" topologicalAddress="%MW7927">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Conf_multipl_Granulat4" typeName="REAL"></variables>
		<variables name="Cable_skip_mou" typeName="EBOOL"></variables>
		<variables name="AI_66_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Init_sur_AU" typeName="BOOL"></variables>
		<variables name="suite_index_sortie_anhydrite" typeName="INT"></variables>
		<variables name="Alarme_Com_HMS_Profibus_ADJ" typeName="EBOOL" topologicalAddress="%M684">
			<comment>(Roumanie) Defaut : esclave Profibus ne rÃ©ponds pas</comment>
		</variables>
		<variables name="CPT12_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="CPT07_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.9.6.6"></variables>
		<variables name="Defaut_Adj" typeName="EBOOL"></variables>
		<variables name="Manu_cde_vidange_basc_granulat2" typeName="EBOOL" topologicalAddress="%M706"></variables>
		<variables name="TG_OUT" typeName="ARRAY[1..4] OF table_gachee_out" topologicalAddress="%MW2602"></variables>
		<variables name="Recup_voie_ana_Gra2" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="destination_malaxeur_2" typeName="EBOOL"></variables>
		<variables name="PULSE_KLAXON_A" typeName="TP"></variables>
		<variables name="Amp_Gra1" typeName="REAL">
			<comment>valeur en Ampere (debug)</comment>
		</variables>
		<variables name="LEC_MESOMATIC_Cim1" typeName="LEC_MESOMATIC"></variables>
		<variables name="DO_53" typeName="EBOOL" topologicalAddress="%Q0.3.52">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Poids_real_Gra4" typeName="REAL" topologicalAddress="%MW4702">
			<comment>Poids granulat 4 en reel</comment>
		</variables>
		<variables name="Puissance_sup_seuil_vide_Mal1" typeName="EBOOL" topologicalAddress="%M628"></variables>
		<variables name="AI_52" typeName="INT">
			<comment>Old %IW116</comment>
		</variables>
		<variables name="Saturation_inf_Gra1" typeName="BOOL"></variables>
		<variables name="DI_Agg1_Emergency_Stop" typeName="EBOOL">
			<comment>Aggregate line 1' emergency stop is pushed (or cable was pulled) - Displays an alarm - To be used with 'ETOR_etat_arret_urgence' ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="LEC_MESOMATIC_Adj" typeName="LEC_MESOMATIC"></variables>
		<variables name="Seuil_vide_atteint_Cim1" typeName="EBOOL"></variables>
		<variables name="DI_27" typeName="EBOOL" topologicalAddress="%I0.1.26">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="FBI_76_486" typeName="VIB_BAL"></variables>
		<variables name="Ecart_pesee_en_taux_Gra1" typeName="INT" topologicalAddress="%MW4799">
			<comment>Ecart de pesee en pour dix-millieme pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="Temps_vid_Dry_Cim1" typeName="DINT"></variables>
		<variables name="DI_Admix_Tank11_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.42">
			<comment>Open admixture 'tank 11'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Intro_dif_en_cours_Mal1" typeName="EBOOL"></variables>
		<variables name="Vidange_bloquee_Anh" typeName="EBOOL" topologicalAddress="%M586"></variables>
		<variables name="AI_51_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="DI_Vacuum_Machine_ON" typeName="EBOOL">
			<comment>Vacuum machine is ON - Additional equipment for dry batch ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_46" typeName="EBOOL" topologicalAddress="%I0.1.45">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="DO_10" typeName="EBOOL" topologicalAddress="%Q0.3.9">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TON_426" typeName="TON"></variables>
		<variables name="transfert_des_granulat_effectue" typeName="EBOOL"></variables>
		<variables name="AI_59_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="conf_Cim2_bcd" typeName="EBOOL" topologicalAddress="%M376">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="Lecture_Mesomatic_ACTIVE" typeName="EBOOL"></variables>
		<variables name="BCMix_ETOR_1a16" typeName="WORD" topologicalAddress="%MW4402">
			<comment>ETOR_1a16</comment>
		</variables>
		<variables name="Conf_cim1_tps_max_pesage" typeName="TIME" topologicalAddress="%MW7886">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Cde_montee_skip" typeName="EBOOL" topologicalAddress="%M237"></variables>
		<variables name="BCMix_DO_9" typeName="EBOOL" topologicalAddress="%M809">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Pese_Gra_auto" typeName="UDINTARR14" topologicalAddress="%MW4902">
			<comment>Suivi conso (lec BCMIX)</comment>
		</variables>
		<variables name="Flags_pesage_Cim1" typeName="flags_pesage_struct"></variables>
		<variables name="BP_dosage_Gra_12" typeName="EBOOL" topologicalAddress="%M153"></variables>
		<variables name="Idx_Vid_Dry_Anh" typeName="INT"></variables>
		<variables name="Pup_Cde_Ouverture_trappe1_mal1" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="FM_Cde_Manu_PPE_05" typeName="R_TRIG"></variables>
		<variables name="DI_Water_Tank4_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.27">
			<comment>Open water 'tank 4'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="NP_Eau1" typeName="INT">
			<comment>Index de produit ds table de dosage</comment>
		</variables>
		<variables name="DO_Cem_Silo5_Open" typeName="EBOOL" topologicalAddress="%Q0.4.20">
			<comment>Open cement 'silo 5'</comment>
		</variables>
		<variables name="Basc_instable_Gra1" typeName="EBOOL" topologicalAddress="%M514"></variables>
		<variables name="AI_33" typeName="INT">
			<comment>Old %IW97</comment>
		</variables>
		<variables name="Alarme_bloquante_dosage_Gra1" typeName="BOOL"></variables>
		<variables name="BCMix_DO_89" typeName="EBOOL" topologicalAddress="%M889">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TON_verif_tps_gv" typeName="TON"></variables>
		<variables name="Conf_multipl_eau1" typeName="REAL" topologicalAddress="%MW8010"></variables>
		<variables name="Cpt100ms_ppe" typeName="INTARR20"></variables>
		<variables name="Tble_Alarme_Niv_haut_ADJ_Comp" typeName="ARRAY[1..10] OF EBOOL"></variables>
		<variables name="AI_33_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Conf_eau1_nb_cuves" typeName="INT" topologicalAddress="%MW8012"></variables>
		<variables name="Conf_TT_granulat_tps_vidange" typeName="TIME" topologicalAddress="%MW8394">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Cumul_Gra_manu_stable" typeName="BOOL"></variables>
		<variables name="Alarme_Niveau_haut_ADJ_Comp5" typeName="EBOOL" topologicalAddress="%M658">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="RE_adj3" typeName="R_TRIG"></variables>
		<variables name="P1_anh" typeName="INT" topologicalAddress="%MW8268">
			<comment>Value in points for low point of the calibration for anhydrite weigher</comment>
		</variables>
		<variables name="Info_pressostat_actif" typeName="EBOOL" topologicalAddress="%M192">
			<comment>Colorants</comment>
		</variables>
		<variables name="Vidange_malaxeur2" typeName="Sequence_trappe2"></variables>
		<variables name="Init_From_API" typeName="EBOOL"></variables>
		<variables name="AI_Value_Agg1" typeName="INT"></variables>
		<variables name="Conf_etat_AU_Actif0" typeName="EBOOL" topologicalAddress="%M432"></variables>
		<variables name="Conf_skip_tps_GVBas_GVHaut" typeName="TIME" topologicalAddress="%MW8374"></variables>
		<variables name="Conf_Mesomatic_Profibus" typeName="BOOL">
			<comment>1= Présence Mesomatic</comment>
		</variables>
		<variables name="CPT11_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.10.2.2"></variables>
		<variables name="FD_skip_attente" typeName="F_TRIG"></variables>
		<variables name="DO_82" typeName="EBOOL" topologicalAddress="%Q0.4.17">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="W2_gra1" typeName="REAL" topologicalAddress="%MW7770">
			<comment>Value in kg for the high point of the calibration for agg weigher 1</comment>
		</variables>
		<variables name="Ppe_bloquee" typeName="BOOLARR20" topologicalAddress="%MW5202"></variables>
		<variables name="Numero_produit_Gra2_initial" typeName="INT"></variables>
		<variables name="AI_13_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="fm_doser_Eau1_auto" typeName="R_TRIG"></variables>
		<variables name="top_100_ms" typeName="EBOOL"></variables>
		<variables name="DO_Agg2_Weigher_Extraction_Aid" typeName="EBOOL" topologicalAddress="%Q0.3.25">
			<comment>Activate extraction aid of 'aggregate 2' line (for bins and belt/weigher)</comment>
		</variables>
		<variables name="Conf_granulat1_skip" typeName="EBOOL" topologicalAddress="%M305"></variables>
		<variables name="fuite_ppe" typeName="BOOLARR20" topologicalAddress="%MW5232"></variables>
		<variables name="Conf_granulat_nb_vibreur" typeName="INTARR14" topologicalAddress="%MW6620"></variables>
		<variables name="BCMix_DO_55" typeName="EBOOL" topologicalAddress="%M855">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Erreur_jetee_Ppe" typeName="INTARR20"></variables>
		<variables name="DO_04" typeName="EBOOL" topologicalAddress="%Q0.3.3">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="BALANCE_Anh" typeName="WORD">
			<comment>Adresse en Qt uniquement</comment>
		</variables>
		<variables name="Manu_Tps_dosage_Adj" typeName="TIME" topologicalAddress="%MW5542"></variables>
		<variables name="Info_autorisation_chargement_SAS" typeName="EBOOL" topologicalAddress="%M39"></variables>
		<variables name="Malax_tres_plast" typeName="TIMEARR6" topologicalAddress="%MW5734"></variables>
		<variables name="AI_Admix_Weigher_3_Status" typeName="BOOL">
			<comment>Adress in M340 only</comment>
		</variables>
		<variables name="AI_67_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Doser_cim1_auto" typeName="BOOL"></variables>
		<variables name="AI_70_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="DI_Agg_Bin1_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.0">
			<comment>Open aggregate 'bin 1'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Pesee_bloquee_Eau1" typeName="EBOOL" topologicalAddress="%M552"></variables>
		<variables name="Auto_ouv_basc_Eau1" typeName="BOOL"></variables>
		<variables name="Alarme_arret_urgence_granulat1" typeName="EBOOL" topologicalAddress="%M508">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Conf_AU_silo_Actif0" typeName="EBOOL" topologicalAddress="%M332"></variables>
		<variables name="Conf_cim2_TON_vibreur_bal" typeName="TIME" topologicalAddress="%MW7940">
			<comment>Seuil de detarrage</comment>
		</variables>
		<variables name="Manu_cde_bypass_vers_malaxeur1" typeName="EBOOL" topologicalAddress="%M722"></variables>
		<variables name="Info_balance_Eau2_fermee" typeName="EBOOL" topologicalAddress="%M50"></variables>
		<variables name="AI_Admix_Array_Value" typeName="ARRAY[1..5] OF INT"></variables>
		<variables name="FBI_77_1007" typeName="STA_TT"></variables>
		<variables name="AI_7_Lower_Saturation" typeName="BOOL" topologicalAddress="%IW0.7.2.1.6">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Pret_pour_Intro_ACTIVE" typeName="EBOOL"></variables>
		<variables name="CPT16_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.10.7.2"></variables>
		<variables name="Alarme_poids_max_Eau2" typeName="EBOOL" topologicalAddress="%M779"></variables>
		<variables name="Premier_Prod_Eau2" typeName="BOOL"></variables>
		<variables name="Alarme_bloquante_dosage_Cim2" typeName="BOOL"></variables>
		<variables name="Conf_silo_anhydrite_TOFF_ajust" typeName="TIME" topologicalAddress="%MW7710"></variables>
		<variables name="CPT20_EVT_COUNTER_LOW_ENABLE" typeName="BOOL"></variables>
		<variables name="Pesee_incomplete_Anh" typeName="EBOOL" topologicalAddress="%M579"></variables>
		<variables name="Cde_dosage_Ppe" typeName="BOOLARR20" topologicalAddress="%MW4739"></variables>
		<variables name="TON_wattmetre_mal1" typeName="TON"></variables>
		<variables name="Sorties_Anh_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Saturation_sup_Eau2" typeName="BOOL"></variables>
		<variables name="BCMIX_Ouv_EV3" typeName="EBOOL" topologicalAddress="%M742">
			<comment>Colorant</comment>
		</variables>
		<variables name="AI_Value_Module_4" typeName="INTARR8a" topologicalAddress="%MW4436">
			<comment>Not used</comment>
		</variables>
		<variables name="Cumul_Gra_manu" typeName="STOCK5">
			<comment>DFB gestion du cumul "cumul_a pour auto"*)</comment>
		</variables>
		<variables name="DIS_BAL_Gra2" typeName="DIS_BAL"></variables>
		<variables name="Conf_cim_nb_vibreur" typeName="INTARR6" topologicalAddress="%MW6968">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Demande_debut_dosage_ppe" typeName="BOOLARR20"></variables>
		<variables name="AI_23" typeName="INT">
			<comment>Old %IW87</comment>
		</variables>
		<variables name="mot_entree3_ccr3" typeName="WORD" topologicalAddress="%MW5960"></variables>
		<variables name="Ecart_pesee_en_taux_Eau1" typeName="INT" topologicalAddress="%MW4803">
			<comment>Ecart de pesee en pour dix-millieme pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="Gra2_presence_prod_Eau2" typeName="BOOL"></variables>
		<variables name="BCMix_DO_99" typeName="EBOOL" topologicalAddress="%M899">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TON_244" typeName="TON"></variables>
		<variables name="suite_index_transfert_cim" typeName="INT"></variables>
		<variables name="AI_60_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="CPT10_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.10.1.2"></variables>
		<variables name="Cumul_Adj_manu_stable" typeName="BOOL"></variables>
		<variables name="BP_dosage_Cim_6" typeName="EBOOL" topologicalAddress="%M161"></variables>
		<variables name="BCMix_ETOR_49a64" typeName="WORD" topologicalAddress="%MW4405">
			<comment>ETOR_49a64</comment>
		</variables>
		<variables name="Info_prot_mot_Vid_EAU_PPE" typeName="EBOOL">
			<comment>(Roumanie) Vidange de la bascule par pompe</comment>
		</variables>
		<variables name="TON_Comm_HMS_possible" typeName="TON"></variables>
		<variables name="AI_31_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="AI_3_Lower_Saturation" typeName="BOOL" topologicalAddress="%IW0.6.2.1.6">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Vidange_dans_TT_gra" typeName="BOOL"></variables>
		<variables name="BP_dosage_Adj_6" typeName="EBOOL" topologicalAddress="%M171"></variables>
		<variables name="DI_Skip_Waiting_Position" typeName="EBOOL" topologicalAddress="%I0.1.15">
			<comment>Skip in 'intermediary' position (waiting for introduction in mixer or truck) ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_Admix_Tank14_Open" typeName="EBOOL" topologicalAddress="%Q0.4.45">
			<comment>Open admixture 'tank 14'</comment>
		</variables>
		<variables name="AI_62" typeName="INT">
			<comment>Old %IW126</comment>
		</variables>
		<variables name="FM_DOS_Eau1" typeName="R_TRIG"></variables>
		<variables name="Conf_Admix_Weigher_PP_With_Sens" typeName="BOOL">
			<comment>2 pumps, 2 sensors</comment>
		</variables>
		<variables name="Conf_Cem2_Ana_Offset" typeName="INT">
			<comment>offset for cement weigher 2</comment>
		</variables>
		<variables name="FD_skip_haut" typeName="F_TRIG"></variables>
		<variables name="BI_fermeture_trappe1_mal1" typeName="BOOL"></variables>
		<variables name="Pesee_bloquee_Anh" typeName="EBOOL" topologicalAddress="%M578"></variables>
		<variables name="Etat_balance_Gra2_et_glace" typeName="EBOOL"></variables>
		<variables name="CPT17_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="AI_20_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Poids_deja_pese_Gra1" typeName="INT" topologicalAddress="%MW4587"></variables>
		<variables name="Poids_vise_deja_ecrit_Gra1" typeName="BOOL"></variables>
		<variables name="FM_dos_pupitre_PPE_13" typeName="R_TRIG"></variables>
		<variables name="conf_skip_def_ext_capt_GV_actif0" typeName="EBOOL" topologicalAddress="%M299"></variables>
		<variables name="BCMix_DO_21" typeName="EBOOL" topologicalAddress="%M821">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_silo_anhydrite_TOFF_pv" typeName="TIME" topologicalAddress="%MW7700">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="NG_Gra1" typeName="INT" topologicalAddress="%MW4522"></variables>
		<variables name="Conf_Admix_Process_Tol_Default" typeName="INTARR20" topologicalAddress="%MW7212"></variables>
		<variables name="LED_Pupitre" typeName="ARRAY[1..5] OF INT">
			<comment>(Roumanie) Diode Pupitre (9 octets)</comment>
		</variables>
		<variables name="BALANCE_TT_Cim" typeName="WORD">
			<comment>Adresse en Qt uniquement</comment>
		</variables>
		<variables name="Pesee_bloquee_Cim2" typeName="EBOOL" topologicalAddress="%M756"></variables>
		<variables name="FM_dos_ManuLog_PPE_7" typeName="R_TRIG"></variables>
		<variables name="Conf_skip_gde_vit_desc" typeName="EBOOL" topologicalAddress="%M294"></variables>
		<variables name="TOF_Mem_vidange_adj1" typeName="TOF"></variables>
		<variables name="Cdes_dosage" typeName="ARRAY[1..72] OF BOOL" topologicalAddress="%MW4716">
			<comment>Couvre toutes les "Cde_dosage_*" : 14 Gra + 6(+2) Cim + 4 Eau + 20 Adj + 20 Ppes + 4(+2) Add</comment>
		</variables>
		<variables name="Manu_Log_ouv_basc_Cim1" typeName="BOOL"></variables>
		<variables name="Conf_skip_TON_ETOR_cable_mou" typeName="TIME" topologicalAddress="%MW8368">
			<comment>Tempo sur Etor Cable_Mou</comment>
		</variables>
		<variables name="Pulse_Cde_ppe_vidange_comp_adj2" typeName="EBOOL"></variables>
		<variables name="Pas_de_transfert_granulat" typeName="BOOL"></variables>
		<variables name="BP_dosage_Adj_18" typeName="EBOOL" topologicalAddress="%M183"></variables>
		<variables name="DO_63" typeName="EBOOL" topologicalAddress="%Q0.3.62">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_Arpege_IP3" typeName="INT" topologicalAddress="%MW8678">
			<comment>Format IP1.IP2.IP3.IP4</comment>
		</variables>
		<variables name="FD_manu_2_Eau" typeName="F_TRIG"></variables>
		<variables name="DO_126" typeName="EBOOL" topologicalAddress="%Q0.4.61">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Admix_Weigher_Cpt4_PB_PLC_Op" typeName="EBOOL">
			<comment>Open admixture weigher 'compartment 4'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_68_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Conf_TT_cim_pourcent" typeName="INT" topologicalAddress="%MW8504">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Vibreur_balance_Anh" typeName="EBOOL"></variables>
		<variables name="consigne_ppe9" typeName="INT" topologicalAddress="%MW5954"></variables>
		<variables name="CPT18_COMPARE_ENABLE" typeName="BOOL"></variables>
		<variables name="BCMix_DO_62" typeName="EBOOL" topologicalAddress="%M862">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_skip_sortie_grde_vit_actif0" typeName="EBOOL" topologicalAddress="%M298"></variables>
		<variables name="fd_doser_Gra_manu" typeName="F_TRIG"></variables>
		<variables name="Poids_vise_deja_ecrit_Cim1" typeName="BOOL"></variables>
		<variables name="Saturation_sup_TT_granulat" typeName="BOOL"></variables>
		<variables name="Alarme_satur_inf_Adj" typeName="EBOOL" topologicalAddress="%M799"></variables>
		<variables name="DO_45" typeName="EBOOL" topologicalAddress="%Q0.3.44">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AU_Acquittes" typeName="EBOOL"></variables>
		<variables name="Conf_Agg1_Ana_Offset" typeName="INT">
			<comment>offset for aggregate weigher 1</comment>
		</variables>
		<variables name="TT_cim_stable" typeName="EBOOL"></variables>
		<variables name="DI_81" typeName="EBOOL" topologicalAddress="%I0.2.16">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="code_plasticite_malax2" typeName="INT"></variables>
		<variables name="Element_TG_Vide" typeName="EBOOL"></variables>
		<variables name="DO_22" typeName="EBOOL" topologicalAddress="%Q0.3.21">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_37" typeName="EBOOL" topologicalAddress="%I0.1.36">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Info_balance_Cim2_fermee" typeName="EBOOL" topologicalAddress="%M49"></variables>
		<variables name="DO_18" typeName="EBOOL" topologicalAddress="%Q0.3.17">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Pese_Eau_manu" typeName="UDINTARR4" topologicalAddress="%MW4998">
			<comment>Suivi conso (lec BCMIX)</comment>
		</variables>
		<variables name="Adjuvant_stable" typeName="EBOOL"></variables>
		<variables name="Pup_Cde_dos_Adj" typeName="ARRAY[1..20] OF BOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Pup_Montee_Skip" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="Poids_demande_Cim2" typeName="INT" topologicalAddress="%MW4558"></variables>
		<variables name="Alarme_prot_mot_Skip" typeName="EBOOL" topologicalAddress="%M664">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="TON_dis_tremie_tampon_granulat" typeName="TON"></variables>
		<variables name="Rapport_Ecr" typeName="ARRAY[0..3] OF INT"></variables>
		<variables name="DI_Admix_Tank19_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.50">
			<comment>Open admixture 'tank 19'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Pese_Anh_manu" typeName="UDINT" topologicalAddress="%MW5088">
			<comment>Suivi conso (lec BCMIX)</comment>
		</variables>
		<variables name="DO_Agg_Bin6_Open" typeName="EBOOL" topologicalAddress="%Q0.4.5">
			<comment>Open aggregate 'bin 6'</comment>
		</variables>
		<variables name="TOF_77_245" typeName="TOF"></variables>
		<variables name="TON_43" typeName="TON"></variables>
		<variables name="Prod_Suivant_Eau1" typeName="BOOL"></variables>
		<variables name="BCMix_DO_81" typeName="EBOOL" topologicalAddress="%M881">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="temps_malax2" typeName="INT" topologicalAddress="%MW4651"></variables>
		<variables name="Alarme_prot_mot_Vid_ADJ_PPE" typeName="EBOOL" topologicalAddress="%M666">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="AI_40_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Discordance_vidange_anhydrite" typeName="EBOOL" topologicalAddress="%M583"></variables>
		<variables name="TON_seuil_vide_Cim1" typeName="TON"></variables>
		<variables name="AI_53_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="W2_eau1" typeName="REAL" topologicalAddress="%MW8004">
			<comment>Value in kg for high point of the calibration for water weigher 1</comment>
		</variables>
		<variables name="conf_Eau2_sens_fc_vidange" typeName="EBOOL" topologicalAddress="%M384"></variables>
		<variables name="Conf_tap_trans_pres_capt_rot" typeName="EBOOL" topologicalAddress="%M407"></variables>
		<variables name="Tol_ppe" typeName="INT">
			<comment>tolérance en INT</comment>
		</variables>
		<variables name="Conf_cim1_ecart_stabilite" typeName="INT" topologicalAddress="%MW7875"></variables>
		<variables name="AI_54_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Trappe1_malaxeur2_bloquee" typeName="EBOOL" topologicalAddress="%M633"></variables>
		<variables name="DI_Cem_Silo1_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.16">
			<comment>Open cement 'silo 1'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="BCMix_DO_126" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Mixer2_Gate2_Opened" typeName="EBOOL">
			<comment>Mixer 2' Gate 2' open ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="BCMix_DO_31" typeName="EBOOL" topologicalAddress="%M831">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Dosage_simultane_Gra1" typeName="BOOL"></variables>
		<variables name="CPT03_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.9.2.4"></variables>
		<variables name="CPT07_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.9.6.2"></variables>
		<variables name="Conf_cim2_tps_vidange" typeName="TIME" topologicalAddress="%MW7932">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Pup_Cde_vid_basc_Gra1" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="TON_Discordance_ASPI" typeName="TON"></variables>
		<variables name="BCMix_DO_17" typeName="EBOOL" topologicalAddress="%M817">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Erreur_jetee_Eau2" typeName="INT" topologicalAddress="%MW5524"></variables>
		<variables name="Stock_manu_Gra_14" typeName="BOOL"></variables>
		<variables name="Top_depart_Vid_Gra" typeName="EBOOL"></variables>
		<variables name="Numero_produit_Gra2" typeName="INT" topologicalAddress="%MW4543"></variables>
		<variables name="W2_adj_Weight1" typeName="REAL" topologicalAddress="%MW8110">
			<comment>Value in kg for high point of the calibration for adm weigher 1</comment>
		</variables>
		<variables name="TON_tps_vidange" typeName="TON"></variables>
		<variables name="Manu_Tps_dosage_Anh" typeName="TIME" topologicalAddress="%MW5544"></variables>
		<variables name="DI_Skip_Low_Position" typeName="EBOOL" topologicalAddress="%I0.1.14">
			<comment>Skip in 'low' position ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Cumul_Gra_manu_deptstab" typeName="BOOL"></variables>
		<variables name="Conf_tap_trans_tps_anticipation" typeName="TIME" topologicalAddress="%MW8348"></variables>
		<variables name="Vidange_Dry_Adj" typeName="Vidange_Basc_Dry2"></variables>
		<variables name="FM_dos_pupitre_PPE_2" typeName="R_TRIG"></variables>
		<variables name="Temps_vidange_malax1" typeName="TIME"></variables>
		<variables name="BCMix_DO_70" typeName="EBOOL" topologicalAddress="%M870">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Poids_instantane_Gra1" typeName="INT" topologicalAddress="%MW4657"></variables>
		<variables name="voie_basc_Adj_Weight2" typeName="INT" topologicalAddress="%MW8162">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="Conf_granulat1_nb_tremies" typeName="INT" topologicalAddress="%MW7778"></variables>
		<variables name="Etape_155_Designee" typeName="BOOL"></variables>
		<variables name="Malax_1_t2_ouvert_sortie_seche" typeName="EBOOL"></variables>
		<variables name="DO_34" typeName="EBOOL" topologicalAddress="%Q0.3.33">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Auto_arret_mal2_IN" typeName="EBOOL">
			<comment>Arret type Inde</comment>
		</variables>
		<variables name="CPT11_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.2.0.5"></variables>
		<variables name="Cde_vibreur_TT_cim" typeName="EBOOL" topologicalAddress="%M242"></variables>
		<variables name="Info_prot_mot_vib_Gra1" typeName="EBOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Pup_Cde_dos_Cim" typeName="ARRAY[1..6] OF BOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Flags_pesage_Adj" typeName="flags_pesage_struct"></variables>
		<variables name="Stabilite_Gra_en_cours" typeName="BOOL"></variables>
		<variables name="Conf_cim2_filtre_Coef" typeName="INT" topologicalAddress="%MW7945">
			<variableInit value="100"></variableInit>
		</variables>
		<variables name="Manu_Gra_ecart_stabilite" typeName="INT"></variables>
		<variables name="IDX_init2" typeName="INT"></variables>
		<variables name="Vid_Adj_En_Cours" typeName="EBOOL"></variables>
		<variables name="Conf_adjuvant_comp1_vers_malax" typeName="EBOOL" topologicalAddress="%M363"></variables>
		<variables name="Pesee_bloquee_Eau2" typeName="EBOOL" topologicalAddress="%M772"></variables>
		<variables name="Mode_Simulation" typeName="EBOOL"></variables>
		<variables name="DI_50" typeName="EBOOL" topologicalAddress="%I0.1.49">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="AI_4_Higher_Saturation" typeName="BOOL" topologicalAddress="%IW0.6.3.1.5">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="DI_Admix_Weigher_Closed" typeName="EBOOL" topologicalAddress="%I0.1.7">
			<comment>Admixture weigher 'compartment 1' closed - For French-type admixture process (1 weigher with 1 or 2 destinations (among water weigher and mixer) and each weigher valve must have a sensor) ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Admix_Weigher_Cpt2_Closed" typeName="EBOOL">
			<comment>Admixture weigher 'compartment 2' emptying valve closed - For Romanian-type admixture process (1 weigher, 2 compartments but 1 only destination, and each compartment has a 'closed' sensor) ['0' or '1' for 'TRUE' (must be the same on both valves)]</comment>
		</variables>
		<variables name="FD_skip_tres_bas" typeName="F_TRIG"></variables>
		<variables name="Conf_granulat1_nb_vibreur_bal" typeName="INT" topologicalAddress="%MW7762"></variables>
		<variables name="Temps_max_ppe" typeName="BOOLARR20" topologicalAddress="%MW5262"></variables>
		<variables name="Conf_granulat2_nb_vibreur_bal" typeName="INT" topologicalAddress="%MW7826">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="DENSITE_M_E_S" typeName="DENS_MES"></variables>
		<variables name="Verif_temps_skip_gv_Active" typeName="BOOL"></variables>
		<variables name="consigne_ppe15" typeName="INT" topologicalAddress="%MW5969"></variables>
		<variables name="BCMix_DO_91" typeName="EBOOL" topologicalAddress="%M891">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Cde_skip_gde_vitesse" typeName="EBOOL" topologicalAddress="%M274"></variables>
		<variables name="Manu_temporise" typeName="EBOOL" topologicalAddress="%M484"></variables>
		<variables name="FM_dos_Manulog_PPE_19" typeName="R_TRIG"></variables>
		<variables name="Pup_Cde_vid_basc_Cim1" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="conf_granulat2_binaire" typeName="EBOOL" topologicalAddress="%M324">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="Presence_prod_Gra2" typeName="EBOOL"></variables>
		<variables name="CPT03_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="Vidange_terminee_Mal2" typeName="EBOOL"></variables>
		<variables name="Alarme_IDE500_Cim2" typeName="EBOOL" topologicalAddress="%M550"></variables>
		<variables name="DI_91" typeName="EBOOL" topologicalAddress="%I0.2.26">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="DO_73" typeName="EBOOL" topologicalAddress="%Q0.4.8">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="top_sec" typeName="EBOOL"></variables>
		<variables name="AI_6_Lower_Saturation" typeName="BOOL" topologicalAddress="%IW0.7.1.1.6">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Data_Mesomatic6" typeName="ARRAY[1..5] OF INT"></variables>
		<variables name="BCMix_DO_114" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="ma0_2" typeName="INT"></variables>
		<variables name="Conf_Anh_Process_Tol_Default" typeName="INT" topologicalAddress="%MW7694">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Poids_instantane_Adj" typeName="INT" topologicalAddress="%MW4663"></variables>
		<variables name="DI_07" typeName="EBOOL" topologicalAddress="%I0.1.6">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Pesee_incomplete_Eau2" typeName="EBOOL" topologicalAddress="%M773"></variables>
		<variables name="Vidange_terminee_Gra1" typeName="EBOOL"></variables>
		<variables name="Doser_Anh_manu" typeName="BOOL"></variables>
		<variables name="remplacement_adjuvant" typeName="EBOOL" topologicalAddress="%M481"></variables>
		<variables name="AI_24_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="DI_65" typeName="EBOOL" topologicalAddress="%I0.2.0">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Conf_cim_tps_ecoulement" typeName="TIMEARR6" topologicalAddress="%MW7008">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Pret_pour_vidange_Mal1" typeName="EBOOL"></variables>
		<variables name="DI_Mixer1_Grease_PP_Low_Pressure" typeName="EBOOL">
			<comment>Low grease pressure on 'mixer 1' grease pump - A delayed alarm stops the mixer. ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_Admix_Tank3_Open" typeName="EBOOL" topologicalAddress="%Q0.4.34">
			<comment>Open admixture 'tank 3'</comment>
		</variables>
		<variables name="Stock_Cim1_auto" typeName="BOOL"></variables>
		<variables name="DO_Agg1_Fine_Weighing" typeName="EBOOL" topologicalAddress="%Q0.3.17">
			<comment>Activate fine weighing on the current bin of the 'aggregate 1' weighing line ['0' or '1' for 'ON']</comment>
		</variables>
		<variables name="Intro_Adj_dans_Eau1" typeName="EBOOL"></variables>
		<variables name="Stock_manu_Adj_16" typeName="BOOL"></variables>
		<variables name="BP_dosage_Gra_5" typeName="EBOOL" topologicalAddress="%M146"></variables>
		<variables name="Simuler_dosage_Gra1" typeName="BOOL"></variables>
		<variables name="Manu_Log_ouv_basc_Cim2" typeName="BOOL"></variables>
		<variables name="PESA_Gra2" typeName="PESA"></variables>
		<variables name="DI_Agg_Bin9_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.8">
			<comment>Open aggregate 'bin 9'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="BCMix_DO_29" typeName="EBOOL" topologicalAddress="%M829">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Skip_CBT" typeName="EBOOL">
			<comment>Skip circuit breaker tripped - An alarm stop the skip ['0' or '1' for 'TRUE' - see 'Conf_prot_mot_skip_Actif0' variable]</comment>
		</variables>
		<variables name="DI_Anh_Weigher_Opened" typeName="EBOOL" topologicalAddress="%I0.1.10">
			<comment>Anhydrite weigher opened ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Admix_Tank10_PB_PLC_Open" typeName="EBOOL">
			<comment>Open admixture 'tank 10'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Intro_Gra_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Conf_eau_TOFF_pesage_fin" typeName="TIMEARR4" topologicalAddress="%MW7116"></variables>
		<variables name="Conf_Agg_WH_Ana_Step" typeName="INT">
			<comment>step for aggregate waiting hopper</comment>
		</variables>
		<variables name="Pulse_Pup_Marche_Arret_PPE_EAU" typeName="EBOOL"></variables>
		<variables name="Numero_produit_Gra2_aux2" typeName="INT"></variables>
		<variables name="Conf_HMS_Profibus_IP2" typeName="INT" topologicalAddress="%MW8681">
			<comment>Format IP1.IP2.IP3.IP4</comment>
		</variables>
		<variables name="Conf_cim2_tps_max_stab" typeName="TIME" topologicalAddress="%MW7930"></variables>
		<variables name="Cumul_Eau1_auto_deptstab" typeName="BOOL"></variables>
		<variables name="Alarme_poids_max_Cim2" typeName="EBOOL" topologicalAddress="%M763"></variables>
		<variables name="Limite_sous_dosage_anh_gra" typeName="INT"></variables>
		<variables name="fm_cumul_Eau_manu_stable" typeName="R_TRIG"></variables>
		<variables name="DI_Mixer_Gates_PB_Pro_Auto_Manu" typeName="EBOOL" topologicalAddress="%I0.1.22">
			<comment>Mixers Gates 'auto'/'manu' selector in 'auto' (if no profibus console or direct-to-PLC console) or mixers Gates 'auto'/'manu' pushbutton pressed (on profibus console : push once for 'auto', push again for 'manu') ['1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_43_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Info_trappe1_fermee_mal1" typeName="EBOOL" topologicalAddress="%M26"></variables>
		<variables name="Conf_TT_Gra_retard_ferm" typeName="TIME" topologicalAddress="%MW8396"></variables>
		<variables name="Alarme_detare_Adj" typeName="EBOOL" topologicalAddress="%M574"></variables>
		<variables name="TON_manu_Adj" typeName="TON"></variables>
		<variables name="Seq_ppe_vers_malax_en_cours" typeName="ARRAY[1..6] OF EBOOL">
			<comment>Liste des dosages par pompe en cours dans la sequence d'introduction</comment>
		</variables>
		<variables name="Conf_Cim2_seuil_vide" typeName="INT" topologicalAddress="%MW7924"></variables>
		<variables name="FD_skip_bas" typeName="F_TRIG"></variables>
		<variables name="Cumul_Eau1_auto_stable" typeName="BOOL"></variables>
		<variables name="Conf_Skip_Mot_Prot_Act0" typeName="EBOOL">
			<comment>Skip motor protection</comment>
		</variables>
		<variables name="Manu_cde_dosage_eau" typeName="EBOOL" topologicalAddress="%M734"></variables>
		<variables name="CPT10_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.1.1.3"></variables>
		<variables name="Info_Pression_PPE_Graisse1" typeName="EBOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="CPT07_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.9.6.7"></variables>
		<variables name="test_fm_dos_granulat2_auto" typeName="BOOL"></variables>
		<variables name="Conf_granulat2_temps_ecoulement" typeName="TIME" topologicalAddress="%MW7844"></variables>
		<variables name="Top_depart_Vid_Cim2" typeName="EBOOL"></variables>
		<variables name="AI_21_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Alarme_IDE500_TT_granulat" typeName="EBOOL" topologicalAddress="%M606"></variables>
		<variables name="DO_117" typeName="EBOOL" topologicalAddress="%Q0.4.52">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="poids_pese_Cim1" typeName="INT"></variables>
		<variables name="FD_VAL_CAM_D" typeName="F_TRIG"></variables>
		<variables name="Vid_seq_Cim1" typeName="EBOOL"></variables>
		<variables name="AI_28" typeName="INT">
			<comment>Old %IW92</comment>
		</variables>
		<variables name="Ecart_pesee_Gra1" typeName="INT" topologicalAddress="%MW4790">
			<comment>Ecart de pesee en unités de dosage pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="TON_skip_haut_bas" typeName="TON"></variables>
		<variables name="Info_densite_cuve_1" typeName="EBOOL" topologicalAddress="%M37"></variables>
		<variables name="fd_doser_Adj_manu" typeName="F_TRIG"></variables>
		<variables name="Depassement_tolerance_Eau1" typeName="EBOOL" topologicalAddress="%M556"></variables>
		<variables name="TON_attente_max_transfert" typeName="TON"></variables>
		<variables name="Pesee_incomplete_Cim2" typeName="EBOOL" topologicalAddress="%M757"></variables>
		<variables name="Manu_cde_vibreur_bal_eau2" typeName="EBOOL" topologicalAddress="%M747"></variables>
		<variables name="AI_5" typeName="INT" topologicalAddress="%IW0.7.0">
			<comment>Old %IW20</comment>
		</variables>
		<variables name="Perte_position_skip" typeName="EBOOL" topologicalAddress="%M592"></variables>
		<variables name="Numero_produit_Cim2_initial" typeName="INT"></variables>
		<variables name="FM_Cde_Manu_PPE_14" typeName="R_TRIG"></variables>
		<variables name="mot_entree1_ccr2" typeName="WORD" topologicalAddress="%MW5945"></variables>
		<variables name="FM_Top_depart_Vid_Ppe" typeName="R_TRIG"></variables>
		<variables name="Numero_produit_Eau2" typeName="INT" topologicalAddress="%MW4547"></variables>
		<variables name="Simuler_dosage_Eau1" typeName="BOOL"></variables>
		<variables name="AI_44" typeName="INT">
			<comment>Old %IW108</comment>
		</variables>
		<variables name="BCMix_DO_106" typeName="EBOOL" topologicalAddress="%M906">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Temps_max_transfert_cim" typeName="EBOOL" topologicalAddress="%M619"></variables>
		<variables name="CPT11_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.2.1.3"></variables>
		<variables name="Alarme_satur_sup_Eau2" typeName="EBOOL" topologicalAddress="%M785"></variables>
		<variables name="P1_adj_Weight3" typeName="INT" topologicalAddress="%MW8208">
			<comment>Value in point for low point of the calibration for adm weigher 3</comment>
		</variables>
		<variables name="DO_Water_Tank3_Open" typeName="EBOOL" topologicalAddress="%Q0.4.26">
			<comment>Open water 'tank 3'</comment>
		</variables>
		<variables name="Poids_instantane_Eau1" typeName="INT" topologicalAddress="%MW4661"></variables>
		<variables name="AI_59_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="FM_FIN_DOS_Eau2" typeName="R_TRIG"></variables>
		<variables name="CPT10_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.10.1.2"></variables>
		<variables name="Malaxage_termine_Mal1" typeName="EBOOL"></variables>
		<variables name="Manu_cde_vidange_basc_Cim2" typeName="EBOOL" topologicalAddress="%M743"></variables>
		<variables name="Stock_manu_Adj_8" typeName="BOOL"></variables>
		<variables name="Poids_de_reference_Gra1" typeName="INT"></variables>
		<variables name="W1_eau1" typeName="REAL" topologicalAddress="%MW8002">
			<comment>Value in kg for low point of the calibration for water weigher 1</comment>
		</variables>
		<variables name="BCMix_DO_39" typeName="EBOOL" topologicalAddress="%M839">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="FM_Info_skip_grde_vit_bas" typeName="R_TRIG"></variables>
		<variables name="Produit_remplacement_Gra2" typeName="INT" topologicalAddress="%MW5503"></variables>
		<variables name="DI_Agg_Bin7_PB_PLC_Open" typeName="EBOOL">
			<comment>Open aggregate 'bin 7'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Restitution_sorties_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Introduction_Gra_encours" typeName="EBOOL"></variables>
		<variables name="FM_dos_ManuLog_PPE_8" typeName="R_TRIG"></variables>
		<variables name="DI_Mixer2_Gate2_Closed" typeName="EBOOL">
			<comment>Mixer 2' Gate 2' closed ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Manu_cde_vidange_basc_granulat1" typeName="EBOOL" topologicalAddress="%M705"></variables>
		<variables name="TOF_76_1031" typeName="TOF"></variables>
		<variables name="TG2_vide" typeName="EBOOL"></variables>
		<variables name="Rapport_Ecr_IDE500" typeName="ARRAY[0..3] OF INT"></variables>
		<variables name="BP_dosage_Gra_13" typeName="EBOOL" topologicalAddress="%M154"></variables>
		<variables name="Alarme_satur_sup_Gra1" typeName="EBOOL" topologicalAddress="%M677"></variables>
		<variables name="Conf_tap_trans_tps_max_de_marche" typeName="TIME" topologicalAddress="%MW8342"></variables>
		<variables name="suite_index_sortie_g1" typeName="INT"></variables>
		<variables name="NO_MAST_MODE" typeName="BOOL"></variables>
		<variables name="msg_mal1_non_vide_vid_auto" typeName="EBOOL" topologicalAddress="%M629"></variables>
		<variables name="indisponibilite_MES" typeName="EBOOL" topologicalAddress="%M560"></variables>
		<variables name="BCMix_DO_44" typeName="EBOOL" topologicalAddress="%M844">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Pese_Anh_auto" typeName="UDINT" topologicalAddress="%MW5086">
			<comment>Suivi conso (lec BCMIX)</comment>
		</variables>
		<variables name="AI_71_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Skip_gde_vitesse_permise" typeName="BOOL"></variables>
		<variables name="Ouv_XV3" typeName="EBOOL">
			<comment>Colorant - Ouv air comprimé pour vidange bonbonne colorant</comment>
		</variables>
		<variables name="Manu_cde_vidange_comp_adjuvant" typeName="EBOOL" topologicalAddress="%M712"></variables>
		<variables name="AI_17_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Conf_Admix_Empty_Limit_Simen" typeName="EBOOL">
			<comment>put conf_seuil_vide_simem to 1 if you are in a SIMEM plant, it will manage to leave some admixture in the jars</comment>
		</variables>
		<variables name="Manu_Log_ouv_TT_gra" typeName="BOOL"></variables>
		<variables name="Stock_manu_Gra_1" typeName="BOOL"></variables>
		<variables name="Etat_balance_Eau1" typeName="EBOOL"></variables>
		<variables name="Cumul_Anh_manu" typeName="STOCK5"></variables>
		<variables name="AI_27_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="DI_75" typeName="EBOOL" topologicalAddress="%I0.2.10">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Conf_tps_av_arret_mals" typeName="TIME" topologicalAddress="%MW8588">
			<comment>Temps avnt arret automatique</comment>
		</variables>
		<variables name="Marche_tapis_transfert_granulat" typeName="EBOOL"></variables>
		<variables name="DO_107" typeName="EBOOL" topologicalAddress="%Q0.4.42">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TOF_feu_trappe1_mal2" typeName="TOF"></variables>
		<variables name="AI_Adj_Weight_4_Value" typeName="INT"></variables>
		<variables name="Poids_deja_pese_Eau1" typeName="INT" topologicalAddress="%MW4591"></variables>
		<variables name="NP_initial_Eau2_A_Doser" typeName="INT"></variables>
		<variables name="Manu_cde_vibreur_bal_cim1" typeName="EBOOL" topologicalAddress="%M715"></variables>
		<variables name="Vidange_Dry_Cim2" typeName="Vidange_Basc_Dry2"></variables>
		<variables name="AI_72_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="tps_transfert_ecoule" typeName="EBOOL"></variables>
		<variables name="Alarme_vidange_Eau2" typeName="EBOOL" topologicalAddress="%M778"></variables>
		<variables name="mot_travail1" typeName="WORD"></variables>
		<variables name="DO_89" typeName="EBOOL" topologicalAddress="%Q0.4.24">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_10_Error" typeName="BOOL" topologicalAddress="%I0.8.1.ERR">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Conf_granulat1_tps_antitalutage" typeName="TIME" topologicalAddress="%MW7782"></variables>
		<variables name="Detarage_Cim1" typeName="BOOL"></variables>
		<variables name="Numero_Adj_pupitre" typeName="NUM_PUP">
			<comment>declarations adjuvants*)</comment>
		</variables>
		<variables name="Etat_balance_Adj" typeName="EBOOL"></variables>
		<variables name="Pesee_terminee_Gra1" typeName="EBOOL"></variables>
		<variables name="Pres_prod_Cim2" typeName="BOOL"></variables>
		<variables name="Numero_produit_Eau2_initial" typeName="INT"></variables>
		<variables name="PESA_Eau2" typeName="PESA"></variables>
		<variables name="FM_dos_Manulog_PPE_11" typeName="R_TRIG"></variables>
		<variables name="Conf_multipl_TT_Granulat" typeName="REAL" topologicalAddress="%MW8418"></variables>
		<variables name="Conf_granulat1_tps_max_stab" typeName="TIME" topologicalAddress="%MW7748"></variables>
		<variables name="Poids_demande_Gra1" typeName="INT" topologicalAddress="%MW4555"></variables>
		<variables name="CPT19_COUNTER_CURRENT_VALUE" typeName="DINT"></variables>
		<variables name="DI_26" typeName="EBOOL" topologicalAddress="%I0.1.25">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="consigne_ppe1" typeName="INT" topologicalAddress="%MW5935"></variables>
		<variables name="Defaut_tapis_transfert" typeName="EBOOL"></variables>
		<variables name="fm_cumul_Eau1_auto_stable" typeName="R_TRIG"></variables>
		<variables name="Vibreur_balance_Gra2" typeName="EBOOL"></variables>
		<variables name="Poids_de_reference_Eau1" typeName="INT"></variables>
		<variables name="LEC_BIN_BCD_Adj" typeName="LEC_BIN_BCD"></variables>
		<variables name="Pup_Cde_Tapis_Trans" typeName="EBOOL"></variables>
		<variables name="BP_dosage_Adj_10" typeName="EBOOL" topologicalAddress="%M175"></variables>
		<variables name="Cde_BCMix_ARINT" typeName="ARRAY[1..20] OF INT"></variables>
		<variables name="Manu_cde_PV_granulat1" typeName="EBOOL" topologicalAddress="%M700"></variables>
		<variables name="Alarme_arret_urgence_malaxeur" typeName="EBOOL" topologicalAddress="%M790"></variables>
		<variables name="Vidange_malaxeur1" typeName="Sequence_trappe2"></variables>
		<variables name="Manu_cde_fermeture_trappe_2_mal1" typeName="EBOOL" topologicalAddress="%M727"></variables>
		<variables name="DO_97" typeName="EBOOL" topologicalAddress="%Q0.4.32">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_68_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="DI_88" typeName="EBOOL" topologicalAddress="%I0.2.23">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Basc_instable_Eau1" typeName="EBOOL" topologicalAddress="%M555"></variables>
		<variables name="DI_17" typeName="EBOOL" topologicalAddress="%I0.1.16">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Pup_Cde_stop_malax1" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="Conf_bypass_tps_reponse" typeName="TIME" topologicalAddress="%MW8586">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="EJ_Eau2_A_Doser" typeName="INT"></variables>
		<variables name="CPT14_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.10.5.2"></variables>
		<variables name="Numero_produit_Adj_initial" typeName="INT"></variables>
		<variables name="mot2_temps_malaxage2" typeName="WORD"></variables>
		<variables name="Manu_cde_bypass_vers_mal2_sseche" typeName="EBOOL" topologicalAddress="%M723"></variables>
		<variables name="Conf_adjuvant2_basc_seuil_mini" typeName="INT">
			<comment>Seuil de détarrage</comment>
		</variables>
		<variables name="Conf_Skip_Slack_Steel_TON" typeName="TIME">
			<comment>Time Delay on “Memo_Skip_Bas”</comment>
		</variables>
		<variables name="Vidange_Comp_Adj" typeName="EBOOL"></variables>
		<variables name="DI_Cem_Silo3_PB_PLC_Open" typeName="EBOOL">
			<comment>Open cement 'silo 3'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Centrale_en_production" typeName="BOOL"></variables>
		<variables name="Numero_Cim_pupitre" typeName="NUM_PUP">
			<comment>declarations ciments*)</comment>
		</variables>
		<variables name="Stock_manu_Cim_2" typeName="BOOL"></variables>
		<variables name="NG_Mal2" typeName="INT" topologicalAddress="%MW4536"></variables>
		<variables name="Conf_Cim1_tps_sequence_ouv" typeName="TIME" topologicalAddress="%MW7910"></variables>
		<variables name="fm_doser_Cim1_auto" typeName="R_TRIG"></variables>
		<variables name="DIS_BAL_Adj" typeName="DIS_BAL"></variables>
		<variables name="Numero_manu_Eau_cumul" typeName="INT"></variables>
		<variables name="Seq_Vid_Code_synchro_partie2" typeName="INT">
			<comment>Récupéré dans TG_IN[].Vidange_dry[].Code_synchro</comment>
		</variables>
		<variables name="CPT20_COMPARE_ENABLE" typeName="BOOL"></variables>
		<variables name="Transf_ds_bonbonne_termine" typeName="BOOL">
			<comment>Colorants</comment>
		</variables>
		<variables name="Manu_cde_vidange_basc_cim1" typeName="EBOOL" topologicalAddress="%M707"></variables>
		<variables name="Info_skip_bas" typeName="EBOOL" topologicalAddress="%M8"></variables>
		<variables name="Auto_Vibreur_Eau2" typeName="BOOL"></variables>
		<variables name="cde_klaxon_trappe1_mal1" typeName="EBOOL"></variables>
		<variables name="AI_13_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="sens_pesage_fin_anhydrite" typeName="EBOOL" topologicalAddress="%M395"></variables>
		<variables name="Conf_multipl_Anhydrite" typeName="REAL" topologicalAddress="%MW8272"></variables>
		<variables name="pause_vidange_Eau2" typeName="BOOL"></variables>
		<variables name="DI_Mixer1_Gate1_PB_Pro_Close" typeName="EBOOL">
			<comment>Close 'mixer 1' 'gate 1'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Tol_inf_Gra1" typeName="EBOOL" topologicalAddress="%M513">
			<comment>tolérance inférieure</comment>
		</variables>
		<variables name="DO_50" typeName="EBOOL" topologicalAddress="%Q0.3.49">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Numero_produit_Cim2" typeName="INT" topologicalAddress="%MW4545"></variables>
		<variables name="mot_entree3_ccr2" typeName="WORD" topologicalAddress="%MW5947"></variables>
		<variables name="Produit_remplacement_Ppe" typeName="INTARR20" topologicalAddress="%MW5480"></variables>
		<variables name="Conf_TT_Gra_ctrl_vide" typeName="EBOOL" topologicalAddress="%M430"></variables>
		<variables name="DI_Admix_Weigher_Cpt5_PB_PLC_Op" typeName="EBOOL">
			<comment>Open admixture weigher 'compartment 5'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Alarme_IDE500_Anh" typeName="EBOOL" topologicalAddress="%M589"></variables>
		<variables name="Conf_granulat2_vit_rotation_mini" typeName="TIME" topologicalAddress="%MW7848"></variables>
		<variables name="AI_14" typeName="INT">
			<comment>Old %IW78</comment>
		</variables>
		<variables name="CPT03_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.9.2.7"></variables>
		<variables name="pause_vidange_Anh" typeName="BOOL"></variables>
		<variables name="Info_arret_urgence_adjuvant" typeName="EBOOL" topologicalAddress="%M56"></variables>
		<variables name="Pup_Cde_PV_Anh" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="Vibreur_balance_Eau2" typeName="EBOOL"></variables>
		<variables name="AI_23_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="CPT20_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="conf_ppe_tps_max" typeName="INTARR20" topologicalAddress="%MW7523">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="conf_mal1_sens_fc_trap1_fer" typeName="EBOOL" topologicalAddress="%M460"></variables>
		<variables name="DI_Admix_Tank8_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.39">
			<comment>Open admixture 'tank 8'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="CPT16_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="Bit_validation_camion_mal2" typeName="EBOOL" topologicalAddress="%M490"></variables>
		<variables name="AI_32" typeName="INT">
			<comment>Old %IW96</comment>
		</variables>
		<variables name="Conf_Cim2_tps_sequence_att" typeName="TIME" topologicalAddress="%MW7964"></variables>
		<variables name="DO_11" typeName="EBOOL" topologicalAddress="%Q0.3.10">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="FM_Zone_skip_Gde_vitesse" typeName="R_TRIG"></variables>
		<variables name="Alarme_arret_urgence_aux2" typeName="EBOOL" topologicalAddress="%M795"></variables>
		<variables name="voie_basc_Anh" typeName="INT" topologicalAddress="%MW8261">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="Manu_cde_vibreur_TT_granulat" typeName="EBOOL" topologicalAddress="%M721"></variables>
		<variables name="Petite_vitesse_Gra1" typeName="EBOOL"></variables>
		<variables name="AI_13_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Klaxon_fin_prod_mal2" typeName="BOOL"></variables>
		<variables name="Detarage_Gra4" typeName="BOOL"></variables>
		<variables name="Seuil_vide_atteint_TT_Gra" typeName="EBOOL"></variables>
		<variables name="DO_Cem_WH_Open" typeName="EBOOL">
			<comment>Open secondary cement hopper</comment>
		</variables>
		<variables name="Alarme_arret_urgence_transfert" typeName="EBOOL" topologicalAddress="%M788">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Vidange_granulat_dans_skip" typeName="EBOOL"></variables>
		<variables name="Poids_instantane_TT_Gra" typeName="INT" topologicalAddress="%MW4666"></variables>
		<variables name="Vidange_Gra2" typeName="EBOOL"></variables>
		<variables name="util_watt_mal1_plasticite" typeName="EBOOL" topologicalAddress="%M458"></variables>
		<variables name="Depassement_tolerance_Gra1" typeName="EBOOL" topologicalAddress="%M515"></variables>
		<variables name="Bit_cde_dos_Cim1" typeName="BOOL"></variables>
		<variables name="AI_49_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Conf_granulat_seuil_dos_simult" typeName="INTARR14" topologicalAddress="%MW6767"></variables>
		<variables name="CPT03_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.9.2.6"></variables>
		<variables name="fin_intro_tapis_transfert" typeName="EBOOL"></variables>
		<variables name="Entrees_Simulees" typeName="EBOOL"></variables>
		<variables name="skip_defaut_temps_grde_vit" typeName="EBOOL" topologicalAddress="%M687"></variables>
		<variables name="AI_54_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="DO_81" typeName="EBOOL" topologicalAddress="%Q0.4.16">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="P1_cim1" typeName="INT" topologicalAddress="%MW7902">
			<comment>Value in points for low point of the calibration for cement weigher 1</comment>
		</variables>
		<variables name="Etat_balance_Anh" typeName="EBOOL"></variables>
		<variables name="Gra_pret_pour_transfert" typeName="EBOOL"></variables>
		<variables name="Vidange_bloquee_Cim1" typeName="EBOOL" topologicalAddress="%M547"></variables>
		<variables name="BCMix_DO_8" typeName="EBOOL" topologicalAddress="%M808">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="SR_fin_vid_Cim2" typeName="SR"></variables>
		<variables name="Conf_Cem1_Ana_Offset" typeName="INT">
			<comment>offset for cement weigher 1</comment>
		</variables>
		<variables name="Amp_TT_Cim" typeName="REAL">
			<comment>valeur en Ampere (debug)</comment>
		</variables>
		<variables name="Conf_granulat1_ecart_stabilite" typeName="INT" topologicalAddress="%MW7745">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Info_XV2_ferme" typeName="EBOOL" topologicalAddress="%M191">
			<comment>Colorant - Capteur ZF2 : Reservoir exped ferme</comment>
		</variables>
		<variables name="Conf_Arpege_IP4" typeName="INT" topologicalAddress="%MW8679">
			<comment>Format IP1.IP2.IP3.IP4</comment>
		</variables>
		<variables name="Info_arret_urgence_aux1" typeName="EBOOL" topologicalAddress="%M58"></variables>
		<variables name="fm_cumul_Adj_auto_stable" typeName="R_TRIG"></variables>
		<variables name="sens_pesage_fin_cim1" typeName="EBOOL" topologicalAddress="%M333"></variables>
		<variables name="Tempo_vibreur_Eau2" typeName="TP"></variables>
		<variables name="Alarme_bloquante_dosage_Gra2" typeName="BOOL"></variables>
		<variables name="BCMix_DO_88" typeName="EBOOL" topologicalAddress="%M888">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_Cem_Silo6_Open" typeName="EBOOL" topologicalAddress="%Q0.4.21">
			<comment>Open cement 'silo 6'</comment>
		</variables>
		<variables name="Flags_pesage_Cim2" typeName="flags_pesage_struct"></variables>
		<variables name="Auto_Vibreur_Eau" typeName="BOOL"></variables>
		<variables name="valeur_instantanee_wattmetre1" typeName="INT" topologicalAddress="%MW4412"></variables>
		<variables name="TOF_Arret_RAMPE" typeName="TOF"></variables>
		<variables name="Infos_produit_Eau1_a_jour" typeName="EBOOL"></variables>
		<variables name="AI_15_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="LEC_MESOMATIC_Cim2" typeName="LEC_MESOMATIC"></variables>
		<variables name="Dosage_simultane_Cim1" typeName="BOOL"></variables>
		<variables name="DI_Admix_Tank10_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.41">
			<comment>Open admixture 'tank 10'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Lancer_transfert_Glace_Eau1" typeName="EBOOL"></variables>
		<variables name="Vid_Eau1_En_Cours" typeName="EBOOL"></variables>
		<variables name="Alarme_Niveau_haut_ADJ_Comp4" typeName="EBOOL" topologicalAddress="%M659">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Detarage_Cim2" typeName="BOOL"></variables>
		<variables name="Intro_Adj_terminee" typeName="EBOOL"></variables>
		<variables name="DI_Mixer1_Gate1_Opened" typeName="EBOOL" topologicalAddress="%I0.1.24">
			<comment>Mixer 1' Gate 1' open ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="pause_vidange_Eau1" typeName="BOOL"></variables>
		<variables name="Introduction_terminee" typeName="EBOOL"></variables>
		<variables name="Conf_eau_pesage_fin" typeName="INTARR4" topologicalAddress="%MW7104"></variables>
		<variables name="DI_Agg1_Weighing_Belt_SCTR" typeName="EBOOL">
			<comment>Speed control pulse detected on 'aggregate 1' weighing belt - Rises a 'slipping' auto-acknowledged non-blocking alarm ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_adjuvant_basc_tps_stab" typeName="TIME" topologicalAddress="%MW8088"></variables>
		<variables name="TON_seuil_vide_TT_ciment" typeName="TON"></variables>
		<variables name="TON_seuil_vide_TT_granulat" typeName="TON"></variables>
		<variables name="CPT04_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.3.0.5"></variables>
		<variables name="Conf_TT_Cim_val_actif_1" typeName="EBOOL" topologicalAddress="%M448"></variables>
		<variables name="DI_58" typeName="EBOOL" topologicalAddress="%I0.1.57">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Quantum_Actif" typeName="BOOL"></variables>
		<variables name="trappe_mal2_fermee" typeName="EBOOL"></variables>
		<variables name="Manu_Log_Montee_Skip" typeName="BOOL"></variables>
		<variables name="Poids_simu_Eau1" typeName="WORD" topologicalAddress="%MW5406"></variables>
		<variables name="BCMix_DO_78" typeName="EBOOL" topologicalAddress="%M878">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="voie_basc_Cim1" typeName="INT" topologicalAddress="%MW7895">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="Conf_bonbonne_cim" typeName="EBOOL" topologicalAddress="%M436"></variables>
		<variables name="Poids_simu_Adj" typeName="WORD" topologicalAddress="%MW5408"></variables>
		<variables name="BCMix_DO_56" typeName="EBOOL" topologicalAddress="%M856">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Vibreur_silos_Cim2" typeName="EBOOL"></variables>
		<variables name="TON_112" typeName="TON"></variables>
		<variables name="Numero_manu_Adj_cumul" typeName="INT"></variables>
		<variables name="Numero_manu_Gra_cumul" typeName="INT"></variables>
		<variables name="Alarme_PSL1_too_long" typeName="EBOOL" topologicalAddress="%M672">
			<comment>Colorant</comment>
		</variables>
		<variables name="DI_41" typeName="EBOOL" topologicalAddress="%I0.1.40">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="DI_Admix_Tank18_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.49">
			<comment>Open admixture 'tank 18'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_80" typeName="EBOOL" topologicalAddress="%I0.2.15">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Info_tapis_transfert_en_marche" typeName="EBOOL" topologicalAddress="%M15"></variables>
		<variables name="BCMix_DO_127" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Top_depart_Vid_Cim1" typeName="EBOOL"></variables>
		<variables name="DI_Admix_Tank7_PB_PLC_Open" typeName="EBOOL">
			<comment>Open admixture 'tank 7'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Seuil_Vide_Glace_vers_Gra1" typeName="BOOL"></variables>
		<variables name="Produit_remplacement_Cim1" typeName="INT" topologicalAddress="%MW5504"></variables>
		<variables name="TON_ALARME_DEP_PDS_SKIP" typeName="TON"></variables>
		<variables name="Cde_vidange_bascule_Cim1" typeName="EBOOL" topologicalAddress="%M227"></variables>
		<variables name="Top_depart_Vid_Adj_C2" typeName="EBOOL"></variables>
		<variables name="Cde_vibreur_balance_Cim2" typeName="EBOOL" topologicalAddress="%M265"></variables>
		<variables name="Pesee_incomplete_Gra2" typeName="EBOOL" topologicalAddress="%M526"></variables>
		<variables name="Alarme_detare_Gra2" typeName="EBOOL" topologicalAddress="%M535"></variables>
		<variables name="CPT18_EVT_COUNTER_LOW_ENABLE" typeName="BOOL"></variables>
		<variables name="BCMIX_Ouv_EV2" typeName="EBOOL" topologicalAddress="%M741">
			<comment>Colorant</comment>
		</variables>
		<variables name="Malax1_marche_ferme" typeName="BOOL"></variables>
		<variables name="DIS_BAL_Gra1" typeName="DIS_BAL"></variables>
		<variables name="Manu_Pup_ouv_basc_Cim1" typeName="BOOL"></variables>
		<variables name="Seq_Vid_Code_ligne_pesage" typeName="INT">
			<comment>Récupéré dans TG_IN[].Vidange_dry[].Code_prod</comment>
		</variables>
		<variables name="AI_20" typeName="INT">
			<comment>Old %IW84</comment>
		</variables>
		<variables name="LEC_BIN_BCD_Eau2" typeName="LEC_BIN_BCD"></variables>
		<variables name="Conf_tremie_tampon_tps_reponse" typeName="TIME" topologicalAddress="%MW8398">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="TON_TOFF_PV_Eau2" typeName="TON_TOFF"></variables>
		<variables name="Pulse_Cmd_Gate_Mode_Switch" typeName="EBOOL"></variables>
		<variables name="Transfert_Glace_Pret_Gra2" typeName="EBOOL"></variables>
		<variables name="Conf_TT_granulat_seuil_mini" typeName="INT" topologicalAddress="%MW8388">
			<comment>Seuil de dÃ©tarrage</comment>
		</variables>
		<variables name="TOF_Arret_RAMPE_ET" typeName="TIME"></variables>
		<variables name="DI_Agg_Bin8_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.7">
			<comment>Open aggregate 'bin 8'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="BP_dosage_Cim_5" typeName="EBOOL" topologicalAddress="%M160"></variables>
		<variables name="Memo_Cpt_Avant_remplace" typeName="INTARR20"></variables>
		<variables name="Conf_eau_nb_vibreur_bal" typeName="INT" topologicalAddress="%MW7996">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Cde_petite_vitesse_Gra1" typeName="EBOOL" topologicalAddress="%M220"></variables>
		<variables name="CPT17_FORCE_RESET" typeName="EBOOL"></variables>
		<variables name="AI_48_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Conf_Cem_WH_Ana_Offset" typeName="INT">
			<comment>offset for aggregate waiting hopper</comment>
		</variables>
		<variables name="BALANCE_Eau2" typeName="WORD"></variables>
		<variables name="DO_19" typeName="EBOOL" topologicalAddress="%Q0.3.18">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="BP_dosage_Adj_7" typeName="EBOOL" topologicalAddress="%M172"></variables>
		<variables name="Amp_Eau2" typeName="REAL">
			<comment>valeur en Ampere (debug)</comment>
		</variables>
		<variables name="inversion_info_vidange_vers_mal2" typeName="EBOOL" topologicalAddress="%M452"></variables>
		<variables name="Conf_eau_TOFF_vibreur" typeName="TIMEARR4" topologicalAddress="%MW7132"></variables>
		<variables name="pas_de_gachee_en_cours" typeName="EBOOL"></variables>
		<variables name="Amp_Anh" typeName="REAL">
			<comment>valeur en Ampere (debug)</comment>
		</variables>
		<variables name="Top_depart_Vid_Ppe" typeName="EBOOL"></variables>
		<variables name="AI_Value_Module_3" typeName="INTARR8a" topologicalAddress="%MW4428">
			<comment>Not used</comment>
		</variables>
		<variables name="AI_63" typeName="INT">
			<comment>Old %IW127</comment>
		</variables>
		<variables name="Conf_malaxeur2_present" typeName="EBOOL" topologicalAddress="%M466"></variables>
		<variables name="FBI_77_498" typeName="VIB_BAL"></variables>
		<variables name="Index_D" typeName="INT"></variables>
		<variables name="DI_34" typeName="EBOOL" topologicalAddress="%I0.1.33">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Dosage_Gra1_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Conf_TT_granulat_pres_vibreur" typeName="EBOOL" topologicalAddress="%M425"></variables>
		<variables name="DO_116" typeName="EBOOL" topologicalAddress="%Q0.4.51">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Saturation_inf_TT_cim" typeName="BOOL"></variables>
		<variables name="Surcharge_Cim1" typeName="BOOL"></variables>
		<variables name="TT_cim_vide" typeName="EBOOL" topologicalAddress="%M501"></variables>
		<variables name="Conf_Adj_Seuil_vide" typeName="INT" topologicalAddress="%MW8084"></variables>
		<variables name="AI_Anh_Value" typeName="INT"></variables>
		<variables name="DI_64" typeName="EBOOL" topologicalAddress="%I0.1.63">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="DO_25" typeName="EBOOL" topologicalAddress="%Q0.3.24">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Ecart_pesee_en_taux_Eau2" typeName="INT" topologicalAddress="%MW4804">
			<comment>Ecart de pesee en pour dix-millieme pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="BCMix_DO_20" typeName="EBOOL" topologicalAddress="%M820">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TON_ETOR_SKIP_MOU" typeName="TON"></variables>
		<variables name="FM_dos_Manulog_PPE_18" typeName="R_TRIG"></variables>
		<variables name="Conf_TT_Cim_ctrl_poids" typeName="EBOOL" topologicalAddress="%M442"></variables>
		<variables name="DO_44" typeName="EBOOL" topologicalAddress="%Q0.3.43">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TG_Eau2_Valide" typeName="BOOL"></variables>
		<variables name="Conf_eau1_seuil_maxi" typeName="INT" topologicalAddress="%MW7977"></variables>
		<variables name="DO_Mixer1_Gate1_Close" typeName="EBOOL" topologicalAddress="%Q0.3.14">
			<comment>Close 'mixer 1' 'gate 1'</comment>
		</variables>
		<variables name="Conf_adjuvant_basc_seuil_mini" typeName="INT" topologicalAddress="%MW8086">
			<comment>Seuil de detarrage</comment>
		</variables>
		<variables name="FM_dos_pupitre_PPE_12" typeName="R_TRIG"></variables>
		<variables name="Conf_Mixer2_Gate_DI_Filter_Time" typeName="TIME">
			<comment>filter time on smixer gate sensors</comment>
		</variables>
		<variables name="Transfert_G_terminee" typeName="EBOOL"></variables>
		<variables name="DO_58" typeName="EBOOL" topologicalAddress="%Q0.3.57">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Etat_balance_Eau1_et_son_TP" typeName="EBOOL"></variables>
		<variables name="AI_55" typeName="INT">
			<comment>Old %IW119</comment>
		</variables>
		<variables name="Conf_anhydrite_TOFF_vibreur_bal" typeName="TIME" topologicalAddress="%MW8256">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Conf_PP_Grease1_Prot_Act0" typeName="EBOOL">
			<comment>Grease pump protection</comment>
		</variables>
		<variables name="CPT19_COMPARE_ENABLE" typeName="BOOL"></variables>
		<variables name="DO_127" typeName="EBOOL" topologicalAddress="%Q0.4.62">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="conf_TT_Gra_positif_a_1" typeName="EBOOL" topologicalAddress="%M429">
			<variableInit value="FALSE"></variableInit>
		</variables>
		<variables name="Conf_anticipation_phase2_dry" typeName="EBOOL" topologicalAddress="%M438"></variables>
		<variables name="Conf_adjuvant_ecart_stabilite" typeName="INT" topologicalAddress="%MW8087"></variables>
		<variables name="Conf_granulat2_filtre_Nb_Vals" typeName="INT" topologicalAddress="%MW7828">
			<variableInit value="3"></variableInit>
		</variables>
		<variables name="consigne_ppe8" typeName="INT" topologicalAddress="%MW5952"></variables>
		<variables name="TON_tps_reponse_skip" typeName="TON"></variables>
		<variables name="Auto_arret_mal2_RO" typeName="EBOOL">
			<comment>Arret type Roumanie</comment>
		</variables>
		<variables name="TT_cim_instable" typeName="EBOOL" topologicalAddress="%M611"></variables>
		<variables name="BCMix_DO_61" typeName="EBOOL" topologicalAddress="%M861">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Numeros_produits_cim2" typeName="INT"></variables>
		<variables name="Stock_manu_Gra_9" typeName="BOOL"></variables>
		<variables name="Ppe_Etape7_Calcul_poids_dose" typeName="BOOLARR20"></variables>
		<variables name="DO_03" typeName="EBOOL" topologicalAddress="%Q0.3.2">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Pup_Cde_vibreur_Cim1" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="Info_Alarme_Glace" typeName="EBOOL"></variables>
		<variables name="AI_56_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Conf_basc_cim2_tps_reponse" typeName="TIME" topologicalAddress="%MW7936"></variables>
		<variables name="BCMix_ETOR_17a32" typeName="WORD" topologicalAddress="%MW4403">
			<comment>ETOR_17a32</comment>
		</variables>
		<variables name="Produit_remplacement_Adj" typeName="INT" topologicalAddress="%MW5508"></variables>
		<variables name="PESA_Gra1" typeName="PESA"></variables>
		<variables name="CGG_activee_Eau1" typeName="BOOL"></variables>
		<variables name="voie_basc_Adj_Weight3" typeName="INT" topologicalAddress="%MW8202">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="AI_66_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="trappe_2_malaxeur_1" typeName="TRAP_MAL"></variables>
		<variables name="DO_Admix_Tank15_Open" typeName="EBOOL" topologicalAddress="%Q0.4.46">
			<comment>Open admixture 'tank 15'</comment>
		</variables>
		<variables name="Conf_Mixer1_Mot_Prot_Act0" typeName="EBOOL">
			<comment>Mixer motor protection</comment>
		</variables>
		<variables name="NP_Cim_ctrl_poids_TT_Cim" typeName="INT"></variables>
		<variables name="Conf_TT_granulat_nb_vibreur" typeName="INT" topologicalAddress="%MW8406"></variables>
		<variables name="Recup_voie_ana_Anh" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="Info_balance_Adj_Comp_ferme" typeName="EBOOL" topologicalAddress="%M7"></variables>
		<variables name="Com_ETH_HMS_Profibus_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Pres_prod_Eau2" typeName="BOOL"></variables>
		<variables name="Vid_Cim2_Terminee" typeName="EBOOL"></variables>
		<variables name="conf_adjuvant_positif_a_1" typeName="EBOOL" topologicalAddress="%M365"></variables>
		<variables name="DO_62" typeName="EBOOL" topologicalAddress="%Q0.3.61">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_cim_tps_apres_coulant" typeName="TIMEARR6" topologicalAddress="%MW7024">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Mem_vidange_Adj1" typeName="BOOL"></variables>
		<variables name="DO_Agg_Bin7_Open" typeName="EBOOL" topologicalAddress="%Q0.4.6">
			<comment>Open aggregate 'bin 7'</comment>
		</variables>
		<variables name="FBI_77_853" typeName="Seq_Vid_Basc"></variables>
		<variables name="FM_Cde_Manu_PPE_02" typeName="R_TRIG"></variables>
		<variables name="Alarme_bloquante_dosage_Cim1" typeName="BOOL"></variables>
		<variables name="TON_TOFF_VIB_Cim1" typeName="TON_TOFF"></variables>
		<variables name="TON_42" typeName="TON"></variables>
		<variables name="Conf_malaxeur1_tps_mal_gd_ouvert" typeName="TIME" topologicalAddress="%MW8550"></variables>
		<variables name="Prod_Suivant_Eau2" typeName="BOOL"></variables>
		<variables name="BCMix_DO_80" typeName="EBOOL" topologicalAddress="%M880">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_47_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="AI_55_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Conf_anhydrite_tps_max_stab" typeName="TIME" topologicalAddress="%MW8244"></variables>
		<variables name="Conf_cim_TON_pesage_fin" typeName="TIMEARR6" topologicalAddress="%MW6904">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Erreur_jetee_Anh" typeName="INT"></variables>
		<variables name="Saturation_sup_Adj_Weight1" typeName="BOOL"></variables>
		<variables name="fd_doser_Eau_manu" typeName="F_TRIG"></variables>
		<variables name="Flags_pesage_Eau2" typeName="flags_pesage_struct"></variables>
		<variables name="FD_manu_1_Cim" typeName="F_TRIG"></variables>
		<variables name="BCMix_DO_92" typeName="EBOOL" topologicalAddress="%M892">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="conf_mal2_sens_fc_trap1_ouv" typeName="EBOOL" topologicalAddress="%M470"></variables>
		<variables name="Conf_anhydrite_nb_sequence" typeName="INT" topologicalAddress="%MW8278"></variables>
		<variables name="Conf_Transfert_sur_Glace_Eau1" typeName="BOOL"></variables>
		<variables name="Depassement_tolerance_Eau2" typeName="EBOOL" topologicalAddress="%M776"></variables>
		<variables name="Introduction_terminee_Mal1" typeName="EBOOL"></variables>
		<variables name="BCMix_DO_36" typeName="EBOOL" topologicalAddress="%M836">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Dosage_Cim_ACTIVE" typeName="EBOOL"></variables>
		<variables name="fm_centrale_auto" typeName="R_TRIG"></variables>
		<variables name="Etape_155_050_Reprise_Prod" typeName="EBOOL"></variables>
		<variables name="CPT18_COUNTER_CURRENT_VALUE" typeName="DINT"></variables>
		<variables name="CPT13_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.4.0.5"></variables>
		<variables name="DI_Cem1_Weigher_Closed" typeName="EBOOL" topologicalAddress="%I0.1.5">
			<comment>Cement 1' weigher closed ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_45" typeName="INT">
			<comment>Old %IW109</comment>
		</variables>
		<variables name="Introduction_Adj_encours" typeName="EBOOL"></variables>
		<variables name="Conf_silo_anhydrite_TOFF_vibreur" typeName="TIME" topologicalAddress="%MW7704">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Cde_ouverture_trappe2_mal1" typeName="EBOOL" topologicalAddress="%M248"></variables>
		<variables name="DO_Admix_Tank2_Open" typeName="EBOOL" topologicalAddress="%Q0.4.33">
			<comment>Open admixture 'tank 2'</comment>
		</variables>
		<variables name="DO_Agg2_Fine_Weighing" typeName="EBOOL" topologicalAddress="%Q0.3.18">
			<comment>Activate fine weighing on the current bin of the 'aggregate 2' weighing line ['0' or '1' for 'ON']</comment>
		</variables>
		<variables name="cde_klaxon_trappe2_mal2" typeName="EBOOL"></variables>
		<variables name="CPT19_LOWER_TH_VALUE" typeName="DINT"></variables>
		<variables name="FM_dos_pupitre_PPE_3" typeName="R_TRIG"></variables>
		<variables name="TON_TOFF_AJU_Gra2" typeName="TON_TOFF"></variables>
		<variables name="Vidange_bloquee_Cim2" typeName="EBOOL" topologicalAddress="%M764"></variables>
		<variables name="BCMix_DO_71" typeName="EBOOL" topologicalAddress="%M871">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Pup_Cde_PV_Cim1" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="AI_Admix_Status_3" typeName="EBOOL"></variables>
		<variables name="consigne_ppe12" typeName="INT" topologicalAddress="%MW5963"></variables>
		<variables name="Conf_granulat2_bascule" typeName="EBOOL" topologicalAddress="%M319"></variables>
		<variables name="CPT13_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.10.4.2"></variables>
		<variables name="DO_35" typeName="EBOOL" topologicalAddress="%Q0.3.34">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_51" typeName="EBOOL" topologicalAddress="%I0.1.50">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Surcharge_Gra1" typeName="BOOL"></variables>
		<variables name="DO_Agg_Bin14_Open" typeName="EBOOL" topologicalAddress="%Q0.4.13">
			<comment>Open aggregate 'bin 14'</comment>
		</variables>
		<variables name="CGG_activee_Gra2" typeName="BOOL"></variables>
		<variables name="fin_TT_Gra" typeName="EBOOL"></variables>
		<variables name="Info_transfert_cim_termine" typeName="EBOOL" topologicalAddress="%M40"></variables>
		<variables name="DI_06" typeName="EBOOL" topologicalAddress="%I0.1.5">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Depassement_tolerance_Cim1" typeName="EBOOL" topologicalAddress="%M543"></variables>
		<variables name="Alarme_IDE500_Gra1" typeName="EBOOL" topologicalAddress="%M522"></variables>
		<variables name="AI_44_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Pup_Cde_compresseur" typeName="EBOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="Conf_eau1_tps_max_pesage" typeName="TIME" topologicalAddress="%MW7990">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="TOF_76_195" typeName="TOF"></variables>
		<variables name="Calc_QdC_ppe_impossible" typeName="BOOLARR20"></variables>
		<variables name="Alarme_poids_max_Adj" typeName="EBOOL" topologicalAddress="%M571"></variables>
		<variables name="BCMix_DO_3" typeName="EBOOL" topologicalAddress="%M803">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_HMS_Profibus_IP1" typeName="INT" topologicalAddress="%MW8680">
			<comment>Format IP1.IP2.IP3.IP4</comment>
		</variables>
		<variables name="Stock_manu_Adj_1" typeName="BOOL"></variables>
		<variables name="i" typeName="INT"></variables>
		<variables name="Valeurs_recu_IDE500" typeName="ARRAY[1..37] OF INT"></variables>
		<variables name="PROFIB_ADRESS_OK" typeName="ARRAY[0..63] OF EBOOL"></variables>
		<variables name="Conf_malaxeur2_puissance_max" typeName="INT" topologicalAddress="%MW8570"></variables>
		<variables name="BCMix_DO_47" typeName="EBOOL" topologicalAddress="%M847">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Intro_Glace_Prete_Gra2" typeName="EBOOL"></variables>
		<variables name="Vidanger_Gra_sans_ordre_intro" typeName="BOOL"></variables>
		<variables name="AI_39" typeName="INT">
			<comment>Old %IW103</comment>
		</variables>
		<variables name="DO_Admix_Weigher_Cpt1_Open" typeName="EBOOL" topologicalAddress="%Q0.3.4">
			<comment>Open admixture weigher 'compartment 1'</comment>
		</variables>
		<variables name="fm_trappe_vidange_auto" typeName="R_TRIG"></variables>
		<variables name="Alarme_poids_max_Anh" typeName="EBOOL" topologicalAddress="%M585"></variables>
		<variables name="CPT19_FORCE_SYNC" typeName="EBOOL"></variables>
		<variables name="Conf_TT_Cim_pesee" typeName="EBOOL" topologicalAddress="%M441"></variables>
		<variables name="malaxeur_2_vide" typeName="EBOOL" topologicalAddress="%M503"></variables>
		<variables name="Alarme_poids_max_Gra2" typeName="EBOOL" topologicalAddress="%M532"></variables>
		<variables name="Poids_instantane_Cim2" typeName="INT" topologicalAddress="%MW4660"></variables>
		<variables name="Consignes_ppes" typeName="INTARR20"></variables>
		<variables name="CPT19_FORCE_RESET" typeName="EBOOL"></variables>
		<variables name="Vidange_Adj" typeName="EBOOL"></variables>
		<variables name="DI_92" typeName="EBOOL" topologicalAddress="%I0.2.27">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Conf_tapis_transfert" typeName="EBOOL" topologicalAddress="%M406"></variables>
		<variables name="Auto_Vibreur_Cim1" typeName="BOOL"></variables>
		<variables name="BCMix_DO_28" typeName="EBOOL" topologicalAddress="%M828">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_88" typeName="EBOOL" topologicalAddress="%Q0.4.23">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="LEC_MESOMATIC_Gra1" typeName="LEC_MESOMATIC"></variables>
		<variables name="Info_defaut_SAS" typeName="EBOOL" topologicalAddress="%M41"></variables>
		<variables name="BP_dosage_Gra_4" typeName="EBOOL" topologicalAddress="%M145"></variables>
		<variables name="BCMix_DO_117" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Faire_vidange_Cim1" typeName="BOOL"></variables>
		<variables name="Cde_AU_Acquittes" typeName="EBOOL" topologicalAddress="%M273"></variables>
		<variables name="DO_Admix_Cpt6_PP_ON" typeName="EBOOL">
			<comment>Run the admixture weigher 'compartment 6' emptying pump - For the Romanian-type admixture process</comment>
		</variables>
		<variables name="DI_Admix_Tank20_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.51">
			<comment>Open admixture 'tank 20'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_Black_Box_Validation" typeName="EBOOL" topologicalAddress="%Q0.3.63">
			<comment>Enable product measurement and counting - (France) This output closes the 'black box' relay which connect the ground to the common terminal of the relays</comment>
		</variables>
		<variables name="Saturation_inf_Cim1" typeName="BOOL"></variables>
		<variables name="AI_3_Error" typeName="BOOL" topologicalAddress="%I0.6.2.ERR">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Skip_non_vide" typeName="EBOOL" topologicalAddress="%M595"></variables>
		<variables name="Manu_cde_descente_skip" typeName="EBOOL" topologicalAddress="%M717"></variables>
		<variables name="Skip_bloque" typeName="EBOOL" topologicalAddress="%M594"></variables>
		<variables name="CPT08_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.9.7.2"></variables>
		<variables name="Doser_Gra1_auto" typeName="BOOL"></variables>
		<variables name="TON_RAZ_Simu_Compteurs_Ppe" typeName="TON"></variables>
		<variables name="Vidange_Cim_dans_bonbonne" typeName="EBOOL"></variables>
		<variables name="Poids_real_Eau1" typeName="REAL" topologicalAddress="%MW4686">
			<comment>Poids eau en reel</comment>
		</variables>
		<variables name="Vid_Mal2_OK" typeName="EBOOL"></variables>
		<variables name="Vid_Adj_C2_En_Cours" typeName="EBOOL"></variables>
		<variables name="DI_Admix_Weigher_PP_CBT" typeName="EBOOL">
			<comment>Admixture weigher emptying pump circuit breaker tripped - An alarm stops the weigher emptying ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Poids_real_Eau2" typeName="REAL" topologicalAddress="%MW4688">
			<comment>Poids eau 2 en reel</comment>
		</variables>
		<variables name="Stock_manu_Adj_15" typeName="BOOL"></variables>
		<variables name="DO_Cem_Transfert_Order" typeName="EBOOL">
			<comment>Open the cement airlock (=primary hopper). The airlock will open in the secondary hopper (if exists) or in the mixer. - Made for an independant system in Bercy &amp; Mirabeau, France.</comment>
		</variables>
		<variables name="Conf_Agg_Process_Tol_Default" typeName="INTARR14" topologicalAddress="%MW6452"></variables>
		<variables name="DI_Anh_Silo_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.30">
			<comment>Open anhydrite silo' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_Mixer1_Gate1_Red_Light_ON" typeName="EBOOL" topologicalAddress="%Q0.3.36">
			<comment>Turn 'mixer 1' 'gate 1' red light ON</comment>
		</variables>
		<variables name="BALANCE_Adj" typeName="WORD">
			<comment>Adresse en Qt uniquement</comment>
		</variables>
		<variables name="Rapport_Lec" typeName="ARRAY[0..3] OF INT"></variables>
		<variables name="Vidange_terminee_Mal1" typeName="EBOOL"></variables>
		<variables name="Manu_cde_vidange_basc_Eau2" typeName="EBOOL" topologicalAddress="%M745"></variables>
		<variables name="CPT04_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.9.3.7"></variables>
		<variables name="Voyant_AU1" typeName="BOOL"></variables>
		<variables name="TON_manu_Gra" typeName="TON"></variables>
		<variables name="AI_34_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Vidange_Eau1" typeName="EBOOL"></variables>
		<variables name="Malaxage_encours_Mal2" typeName="EBOOL"></variables>
		<variables name="DO_Admix_Tank2_Simulation" typeName="EBOOL" topologicalAddress="%Q0.5.0">
			<comment>Generate a 'counting pulse' for simulating a counting on the admixture pump of 'tank 2' (has no effect on site, only for simulation)</comment>
		</variables>
		<variables name="remplacement_Cim2" typeName="EBOOL" topologicalAddress="%M493"></variables>
		<variables name="Conf_adj_TOFF_aju" typeName="TIMEARR20" topologicalAddress="%MW7312"></variables>
		<variables name="Manu_cde_ouverture_trappe_1_mal1" typeName="EBOOL" topologicalAddress="%M724"></variables>
		<variables name="PD_Cim2_A_Doser" typeName="INT"></variables>
		<variables name="Numero_produit_Gra1_initial" typeName="INT"></variables>
		<variables name="Vibreur_cuves_Eau2" typeName="EBOOL"></variables>
		<variables name="Conf_granulat2_tps_max_stab" typeName="TIME" topologicalAddress="%MW7812"></variables>
		<variables name="Pese_Eau_auto" typeName="UDINTARR4" topologicalAddress="%MW4990">
			<comment>Suivi conso (lec BCMIX)</comment>
		</variables>
		<variables name="Conf_cim2_nb_vibreur_bal" typeName="INT" topologicalAddress="%MW7944">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="W2_adj_Weight2" typeName="REAL" topologicalAddress="%MW8166">
			<comment>Value in kg for high point of the calibration for adm weigher 2</comment>
		</variables>
		<variables name="CPT10_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.10.1.6"></variables>
		<variables name="Manu_Tps_ouv_trappe" typeName="TIME" topologicalAddress="%MW5546"></variables>
		<variables name="DI_Admix_Tank1_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.32">
			<comment>Open admixture 'tank 1'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_46_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="bit_intermediaire_vid_G2B" typeName="EBOOL"></variables>
		<variables name="AI_23_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Depassement_tolerance_Anh" typeName="EBOOL" topologicalAddress="%M582"></variables>
		<variables name="Alarme_arret_urgence_pupitre" typeName="EBOOL" topologicalAddress="%M793"></variables>
		<variables name="LEC_ARPEGE_Gra4" typeName="LEC_ARPEGE"></variables>
		<variables name="Intro_Gra_terminee" typeName="EBOOL"></variables>
		<variables name="Stock_manu_Cim_5" typeName="BOOL"></variables>
		<variables name="BCMix_DO_57" typeName="EBOOL" topologicalAddress="%M857">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Seuil_vide_atteint_Eau2" typeName="EBOOL"></variables>
		<variables name="AI_29" typeName="INT">
			<comment>Old %IW93</comment>
		</variables>
		<variables name="DI_Cem_Silo2_PB_PLC_Open" typeName="EBOOL">
			<comment>Open cement 'silo 2'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_granulat_TOFF_pesage_fin" typeName="TIMEARR14" topologicalAddress="%MW6536"></variables>
		<variables name="AI_36_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Poids_instantane_TT_Cim" typeName="INT" topologicalAddress="%MW4667"></variables>
		<variables name="AI_6" typeName="INT" topologicalAddress="%IW0.7.1">
			<comment>Old %IW21</comment>
		</variables>
		<variables name="Detarage_TT_cim" typeName="BOOL"></variables>
		<variables name="Cde_vidange_bascule_Adj_Comp" typeName="EBOOL" topologicalAddress="%M231"></variables>
		<variables name="Manu_cde_vibreur_bal_eau" typeName="EBOOL" topologicalAddress="%M746"></variables>
		<variables name="Depart_Dosage_Eau1" typeName="BOOL"></variables>
		<variables name="AI_39_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Conf_basc_anhydrite_tps_reponse" typeName="TIME" topologicalAddress="%MW8250"></variables>
		<variables name="AI_44_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Alarme_Com_HMS_Profibus_Eau1" typeName="EBOOL" topologicalAddress="%M683">
			<comment>(Roumanie) Defaut : esclave Profibus ne rÃ©ponds pas</comment>
		</variables>
		<variables name="Conf_anhydrite_filtre_Coef" typeName="INT" topologicalAddress="%MW8259">
			<variableInit value="100"></variableInit>
		</variables>
		<variables name="Dosage_Eau_ACTIVE" typeName="EBOOL"></variables>
		<variables name="AI_63_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Infos_produit_Eau2_a_jour" typeName="EBOOL"></variables>
		<variables name="Info_balance_Cim1_fermee" typeName="EBOOL" topologicalAddress="%M3"></variables>
		<variables name="BCMix_DO_107" typeName="EBOOL" topologicalAddress="%M907">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Intro_Comp_Adj_terminee" typeName="EBOOL"></variables>
		<variables name="Malax_1_t1_ouvert_sortie_seche" typeName="EBOOL"></variables>
		<variables name="BALANCE_Gra1_M340" typeName="ARRAY[1..16] OF EBOOL">
			<comment>Adresse en M340 uniquement</comment>
		</variables>
		<variables name="TG_IN_intarr" typeName="ARRAY[1..4] OF INTARR650" topologicalAddress="%MW2"></variables>
		<variables name="Introduction_terminee_Mal2" typeName="EBOOL"></variables>
		<variables name="Conf_skip_pres_cap_grde_vit_haut" typeName="EBOOL" topologicalAddress="%M297"></variables>
		<variables name="DO_104" typeName="EBOOL" topologicalAddress="%Q0.4.39">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_skip_transfert" typeName="EBOOL" topologicalAddress="%M411"></variables>
		<variables name="CPT05_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.4.0.5"></variables>
		<variables name="Statut_Pres_Vid_Dry" typeName="WORD"></variables>
		<variables name="DO_16" typeName="EBOOL" topologicalAddress="%Q0.3.15">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_17" typeName="INT">
			<comment>Old %IW81</comment>
		</variables>
		<variables name="Cde_anti_talutage_G2" typeName="EBOOL"></variables>
		<variables name="Conf_anhydrite_seuil_maxi" typeName="INT" topologicalAddress="%MW8239"></variables>
		<variables name="AI_Admix_Array_P1" typeName="ARRAY[1..5] OF INT"></variables>
		<variables name="AI_50_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="NP_Adj" typeName="INT"></variables>
		<variables name="Pup_Cde_Klaxon" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="Conf_ppe_nb_imp_avant_fuite" typeName="INT" topologicalAddress="%MW8120"></variables>
		<variables name="Cde_dosage_generale_Eau1" typeName="EBOOL"></variables>
		<variables name="Cde_simulation_cpt_adj10" typeName="BOOL"></variables>
		<variables name="Discordance_vidange_granulat1" typeName="EBOOL" topologicalAddress="%M516"></variables>
		<variables name="CPT06_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.9.5.2"></variables>
		<variables name="Intro_Cim1_terminee" typeName="EBOOL"></variables>
		<variables name="AI_31_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Pesee_suivante_Eau1" typeName="EBOOL"></variables>
		<variables name="Manu_cde_vidange_basc_adjuvant" typeName="EBOOL" topologicalAddress="%M709"></variables>
		<variables name="Conf_silo_anh_tps_apres_coulant" typeName="TIME" topologicalAddress="%MW7714"></variables>
		<variables name="consigne_ppe20" typeName="INT" topologicalAddress="%MW5982"></variables>
		<variables name="DO_Mixer2_Gate2_Open" typeName="EBOOL">
			<comment>Open 'mixer 2' 'door 2'</comment>
		</variables>
		<variables name="CPT19_EVT_COUNTER_LOW_ENABLE" typeName="BOOL"></variables>
		<variables name="PULSE_KLAXON_C" typeName="TP"></variables>
		<variables name="AI_36_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="BP_dosage_Gra_14" typeName="EBOOL" topologicalAddress="%M155"></variables>
		<variables name="DI_Mixer_Gates_PB_PLC_Auto_Manu" typeName="EBOOL">
			<comment>Mixer Gates Auto/Manu' pushbutton is pushed (push once for 'auto', push again for 'manu') - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Gachee_EC_Cim2" typeName="BOOL"></variables>
		<variables name="DI_49" typeName="EBOOL" topologicalAddress="%I0.1.48">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="deval_bn" typeName="BOOL"></variables>
		<variables name="Alarme_Mesomatic1" typeName="BOOL">
			<comment>defaut Hardware NOT USED YET</comment>
		</variables>
		<variables name="Pas_dosage_Anh" typeName="BOOL">
			<comment>pas d'Anh pour la gachée en cours</comment>
		</variables>
		<variables name="AI_2_Error" typeName="BOOL" topologicalAddress="%I0.6.1.ERR">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="DI_Skip_Slack_Steel" typeName="EBOOL">
			<comment>Skip slack-steel sensor head detects 'slack steel' - This input can be delayed as 'skip_bas' is</comment>
		</variables>
		<variables name="TON_TOFF_VIB_Anh_Gra" typeName="TON_TOFF"></variables>
		<variables name="Conf_malaxeur2_tps_fermeture" typeName="TIME" topologicalAddress="%MW8574"></variables>
		<variables name="Conf_tps_rep_RAMPE" typeName="TIME" topologicalAddress="%MW8648"></variables>
		<variables name="Numero_produit_Gra1_aux2" typeName="INT"></variables>
		<variables name="Vibreur_balance_Cim1" typeName="EBOOL"></variables>
		<variables name="Vidange_Dry_Adj_C2" typeName="Vidange_Basc_Dry2"></variables>
		<variables name="AI_4_Error" typeName="BOOL" topologicalAddress="%I0.6.3.ERR">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Defaut_sequence_Anh" typeName="EBOOL" topologicalAddress="%M587"></variables>
		<variables name="DO_Water_Tank2_Open" typeName="EBOOL" topologicalAddress="%Q0.4.25">
			<comment>Open water 'tank 2'</comment>
		</variables>
		<variables name="Conf_malaxeur2_tps_stab_watt" typeName="TIME" topologicalAddress="%MW8566"></variables>
		<variables name="Revision_Number" typeName="INT" topologicalAddress="%MW4494">
			<comment>0= initial version / 1= rev.'A' / 2= rev.'B' / 3= rev.'C'…</comment>
		</variables>
		<variables name="TON_manu_Cim" typeName="TON"></variables>
		<variables name="Adresse_HMS" typeName="ADDM_TYPE">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Cde_dosage_generale_Eau2" typeName="EBOOL"></variables>
		<variables name="Bit_cde_dos_Cim2" typeName="BOOL"></variables>
		<variables name="Manu_cde_dosage_anhydrite" typeName="EBOOL" topologicalAddress="%M736"></variables>
		<variables name="TG_Eau1_Valide" typeName="BOOL"></variables>
		<variables name="AI_38_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="CPT01_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.9.0.2"></variables>
		<variables name="Depassement_tolerance_Gra2" typeName="EBOOL" topologicalAddress="%M529"></variables>
		<variables name="Conf_anhydrite_tps_sequence_att" typeName="TIME" topologicalAddress="%MW8276"></variables>
		<variables name="CPT05_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.9.4.2"></variables>
		<variables name="Info_ctrle_rot_tapis_transfert" typeName="EBOOL" topologicalAddress="%M47"></variables>
		<variables name="Presence_prod_Eau2" typeName="EBOOL"></variables>
		<variables name="AI_23_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="DI_25" typeName="EBOOL" topologicalAddress="%I0.1.24">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Pesee_incomplete_Cim1" typeName="EBOOL" topologicalAddress="%M540"></variables>
		<variables name="TOF_76_1115" typeName="TOF"></variables>
		<variables name="Dire_transfert_Gra_termine" typeName="EBOOL"></variables>
		<variables name="Alarme_vidange_Mal2" typeName="EBOOL" topologicalAddress="%M635"></variables>
		<variables name="Cde_bypass_vers_mal2_s_seche" typeName="EBOOL" topologicalAddress="%M244"></variables>
		<variables name="Stock_manu_Adj_9" typeName="BOOL"></variables>
		<variables name="DI_PB_Pro_Mixer_Stop" typeName="EBOOL">
			<comment>Stop mixer' pushbutton is pushed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Poids_reel_pese_Anh_Gra" typeName="INT"></variables>
		<variables name="Manu_Pup_Vibreur_Gra2" typeName="BOOL"></variables>
		<variables name="Manu_Pup_Descente_Skip" typeName="BOOL"></variables>
		<variables name="FBI_3" typeName="TON"></variables>
		<variables name="DI_Color_Hopper_XV2_Closed" typeName="EBOOL">
			<comment>Colourant hopper internal valve 'XV2' is closed - Made for an independant colouring machine in Herriot, France. ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_Mixer2_Gate1_Open" typeName="EBOOL">
			<comment>Open 'mixer 2' 'door 1'</comment>
		</variables>
		<variables name="Alarme_Niveau_haut_ADJ_Comp7" typeName="EBOOL" topologicalAddress="%M656">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Pesee_suivante_Gra2" typeName="EBOOL"></variables>
		<variables name="AI_38_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Def_tol_pos_ppe" typeName="BOOLARR20" topologicalAddress="%MW5222"></variables>
		<variables name="Conf_cim2_seuil_mini" typeName="INT" topologicalAddress="%MW7926"></variables>
		<variables name="AI_Lower_Saturation" typeName="ARRAY[1..72] OF BOOL">
			<comment>Lower saturation of the analogue signal.</comment>
		</variables>
		<variables name="BCMix_DO_10" typeName="EBOOL" topologicalAddress="%M810">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Cde_dosage_Gra" typeName="BOOLARR14" topologicalAddress="%MW4716"></variables>
		<variables name="suite_index_malaxeur2" typeName="INT"></variables>
		<variables name="FM_dos_Manulog_PPE_9" typeName="R_TRIG"></variables>
		<variables name="FM_dos_Manulog_PPE_10" typeName="R_TRIG"></variables>
		<variables name="Alarme_vidange_Comp_Adj" typeName="EBOOL" topologicalAddress="%M573"></variables>
		<variables name="Conf_skip_tps_bas_haut" typeName="TIME" topologicalAddress="%MW8360"></variables>
		<variables name="DI_Agg_WH_Closed" typeName="EBOOL" topologicalAddress="%I0.1.12">
			<comment>Aggregate hopper bin closed ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="BC_Mix_arret_dosage_tremie" typeName="BOOLARR14">
			<comment>Demande de BC-Mix pour arret du dosage</comment>
		</variables>
		<variables name="P1_adj_Weight4" typeName="INT" topologicalAddress="%MW8220">
			<comment>Value in point for low point of the calibration for adm weigher 4</comment>
		</variables>
		<variables name="CPT07_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.6.0.5"></variables>
		<variables name="TON_TOFF_PV_Anh_Gra" typeName="TON_TOFF"></variables>
		<variables name="DI_Conveyor_Belt_SCTR" typeName="EBOOL">
			<comment>Speed control pulse detected on conveyor belt - Rises a 'slipping' auto-acknowledged non-blocking alarm ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Poids_de_reference_Cim2" typeName="INT"></variables>
		<variables name="Alarme_vidange_Cim2" typeName="EBOOL" topologicalAddress="%M762"></variables>
		<variables name="Erreur_jetee_Cim2" typeName="INT" topologicalAddress="%MW5522"></variables>
		<variables name="AI_5_Error" typeName="BOOL" topologicalAddress="%I0.7.0.ERR">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="BP_dosage_Adj_13" typeName="EBOOL" topologicalAddress="%M178"></variables>
		<variables name="Tol_debit_ppe" typeName="INT">
			<comment>tolérance de débit</comment>
		</variables>
		<variables name="Manu_cde_fermeture_trappe_2_mal2" typeName="EBOOL" topologicalAddress="%M731"></variables>
		<variables name="DO_94" typeName="EBOOL" topologicalAddress="%Q0.4.29">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Amp_TT_Gra" typeName="REAL">
			<comment>valeur en Ampere (debug)</comment>
		</variables>
		<variables name="DI_10" typeName="EBOOL" topologicalAddress="%I0.1.9">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Conf_eau1_seuil_vide" typeName="INT" topologicalAddress="%MW7976"></variables>
		<variables name="FM_DOS_Cim1" typeName="R_TRIG"></variables>
		<variables name="Pese_Gra_manu" typeName="UDINTARR14" topologicalAddress="%MW4930">
			<comment>Suivi conso (lec BCMIX)</comment>
		</variables>
		<variables name="Pup_Cde_vibreur_TT_gra" typeName="BOOL"></variables>
		<variables name="BCMix_DO_69" typeName="EBOOL" topologicalAddress="%M869">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="CPT08_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.7.1.3"></variables>
		<variables name="AI_65_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Pulse_S5_2" typeName="EBOOL"></variables>
		<variables name="Conf_granulat2_nb_tremies" typeName="INT" topologicalAddress="%MW7842"></variables>
		<variables name="DO_Agg_Bin4_Open" typeName="EBOOL" topologicalAddress="%Q0.4.3">
			<comment>Open aggregate 'bin 4'</comment>
		</variables>
		<variables name="DI_59" typeName="EBOOL" topologicalAddress="%I0.1.58">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Conf_Gra1_seuil_vide" typeName="INT" topologicalAddress="%MW7742"></variables>
		<variables name="temps_dosage_ppe" typeName="INTARR20" topologicalAddress="%MW4619"></variables>
		<variables name="TON_Demarrage_RAMPE" typeName="TON"></variables>
		<variables name="DO_Anh_Weigher_Open" typeName="EBOOL" topologicalAddress="%Q0.3.6">
			<comment>Open anhydrite weigher - Bistable : Another output is used to close the weigher</comment>
		</variables>
		<variables name="RE_adj1" typeName="R_TRIG"></variables>
		<variables name="Alarme_satur_inf_TT_granulat" typeName="EBOOL" topologicalAddress="%M631"></variables>
		<variables name="Malax_fluide" typeName="TIMEARR6" topologicalAddress="%MW5746"></variables>
		<variables name="manu_Poids_instantane_Gra" typeName="INT"></variables>
		<variables name="Petite_vitesse_Cim1" typeName="EBOOL"></variables>
		<variables name="DO_Agg2_Weigher_Open" typeName="EBOOL" topologicalAddress="%Q0.3.1">
			<comment>Open 'aggregate 2' weigher or move weighing belt</comment>
		</variables>
		<variables name="Seq_Vid_Num_element" typeName="INT">
			<comment>Récupéré dans TG_IN[].Vidange_dry[].Code_prod</comment>
		</variables>
		<variables name="conf_eau1_sens_fc_vidange" typeName="EBOOL" topologicalAddress="%M345"></variables>
		<variables name="fm_doser_Gra2_auto" typeName="R_TRIG"></variables>
		<variables name="Conf_comp_adjuvant_tps_reponse" typeName="TIME" topologicalAddress="%MW8100">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Idx_Vid_Dry_Gra" typeName="INT"></variables>
		<variables name="BCMix_DO_18" typeName="EBOOL" topologicalAddress="%M818">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="CPT18_FORCE_RESET" typeName="EBOOL"></variables>
		<variables name="DO_Anh_Weigher_Close" typeName="EBOOL" topologicalAddress="%Q0.3.7">
			<comment>Close anhydrite weigher</comment>
		</variables>
		<variables name="voie_basc_Eau2" typeName="INT" topologicalAddress="%MW8051">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="Poids_real_TT_Gra" typeName="REAL" topologicalAddress="%MW4696">
			<comment>Poids tremie tampon granulat en reel</comment>
		</variables>
		<variables name="AI_57_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="DI_18" typeName="EBOOL" topologicalAddress="%I0.1.17">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Auto_marche_mal2" typeName="BOOL"></variables>
		<variables name="DO_51" typeName="EBOOL" topologicalAddress="%Q0.3.50">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_TT_granulat_TOFF_vibreur" typeName="TIME" topologicalAddress="%MW8404"></variables>
		<variables name="cde_klaxon_trappe1_mal2" typeName="EBOOL"></variables>
		<variables name="Def_com_HMS" typeName="BOOL"></variables>
		<variables name="P2_adj_Weight5" typeName="INT" topologicalAddress="%MW8234">
			<comment>Value in point for high point of the calibration for adm weigher 5</comment>
		</variables>
		<variables name="AI_68" typeName="INT">
			<comment>Old %IW132</comment>
		</variables>
		<variables name="Pup_Cde_vibreur_Eau2" typeName="BOOL"></variables>
		<variables name="Vid_Cim1_Terminee" typeName="EBOOL"></variables>
		<variables name="CPT06_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.9.5.7"></variables>
		<variables name="Dos_min_ppe" typeName="INTARR20">
			<comment>Poids demandé - tolérance</comment>
		</variables>
		<variables name="BCMix_ETOR_33a48" typeName="WORD" topologicalAddress="%MW4404">
			<comment>ETOR_33a48</comment>
		</variables>
		<variables name="Dosage_manu_pupitre_Adj" typeName="EBOOL"></variables>
		<variables name="AI_Value_Module_2" typeName="INTARR8a" topologicalAddress="%MW4420">
			<comment>Not used</comment>
		</variables>
		<variables name="FM_FIN_DOS_Cim2" typeName="R_TRIG"></variables>
		<variables name="DI_Skip_Emergency_Stop" typeName="EBOOL">
			<comment>Skip' emergency stop is pushed - Displays an alarm - To be used with 'ETOR_etat_arret_urgence' ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="W1_adj_Weight5" typeName="REAL" topologicalAddress="%MW8228">
			<comment>Value in kg for low point of the calibration for adm weigher 5</comment>
		</variables>
		<variables name="Cde_marche_compresseur" typeName="BOOL"></variables>
		<variables name="DI_Cem_Silo3_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.18">
			<comment>Open cement 'silo 3'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_Admix_Tank9_Open" typeName="EBOOL" topologicalAddress="%Q0.4.40">
			<comment>Open admixture 'tank 9'</comment>
		</variables>
		<variables name="Conf_multipl_Granulat2" typeName="REAL" topologicalAddress="%MW7840"></variables>
		<variables name="Conf_granulat_TOFF_vibreur" typeName="TIMEARR14" topologicalAddress="%MW6592"></variables>
		<variables name="FM_dos_pupitre_PPE_15" typeName="R_TRIG"></variables>
		<variables name="conf_skip_detect_pos_inter_haut" typeName="EBOOL" topologicalAddress="%M418"></variables>
		<variables name="BP_dosage_Cim_4" typeName="EBOOL" topologicalAddress="%M159"></variables>
		<variables name="Conf_Skip_Therm_Prot_Act0" typeName="EBOOL">
			<comment>Skip thermal protection</comment>
		</variables>
		<variables name="DO_74" typeName="EBOOL" topologicalAddress="%Q0.4.9">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="FM_Cde_Manu_PPE_13" typeName="R_TRIG"></variables>
		<variables name="Tempo_vibreur_Gra1" typeName="TP"></variables>
		<variables name="DI_Admix_Tank9_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.40">
			<comment>Open admixture 'tank 9'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_72" typeName="EBOOL" topologicalAddress="%I0.2.7">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Poids_real_Gra2" typeName="REAL" topologicalAddress="%MW4680">
			<comment>Poids granulat 2 en reel</comment>
		</variables>
		<variables name="LEC_MESOMATIC_Eau1" typeName="LEC_MESOMATIC"></variables>
		<variables name="Conf_Gra2_retard_ferm_balance" typeName="TIME" topologicalAddress="%MW7816"></variables>
		<variables name="BP_dosage_Adj_8" typeName="EBOOL" topologicalAddress="%M173"></variables>
		<variables name="BCMix_Arret_ppe" typeName="INTARR20" topologicalAddress="%MW5673">
			<comment>Demande d'arret dosage fait par BC-Mix (S'il y a eu trop de défauts par exemple) Utilisé comme mots de bits en Quantum, mais comme booléens en M340!</comment>
		</variables>
		<variables name="DO_Water_Ramp_ON" typeName="EBOOL">
			<comment>Turn the water ramp ON - The water ramp is used to minimize the dust when the truck is being loaded (Dry batch)</comment>
		</variables>
		<variables name="anticipation_vidange_dans_tapis" typeName="EBOOL"></variables>
		<variables name="conf_skip_avant_fin_dosages" typeName="EBOOL" topologicalAddress="%M417"></variables>
		<variables name="conf_sens_fc_skip_haut" typeName="EBOOL" topologicalAddress="%M416"></variables>
		<variables name="Conf_tapis_transfert_tps_reponse" typeName="TIME" topologicalAddress="%MW8346"></variables>
		<variables name="Dosage_manu_pupitre_Cim" typeName="EBOOL"></variables>
		<variables name="cim_pret_pour_transfert" typeName="EBOOL"></variables>
		<variables name="BCMix_DO_79" typeName="EBOOL" topologicalAddress="%M879">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="LEC_ANA_Eau2" typeName="LEC_ANA"></variables>
		<variables name="Conf_Admix_Empty_Filter_Ti_Simen" typeName="TIME"></variables>
		<variables name="DI_35" typeName="EBOOL" topologicalAddress="%I0.1.34">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="DI_Admix_Tank6_PB_PLC_Open" typeName="EBOOL">
			<comment>Open admixture 'tank 6'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Defaut_ouv_trappe_Mal2" typeName="EBOOL"></variables>
		<variables name="DO_Mixer2_Gate2_Red_Light_ON" typeName="EBOOL">
			<comment>Turn 'mixer 2' 'gate 2' red light ON</comment>
		</variables>
		<variables name="NP_Cim1_A_Doser" typeName="INT"></variables>
		<variables name="Info_TT_Cim_fermee" typeName="EBOOL" topologicalAddress="%M19"></variables>
		<variables name="Info_cable_skip_mou" typeName="BOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Simu_dosage_en_cours_Eau1" typeName="BOOL"></variables>
		<variables name="Pesee_terminee_Anh" typeName="EBOOL"></variables>
		<variables name="Tol_inf_Gra2" typeName="EBOOL" topologicalAddress="%M527">
			<comment>tolérance inférieure</comment>
		</variables>
		<variables name="Conf_anhydrite_nb_tremies" typeName="INT" topologicalAddress="%MW8280"></variables>
		<variables name="Manu_cde_dosage_granulat" typeName="EBOOL" topologicalAddress="%M732"></variables>
		<variables name="FM_dos_ManuLog_PPE_1" typeName="R_TRIG"></variables>
		<variables name="P1_cim2" typeName="INT" topologicalAddress="%MW7954">
			<comment>Value in points for low point of the calibration for cement weigher 2</comment>
		</variables>
		<variables name="Zone_skip_Gde_vitesse" typeName="EBOOL"></variables>
		<variables name="Cumul_Adj_auto_deptstab" typeName="BOOL"></variables>
		<variables name="Temps_vid_Dry_Adj_C2" typeName="DINT"></variables>
		<variables name="Alarme_poids_max_TT_cim" typeName="EBOOL" topologicalAddress="%M613"></variables>
		<variables name="Manu_Pup_Vibreur_TT_gra" typeName="BOOL"></variables>
		<variables name="Conf_adjuvant_basc_tps_max_stab" typeName="TIME" topologicalAddress="%MW8090"></variables>
		<variables name="mot_entree3_ccr1" typeName="WORD" topologicalAddress="%MW5934"></variables>
		<variables name="retard_transfert_glace_eau2" typeName="INT"></variables>
		<variables name="Cde_petite_vitesse_Cim1" typeName="EBOOL" topologicalAddress="%M222"></variables>
		<variables name="Tempo_vibreur_TT_ciment" typeName="TP"></variables>
		<variables name="Manu_cde_vidange_TT_granulat" typeName="EBOOL" topologicalAddress="%M720"></variables>
		<variables name="Tapis_peseur2_vitesse_rotation" typeName="EBOOL" topologicalAddress="%M533"></variables>
		<variables name="IDE500_Compteur" typeName="INT"></variables>
		<variables name="Info_arret_urgence_transfert" typeName="EBOOL" topologicalAddress="%M44"></variables>
		<variables name="Cumul_Anh_auto_stable" typeName="BOOL"></variables>
		<variables name="Vid_Anh_Terminee" typeName="EBOOL"></variables>
		<variables name="AI_31" typeName="INT">
			<comment>Old %IW95</comment>
		</variables>
		<variables name="Poids_demande_Anh" typeName="INT" topologicalAddress="%MW4563"></variables>
		<variables name="Seuils_vides_atteints_Gra1" typeName="BOOL"></variables>
		<variables name="Stock_manu_Gra_8" typeName="BOOL"></variables>
		<variables name="CPT06_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.5.1.3"></variables>
		<variables name="Conf_AU_skip_Actif0" typeName="EBOOL" topologicalAddress="%M301"></variables>
		<variables name="AI_Value_Agg_WH" typeName="INT"></variables>
		<variables name="Conf_granulat1_tps_stabilisation" typeName="TIME" topologicalAddress="%MW7746"></variables>
		<variables name="Cde_simulation_cpt_adj7" typeName="BOOL"></variables>
		<variables name="Lancer_transfert_Glace_Eau2" typeName="EBOOL"></variables>
		<variables name="Conf_TT_Gra_binaire" typeName="EBOOL" topologicalAddress="%M426">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="Conf_presence_capt_RAMPE" typeName="EBOOL" topologicalAddress="%M474"></variables>
		<variables name="DO_Mixer2_Gate1_Close" typeName="EBOOL">
			<comment>Close 'mixer 2' 'gate 1'</comment>
		</variables>
		<variables name="test_fm_dos_granulat1_auto" typeName="BOOL"></variables>
		<variables name="DI_Water_Tank1_PB_PLC_Open" typeName="EBOOL">
			<comment>Open water 'tank 1'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_silo_anhyd_pesage_fin" typeName="INT" topologicalAddress="%MW7697">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Conf_Mixer1_Gate_DI_Filter_Time" typeName="TIME">
			<comment>filter time on smixer gate sensors</comment>
		</variables>
		<variables name="Poids_de_reference_Eau2" typeName="INT"></variables>
		<variables name="Debug_MotStatus4_Word" typeName="WORD" topologicalAddress="%MW4511"></variables>
		<variables name="pause_vidange_Cim2" typeName="BOOL"></variables>
		<variables name="Temps_skip_gv" typeName="TIME"></variables>
		<variables name="Vidange_Eau2" typeName="EBOOL"></variables>
		<variables name="Conf_TT_cim_tps_max_stab" typeName="TIME" topologicalAddress="%MW8476">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="DO_80" typeName="EBOOL" topologicalAddress="%Q0.4.15">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_72" typeName="INT">
			<comment>Old %IW136</comment>
		</variables>
		<variables name="Conf_Mixer1_Gate_DI_Filter" typeName="EBOOL">
			<comment>if set to one the filter on the mixer gate sensors is activated</comment>
		</variables>
		<variables name="TON_TOFF_PV_Adj" typeName="TON_TOFF"></variables>
		<variables name="Conf_cim2_nb_silos" typeName="INT" topologicalAddress="%MW7960"></variables>
		<variables name="AI_22_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Temps_malax2_avec_prod_dif" typeName="INT"></variables>
		<variables name="BALANCE_Cim2_M340" typeName="ARRAY[1..16] OF EBOOL"></variables>
		<variables name="Conf_Cim2_nb_sequence" typeName="INT" topologicalAddress="%MW7966"></variables>
		<variables name="Conf_eau_TOFF_vibreur_bal" typeName="TIME" topologicalAddress="%MW7994">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="FM_Cde_Manu_PPE_03" typeName="R_TRIG"></variables>
		<variables name="Poids_deja_pese_Eau2" typeName="INT" topologicalAddress="%MW4592"></variables>
		<variables name="CPT12_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.10.3.4"></variables>
		<variables name="DO_43" typeName="EBOOL" topologicalAddress="%Q0.3.42">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="CPT08_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.9.7.2"></variables>
		<variables name="BCMix_DO_83" typeName="EBOOL" topologicalAddress="%M883">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Pup_Marche_Arret_PPE_gen_EAU" typeName="EBOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="Auto_ouv_basc_gra1" typeName="BOOL"></variables>
		<variables name="Alarme_prot_mot_PPE_gen_EAU" typeName="EBOOL" topologicalAddress="%M649">
			<comment>(Roumanie) alimentation en eau de la centrale</comment>
		</variables>
		<variables name="Saturation_sup_Adj_Weight2" typeName="BOOL"></variables>
		<variables name="ok_descente_skip" typeName="BOOL"></variables>
		<variables name="Manu_cde_PV_cim1" typeName="EBOOL" topologicalAddress="%M702"></variables>
		<variables name="conf_mal2_presence_trappe2" typeName="EBOOL" topologicalAddress="%M467"></variables>
		<variables name="Manu_Pup_Vibreur_Eau2" typeName="BOOL"></variables>
		<variables name="Vid_Anh_En_Cours" typeName="EBOOL"></variables>
		<variables name="Poids_de_reference_Anh" typeName="INT"></variables>
		<variables name="conf_Cim2_binaire" typeName="EBOOL" topologicalAddress="%M375">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="Basc_instable_Cim2" typeName="EBOOL" topologicalAddress="%M759"></variables>
		<variables name="Ecart_pesee_Cim2" typeName="INT" topologicalAddress="%MW4793">
			<comment>Ecart de pesee en unités de dosage pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="DI_Mixer1_Gate1_PB_PLC_Close" typeName="EBOOL">
			<comment>Close 'mixer 1' 'gate 1'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="conf_cim1_sens_fc_vidange" typeName="EBOOL" topologicalAddress="%M334"></variables>
		<variables name="Cumul_Cim_manu" typeName="STOCK5"></variables>
		<variables name="Conf_temps_marche_feu_rouge" typeName="TIME" topologicalAddress="%MW8642">
			<comment>Modifs_M340</comment>
			<variableInit value="t#20s"></variableInit>
		</variables>
		<variables name="Conf_Adj_retard_ferm_balance" typeName="TIME" topologicalAddress="%MW8096">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="DO_Cem1_Weigher_Empty" typeName="EBOOL">
			<comment>(Signal for cement pneumatic transfer) The 'cement 1' weigher is empty</comment>
		</variables>
		<variables name="ECR_CR_Basc_gra1_1" typeName="ECR_CR_Basc_gra1"></variables>
		<variables name="DI_83" typeName="EBOOL" topologicalAddress="%I0.2.18">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Info_malaxeur1_en_marche" typeName="EBOOL" topologicalAddress="%M23"></variables>
		<variables name="Pesee_incomplete_Gra1" typeName="EBOOL" topologicalAddress="%M512"></variables>
		<variables name="Ppe_Etape3_Dosage" typeName="BOOLARR20"></variables>
		<variables name="DI_40" typeName="EBOOL" topologicalAddress="%I0.1.39">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Alarme_IDE500_Eau2" typeName="EBOOL" topologicalAddress="%M780"></variables>
		<variables name="Stock_manu_Gra_12" typeName="BOOL"></variables>
		<variables name="Depart_Dosage_Cim1" typeName="BOOL"></variables>
		<variables name="Arret_Aspi" typeName="BOOL"></variables>
		<variables name="Recup_voie_ana_Eau1" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="Mot_Status_GTW" typeName="INT"></variables>
		<variables name="Conf_Cem1_Ana_Step" typeName="INT">
			<comment>step for cement weigher 1</comment>
		</variables>
		<variables name="Pup_Cde_dos_Eau" typeName="ARRAY[1..4] OF BOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Discordance_vidange_cim1" typeName="EBOOL" topologicalAddress="%M544"></variables>
		<variables name="Conf_cim1_tps_max_stab" typeName="TIME" topologicalAddress="%MW7878"></variables>
		<variables name="Etat_balance_Gra2" typeName="EBOOL"></variables>
		<variables name="mot_entree2_ccr4" typeName="WORD" topologicalAddress="%MW5972"></variables>
		<variables name="DO_02" typeName="EBOOL" topologicalAddress="%Q0.3.1">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Alarme_detare_TT_granulat" typeName="EBOOL" topologicalAddress="%M607">
			<comment>pas vraiment utilisé pour le moment</comment>
		</variables>
		<variables name="AI_21" typeName="INT">
			<comment>Old %IW85</comment>
		</variables>
		<variables name="Alarme_satur_inf_Eau1" typeName="EBOOL" topologicalAddress="%M786"></variables>
		<variables name="LEC_ARPEGE_Eau1" typeName="LEC_ARPEGE"></variables>
		<variables name="Doser_Anh_auto" typeName="BOOL"></variables>
		<variables name="DI_Admix_Tank17_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.48">
			<comment>Open admixture 'tank 17'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="FM_dos_pupitre_PPE_4" typeName="R_TRIG"></variables>
		<variables name="Auto_pupitre_sans_Arret_prod" typeName="EBOOL"></variables>
		<variables name="DI_01" typeName="EBOOL" topologicalAddress="%I0.1.0">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Info_XV2_ouvert" typeName="EBOOL" topologicalAddress="%M190">
			<comment>Colorant - Capteur ZO2 : Reservoir exped. ouvert</comment>
		</variables>
		<variables name="I1" typeName="INT"></variables>
		<variables name="Position_inter_skip_par_tempo" typeName="EBOOL"></variables>
		<variables name="Conf_sens_fc_skip_grde_vit_bas" typeName="EBOOL" topologicalAddress="%M295"></variables>
		<variables name="TON_TOFF_VIB_Gra1" typeName="TON_TOFF"></variables>
		<variables name="AI_52_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="CPT09_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.10.0.6"></variables>
		<variables name="Etat_balance_Gra1_et_glace" typeName="EBOOL"></variables>
		<variables name="Stock_Eau1_auto" typeName="BOOL"></variables>
		<variables name="Conf_anhydrite_tps_max_pesage" typeName="TIME" topologicalAddress="%MW8252">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Conf_Cem1_Scr_Mot_Prot_Act0" typeName="EBOOL">
			<comment>Cement screws motor protection</comment>
		</variables>
		<variables name="Info_balance_Anh_ouvert" typeName="EBOOL" topologicalAddress="%M189"></variables>
		<variables name="Conf_adj_TON_aju" typeName="TIMEARR20" topologicalAddress="%MW7272"></variables>
		<variables name="Prod_Suivant_Cim1" typeName="BOOL"></variables>
		<variables name="AI_60" typeName="INT">
			<comment>Old %IW124</comment>
		</variables>
		<variables name="conf_granulat2_val_actif_1" typeName="EBOOL" topologicalAddress="%M326"></variables>
		<variables name="Amp_Cim2" typeName="REAL">
			<comment>valeur en Ampere (debug)</comment>
		</variables>
		<variables name="Intro_Gra_a_debute" typeName="EBOOL"></variables>
		<variables name="TON_sup_seuil_vid_mal2" typeName="TON"></variables>
		<variables name="AI_70_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="DI_Mixer1_PB_PLC_OFF" typeName="EBOOL">
			<comment>Switch 'mixer 1' OFF' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_TT_Cim_nb_vibreur" typeName="INT" topologicalAddress="%MW8490"></variables>
		<variables name="Info_trappe2_ouverte_mal1" typeName="EBOOL" topologicalAddress="%M27"></variables>
		<variables name="Ppe_Etape6_Calcul_QdC" typeName="BOOLARR20"></variables>
		<variables name="Voyant_defaut1" typeName="BOOL"></variables>
		<variables name="AI_26_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Manu_Pup_Vibreur_Eau" typeName="BOOL"></variables>
		<variables name="Detarage_Adj2" typeName="BOOL"></variables>
		<variables name="BCMix_DO_27" typeName="EBOOL" topologicalAddress="%M827">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Seuil_Vide_Glace_vers_Gra2" typeName="BOOL"></variables>
		<variables name="Conf_basc_adjuvant_tps_reponse" typeName="TIME" topologicalAddress="%MW8098">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="DO_115" typeName="EBOOL" topologicalAddress="%Q0.4.50">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Camion_OK_Dosages_OK_Malaxeur_OK" typeName="EBOOL">
			<comment>Autorise l'introduction des phases 2 et 3</comment>
		</variables>
		<variables name="Alarme_poids_max_Gra1" typeName="EBOOL" topologicalAddress="%M518"></variables>
		<variables name="numero_chaine_en_cours_manu_gra" typeName="INT"></variables>
		<variables name="tps_ecoule_vidange_TT_granulat" typeName="TIME"></variables>
		<variables name="DI_Skip_PB_PLC_Move_Up" typeName="EBOOL">
			<comment>Move skip up' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Info_trappe2_fermee_mal1" typeName="EBOOL" topologicalAddress="%M28"></variables>
		<variables name="DO_Admix_Tank1_Open" typeName="EBOOL" topologicalAddress="%Q0.4.32">
			<comment>Open admixture 'tank 1'</comment>
		</variables>
		<variables name="BCMix_DO_124" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Cde_dosage_generale_Adj" typeName="EBOOL"></variables>
		<variables name="Pulse_Info_XV2_ferme" typeName="EBOOL"></variables>
		<variables name="AI_61_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Depassement_tolerance_Cim2" typeName="EBOOL" topologicalAddress="%M760"></variables>
		<variables name="AI_54" typeName="INT">
			<comment>Old %IW118</comment>
		</variables>
		<variables name="Conf_TT_Gra_seuil_vide" typeName="INT" topologicalAddress="%MW8386"></variables>
		<variables name="AI_50_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="CPT09_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.10.0.7"></variables>
		<variables name="Vibreur_silos_Cim1" typeName="EBOOL"></variables>
		<variables name="Conf_granulat1_filtre_Coef" typeName="INT" topologicalAddress="%MW7763">
			<variableInit value="100"></variableInit>
		</variables>
		<variables name="voie_basc_Adj_Weight4" typeName="INT" topologicalAddress="%MW8214">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="Cde_ppe_vidange_Comp_Adj" typeName="ARRAY[1..10] OF EBOOL">
			<comment>(Roumanie) Sortie ppe de vidange de chque compartiment</comment>
		</variables>
		<variables name="AI_3_Value_Module_1" typeName="INT" topologicalAddress="%MW4414"></variables>
		<variables name="BCMix_DO_60" typeName="EBOOL" topologicalAddress="%M860">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Transfert_cim_termine" typeName="EBOOL"></variables>
		<variables name="CPT12_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.3.0.5"></variables>
		<variables name="Conf_techno_basc_cim1" typeName="INT" topologicalAddress="%MW7896">
			<comment>0=Bin 1=BCD 2=TCP_Arpege 3=Ana 4=Profibus</comment>
		</variables>
		<variables name="poids_pese_Gra" typeName="INT"></variables>
		<variables name="DO_Vacuum_Machine_ON" typeName="EBOOL">
			<comment>Turn the vacuum machine ON - The vacuum machine is used to minimize the dust when the truck is being loaded (dry batch)</comment>
		</variables>
		<variables name="DI_Agg_Bin7_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.6">
			<comment>Open aggregate 'bin 7'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_Anh_Weigher_Extraction_Aid" typeName="EBOOL" topologicalAddress="%Q0.3.27">
			<comment>Activate extraction aid of 'anhydrite' line (for silo and weigher)</comment>
		</variables>
		<variables name="Seuil_vide_atteint_Eau1" typeName="EBOOL"></variables>
		<variables name="trappe_1_malaxeur_1" typeName="TRAP_MAL"></variables>
		<variables name="DO_24" typeName="EBOOL" topologicalAddress="%Q0.3.23">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="BP_dosage_Adj_20" typeName="EBOOL" topologicalAddress="%M185"></variables>
		<variables name="Dosage_Anh_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Cde_petite_vitesse_Gra2" typeName="EBOOL" topologicalAddress="%M221"></variables>
		<variables name="DO_Admix_Tank12_Open" typeName="EBOOL" topologicalAddress="%Q0.4.43">
			<comment>Open admixture 'tank 12'</comment>
		</variables>
		<variables name="Conf_Mixer_RO_Stop" typeName="EBOOL"></variables>
		<variables name="LEC_ANA_TT_gra" typeName="LEC_ANA"></variables>
		<variables name="CPT15_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.10.6.7"></variables>
		<variables name="Saturation_inf_Adj_Weight5" typeName="BOOL"></variables>
		<variables name="Temps_mini_malaxage2" typeName="TIME"></variables>
		<variables name="Gra1_presence_prod_Eau1" typeName="BOOL"></variables>
		<variables name="DO_59" typeName="EBOOL" topologicalAddress="%Q0.3.58">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Agg_Bin14_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.13">
			<comment>Open aggregate 'bin 14'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="TON_TOFF_PV_Eau1" typeName="TON_TOFF"></variables>
		<variables name="CPT04_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.9.3.4"></variables>
		<variables name="DO_Admix_Cpt7_PP_ON" typeName="EBOOL">
			<comment>Run the admixture weigher 'compartment 7' emptying pump - For the Romanian-type admixture process</comment>
		</variables>
		<variables name="conf_mal1_presence_trappe2" typeName="EBOOL" topologicalAddress="%M456"></variables>
		<variables name="Conf_techno_basc_TP_skip_gra4" typeName="INT">
			<comment>0=Bin 1=BCD 2=TCP_Arpege 3=Ana 4=Profibus</comment>
		</variables>
		<variables name="Simulation_dosage_Adj_pese" typeName="Simulation_dosage"></variables>
		<variables name="Conf_Compr_Mot_Prot_Act0" typeName="EBOOL">
			<comment>Compressor motor protection</comment>
		</variables>
		<variables name="AI_25_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="fm_rotation_tapis_G2" typeName="R_TRIG"></variables>
		<variables name="BP_dosage_Adj_12" typeName="EBOOL" topologicalAddress="%M177"></variables>
		<variables name="TON_24" typeName="TON"></variables>
		<variables name="Etat_Reserv_Exped" typeName="EBOOL" topologicalAddress="%M946">
			<comment>Colorants - 1=Plein / 0=Vide</comment>
		</variables>
		<variables name="DO_Mixer2_Gate1_Red_Light_ON" typeName="EBOOL">
			<comment>Turn 'mixer 2' 'gate 1' red light ON</comment>
		</variables>
		<variables name="DO_95" typeName="EBOOL" topologicalAddress="%Q0.4.30">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Pulse_Element_TG_Valide" typeName="EBOOL"></variables>
		<variables name="DO_120" typeName="EBOOL" topologicalAddress="%Q0.4.55">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Admix_Weigher_Cpt2_PB_PLC_Op" typeName="EBOOL">
			<comment>Open admixture weigher 'compartment 2'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Cde_vibreur_balance_Gra1" typeName="EBOOL" topologicalAddress="%M232"></variables>
		<variables name="Conf_AU_transfert_Actif0" typeName="EBOOL" topologicalAddress="%M405"></variables>
		<variables name="Manu_cde_dosage_cim" typeName="EBOOL" topologicalAddress="%M733"></variables>
		<variables name="BCMix_DO_68" typeName="EBOOL" topologicalAddress="%M868">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_55_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Alarme_vidange_Gra1" typeName="EBOOL" topologicalAddress="%M517"></variables>
		<variables name="DO_Anh_Fine_Weighing" typeName="EBOOL" topologicalAddress="%Q0.3.21">
			<comment>Activate fine weighing on the current admixture silo ['0' or '1' for 'ON']</comment>
		</variables>
		<variables name="Numero_produit_Cim1" typeName="INT" topologicalAddress="%MW4544"></variables>
		<variables name="Stock_manu_Eau_1" typeName="BOOL"></variables>
		<variables name="Cde_descente_skip" typeName="EBOOL" topologicalAddress="%M236"></variables>
		<variables name="trappe_mal2_ouverte" typeName="EBOOL"></variables>
		<variables name="Limite_correction_Eau2" typeName="INT"></variables>
		<variables name="Stock_manu_Cim_4" typeName="BOOL"></variables>
		<variables name="CGG_activee" typeName="BOOL"></variables>
		<variables name="BP_dosage_Adj" typeName="BOOLARR20">
			<comment>Copie des ETOR pupitre (adj)</comment>
		</variables>
		<variables name="Idx_SVD" typeName="INT"></variables>
		<variables name="Pup_Cde_start_malax1" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="BCMix_DO_37" typeName="EBOOL" topologicalAddress="%M837">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Idx_RUN" typeName="INT"></variables>
		<variables name="Amp_Cim1" typeName="REAL">
			<comment>valeur en Ampere (debug)</comment>
		</variables>
		<variables name="Conf_adjuvant_basc_pres_bascule" typeName="EBOOL" topologicalAddress="%M355"></variables>
		<variables name="Conf_Gra4_seuil_maxi" typeName="INT"></variables>
		<variables name="Mem_cde_dos_adj" typeName="ARRAY[1..20] OF EBOOL">
			<comment>(Roumanie) memorise le dosage pour activation ppe de vidange</comment>
		</variables>
		<variables name="DO_Agg_Bin13_Open" typeName="EBOOL" topologicalAddress="%Q0.4.12">
			<comment>Open aggregate 'bin 13'</comment>
		</variables>
		<variables name="DI_48" typeName="EBOOL" topologicalAddress="%I0.1.47">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="AI_10_Lower_Saturation" typeName="BOOL" topologicalAddress="%IW0.8.1.1.6">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="NG_Eau1" typeName="INT" topologicalAddress="%MW4526"></variables>
		<variables name="TON_TOFF_AJU_Anh_Gra" typeName="TON_TOFF"></variables>
		<variables name="Conf_eau2_ecart_stabilite" typeName="INT" topologicalAddress="%MW8031"></variables>
		<variables name="Pup_Cde_vid_basc_Cim2" typeName="BOOL"></variables>
		<variables name="Poids_demande_Cim1" typeName="INT" topologicalAddress="%MW4557"></variables>
		<variables name="AI_46" typeName="INT">
			<comment>Old %IW110</comment>
		</variables>
		<variables name="Info_Marche_Aspi" typeName="BOOL"></variables>
		<variables name="DI_Color_Machine_Pressurized" typeName="EBOOL">
			<comment>Colouring machine is pressurized (for introduction to the mixer/truck) - Made for an independant colouring machine in Herriot, France. ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_granulat2_tps_stabilisation" typeName="TIME" topologicalAddress="%MW7810"></variables>
		<variables name="Permettre_simulation_dosages" typeName="BOOL"></variables>
		<variables name="destination_sortie_seche" typeName="EBOOL"></variables>
		<variables name="Def_tol_neg_ppe" typeName="BOOLARR20" topologicalAddress="%MW5212"></variables>
		<variables name="Conf_Transfert_sur_Glace_Eau2" typeName="BOOL"></variables>
		<variables name="Info_arret_urgence_granulat2" typeName="EBOOL" topologicalAddress="%M43"></variables>
		<variables name="AI_Admix_Status_2" typeName="EBOOL"></variables>
		<variables name="consigne_ppe13" typeName="INT" topologicalAddress="%MW5965"></variables>
		<variables name="BP_dosage_Gra_7" typeName="EBOOL" topologicalAddress="%M148"></variables>
		<variables name="Conf_Agg_Weigh_Conv_Prot_Act0" typeName="EBOOL">
			<comment>aggregate weighing conveyor motor protection</comment>
		</variables>
		<variables name="DI_Ash_Screw_CBT" typeName="EBOOL">
			<comment>Ash screw circuit breaker tripped - (Not used at the moment)</comment>
		</variables>
		<variables name="Gachee_Suivante_Eau1" typeName="BOOL"></variables>
		<variables name="Info_skip_en_descente" typeName="EBOOL" topologicalAddress="%M14"></variables>
		<variables name="NG_Adj" typeName="INT" topologicalAddress="%MW4528"></variables>
		<variables name="DO_105" typeName="EBOOL" topologicalAddress="%Q0.4.40">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_ppe_duree_base_temps_fuite" typeName="TIME" topologicalAddress="%MW8122"></variables>
		<variables name="Poids_transfere_OK" typeName="EBOOL"></variables>
		<variables name="retard_transfert_glace_add_lu" typeName="BOOL"></variables>
		<variables name="DO_Admix_Tank10_Simulation" typeName="EBOOL" topologicalAddress="%Q0.5.3">
			<comment>Generate a 'counting pulse' for simulating a counting on the admixture pump of 'tank 10' (has no effect on site, only for simulation)</comment>
		</variables>
		<variables name="Alarme_IDE500_Gra2" typeName="EBOOL" topologicalAddress="%M523"></variables>
		<variables name="W2_adj_Weight3" typeName="REAL" topologicalAddress="%MW8206">
			<comment>Value in kg for high point of the calibration for adm weigher 3</comment>
		</variables>
		<variables name="BCMix_DO_116" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Skip_High_Position" typeName="EBOOL" topologicalAddress="%I0.1.16">
			<comment>Skip in 'high' position ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Vibreur_TT_cim_pesee" typeName="EBOOL"></variables>
		<variables name="LEC_BIN_BCD_Eau1" typeName="LEC_BIN_BCD"></variables>
		<variables name="Conf_TT_granulat_ecart_stab" typeName="INT" topologicalAddress="%MW8389">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Numero_de_version_reserve" typeName="INT" topologicalAddress="%MW4492">
			<comment>La valeur 0 permet a BCMix de savoir qu'il faut faire un décalage +1 (c'est le cas en M340)</comment>
			<variableInit value="0"></variableInit>
		</variables>
		<variables name="Ecart_pesee_en_taux_Anh" typeName="INT" topologicalAddress="%MW4807">
			<comment>Ecart de pesee en pour dix-millieme pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="Conf_eau1_tps_max_stab" typeName="TIME" topologicalAddress="%MW7982"></variables>
		<variables name="Alarme_poids_max_Cim1" typeName="EBOOL" topologicalAddress="%M546"></variables>
		<variables name="BCMix_DO_2" typeName="EBOOL" topologicalAddress="%M802">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Cde_dosage_generale_Gra2" typeName="EBOOL"></variables>
		<variables name="TON_TOFF_AJU_Cim1" typeName="TON_TOFF"></variables>
		<variables name="CPT07_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.6.1.3"></variables>
		<variables name="NG_Intro" typeName="INT">
			<comment>Numéro de gachée intro/vidange (wet et dry batch)</comment>
		</variables>
		<variables name="DO_36" typeName="EBOOL" topologicalAddress="%Q0.3.35">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Introduction_Adj_terminee" typeName="EBOOL"></variables>
		<variables name="Intro_Presence_Glace_Gra1" typeName="BOOL"></variables>
		<variables name="gachee_terminee" typeName="BOOL"></variables>
		<variables name="voie_basc_Adj_Weight1" typeName="INT" topologicalAddress="%MW8106">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="BCMix_DO_46" typeName="EBOOL" topologicalAddress="%M846">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_65" typeName="EBOOL" topologicalAddress="%Q0.4.0">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="skip_defaut_ext_capt_grde_vit" typeName="EBOOL" topologicalAddress="%M688"></variables>
		<variables name="Depart_malax2" typeName="BOOL"></variables>
		<variables name="AI_38" typeName="INT">
			<comment>Old %IW102</comment>
		</variables>
		<variables name="Ajustement_auto_cim" typeName="BOOLARR6" topologicalAddress="%MW7040"></variables>
		<variables name="Vidanger_Gra_si_ordre_intro" typeName="BOOL"></variables>
		<variables name="CPT16_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.7.0.5"></variables>
		<variables name="AI_64_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="BALANCE_Cim2" typeName="WORD"></variables>
		<variables name="Info_skip_en_montee" typeName="EBOOL" topologicalAddress="%M13"></variables>
		<variables name="conf_sens_fc_skip_tres_bas" typeName="EBOOL" topologicalAddress="%M413"></variables>
		<variables name="Conf_skip_attente_depart" typeName="TIME" topologicalAddress="%MW8372"></variables>
		<variables name="DI_93" typeName="EBOOL" topologicalAddress="%I0.2.28">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Pese_Adj_auto" typeName="UDINTARR20" topologicalAddress="%MW5006">
			<comment>Suivi conso (lec BCMIX)</comment>
		</variables>
		<variables name="memo_controle_debit" typeName="INTARR20"></variables>
		<variables name="DI_Mixer_Gates_Auto_Manu" typeName="EBOOL">
			<comment>Mixer Gates Auto/Manu' rotary selector switch in 'Auto' (only 1 input for the 2 modes) - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="cde_klaxon_trappe2_mal1" typeName="EBOOL"></variables>
		<variables name="DI_Cem1_PB_PLC_Slow_Weighing" typeName="EBOOL">
			<comment>Slow weighing on 'cement 1' line' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Numero_manu_Gra" typeName="INT" topologicalAddress="%MW5562"></variables>
		<variables name="TON_skip_attente" typeName="TON"></variables>
		<variables name="Introduction_Comp_Adj_terminee" typeName="EBOOL"></variables>
		<variables name="Etat_balance_Eau2_et_son_TP" typeName="EBOOL"></variables>
		<variables name="Poids_instantane_Gra3" typeName="INT">
			<comment>(*non mis en service*)</comment>
		</variables>
		<variables name="Saturation_inf_Cim2" typeName="BOOL"></variables>
		<variables name="AI_71_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Conf_adjuvant_filtre_Coef" typeName="INT" topologicalAddress="%MW8104">
			<variableInit value="100"></variableInit>
		</variables>
		<variables name="sens_pesage_fin_eau2" typeName="EBOOL" topologicalAddress="%M383"></variables>
		<variables name="Conf_trappe1_mal1_tps_reponse" typeName="TIME" topologicalAddress="%MW8554"></variables>
		<variables name="AI_62_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="AI_43_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="CGG_activee_Gra1" typeName="BOOL"></variables>
		<variables name="Stock_manu_Adj_14" typeName="BOOL"></variables>
		<variables name="BCMix_DO_93" typeName="EBOOL" topologicalAddress="%M893">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Stock_Gra_manu" typeName="BOOL"></variables>
		<variables name="chrono_transfert_glace_add" typeName="INT"></variables>
		<variables name="Pesee_terminee_Adj" typeName="EBOOL"></variables>
		<variables name="Lecture_Analogique_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Manu_cde_ouverture_trappe_2_mal2" typeName="EBOOL" topologicalAddress="%M730"></variables>
		<variables name="CPT12_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.10.3.2"></variables>
		<variables name="DO_Water1_Weigher_Open" typeName="EBOOL" topologicalAddress="%Q0.3.3">
			<comment>Open 'water 1' weigher (if emptied by gravity)</comment>
		</variables>
		<variables name="AI_Value_Cem2" typeName="INT"></variables>
		<variables name="DI_52" typeName="EBOOL" topologicalAddress="%I0.1.51">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="TG4_vide" typeName="EBOOL"></variables>
		<variables name="DI_Cem_Silo1_PB_PLC_Open" typeName="EBOOL">
			<comment>Open cement 'silo 1'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Presence_prod_Anh" typeName="EBOOL"></variables>
		<variables name="PESA_Cim1" typeName="PESA"></variables>
		<variables name="Erreur_jetee_Adj" typeName="INT" topologicalAddress="%MW5525"></variables>
		<variables name="Erreur_jetee_Eau1" typeName="INT" topologicalAddress="%MW5523"></variables>
		<variables name="AI_45_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Info_balance_Anh_fermee" typeName="EBOOL" topologicalAddress="%M6"></variables>
		<variables name="W2_anh" typeName="REAL" topologicalAddress="%MW8266">
			<comment>Value in kg for high point of the calibration for anhydrite weigher</comment>
		</variables>
		<variables name="Alarme_Com_HMS_Profibus" typeName="EBOOL" topologicalAddress="%M640">
			<comment>(Roumanie) Defaut : passerelle Profibus ne reponds pas</comment>
		</variables>
		<variables name="P2_adj_Weight4" typeName="INT" topologicalAddress="%MW8222">
			<comment>Value in point for high point of the calibration for adm weigher 4</comment>
		</variables>
		<variables name="Alarme_prot_mot_compr" typeName="EBOOL" topologicalAddress="%M670">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="AI_67_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Stabilite_Cim_en_cours" typeName="BOOL"></variables>
		<variables name="Cde_Marche_RAMPE" typeName="BOOL"></variables>
		<variables name="Gachee_EC_Eau1" typeName="BOOL"></variables>
		<variables name="TG_OUT_intarr" typeName="ARRAY[1..4] OF INTARR450" topologicalAddress="%MW2602"></variables>
		<variables name="cde_feu_rouge_trappe1_Mal1" typeName="BOOL"></variables>
		<variables name="BP_dosage_Eau_4" typeName="EBOOL" topologicalAddress="%M165"></variables>
		<variables name="Conf_Wat2_Ana_Step" typeName="INT">
			<comment>step for water weigher 2</comment>
		</variables>
		<variables name="AI_Value_Module_9" typeName="INTARR8a" topologicalAddress="%MW4476">
			<comment>Not used</comment>
		</variables>
		<variables name="Info_ctrle_rot_tapis_granulat2" typeName="EBOOL" topologicalAddress="%M46"></variables>
		<variables name="conf_mal2_sens_fc_trap1_fer" typeName="EBOOL" topologicalAddress="%M471"></variables>
		<variables name="DO_Bypass2_To_Dry_Output" typeName="EBOOL">
			<comment>Move a secondary bypass to 'position 3' - Monostable. Specific for Vendargues, France. For 3 outputs : 'mixer 1', 'mixer 2' and 'dry output/anhydrite'. The secondary bypass is placed before the primary one.</comment>
		</variables>
		<variables name="Fermeture_Mal2" typeName="EBOOL"></variables>
		<variables name="BCMix_DO_50" typeName="EBOOL" topologicalAddress="%M850">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_TT_granulat" typeName="EBOOL" topologicalAddress="%M420"></variables>
		<variables name="FD_skip_tres_haut" typeName="F_TRIG"></variables>
		<variables name="LC_Cim1_A_Doser" typeName="INT"></variables>
		<variables name="AI_3_Higher_Saturation" typeName="BOOL" topologicalAddress="%IW0.6.2.1.5">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="DO_Cem_Transfert_Authorisation" typeName="EBOOL">
			<comment>Close and pressurise the cement airlock (=primary hopper). - Made for an independant system in Bercy &amp; Mirabeau, France.</comment>
		</variables>
		<variables name="DI_11" typeName="EBOOL" topologicalAddress="%I0.1.10">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="AI_52_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Conf_silo_anh_limite_sous_dosage" typeName="INT" topologicalAddress="%MW7695">
			<comment>Correction gachee sur gachee</comment>
		</variables>
		<variables name="Poids_simu_Cim2" typeName="WORD" topologicalAddress="%MW5405"></variables>
		<variables name="AI_7" typeName="INT" topologicalAddress="%IW0.7.2">
			<comment>Old %IW22</comment>
		</variables>
		<variables name="DO_Agg_WH_Extraction_Aid" typeName="EBOOL" topologicalAddress="%Q0.3.29">
			<comment>Activate extraction aid of aggregate hopper bin</comment>
		</variables>
		<variables name="DI_Skip_PB_PLC_Move_Down" typeName="EBOOL">
			<comment>Move skip down' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_63" typeName="EBOOL" topologicalAddress="%I0.1.62">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="DO_Bypass_To_Mixer2_Dry_Output" typeName="EBOOL" topologicalAddress="%Q0.3.23">
			<comment>Move bypass to 'position 2' ('mixer 2' / 'dry ouput') - Monostable. The bypass moves back to 'position 1' ('mixer 1') if this output is set to 'OFF' - The PLC can control the bypass automatically</comment>
		</variables>
		<variables name="Conf_eau2_seuil_maxi" typeName="INT" topologicalAddress="%MW8029"></variables>
		<variables name="conf_anhydrite_positif_a_1" typeName="EBOOL" topologicalAddress="%M400"></variables>
		<variables name="Malax_plastique" typeName="TIMEARR6" topologicalAddress="%MW5722"></variables>
		<variables name="Conf_Water_Process_Tol_Default" typeName="INTARR4" topologicalAddress="%MW7092"></variables>
		<variables name="Alarme_prot_mot_vib_Gra1" typeName="EBOOL" topologicalAddress="%M669">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="DI_24" typeName="EBOOL" topologicalAddress="%I0.1.23">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="DO_Water1_Fine_Weighing" typeName="EBOOL" topologicalAddress="%Q0.3.19">
			<comment>Activate fine weighing on the current tank of the 'water 1' weighing line ['0' or '1' for 'ON']</comment>
		</variables>
		<variables name="Tempo_vibreur_Cim2" typeName="TP"></variables>
		<variables name="P1_adj_Weight5" typeName="INT" topologicalAddress="%MW8232">
			<comment>Value in point for low point of the calibration for adm weigher 5</comment>
		</variables>
		<variables name="BALANCE_Cim1" typeName="WORD">
			<comment>Adresse en Qt uniquement</comment>
		</variables>
		<variables name="CPT19_FORCE_ENABLE" typeName="EBOOL"></variables>
		<variables name="Poids_sup_seuil_vide_TT_cim" typeName="EBOOL" topologicalAddress="%M614"></variables>
		<variables name="LC_Cim2_A_Doser" typeName="INT"></variables>
		<variables name="DO_17" typeName="EBOOL" topologicalAddress="%Q0.3.16">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Defaut_ouv_trappe_Mal1" typeName="EBOOL"></variables>
		<variables name="TON_trappe1_ouverte_mal1" typeName="TON"></variables>
		<variables name="AI_16" typeName="INT">
			<comment>Old %IW80</comment>
		</variables>
		<variables name="DO_Anh_Silo_Open" typeName="EBOOL" topologicalAddress="%Q0.4.30">
			<comment>Open anhydrite silo</comment>
		</variables>
		<variables name="AI_57_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Ordre_transfert_cim" typeName="EBOOL"></variables>
		<variables name="DO_Mixer2_RO_OFF" typeName="EBOOL">
			<comment>Turn 'mixer 2' OFF - For automatic switch OFF of the mixer between batches.</comment>
		</variables>
		<variables name="Conf_tapis_trans_anticipation" typeName="EBOOL" topologicalAddress="%M409"></variables>
		<variables name="Cde_fermeture_trappe2_mal2" typeName="EBOOL" topologicalAddress="%M253"></variables>
		<variables name="CPT20_FORCE_ENABLE" typeName="EBOOL"></variables>
		<variables name="declaration_malaxeur_1_vide" typeName="EBOOL"></variables>
		<variables name="DI_Skip_SCHG_Fault" typeName="EBOOL">
			<comment>External fault for skip speed change (from variable speed drive, ...) - Makes the skip stop ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Discordance_vidange_granulat2" typeName="EBOOL" topologicalAddress="%M530"></variables>
		<variables name="DI_Admix_Cpt2_High_Level" typeName="EBOOL">
			<comment>High level detected in 'compartment 2' of the admixture weigher - An alarm makes the admixture 'tank 2' closed - For Romanian-type and Indian-type admixture processes ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Consigne_anticipation" typeName="INT"></variables>
		<variables name="fm_doser_Adj_manu" typeName="R_TRIG"></variables>
		<variables name="fm_cumul_Cim_manu_stable" typeName="R_TRIG"></variables>
		<variables name="Stock_Anh_manu" typeName="BOOL"></variables>
		<variables name="Transfert_cim_non_termine" typeName="EBOOL" topologicalAddress="%M620"></variables>
		<variables name="Mode_AU" typeName="EBOOL" topologicalAddress="%M505"></variables>
		<variables name="Cond_Vid_Dry6" typeName="BOOL"></variables>
		<variables name="CPT18_LOWER_TH_VALUE" typeName="DINT"></variables>
		<variables name="Numero_Eau_pupitre" typeName="NUM_PUP">
			<comment>declarations eaux*)</comment>
		</variables>
		<variables name="destination_malaxeur_1" typeName="EBOOL"></variables>
		<variables name="PULSE_KLAXON_B" typeName="TP"></variables>
		<variables name="Alarme_Cde_BCMix_Refusee" typeName="EBOOL" topologicalAddress="%M691"></variables>
		<variables name="DI_Agg1_Weigher_Closed" typeName="EBOOL" topologicalAddress="%I0.1.3">
			<comment>Aggregate 1' weigher closed (or weighing belt stopped) ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Cem_WH_Opened" typeName="EBOOL">
			<comment>Secondary cement hopper open ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_eau1_tps_stabilisation" typeName="TIME" topologicalAddress="%MW7980"></variables>
		<variables name="Cde_dosage_Eau" typeName="BOOLARR4" topologicalAddress="%MW4727"></variables>
		<variables name="Vid_Adj_Terminee" typeName="EBOOL"></variables>
		<variables name="DO_128" typeName="EBOOL" topologicalAddress="%Q0.4.63">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="P2_eau1" typeName="INT" topologicalAddress="%MW8008">
			<comment>Value in points for high point of the calibration for water weigher 1</comment>
		</variables>
		<variables name="mot_entree1_ccr4" typeName="WORD" topologicalAddress="%MW5971"></variables>
		<variables name="Doser_Gra2_auto" typeName="BOOL"></variables>
		<variables name="Ecart_pesee_en_taux_Gra2" typeName="INT" topologicalAddress="%MW4800">
			<comment>Ecart de pesee en pour dix-millieme pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="Cumul_Gra1_auto" typeName="STOCK5">
			<comment>calcul du n° produit pupitre*)</comment>
		</variables>
		<variables name="Conf_Admix_Weigher_PP_No_Sens" typeName="BOOL">
			<comment>10 pump, 0 sensor</comment>
		</variables>
		<variables name="NP_initial_Eau1_A_Doser" typeName="INT"></variables>
		<variables name="BP_ouverture_trappe1_mal1" typeName="EBOOL"></variables>
		<variables name="BCMix_DO_76" typeName="EBOOL" topologicalAddress="%M876">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_basc_granulat2_tps_reponse" typeName="TIME" topologicalAddress="%MW7818"></variables>
		<variables name="Defaut_Gra1" typeName="EBOOL"></variables>
		<variables name="conf_TT_sens_fc_ouverte" typeName="EBOOL" topologicalAddress="%M423"></variables>
		<variables name="Recup_voie_ana_TT_Cim" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="Pesee_suivante_Gra1" typeName="EBOOL"></variables>
		<variables name="Alarme_prot_mot_Vis_Cendre" typeName="EBOOL">
			<comment>(Roumanie) NOT USED YET</comment>
		</variables>
		<variables name="Dos_dif_Erreur_jetee" typeName="INT">
			<comment>Récupéré dans TG_IN[].Dos_dif_Dry[].Erreur_jettee</comment>
		</variables>
		<variables name="AI_36_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="DO_75" typeName="EBOOL" topologicalAddress="%Q0.4.10">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_09" typeName="EBOOL" topologicalAddress="%I0.1.8">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Pesee_incomplete_Eau1" typeName="EBOOL" topologicalAddress="%M553"></variables>
		<variables name="Vid_Eau2_En_Cours" typeName="EBOOL"></variables>
		<variables name="voie_basc_Gra1" typeName="INT" topologicalAddress="%MW7765">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="Transfert_Adj_Termine" typeName="BOOL"></variables>
		<variables name="Stock_manu_Adj_6" typeName="BOOL"></variables>
		<variables name="retard_transfert_glace_eau1" typeName="INT"></variables>
		<variables name="FBI_2" typeName="TON"></variables>
		<variables name="Conf_Water_Weigher_IN" typeName="BOOL">
			<comment>1 valve, 1 sensor + 1 pump without sensor</comment>
		</variables>
		<variables name="AI_46_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Init_Sequence_vidange_Dry" typeName="EBOOL"></variables>
		<variables name="Comm_Arpege_possible" typeName="EBOOL"></variables>
		<variables name="AI_30" typeName="INT">
			<comment>Old %IW94</comment>
		</variables>
		<variables name="conf_granulat1_sens_fc_vidange" typeName="EBOOL" topologicalAddress="%M308"></variables>
		<variables name="Conf_Cim1_seuil_vide" typeName="INT" topologicalAddress="%MW7872"></variables>
		<variables name="FM_dos_Manulog_PPE_13" typeName="R_TRIG"></variables>
		<variables name="Tempo_apres_coulant" typeName="INTARR20"></variables>
		<variables name="AI_60_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Conf_multipl_TT_cim" typeName="REAL" topologicalAddress="%MW8502"></variables>
		<variables name="AI_37_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Introduction_Anh_encours" typeName="EBOOL"></variables>
		<variables name="EJ_Eau1_A_Doser" typeName="INT"></variables>
		<variables name="LEC_ARPEGE_TT_gra" typeName="LEC_ARPEGE"></variables>
		<variables name="Alarme_Niveau_haut_ADJ_Comp6" typeName="EBOOL" topologicalAddress="%M657">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="BCMix_DO_11" typeName="EBOOL" topologicalAddress="%M811">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Statut_Term_Vid_Dry" typeName="WORD">
			<comment>Indique dans l'ordre les vidanges qui sont terminée</comment>
		</variables>
		<variables name="Limite_correction_Adj" typeName="INT"></variables>
		<variables name="Basc_instable_Adj" typeName="EBOOL" topologicalAddress="%M567"></variables>
		<variables name="DI_32" typeName="EBOOL" topologicalAddress="%I0.1.31">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="LEC_BIN_BCD_Gra2" typeName="LEC_BIN_BCD"></variables>
		<variables name="DI_PB_PLC_Horn" typeName="EBOOL">
			<comment>Horn' pushbutton is pushed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_71" typeName="INT">
			<comment>Old %IW135</comment>
		</variables>
		<variables name="CPT12_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.10.3.2"></variables>
		<variables name="NP_Anh" typeName="INT"></variables>
		<variables name="Statut_Ppe_en_cours" typeName="DINT"></variables>
		<variables name="Conf_Comm_HMS_Profibus_Active" typeName="EBOOL" topologicalAddress="%M455"></variables>
		<variables name="Conf_anhydrite_ecart_stab" typeName="INT" topologicalAddress="%MW8241">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Info_malaxeur2_en_marche" typeName="EBOOL" topologicalAddress="%M24"></variables>
		<variables name="Temps_skip_gv_min" typeName="TIME"></variables>
		<variables name="Alarme_arret_urgence_silo" typeName="EBOOL" topologicalAddress="%M791"></variables>
		<variables name="Poids_instantane_Adj2" typeName="INT">
			<comment>(*non mis en service*)</comment>
		</variables>
		<variables name="Acquisition_entrees_ACTIVE" typeName="EBOOL">
			<variableInit value="TRUE"></variableInit>
		</variables>
		<variables name="Info_vidange_vers_malaxeur_1" typeName="EBOOL" topologicalAddress="%M20"></variables>
		<variables name="Conf_eau2_tps_vidange" typeName="TIME" topologicalAddress="%MW8036">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Seuil_vide_atteint_Gra1" typeName="EBOOL"></variables>
		<variables name="CPT05_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.9.4.7"></variables>
		<variables name="Auto_ouv_TT_Gra" typeName="BOOL"></variables>
		<variables name="Conf_silo_anhydrite_TON_vibreur" typeName="TIME" topologicalAddress="%MW7702">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Ecart_pesee_en_taux_Cim2" typeName="INT" topologicalAddress="%MW4802">
			<comment>Ecart de pesee en pour dix-millieme pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="NP_Cim2_Aux2_A_Doser" typeName="INT"></variables>
		<variables name="DO_Agg1_Weigher_Open" typeName="EBOOL" topologicalAddress="%Q0.3.0">
			<comment>Open 'aggregate 1' weigher or move weighing belt</comment>
		</variables>
		<variables name="DO_Agg_Bin5_Open" typeName="EBOOL" topologicalAddress="%Q0.4.4">
			<comment>Open aggregate 'bin 5'</comment>
		</variables>
		<variables name="TP_anticipation_tapis_trans" typeName="TP"></variables>
		<variables name="Poids_real_Anh" typeName="REAL" topologicalAddress="%MW4694">
			<comment>Poids anhydrite en reel</comment>
		</variables>
		<variables name="DI_82" typeName="EBOOL" topologicalAddress="%I0.2.17">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="BALANCE_Eau1" typeName="WORD">
			<comment>Adresse en Qt uniquement</comment>
		</variables>
		<variables name="Alarme_satur_inf_Anh" typeName="EBOOL" topologicalAddress="%M797"></variables>
		<variables name="CPT14_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.5.0.5"></variables>
		<variables name="DO_87" typeName="EBOOL" topologicalAddress="%Q0.4.22">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="BCMix_DO_19" typeName="EBOOL" topologicalAddress="%M819">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_TT_Cim_ecart_stab" typeName="INT" topologicalAddress="%MW8473">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="NP_Cim1" typeName="INT">
			<comment>Index de produit ds table de dosage</comment>
		</variables>
		<variables name="Alarme_satur_sup_Adj" typeName="EBOOL" topologicalAddress="%M800"></variables>
		<variables name="DI_Admix_Tank5_PB_PLC_Open" typeName="EBOOL">
			<comment>Open admixture 'tank 5'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="CGG_activee_Anh" typeName="BOOL"></variables>
		<variables name="Conf_eau2_filtre_Nb_Vals" typeName="INT" topologicalAddress="%MW8050">
			<variableInit value="3"></variableInit>
		</variables>
		<variables name="Attente_debut_introduction" typeName="EBOOL"></variables>
		<variables name="Presence_Gra2" typeName="EBOOL"></variables>
		<variables name="TON_dis_skip" typeName="TON"></variables>
		<variables name="DI_19" typeName="EBOOL" topologicalAddress="%I0.1.18">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Bonbonne_cim_non_prete" typeName="EBOOL" topologicalAddress="%M618"></variables>
		<variables name="DO_Conveyor_Belt_ON" typeName="EBOOL" topologicalAddress="%Q0.3.10">
			<comment>Move the (aggregate) conveyor belt - The belt stops a user-definable delay after this output OFF</comment>
		</variables>
		<variables name="consigne_ppe7" typeName="INT" topologicalAddress="%MW5950"></variables>
		<variables name="CPT15_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="DI_Agg2_Emergency_Stop" typeName="EBOOL">
			<comment>Aggregate line 2' emergency stop is pushed (or cable was pulled) - Displays an alarm - To be used with 'ETOR_etat_arret_urgence' ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="TON_seuil_vide_Mal1" typeName="TON"></variables>
		<variables name="Saturation_sup_Eau1" typeName="BOOL"></variables>
		<variables name="Conf_cim_TOFF_vibreur" typeName="TIMEARR6" topologicalAddress="%MW6952">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="DI_Agg_Bin1_PB_PLC_Open" typeName="EBOOL">
			<comment>Open aggregate 'bin 1'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="FM_FIN_DOS_Cim1" typeName="R_TRIG"></variables>
		<variables name="conf_Cim1_avec_sequence" typeName="EBOOL" topologicalAddress="%M339"></variables>
		<variables name="TON_041" typeName="TON"></variables>
		<variables name="BALANCE_Gra1" typeName="WORD">
			<comment>Adresse en Qt uniquement</comment>
		</variables>
		<variables name="AI_26" typeName="INT">
			<comment>Old %IW90</comment>
		</variables>
		<variables name="Conf_adj_tps_apres_coulant" typeName="TIMEARR20" topologicalAddress="%MW7392"></variables>
		<variables name="Conf_multipl_Granulat3" typeName="REAL"></variables>
		<variables name="AI_69" typeName="INT">
			<comment>Old %IW133</comment>
		</variables>
		<variables name="Manu_Pup_Marche_Tapis_Trans" typeName="BOOL"></variables>
		<variables name="Malax1" typeName="TIMEARR6"></variables>
		<variables name="TT_Gra_devrait_etre_vide" typeName="BOOL"></variables>
		<variables name="AI_5_Value_Module1" typeName="INT" topologicalAddress="%MW4416"></variables>
		<variables name="FM_dos_pupitre_PPE_14" typeName="R_TRIG"></variables>
		<variables name="AI_42_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="BP_dosage_Cim_3" typeName="EBOOL" topologicalAddress="%M158"></variables>
		<variables name="W1_adj_Weight4" typeName="REAL" topologicalAddress="%MW8216">
			<comment>Value in kg for low point of the calibration for adm weigher 4</comment>
		</variables>
		<variables name="FM_Cde_Manu_PPE_12" typeName="R_TRIG"></variables>
		<variables name="conf_mal1_sens_fc_trap1_ouv" typeName="EBOOL" topologicalAddress="%M459"></variables>
		<variables name="DO_Admix_Tank8_Open" typeName="EBOOL" topologicalAddress="%Q0.4.39">
			<comment>Open admixture 'tank 8'</comment>
		</variables>
		<variables name="Tempo_vibreur_Gra2" typeName="TP"></variables>
		<variables name="DI_Admix_Tank6_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.37">
			<comment>Open admixture 'tank 6'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Poids_real_Gra3" typeName="REAL" topologicalAddress="%MW4700">
			<comment>Poids granulat 3 en reel</comment>
		</variables>
		<variables name="Conf_eau1_seuil_vid_ppe" typeName="INT" topologicalAddress="%MW8013">
			<comment>(roumanie) seuil imite de vidange par pompe</comment>
		</variables>
		<variables name="BCMix_DO_100" typeName="EBOOL" topologicalAddress="%M900">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="BP_dosage_Adj_9" typeName="EBOOL" topologicalAddress="%M174"></variables>
		<variables name="Introduction_Cim1_encours" typeName="EBOOL"></variables>
		<variables name="TON_TOFF_PV_Gra2" typeName="TON_TOFF"></variables>
		<variables name="CPT14_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.10.5.2"></variables>
		<variables name="Discordance_vidange_Eau2" typeName="EBOOL" topologicalAddress="%M777"></variables>
		<variables name="Seuil_vide_atteint_Mal2" typeName="EBOOL"></variables>
		<variables name="Derniere_gachee_malaxeur1" typeName="EBOOL"></variables>
		<variables name="Gra2_presence_prod_Eau1" typeName="BOOL"></variables>
		<variables name="Conf_TT_granulat_ctrl_poids" typeName="EBOOL" topologicalAddress="%M422"></variables>
		<variables name="Stock_manu_Gra_7" typeName="BOOL"></variables>
		<variables name="consigne_ppe18" typeName="INT" topologicalAddress="%MW5978"></variables>
		<variables name="P1_eau2" typeName="INT" topologicalAddress="%MW8058">
			<comment>Value in points for low point of the calibration for water weigher 2</comment>
		</variables>
		<variables name="TG2_nouvelle" typeName="BOOL"></variables>
		<variables name="BCMix_DO_26" typeName="EBOOL" topologicalAddress="%M826">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Cde_ordre_transfert_cim" typeName="EBOOL" topologicalAddress="%M259"></variables>
		<variables name="DO_Mixer1_Gate2_Red_Light_ON" typeName="EBOOL" topologicalAddress="%Q0.3.37">
			<comment>Turn 'mixer 1' 'gate 2' red light ON</comment>
		</variables>
		<variables name="Tble_envoi_LED_Pupitre" typeName="ARRAY[1..5] OF INT"></variables>
		<variables name="conf_cim1_binaire" typeName="EBOOL" topologicalAddress="%M335">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="FM_dos_ManuLog_PPE_2" typeName="R_TRIG"></variables>
		<variables name="Conf_Agg_WH_Ana_Offset" typeName="INT">
			<comment>offset for cement waiting hopper</comment>
		</variables>
		<variables name="Alarme_Mesomatic6" typeName="BOOL"></variables>
		<variables name="Conf_Mixer1_Auto_Start" typeName="EBOOL">
			<comment>Enable Mixer 1 automatic Start</comment>
		</variables>
		<variables name="Pulse_Cde_ppe_vidange_comp_adj1" typeName="EBOOL"></variables>
		<variables name="PESA_Eau1" typeName="PESA"></variables>
		<variables name="Bit_validation_trappe1_malax1" typeName="EBOOL" topologicalAddress="%M485"></variables>
		<variables name="Conf_cim1_seuil_mini" typeName="INT" topologicalAddress="%MW7874">
			<comment>Seuil de dÃ©tarrage</comment>
		</variables>
		<variables name="NG_Cim2" typeName="INT" topologicalAddress="%MW4525"></variables>
		<variables name="DI_Cem_Silo2_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.17">
			<comment>Open cement 'silo 2'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_73" typeName="EBOOL" topologicalAddress="%I0.2.8">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="TON_dis_bypass" typeName="TON"></variables>
		<variables name="Alarme_Com_API_ModbusTCP_1" typeName="EBOOL" topologicalAddress="%M675">
			<comment>(Roumanie) Defaut : esclave TCP ne réponds pas</comment>
		</variables>
		<variables name="Alarme_detare_Cim2" typeName="EBOOL" topologicalAddress="%M765"></variables>
		<variables name="Cde_petite_vitesse_Eau2" typeName="EBOOL" topologicalAddress="%M269"></variables>
		<variables name="DO_27" typeName="EBOOL" topologicalAddress="%Q0.3.26">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_Cim2_tps_sequence_ouv" typeName="TIME" topologicalAddress="%MW7962"></variables>
		<variables name="Conf_granulat1_pres_capteur_rot" typeName="EBOOL" topologicalAddress="%M306"></variables>
		<variables name="DI_Mixer1_CBT" typeName="EBOOL">
			<comment>Mixer 1' circuit breaker tripped - An alarm sets the output 'STOR_marche_mal1' to OFF ['0' or '1' for 'TRUE' - see 'Conf_prot_mot_malax1_Actif0' variable]</comment>
		</variables>
		<variables name="memo_ppe_bloque" typeName="INTARR20"></variables>
		<variables name="Debug_MotStatus1_Word" typeName="WORD" topologicalAddress="%MW4508"></variables>
		<variables name="Defaut_Cim1" typeName="EBOOL"></variables>
		<variables name="Manu_Station_Cmd_Gate_Mode_Auto" typeName="EBOOL"></variables>
		<variables name="Cumul_Gra2_auto" typeName="STOCK5">
			<comment>DFB gestion du cumul "cumul_a pour auto"*)</comment>
		</variables>
		<variables name="AI_20_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="AI_17_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Detarage_Eau2" typeName="BOOL"></variables>
		<variables name="Alarme_detare_Cim1" typeName="EBOOL" topologicalAddress="%M548"></variables>
		<variables name="Conf_Cem_Process_Tol_Default" typeName="INTARR6" topologicalAddress="%MW6872">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Conf_granulat2_pres_balance" typeName="EBOOL" topologicalAddress="%M318"></variables>
		<variables name="Manu_Log_ouv_basc_Adj" typeName="BOOL"></variables>
		<variables name="TG_Cim2_Valide" typeName="BOOL"></variables>
		<variables name="Conf_granulat2_tapis" typeName="EBOOL" topologicalAddress="%M320"></variables>
		<variables name="Alarme_poids_max_TT_granulat" typeName="EBOOL" topologicalAddress="%M604"></variables>
		<variables name="Temps_mini_malaxage1" typeName="TIME"></variables>
		<variables name="Saturation_inf_Adj_Weight4" typeName="BOOL"></variables>
		<variables name="Pret_pour_intro_produit_ph2_ph3" typeName="EBOOL"></variables>
		<variables name="DI_Bypass_Position1" typeName="EBOOL" topologicalAddress="%I0.1.20">
			<comment>Bypass in 'position 1' ('mixer 1') ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_Admix_Cpt4_PP_ON" typeName="EBOOL">
			<comment>Run the admixture weigher 'compartment 4' emptying pump - For the Romanian-type admixture process</comment>
		</variables>
		<variables name="I2" typeName="INT"></variables>
		<variables name="Pese_Cim_manu" typeName="UDINTARR7" topologicalAddress="%MW4974">
			<comment>Suivi conso (lec BCMIX)</comment>
		</variables>
		<variables name="Valeurs_Envoi_IDE500" typeName="ARRAY[1..37] OF INT"></variables>
		<variables name="DO_56" typeName="EBOOL" topologicalAddress="%Q0.3.55">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Discordance_vidange_Cim2" typeName="EBOOL" topologicalAddress="%M761"></variables>
		<variables name="Conf_techno_TT_gra" typeName="INT" topologicalAddress="%MW8408">
			<comment>0=Bin 1=BCD 2=TCP_Arpege 3=Ana 4=Profibus</comment>
		</variables>
		<variables name="BCMix_DO_82" typeName="EBOOL" topologicalAddress="%M882">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="tempo_ctrle_rotation_tapis_trans" typeName="TON"></variables>
		<variables name="Conf_malaxeur1_tps_fermeture" typeName="TIME" topologicalAddress="%MW8552"></variables>
		<variables name="AI_16_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="CPT05_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="Poids_vise_deja_ecrit_Cim2" typeName="BOOL"></variables>
		<variables name="AI_51_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Info_etat_arret_urgence" typeName="EBOOL" topologicalAddress="%M52"></variables>
		<variables name="Cde_cuve2_mes_occupee" typeName="EBOOL" topologicalAddress="%M257"></variables>
		<variables name="DO_114" typeName="EBOOL" topologicalAddress="%Q0.4.49">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Stock_Cim_manu" typeName="BOOL"></variables>
		<variables name="Anticipation_phase2_valide" typeName="BOOL"></variables>
		<variables name="Conf_pourcentage_anticip_phase2" typeName="INT" topologicalAddress="%MW8656">
			<comment>Consigne de BC-Mix</comment>
		</variables>
		<variables name="DI_Mixer1_Gate1_PB_Pro_Open" typeName="EBOOL">
			<comment>Open 'mixer 1' Gate 1'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Seuil_vide_atteint_Adj" typeName="EBOOL"></variables>
		<variables name="CPT08_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.7.0.5"></variables>
		<variables name="BCMix_DO_34" typeName="EBOOL" topologicalAddress="%M834">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="pas_vid_basc_eau" typeName="EBOOL">
			<comment>ne pas faire de vidange : eau par compteur, rien en bascule</comment>
		</variables>
		<variables name="AI_21_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Conf_skip_tol_tps_grde_vit" typeName="TIME" topologicalAddress="%MW8378"></variables>
		<variables name="Premier_Prod_Eau1" typeName="BOOL"></variables>
		<variables name="TON_malaxage_mal2" typeName="TON_P"></variables>
		<variables name="Conf_anhydrite_tps_vidange" typeName="TIME" topologicalAddress="%MW8246">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="conf_tapis_trans_sens_contact" typeName="EBOOL" topologicalAddress="%M408"></variables>
		<variables name="Stock_manu_Gra_13" typeName="BOOL"></variables>
		<variables name="LEC_BIN_BCD_Cim2" typeName="LEC_BIN_BCD"></variables>
		<variables name="Fermeture_Anh" typeName="EBOOL"></variables>
		<variables name="Alarme_IDE500_Adj" typeName="EBOOL" topologicalAddress="%M575"></variables>
		<variables name="DO_Admix_Tank13_Open" typeName="EBOOL" topologicalAddress="%Q0.4.44">
			<comment>Open admixture 'tank 13'</comment>
		</variables>
		<variables name="Simulation_dosage_Anh" typeName="Simulation_dosage"></variables>
		<variables name="DI_Admix_Weigher_Cpt3_PB_PLC_Op" typeName="EBOOL">
			<comment>Open admixture weigher 'compartment 3'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Alarme_arret_urgence_skip" typeName="EBOOL" topologicalAddress="%M789"></variables>
		<variables name="Depart_Dosage_Cim2" typeName="BOOL"></variables>
		<variables name="Basc_instable_Anh" typeName="EBOOL" topologicalAddress="%M581"></variables>
		<variables name="Etat_balance_Gra1" typeName="EBOOL"></variables>
		<variables name="DI_Admix_Tank16_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.47">
			<comment>Open admixture 'tank 16'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="FM_dos_Manulog_PPE_20" typeName="R_TRIG"></variables>
		<variables name="TON_SIMUL_XV2_Ferme" typeName="TON"></variables>
		<variables name="Pesee_suivante_Anh" typeName="EBOOL"></variables>
		<variables name="Stabilite_Eau_en_cours" typeName="BOOL"></variables>
		<variables name="FM_dos_pupitre_PPE_5" typeName="R_TRIG"></variables>
		<variables name="Conf_granulat1_vit_rotation_mini" typeName="TIME" topologicalAddress="%MW7784"></variables>
		<variables name="Poids_instantane_Gra2" typeName="INT" topologicalAddress="%MW4658"></variables>
		<variables name="Info_arret_urgence_granulat1" typeName="EBOOL" topologicalAddress="%M42"></variables>
		<variables name="DI_Water_Weigher_PP_CBT" typeName="EBOOL">
			<comment>Water weigher emptying pump circuit breaker tripped - An alarm stops the weigher emptying ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Manu_Pup_Montee_Skip" typeName="BOOL"></variables>
		<variables name="BP_dosage_Gra_6" typeName="EBOOL" topologicalAddress="%M147"></variables>
		<variables name="DI_Agg_Bin6_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.5">
			<comment>Open aggregate 'bin 6'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_37" typeName="EBOOL" topologicalAddress="%Q0.3.36">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Presence_prod_Gra1" typeName="EBOOL"></variables>
		<variables name="CPT16_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.10.7.4"></variables>
		<variables name="FM_dos_pupitre_PPE_20" typeName="R_TRIG"></variables>
		<variables name="BCMix_DO_125" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="CPT08_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.9.7.6"></variables>
		<variables name="conf_cim1_bcd" typeName="EBOOL" topologicalAddress="%M336">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="Alarme_prot_mot_vid_PPE_EAU" typeName="EBOOL" topologicalAddress="%M665">
			<comment>(Roumanie) Vidange de la bascule par pompe</comment>
		</variables>
		<variables name="Saturation_sup_Adj_Weight3" typeName="BOOL"></variables>
		<variables name="IP_HMS" typeName="Adresse_IP_M340"></variables>
		<variables name="Info_trappe2_fermee_mal2" typeName="EBOOL" topologicalAddress="%M32"></variables>
		<variables name="Tempo_vibreur_Anh" typeName="TP"></variables>
		<variables name="DO_42" typeName="EBOOL" topologicalAddress="%Q0.3.41">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_Mixer1_Therm_Prot_Act0" typeName="EBOOL">
			<comment>Mixer thermal protection</comment>
		</variables>
		<variables name="AI_61" typeName="INT">
			<comment>Old %IW125</comment>
		</variables>
		<variables name="AI_39_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="CTU_1" typeName="CTU_UDINT"></variables>
		<variables name="TON_wattmetre_mal2" typeName="TON"></variables>
		<variables name="TON_sup_seuil_vid_mal1" typeName="TON"></variables>
		<variables name="voie_basc_Adj_Weight5" typeName="INT" topologicalAddress="%MW8226">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="Pesee_Gra2_terminee" typeName="EBOOL"></variables>
		<variables name="cde_feu_rouge_trappe2_Mal2" typeName="BOOL"></variables>
		<variables name="FD_vidange_TT_gra" typeName="F_TRIG"></variables>
		<variables name="Conf_eau2_seuil_mini" typeName="INT" topologicalAddress="%MW8030">
			<comment>Seuil de detarrage</comment>
		</variables>
		<variables name="Petite_vitesse_Eau2" typeName="EBOOL"></variables>
		<variables name="Conf_Water_Weigher_RO" typeName="BOOL">
			<comment>1 valve, 1 sensor + 1 pump, 1 sensor</comment>
		</variables>
		<variables name="AI_49_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Conf_tap_trans_tps_vidange" typeName="TIME" topologicalAddress="%MW8340"></variables>
		<variables name="CPT13_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.10.4.7"></variables>
		<variables name="Cumul_pesees_anh_gra" typeName="cumuls2"></variables>
		<variables name="AI_Value_Water1" typeName="INT"></variables>
		<variables name="tps_ecoule_vidange_TT_cim" typeName="TIME"></variables>
		<variables name="AI_6_Error" typeName="BOOL" topologicalAddress="%I0.7.1.ERR">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="DI_Manu_Station_Emergency_Stop" typeName="EBOOL">
			<comment>Console emergency stop is pushed (in control room) - Displays an alarm - To be used with 'ETOR_etat_arret_urgence' ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_57" typeName="INT">
			<comment>Old %IW121</comment>
		</variables>
		<variables name="Alarme_detare_Anh" typeName="EBOOL" topologicalAddress="%M588"></variables>
		<variables name="Poids_demande_Eau1" typeName="INT" topologicalAddress="%MW4559"></variables>
		<variables name="AI_41_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="BCMix_DO_58" typeName="EBOOL" topologicalAddress="%M858">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_28_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="DO_01" typeName="EBOOL" topologicalAddress="%Q0.3.0">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Vidange_terminee_Gra2" typeName="EBOOL"></variables>
		<variables name="GTW_bit_RUN" typeName="BOOL">
			<comment>Gateway run bit</comment>
		</variables>
		<variables name="conf_anhydrite_bcd" typeName="EBOOL" topologicalAddress="%M398">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="RE_adj6" typeName="R_TRIG"></variables>
		<variables name="AI_9_Lower_Saturation" typeName="BOOL" topologicalAddress="%IW0.8.0.1.6">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="interdiction_marche_tapis_trans" typeName="EBOOL"></variables>
		<variables name="W2_cim1" typeName="REAL" topologicalAddress="%MW7900">
			<comment>Value in kg for high point of the calibration for cement weigher 1</comment>
		</variables>
		<variables name="DI_Skip_Moving_Down" typeName="EBOOL" topologicalAddress="%I0.1.18">
			<comment>Skip moving back to weighing line ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Alarme_satur_sup_TT_cim" typeName="EBOOL" topologicalAddress="%M622"></variables>
		<variables name="CPT14_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.10.5.7"></variables>
		<variables name="Valeur_wattmetre2" typeName="INT"></variables>
		<variables name="Stock_manu_Adj_13" typeName="BOOL"></variables>
		<variables name="DI_43" typeName="EBOOL" topologicalAddress="%I0.1.42">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="consigne_ppe10" typeName="INT" topologicalAddress="%MW5956"></variables>
		<variables name="FM_dos_Manulog_PPE_12" typeName="R_TRIG"></variables>
		<variables name="AI_29_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Cde_dosage_Anh" typeName="EBOOL" topologicalAddress="%M255"></variables>
		<variables name="EJ_Cim1_A_Doser" typeName="INT"></variables>
		<variables name="AI_31_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="TON_dis_basc_anhydrite" typeName="TON"></variables>
		<variables name="Conf_eau1_ecart_stabilite" typeName="INT" topologicalAddress="%MW7979"></variables>
		<variables name="Malax_ferme" typeName="TIMEARR6" topologicalAddress="%MW5710"></variables>
		<variables name="BP_dosage_Adj_15" typeName="EBOOL" topologicalAddress="%M180"></variables>
		<variables name="Recup_voie_ana_Adj_Weight5" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="Vidange_en_cours_Gra1" typeName="EBOOL"></variables>
		<variables name="Vid_Eau2_Terminee" typeName="EBOOL"></variables>
		<variables name="Conf_granulat_TON_vibreur" typeName="TIMEARR14" topologicalAddress="%MW6564"></variables>
		<variables name="DO_121" typeName="EBOOL" topologicalAddress="%Q0.4.56">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="CPT17_EVT_COUNTER_LOW_ENABLE" typeName="BOOL"></variables>
		<variables name="BCMix_DO_67" typeName="EBOOL" topologicalAddress="%M867">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TOF_feu_trappe2_mal1" typeName="TOF"></variables>
		<variables name="Idx_Direct" typeName="INT"></variables>
		<variables name="cde_feu_rouge_trappe1_Mal2" typeName="BOOL"></variables>
		<variables name="Stock_manu_Eau_2" typeName="BOOL"></variables>
		<variables name="Depart_verif_Cim1" typeName="BOOL"></variables>
		<variables name="sens_pesage_fin_cim2" typeName="EBOOL" topologicalAddress="%M373"></variables>
		<variables name="anticipation_skip" typeName="EBOOL"></variables>
		<variables name="DO_Mixer1_RO_OFF" typeName="EBOOL">
			<comment>Turn 'mixer 1' OFF - For automatic switch OFF of the mixer between batches. Also controllable by a profibus console, and by a direct-to-PLC console.</comment>
		</variables>
		<variables name="Numero_produit_Gra2_cumul" typeName="INT"></variables>
		<variables name="Cde_dosage_generale_Gra1" typeName="EBOOL"></variables>
		<variables name="Conf_TT_cim_seuil_maxi" typeName="INT" topologicalAddress="%MW8471"></variables>
		<variables name="TOF_77_330" typeName="TOF"></variables>
		<variables name="DI_12" typeName="EBOOL" topologicalAddress="%I0.1.11">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Conf_basc_eau2_tps_reponse" typeName="TIME" topologicalAddress="%MW8040"></variables>
		<variables name="PB_Gate_Mode_Switch" typeName="EBOOL"></variables>
		<variables name="Alarme_poids_max_Eau1" typeName="EBOOL" topologicalAddress="%M559"></variables>
		<variables name="Alarme_satur_sup_Gra2" typeName="EBOOL" topologicalAddress="%M679"></variables>
		<variables name="Conf_techno_basc_TP_skip_gra3" typeName="INT">
			<comment>0=Bin 1=BCD 2=TCP_Arpege 3=Ana 4=Profibus</comment>
		</variables>
		<variables name="Info_densite_cuve_2" typeName="EBOOL" topologicalAddress="%M38"></variables>
		<variables name="Conf_eau_TON_ajustement" typeName="TIMEARR4" topologicalAddress="%MW7144"></variables>
		<variables name="AI_61_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Intro_Anh_terminee" typeName="EBOOL"></variables>
		<variables name="Presence_cde_pupitre_Anh" typeName="BOOL"></variables>
		<variables name="Conf_anhydrite_filtre_Nb_Vals" typeName="INT" topologicalAddress="%MW8260">
			<variableInit value="3"></variableInit>
		</variables>
		<variables name="LEC_ANA_Anh" typeName="LEC_ANA"></variables>
		<variables name="Remplace_PPE_en_cours" typeName="ARRAY[1..20] OF EBOOL"></variables>
		<variables name="AI_47" typeName="INT">
			<comment>Old %IW111</comment>
		</variables>
		<variables name="Poids_de_reference_Gra2" typeName="INT"></variables>
		<variables name="Conf_TT_granulat_tps_max_stab" typeName="TIME" topologicalAddress="%MW8392">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="DI_62" typeName="EBOOL" topologicalAddress="%I0.1.61">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Manu_cde_fermeture_trappe_1_mal2" typeName="EBOOL" topologicalAddress="%M729"></variables>
		<variables name="Stabilite_Adj_en_cours" typeName="BOOL"></variables>
		<variables name="Info_Plant_In_Auto" typeName="EBOOL" topologicalAddress="%M33">
			<comment>Plant in mode “Auto”</comment>
		</variables>
		<variables name="BCMix_DO_94" typeName="EBOOL" topologicalAddress="%M894">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Info_trappe1_ouverte_mal1" typeName="EBOOL" topologicalAddress="%M25"></variables>
		<variables name="DO_Water_Tank4_Open" typeName="EBOOL" topologicalAddress="%Q0.4.27">
			<comment>Open water 'tank 4'</comment>
		</variables>
		<variables name="Dos_dif_Numero_Ppe" typeName="INT">
			<comment>Récupéré dans TG_IN[].Dos_dif_Dry[].Numero_produit</comment>
		</variables>
		<variables name="Conf_Admix_Dos_Mot_Prot_Act0" typeName="EBOOL">
			<comment>Admixtures weighing pumps motor protection</comment>
		</variables>
		<variables name="AI_Admix_Status_5" typeName="EBOOL"></variables>
		<variables name="Alarme_Aspi" typeName="EBOOL" topologicalAddress="%M644">
			<comment>(Dry) NOT USED YET</comment>
		</variables>
		<variables name="Conf_Voltage_Control_Act0" typeName="EBOOL">
			<comment>Voltage control</comment>
		</variables>
		<variables name="Idx_Vid_Dry_Adj_C2" typeName="INT"></variables>
		<variables name="Pulse_Pup_Cde_compresseur" typeName="EBOOL"></variables>
		<variables name="Poids_sup_seuil_vide_Gra1" typeName="EBOOL" topologicalAddress="%M510"></variables>
		<variables name="DO_Agg_Bin12_Open" typeName="EBOOL" topologicalAddress="%Q0.4.11">
			<comment>Open aggregate 'bin 12'</comment>
		</variables>
		<variables name="W1_eau2" typeName="REAL" topologicalAddress="%MW8054">
			<comment>Value in kg for low point of the calibration for water weigher 2</comment>
		</variables>
		<variables name="CPT08_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.9.7.7"></variables>
		<variables name="AI_48_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Alarme_IDE500_Gra3" typeName="EBOOL" topologicalAddress="%M536"></variables>
		<variables name="NP_Eau2_A_Doser" typeName="INT"></variables>
		<variables name="tps_vidange_tapis_transfert" typeName="TIME"></variables>
		<variables name="conf_Trappes1_communes" typeName="EBOOL" topologicalAddress="%M463"></variables>
		<variables name="Poids_vise_deja_ecrit_Adj" typeName="BOOL"></variables>
		<variables name="DO_Mixer1_Gate1_Horn_ON" typeName="EBOOL" topologicalAddress="%Q0.3.34">
			<comment>Turn 'mixer 1' 'gate 1' horn ON (for a user-defined duration)</comment>
		</variables>
		<variables name="DI_Cem2_Weigher_PB_PLC_Open" typeName="EBOOL">
			<comment>Open 'cement 2' weigher' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Alarme_prot_mot_malax1" typeName="EBOOL" topologicalAddress="%M667">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="BCMix_DO_5" typeName="EBOOL" topologicalAddress="%M805">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Saturation_sup_Cim2" typeName="BOOL"></variables>
		<variables name="Cumul_Anh_auto" typeName="STOCK5"></variables>
		<variables name="Alarme_satur_sup_Eau1" typeName="EBOOL" topologicalAddress="%M796"></variables>
		<variables name="Conf_skip_pres_cap_att" typeName="EBOOL" topologicalAddress="%M412"></variables>
		<variables name="TOF_76_439" typeName="TOF"></variables>
		<variables name="fin_vidange_Gra" typeName="EBOOL"></variables>
		<variables name="Conf_eau1_seuil_mini" typeName="INT" topologicalAddress="%MW7978">
			<comment>Seuil de detarrage</comment>
		</variables>
		<variables name="BCMix_DO_41" typeName="EBOOL" topologicalAddress="%M841">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="BP_dosage_Adj_1" typeName="EBOOL" topologicalAddress="%M166"></variables>
		<variables name="DO_09" typeName="EBOOL" topologicalAddress="%Q0.3.8">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Poids_simu_Gra1" typeName="WORD" topologicalAddress="%MW5402"></variables>
		<variables name="Bit_validation_trappe2_malax2" typeName="EBOOL" topologicalAddress="%M488"></variables>
		<variables name="BCMix_Pds_Adj" typeName="ARRAY[1..5] OF INT" topologicalAddress="%MW4706">
			<comment>Affichage des valeurs de chaque bascule ADJ</comment>
		</variables>
		<variables name="Numero_pupitre_adjuvant_cumul" typeName="INT"></variables>
		<variables name="remplacement_eau1" typeName="EBOOL" topologicalAddress="%M480"></variables>
		<variables name="FM_Cde_Manu_PPE_08" typeName="R_TRIG"></variables>
		<variables name="LEC_ANA_Eau1" typeName="LEC_ANA"></variables>
		<variables name="DO_64" typeName="EBOOL" topologicalAddress="%Q0.3.63">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="FBI_76_493" typeName="VIB_BAL"></variables>
		<variables name="AI_6_Value_Module1" typeName="INT" topologicalAddress="%MW4417"></variables>
		<variables name="Aju_auto_Anh_Gra" typeName="EBOOL"></variables>
		<variables name="Vid_Cim2_En_Cours" typeName="EBOOL"></variables>
		<variables name="DI_Skip_Very_Low_Position" typeName="EBOOL">
			<comment>Skip in 'very low' position ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Agg_WH_Opened" typeName="EBOOL" topologicalAddress="%I0.1.13">
			<comment>Aggregate hopper bin open ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_11_Error" typeName="BOOL" topologicalAddress="%I0.8.2.ERR">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="BCMix_DO_108" typeName="EBOOL" topologicalAddress="%M908">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Cond_Vid_Dry5" typeName="BOOL"></variables>
		<variables name="conf_cim2_sens_fc_vidange" typeName="EBOOL" topologicalAddress="%M374"></variables>
		<variables name="Discordances_ACTIVE" typeName="EBOOL"></variables>
		<variables name="NP_Cim2_Aux1_A_Doser" typeName="INT"></variables>
		<variables name="DO_Cem1_Fine_Weighing" typeName="EBOOL" topologicalAddress="%Q0.3.20">
			<comment>Activate fine weighing on the current silo of the 'cement 1' weighing line ['0' or '1' for 'ON']</comment>
		</variables>
		<variables name="Alarme_satur_sup_TT_granulat" typeName="EBOOL" topologicalAddress="%M632"></variables>
		<variables name="Conf_Cem2_Ana_Step" typeName="INT">
			<comment>step for cement weigher 2</comment>
		</variables>
		<variables name="DI_53" typeName="EBOOL" topologicalAddress="%I0.1.52">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="TON_ARRET_MAL2_IN" typeName="TON"></variables>
		<variables name="TON_Attente_depress_sas_colorant" typeName="TON"></variables>
		<variables name="Auto_Vibreur_TT_Gra" typeName="BOOL"></variables>
		<variables name="valeur_instantanee_wattmetre2" typeName="INT" topologicalAddress="%MW4413"></variables>
		<variables name="Cde_simulation_cpt_adj5" typeName="BOOL"></variables>
		<variables name="Doser_cim_manu" typeName="BOOL"></variables>
		<variables name="Info_prot_mot_vis_Cendre" typeName="EBOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Recup_voie_ana_TT_Gra" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="Alarme_IDE500_Adj2" typeName="EBOOL" topologicalAddress="%M576"></variables>
		<variables name="TOF_feu_trappe1_mal1" typeName="TOF"></variables>
		<variables name="DI_Skip_SCHG_Sens_Fault" typeName="EBOOL">
			<comment>External fault on skip speed change sensors - Makes the skip moving slowly ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Alarme_Niveau_haut_ADJ_Comp9" typeName="EBOOL" topologicalAddress="%M654">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="BCMix_DO_12" typeName="EBOOL" topologicalAddress="%M812">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_ppe_nb_ppes" typeName="INT" topologicalAddress="%MW7522"></variables>
		<variables name="DI_94" typeName="EBOOL" topologicalAddress="%I0.2.29">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="BCMix_DO_111" typeName="EBOOL" topologicalAddress="%M911">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_cim2_seuil_maxi" typeName="INT" topologicalAddress="%MW7925"></variables>
		<variables name="Alarme_prot_tapis_pes_Gra" typeName="EBOOL" topologicalAddress="%M697">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="DIS_BAL_Anh" typeName="DIS_BAL"></variables>
		<variables name="DI_Water_Tank3_PB_PLC_Open" typeName="EBOOL">
			<comment>Open water 'tank 3'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="bit_ouverture_premier_comp" typeName="EBOOL"></variables>
		<variables name="Info_ctrle_rot_tapis_granulat1" typeName="EBOOL" topologicalAddress="%M45"></variables>
		<variables name="fm_seuil_vide_ciment" typeName="R_TRIG"></variables>
		<variables name="Gachee_EC_Eau2" typeName="BOOL"></variables>
		<variables name="SR_fin_vid_Cim1" typeName="SR"></variables>
		<variables name="W2_adj_Weight4" typeName="REAL" topologicalAddress="%MW8218">
			<comment>Value in kg for high point of the calibration for adm weigher 4</comment>
		</variables>
		<variables name="LEC_ARPEGE_Gra2" typeName="LEC_ARPEGE"></variables>
		<variables name="conf_mal2_presence_wattmetre" typeName="EBOOL" topologicalAddress="%M468"></variables>
		<variables name="AI_Value_Module_8" typeName="INTARR8a" topologicalAddress="%MW4468">
			<comment>Not used</comment>
		</variables>
		<variables name="Data_Mesomatic1" typeName="ARRAY[1..5] OF INT">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="LEC_BIN_BCD_Cim1" typeName="LEC_BIN_BCD"></variables>
		<variables name="AI_54_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Conf_adjuvant_basc_compartimente" typeName="EBOOL" topologicalAddress="%M356"></variables>
		<variables name="BCMix_DO_51" typeName="EBOOL" topologicalAddress="%M851">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_8" typeName="INT" topologicalAddress="%IW0.7.3">
			<comment>Old %IW23</comment>
		</variables>
		<variables name="Malaxeur1_ACTIVE" typeName="EBOOL"></variables>
		<variables name="TON_skip_bas_attente" typeName="TON"></variables>
		<variables name="Com_ETH_Arpege_TCP_ACTIVE" typeName="EBOOL"></variables>
		<variables name="P2_anh" typeName="INT" topologicalAddress="%MW8270">
			<comment>Value in points for high point of the calibration for anhydrite weigher</comment>
		</variables>
		<variables name="fin_malaxeur1_ouvert" typeName="EBOOL"></variables>
		<variables name="Pesee_Eau1_terminee" typeName="EBOOL"></variables>
		<variables name="Malax2" typeName="TIMEARR6"></variables>
		<variables name="AI_42_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Top_depart_Vid_Anh" typeName="EBOOL"></variables>
		<variables name="TON_Discordance_RAMPE_ET" typeName="TIME"></variables>
		<variables name="DO_Cem2_Weigher_Open" typeName="EBOOL">
			<comment>Open 'cement 2' weigher</comment>
		</variables>
		<variables name="DO_Plant_In_Soft_Manu" typeName="EBOOL">
			<comment>(Signal for external systems) The PLC is in software manual mode</comment>
		</variables>
		<variables name="FORCE_RESET_CPT" typeName="ARRAY[1..20] OF EBOOL"></variables>
		<variables name="Stock_Gra2_auto" typeName="BOOL"></variables>
		<variables name="Presence_Gra1" typeName="EBOOL"></variables>
		<variables name="Conf_Grease_PP_TON" typeName="DINT"></variables>
		<variables name="Idx_Vid_Dry_Eau2" typeName="INT"></variables>
		<variables name="Conf_presence_capt_Aspi" typeName="EBOOL" topologicalAddress="%M475"></variables>
		<variables name="Conf_Profibus_Manu_Station" typeName="BOOL"></variables>
		<variables name="Poids_simu_Cim1" typeName="WORD" topologicalAddress="%MW5404"></variables>
		<variables name="DO_Admix_Tank18_Open" typeName="EBOOL" topologicalAddress="%Q0.4.49">
			<comment>Open admixture 'tank 18'</comment>
		</variables>
		<variables name="Simuler_dosage_Anh" typeName="BOOL"></variables>
		<variables name="Cde_fermeture_trappe2_mal1" typeName="EBOOL" topologicalAddress="%M249"></variables>
		<variables name="Ppe_Etape3b_Ajustement" typeName="BOOLARR20">
			<comment>On utilise la QDC calculée avant (pas de recalcul)</comment>
		</variables>
		<variables name="Intro_Cim2_terminee" typeName="EBOOL"></variables>
		<variables name="AI_19" typeName="INT">
			<comment>Old %IW83</comment>
		</variables>
		<variables name="suite_index_introduction" typeName="INT"></variables>
		<variables name="Conf_Water_Weigher_FR" typeName="BOOL">
			<comment>1 valve, 1 sensor</comment>
		</variables>
		<variables name="DI_23" typeName="EBOOL" topologicalAddress="%I0.1.22">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="CPT05_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.4.1.3"></variables>
		<variables name="Temps_vid_Dry_Eau1" typeName="DINT"></variables>
		<variables name="Auto_Descente_Skip" typeName="BOOL"></variables>
		<variables name="AI_Admix_Weigher_5_Status" typeName="BOOL">
			<comment>Adress in M340 only</comment>
		</variables>
		<variables name="Conf_granulat_TON_pesage_fin" typeName="TIMEARR14" topologicalAddress="%MW6508"></variables>
		<variables name="Poids_instantane_Cim1" typeName="INT" topologicalAddress="%MW4659"></variables>
		<variables name="Conf_anhydrite_nb_silos" typeName="INT" topologicalAddress="%MW8279"></variables>
		<variables name="Presence_cde_pupitre_Adj" typeName="BOOL"></variables>
		<variables name="Info_skip_tres_haut" typeName="EBOOL" topologicalAddress="%M12"></variables>
		<variables name="Conf_granulat_limite_sous_dosage" typeName="INTARR14" topologicalAddress="%MW6466">
			<comment>Correction gachee sur gachee</comment>
		</variables>
		<variables name="DI_08" typeName="EBOOL" topologicalAddress="%I0.1.7">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="conf_eau1_val_actif_1" typeName="EBOOL" topologicalAddress="%M348"></variables>
		<variables name="Info_balance_Gra2_fermee" typeName="EBOOL" topologicalAddress="%M2"></variables>
		<variables name="DO_86" typeName="EBOOL" topologicalAddress="%Q0.4.21">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_18_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Vidange_Cim1" typeName="EBOOL"></variables>
		<variables name="TON_913" typeName="TON"></variables>
		<variables name="skip_defaut_externe_grde_vit" typeName="EBOOL" topologicalAddress="%M689"></variables>
		<variables name="BCMix_DO_77" typeName="EBOOL" topologicalAddress="%M877">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="FD_position_inter_tempo" typeName="F_TRIG"></variables>
		<variables name="ma0" typeName="INT"></variables>
		<variables name="Bit_validation_trappe1_malax2" typeName="EBOOL" topologicalAddress="%M487"></variables>
		<variables name="Detarage_Gra1" typeName="BOOL"></variables>
		<variables name="Conf_Skip_DI_Filter_Time" typeName="TIME">
			<comment>filter time on skip sensors</comment>
		</variables>
		<variables name="NP_initial_Cim1_A_Doser" typeName="INT"></variables>
		<variables name="Vidange_Gra1" typeName="EBOOL"></variables>
		<variables name="Poids_de_reference_Cim1" typeName="INT"></variables>
		<variables name="FM_BCMix_Cde_PPE" typeName="BOOLARR20"></variables>
		<variables name="Vidange_bloquee_Gra1" typeName="EBOOL" topologicalAddress="%M520"></variables>
		<variables name="EVT_COUNTER_LOW_ENABLE_CPT" typeName="BOOLARR20"></variables>
		<variables name="Lecture_Arpege_TCP_ACTIVE" typeName="EBOOL"></variables>
		<variables name="W1_adj_Weight3" typeName="REAL" topologicalAddress="%MW8204">
			<comment>Value in kg for low point of the calibration for adm weigher 3</comment>
		</variables>
		<variables name="Conf_Skip_DI_Filter" typeName="EBOOL">
			<comment>if set to one the filter on the skip sensors is activated</comment>
		</variables>
		<variables name="TG3_vide" typeName="EBOOL"></variables>
		<variables name="Conf_TT_cim_sens_fc_ouvert" typeName="EBOOL" topologicalAddress="%M443"></variables>
		<variables name="Stock_manu_Adj_7" typeName="BOOL"></variables>
		<variables name="fm_cumul_Adj_manu_stable" typeName="R_TRIG"></variables>
		<variables name="DI_Mixer1_Gate2_Closed" typeName="EBOOL" topologicalAddress="%I0.1.27">
			<comment>Mixer 1' Gate 2' closed ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_adjuvant_tps_max_pesage" typeName="TIME" topologicalAddress="%MW8102">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Info_arret_urgence_aux2" typeName="EBOOL" topologicalAddress="%M59"></variables>
		<variables name="Cde_dosage_Anh_buffer" typeName="EBOOL"></variables>
		<variables name="BCMix_DO_49" typeName="EBOOL" topologicalAddress="%M849">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_14" typeName="EBOOL" topologicalAddress="%Q0.3.13">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_76" typeName="EBOOL" topologicalAddress="%Q0.4.11">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_37" typeName="INT">
			<comment>Old %IW101</comment>
		</variables>
		<variables name="TON_TOFF_VIB_Eau1" typeName="TON_TOFF"></variables>
		<variables name="Idx_Vid_Dry_Adj" typeName="INT"></variables>
		<variables name="Stock_manu_Gra_6" typeName="BOOL"></variables>
		<variables name="Intro_Glace_encours_Gra1" typeName="BOOL"></variables>
		<variables name="AI_37_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="info_2_5_bars" typeName="EBOOL"></variables>
		<variables name="BCMix_DO_59" typeName="EBOOL" topologicalAddress="%M859">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_Agg1_Ana_Step" typeName="INT">
			<comment>step for aggregate weigher 1</comment>
		</variables>
		<variables name="Saturation_sup_Gra1" typeName="BOOL"></variables>
		<variables name="AI_33_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Conf_cim1_tps_stabilisation" typeName="TIME" topologicalAddress="%MW7876"></variables>
		<variables name="Conf_basc_granulat1_tps_reponse" typeName="TIME" topologicalAddress="%MW7754"></variables>
		<variables name="Cde_Marche_PPE_gen_EAU" typeName="BOOL"></variables>
		<variables name="DO_102" typeName="EBOOL" topologicalAddress="%Q0.4.37">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_26" typeName="EBOOL" topologicalAddress="%Q0.3.25">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Agg2_Weighing_Belt_SCTR" typeName="EBOOL">
			<comment>Speed control pulse detected on 'aggregate 2' weighing belt - Rises a 'slipping' auto-acknowledged non-blocking alarm ['1' for 'TRUE']</comment>
		</variables>
		<variables name="BCMix_DO_119" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_30_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="AI_Adj_Weight_1_Value" typeName="INT"></variables>
		<variables name="LEC_BIN_BCD_Gra1" typeName="LEC_BIN_BCD"></variables>
		<variables name="Conf_techno_basc_adj" typeName="INT" topologicalAddress="%MW8107">
			<comment>0=Bin 1=BCD 2=TCP_Arpege 3=Ana 4=Profibus</comment>
		</variables>
		<variables name="Conf_eau_nb_vibreur" typeName="INTARR4" topologicalAddress="%MW7140"></variables>
		<variables name="sens_pesage_fin_granulat2" typeName="EBOOL" topologicalAddress="%M322"></variables>
		<variables name="AI_70" typeName="INT">
			<comment>Old %IW134</comment>
		</variables>
		<variables name="Cde_dosage_generale_Anh" typeName="EBOOL"></variables>
		<variables name="IP_ARPEGE" typeName="Adresse_IP_M340"></variables>
		<variables name="Detarage_Adj" typeName="BOOL"></variables>
		<variables name="DI_33" typeName="EBOOL" topologicalAddress="%I0.1.32">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Ppe_Etape4_Consigne_atteinte" typeName="BOOLARR20"></variables>
		<variables name="AI_4_Lower_Saturation" typeName="BOOL" topologicalAddress="%IW0.6.3.1.6">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Vid_Gra_En_Cours" typeName="EBOOL"></variables>
		<variables name="Manu_Station_Cmd_Gate_Mode" typeName="EBOOL"></variables>
		<variables name="BCMix_DO_85" typeName="EBOOL" topologicalAddress="%M885">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Ecart_pesee_Eau2" typeName="INT" topologicalAddress="%MW4795">
			<comment>Ecart de pesee en unités de dosage pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="Surcharge_Cim2" typeName="BOOL"></variables>
		<variables name="Pulse_Manu_Station_Gate_Mode" typeName="EBOOL"></variables>
		<variables name="Info_prot_mot_malax1" typeName="EBOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Surcharge_Eau1" typeName="BOOL"></variables>
		<variables name="Conf_Grease_PP_TOFF" typeName="DINT"></variables>
		<variables name="Pres_prod_Eau1" typeName="BOOL"></variables>
		<variables name="BCMix_DO_25" typeName="EBOOL" topologicalAddress="%M825">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_57_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="DI_Water_Ramp_ON" typeName="EBOOL">
			<comment>Water ramp is ON - Additional equipment for dry batch ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Alarme_Niveau_haut_ADJ_Comp1" typeName="EBOOL" topologicalAddress="%M662">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="conf_ppe_tolerance_debit" typeName="INTARR20" topologicalAddress="%MW7502"></variables>
		<variables name="NP_Cim2" typeName="INT">
			<comment>Index de produit ds table de dosage</comment>
		</variables>
		<variables name="DI_Cem_Silo5_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.20">
			<comment>Open cement 'silo 5'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Demande_remplacement_ppe" typeName="BOOLARR20" topologicalAddress="%MW5470"></variables>
		<variables name="BALANCE_Gra2_M340" typeName="ARRAY[1..16] OF EBOOL">
			<comment>Adresse en M340 uniquement</comment>
		</variables>
		<variables name="DO_92" typeName="EBOOL" topologicalAddress="%Q0.4.27">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_Agg_Bin2_Open" typeName="EBOOL" topologicalAddress="%Q0.4.1">
			<comment>Open aggregate 'bin 2'</comment>
		</variables>
		<variables name="Idx_P1" typeName="INT"></variables>
		<variables name="consigne_ppe6" typeName="INT" topologicalAddress="%MW5948"></variables>
		<variables name="DO_Mixer2_Gate2_Horn_ON" typeName="EBOOL">
			<comment>Turn 'mixer 2' 'gate 2' horn ON (for a user-defined duration)</comment>
		</variables>
		<variables name="Conf_granulat_pesage_fin" typeName="INTARR14" topologicalAddress="%MW6494"></variables>
		<variables name="TON_seuil_vide_Mal2" typeName="TON"></variables>
		<variables name="Conf_silo_anhydrite_nb_vibreur" typeName="INT" topologicalAddress="%MW7706"></variables>
		<variables name="Depart_verif_Eau2" typeName="BOOL"></variables>
		<variables name="Alarme_Com_HMS_Profibus_Gra1" typeName="EBOOL" topologicalAddress="%M681">
			<comment>(Roumanie) Defaut : esclave Profibus ne rÃ©ponds pas (esclave 2)</comment>
		</variables>
		<variables name="Ajustement_auto_eau" typeName="BOOLARR4" topologicalAddress="%MW7176"></variables>
		<variables name="CPT05_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.9.4.2"></variables>
		<variables name="Idx1" typeName="INT"></variables>
		<variables name="Cumul_Anh_manu_deptstab" typeName="BOOL"></variables>
		<variables name="bit_valide_TT_cim" typeName="EBOOL"></variables>
		<variables name="conf_granulat1_bcd" typeName="EBOOL" topologicalAddress="%M310">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="BALANCE_Gra2" typeName="WORD">
			<comment>Adresse en Qt uniquement</comment>
		</variables>
		<variables name="AI_27" typeName="INT">
			<comment>Old %IW91</comment>
		</variables>
		<variables name="Intro_Eau1_terminee" typeName="EBOOL"></variables>
		<variables name="Poids_deja_pese_Adj" typeName="INT" topologicalAddress="%MW4593"></variables>
		<variables name="Numeros_produits_cim1" typeName="INT"></variables>
		<variables name="DI_Admix_Weigher_Cpt1_Closed" typeName="EBOOL">
			<comment>Admixture weigher 'compartment 1' emptying valve closed - For Romanian-type admixture process (1 weigher, 2 compartments but 1 only destination, and each compartment has a 'closed' sensor) ['0' or '1' for 'TRUE' (must be the same on both valves)]</comment>
		</variables>
		<variables name="Vid_seq_Anh" typeName="EBOOL"></variables>
		<variables name="FM_dos_pupitre_PPE_17" typeName="R_TRIG"></variables>
		<variables name="Manu_cde_montee_skip" typeName="EBOOL" topologicalAddress="%M718"></variables>
		<variables name="conf_eau1_binaire" typeName="EBOOL" topologicalAddress="%M346">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="FM_Cde_Manu_PPE_11" typeName="R_TRIG"></variables>
		<variables name="DI_Admix_Tank7_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.38">
			<comment>Open admixture 'tank 7'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Dosage_simultane_Cim2" typeName="BOOL"></variables>
		<variables name="consigne_ppe19" typeName="INT" topologicalAddress="%MW5980"></variables>
		<variables name="msg_mal2_non_vide_vid_auto" typeName="EBOOL" topologicalAddress="%M638"></variables>
		<variables name="BCMix_DO_101" typeName="EBOOL" topologicalAddress="%M901">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_34_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Valeurs_envoi_TR1" typeName="ARRAY[1..25] OF INT" topologicalAddress="%MW6120">
			<comment>Tableau contenant les valeurs envoyées</comment>
		</variables>
		<variables name="TOF_77_223" typeName="TOF"></variables>
		<variables name="Alarme_Glace" typeName="EBOOL" topologicalAddress="%M690"></variables>
		<variables name="FD_manu_2_Anh" typeName="F_TRIG"></variables>
		<variables name="W1_TT_gra" typeName="REAL" topologicalAddress="%MW8410">
			<comment>Value in kg for low point of the calibration for hopper bin</comment>
		</variables>
		<variables name="Mem_vidange_Adj2" typeName="BOOL"></variables>
		<variables name="Alarme_vidange_Adj" typeName="EBOOL" topologicalAddress="%M570"></variables>
		<variables name="Petite_vitesse_Gra2" typeName="EBOOL"></variables>
		<variables name="AI_11" typeName="INT" topologicalAddress="%IW0.8.2">
			<comment>Old %IW75</comment>
		</variables>
		<variables name="DI_Admix_Tank4_PB_PLC_Open" typeName="EBOOL">
			<comment>Open admixture 'tank 4'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Manu_Gra_tps_max_pesage" typeName="TIME"></variables>
		<variables name="DI_Agg_Bin12_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.11">
			<comment>Open aggregate 'bin 12'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Alarme_satur_sup_Cim2" typeName="EBOOL" topologicalAddress="%M768"></variables>
		<variables name="Cumul_Cim_manu_deptstab" typeName="BOOL"></variables>
		<variables name="CPT17_FORCE_SYNC" typeName="EBOOL"></variables>
		<variables name="Ppe_Etape8_Ecriture_CR" typeName="BOOLARR20"></variables>
		<variables name="Camion_OK_Dosages_OK" typeName="EBOOL"></variables>
		<variables name="BP_dosage_Cim_2" typeName="EBOOL" topologicalAddress="%M157"></variables>
		<variables name="Com_ETH_Arpege" typeName="Com_ModbusTCP_M340"></variables>
		<variables name="Debug_MotStatus6_Word" typeName="WORD" topologicalAddress="%MW4513"></variables>
		<variables name="DI_Admix_Emergency_Stop" typeName="EBOOL">
			<comment>Admixture area' emergency stop is pushed - Displays an alarm - To be used with 'ETOR_etat_arret_urgence' ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Admix_Cpt1_High_Level" typeName="EBOOL">
			<comment>High level detected in 'compartment 1' of the admixture weigher - An alarm makes the admixture 'tank 1' closed - For Romanian-type and Indian-type admixture processes ['1' for 'TRUE']</comment>
		</variables>
		<variables name="FM_dos_ManuLog_PPE_3" typeName="R_TRIG"></variables>
		<variables name="DI_Admix_Weigher_Cpt8_PB_PLC_Op" typeName="EBOOL">
			<comment>Open admixture weigher 'compartment 8'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Pesee_bloquee_Gra1" typeName="EBOOL" topologicalAddress="%M511"></variables>
		<variables name="Conf_Mixer2_Auto_Start" typeName="EBOOL">
			<comment>Enable Mixer 2 automatic Start</comment>
		</variables>
		<variables name="NP_Cim1_Aux1_A_Doser" typeName="INT"></variables>
		<variables name="trappe_2_malaxeur_2" typeName="TRAP_MAL"></variables>
		<variables name="Numero_Gra_pupitre" typeName="NUM_PUP">
			<comment>declarations granulats*)</comment>
		</variables>
		<variables name="NG_Cim1" typeName="INT" topologicalAddress="%MW4524"></variables>
		<variables name="Info_presence_produit_ppe" typeName="BOOLARR20" topologicalAddress="%MW5392">
			<comment>1=produit adj / 0=produit eau</comment>
		</variables>
		<variables name="AI_38_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Info_prot_PPE_Graisse1" typeName="EBOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="AI_12_Lower_Saturation" typeName="BOOL" topologicalAddress="%IW0.8.3.1.6">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="DI_70" typeName="EBOOL" topologicalAddress="%I0.2.5">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="CPT09_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.10.0.2"></variables>
		<variables name="Petite_vitesse_Cim2" typeName="EBOOL"></variables>
		<variables name="Saturation_sup_Anh" typeName="BOOL"></variables>
		<variables name="Info_prot_Thermique_malax1" typeName="EBOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Info_skip_grde_vit_haut" typeName="EBOOL" topologicalAddress="%M61"></variables>
		<variables name="Pup_Cde_vid_basc_Eau2" typeName="BOOL"></variables>
		<variables name="DI_Agg_Bin2_PB_PLC_Open" typeName="EBOOL">
			<comment>Open aggregate 'bin 2'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Cde_vidange_bascule_Anh" typeName="EBOOL" topologicalAddress="%M230"></variables>
		<variables name="W2_cim2" typeName="REAL" topologicalAddress="%MW7952">
			<comment>Value in kg for high point of the calibration for cement weigher 2</comment>
		</variables>
		<variables name="DO_Tank2_Measure_Busy" typeName="EBOOL">
			<comment>(Signal for solid content measure system) The water 'tank 4' valve is commanded open (delayed)</comment>
		</variables>
		<variables name="Manu_cde_vibreur_TT_cim" typeName="EBOOL" topologicalAddress="%M738"></variables>
		<variables name="CPT18_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="Stock_manu_Adj_12" typeName="BOOL"></variables>
		<variables name="pause_temps_malaxage_2" typeName="EBOOL"></variables>
		<variables name="Info_prot_mot_Dos_ADJ" typeName="EBOOL">
			<comment>(Inde)</comment>
		</variables>
		<variables name="Defaut_Mal2" typeName="EBOOL"></variables>
		<variables name="No_Cpt_pour_anticipation" typeName="INT"></variables>
		<variables name="Ordre_intro_Gra2" typeName="BOOL"></variables>
		<variables name="CGG_activee_Adj" typeName="BOOL"></variables>
		<variables name="Poids_real_Adj2" typeName="REAL" topologicalAddress="%MW4692">
			<comment>Poids adjuvant 2 en reel</comment>
		</variables>
		<variables name="TON_266" typeName="TON"></variables>
		<variables name="Manu_Tps_dosage_Cim" typeName="TIME" topologicalAddress="%MW5538"></variables>
		<variables name="Flags_pesage_Gra2" typeName="flags_pesage_struct"></variables>
		<variables name="Voyant_AU2" typeName="BOOL"></variables>
		<variables name="Cumul_Gra1_auto_deptstab" typeName="BOOL"></variables>
		<variables name="Conf_Eau1_retard_ferm_balance" typeName="TIME" topologicalAddress="%MW7986">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="DO_Admix_Cpt5_PP_ON" typeName="EBOOL">
			<comment>Run the admixture weigher 'compartment 5' emptying pump - For the Romanian-type admixture process</comment>
		</variables>
		<variables name="CTU_GRAISSAGE" typeName="CTU_DINT"></variables>
		<variables name="FM_Cde_Manu_PPE_01" typeName="R_TRIG"></variables>
		<variables name="AI_42_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="CPT01_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.9.0.2"></variables>
		<variables name="DO_Cem_Silo1_Open" typeName="EBOOL" topologicalAddress="%Q0.4.16">
			<comment>Open cement 'silo 1'</comment>
		</variables>
		<variables name="Intro_Eau2_terminee" typeName="EBOOL"></variables>
		<variables name="AI_48" typeName="INT">
			<comment>Old %IW112</comment>
		</variables>
		<variables name="Cde_ouverture_trappe1_mal2" typeName="EBOOL" topologicalAddress="%M250"></variables>
		<variables name="Pesee_bloquee_Adj" typeName="EBOOL" topologicalAddress="%M564"></variables>
		<variables name="DO_Color_XV3_Open" typeName="EBOOL">
			<comment>Open the air valve 'XV3' of the colourant hopper - Pressurises the hopper for introduction into the mixer - Made for an independant colouring machine in Herriot, France.</comment>
		</variables>
		<variables name="Amp_Eau1" typeName="REAL">
			<comment>valeur en Ampere (debug)</comment>
		</variables>
		<variables name="Info_prot_mot_vib_Cim" typeName="EBOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="pas_de_granulat_a_doser" typeName="BOOL"></variables>
		<variables name="AI_35_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Introduction_Anh_terminee" typeName="EBOOL"></variables>
		<variables name="Introduction_Comp_Adj_encours" typeName="EBOOL"></variables>
		<variables name="Alarme_vidange_TT_cim" typeName="EBOOL" topologicalAddress="%M612"></variables>
		<variables name="AI_8_Error" typeName="BOOL" topologicalAddress="%I0.7.3.ERR">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Introduction_Cim1_terminee" typeName="EBOOL"></variables>
		<variables name="Flags_pesage_Anh" typeName="flags_pesage_struct"></variables>
		<variables name="Flags_pesage_Eau1" typeName="flags_pesage_struct"></variables>
		<variables name="AI_14_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Alarme_detare_Gra1" typeName="EBOOL" topologicalAddress="%M521"></variables>
		<variables name="DI_78" typeName="EBOOL" topologicalAddress="%I0.2.13">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Cde_dosage_Adj" typeName="BOOLARR20" topologicalAddress="%MW4729">
			<comment>Commande adj bascule</comment>
		</variables>
		<variables name="Conf_mal2_tps_stab_watt_plast" typeName="TIME" topologicalAddress="%MW8568"></variables>
		<variables name="AI_41_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="BCMix_DO_35" typeName="EBOOL" topologicalAddress="%M835">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Cde_ouverture_trappe2_mal2" typeName="EBOOL" topologicalAddress="%M252"></variables>
		<variables name="FM_skip_gde_vitesse" typeName="R_TRIG"></variables>
		<variables name="COUNTER_LOW_CPT" typeName="BOOLARR20"></variables>
		<variables name="DO_41" typeName="EBOOL" topologicalAddress="%Q0.3.40">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="cde_feu_rouge_trappe2_Mal1" typeName="BOOL"></variables>
		<variables name="TON_PRESSION_PPE_GRAISSE1" typeName="TON"></variables>
		<variables name="Pup_Cde_Not_Used" typeName="ARRAY[1..4] OF INT">
			<comment>Bouton poussoire affectée au bits pupitre non utilisés</comment>
		</variables>
		<variables name="Introduction_Eau2_terminee" typeName="EBOOL"></variables>
		<variables name="Conf_Admix_Weigher_FR" typeName="BOOL">
			<comment>1 valve, 1 sensor</comment>
		</variables>
		<variables name="Stock_manu_Gra_10" typeName="BOOL"></variables>
		<variables name="Poids_real_Cim2" typeName="REAL" topologicalAddress="%MW4684">
			<comment>Poids ciment 2 en reel</comment>
		</variables>
		<variables name="Statut_Cde_BCMix_ppe" typeName="INT"></variables>
		<variables name="Conf_eau_tps_apres_coulant" typeName="TIMEARR4" topologicalAddress="%MW7168"></variables>
		<variables name="DI_Water1_Weigher_Closed" typeName="EBOOL" topologicalAddress="%I0.1.6">
			<comment>Water 1' weigher closed ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="TON_SIMUL_XV2_Ouvert" typeName="TON"></variables>
		<variables name="Tempo_vibreur_TT_granulat" typeName="TP"></variables>
		<variables name="Cde_vidange_bascule_Cim2" typeName="EBOOL" topologicalAddress="%M262"></variables>
		<variables name="M340_Actif" typeName="BOOL"></variables>
		<variables name="Wip" typeName="EBOOL"></variables>
		<variables name="FM_dos_pupitre_PPE_6" typeName="R_TRIG"></variables>
		<variables name="Conf_granulat2_tps_antitalutage" typeName="TIME" topologicalAddress="%MW7846"></variables>
		<variables name="conf_Eau2_val_actif_1" typeName="EBOOL" topologicalAddress="%M387"></variables>
		<variables name="AI_11_Lower_Saturation" typeName="BOOL" topologicalAddress="%IW0.8.2.1.6">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Vid_Eau1_Terminee" typeName="EBOOL"></variables>
		<variables name="Conf_TT_Cim" typeName="EBOOL" topologicalAddress="%M440"></variables>
		<variables name="BP_dosage_Gra_9" typeName="EBOOL" topologicalAddress="%M150"></variables>
		<variables name="Cumul_Eau_manu_stable" typeName="BOOL"></variables>
		<variables name="DI_Admix_Tank15_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.46">
			<comment>Open admixture 'tank 15'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Mixer1_PB_PLC_ON" typeName="EBOOL">
			<comment>Switch 'mixer 1' ON' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="CGG_activee_Cim1" typeName="BOOL"></variables>
		<variables name="DI_03" typeName="EBOOL" topologicalAddress="%I0.1.2">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="CPT12_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.3.1.3"></variables>
		<variables name="AI_56_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="inversion_info_vidange_vers_mal1" typeName="EBOOL" topologicalAddress="%M451"></variables>
		<variables name="Defaut_sequence_Cim2" typeName="EBOOL" topologicalAddress="%M951"></variables>
		<variables name="Surcharge_Adj2" typeName="BOOL">
			<comment>Non utilise</comment>
		</variables>
		<variables name="P2_adj_Weight3" typeName="INT" topologicalAddress="%MW8210">
			<comment>Value in point for high point of the calibration for adm weigher 3</comment>
		</variables>
		<variables name="conf_mal1_presence_wattmetre" typeName="EBOOL" topologicalAddress="%M457"></variables>
		<variables name="Bit_Gachee_dry" typeName="BOOL"></variables>
		<variables name="Conf_eau_TON_vibreur" typeName="TIMEARR4" topologicalAddress="%MW7124"></variables>
		<variables name="Pup_Cde_PV_Eau1" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="CPT15_COMPARE_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.6.0.5"></variables>
		<variables name="Pup_Cde_fermeture_trappe1_mal1" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="DO_57" typeName="EBOOL" topologicalAddress="%Q0.3.56">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="FBI_77_854" typeName="Seq_Vid_Basc"></variables>
		<variables name="Conf_eau2_filtre_Coef" typeName="INT" topologicalAddress="%MW8049">
			<variableInit value="100"></variableInit>
		</variables>
		<variables name="AI_34_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="DIS_BAL_Eau1" typeName="DIS_BAL"></variables>
		<variables name="Info_skip_grde_vit_bas" typeName="EBOOL" topologicalAddress="%M60"></variables>
		<variables name="DI_Agg_Bin5_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.4">
			<comment>Open aggregate 'bin 5'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_44_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Vidange_Cim2" typeName="EBOOL"></variables>
		<variables name="Cumul_pesee_ACTIVE" typeName="EBOOL"></variables>
		<variables name="TG1_vide" typeName="EBOOL"></variables>
		<variables name="CPT02_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="Conf_cim1_nb_silos" typeName="INT" topologicalAddress="%MW7908"></variables>
		<variables name="Dosage_manu_pupitre_Gra" typeName="EBOOL"></variables>
		<variables name="AI_56" typeName="INT">
			<comment>Old %IW120</comment>
		</variables>
		<variables name="Conf_skip_tps_reponse" typeName="TIME" topologicalAddress="%MW8370"></variables>
		<variables name="Faire_vidange_Cim2" typeName="BOOL"></variables>
		<variables name="Simu_dosage_en_cours_Anh" typeName="BOOL"></variables>
		<variables name="FM_Cde_Manu_PPE_19" typeName="R_TRIG"></variables>
		<variables name="CPT16_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.10.7.6"></variables>
		<variables name="DIS_BAL_Cim1" typeName="DIS_BAL"></variables>
		<variables name="AI_Value_Water2" typeName="INT"></variables>
		<variables name="Conf_cim1_limite_sous_dosage" typeName="INTARR6" topologicalAddress="%MW6880">
			<comment>Correction gachee sur gachee</comment>
		</variables>
		<variables name="BCMix_DO_109" typeName="EBOOL" topologicalAddress="%M909">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="BP_dosage_Adj_2" typeName="EBOOL" topologicalAddress="%M167"></variables>
		<variables name="TON_TOFF_AJU_Gra1" typeName="TON_TOFF"></variables>
		<variables name="Vidange_en_cours_Mal2" typeName="EBOOL"></variables>
		<variables name="Produit_remplacement_Cim2" typeName="INT" topologicalAddress="%MW5505"></variables>
		<variables name="DO_Admix_Tank10_Open" typeName="EBOOL" topologicalAddress="%Q0.4.41">
			<comment>Open admixture 'tank 10'</comment>
		</variables>
		<variables name="DI_42" typeName="EBOOL" topologicalAddress="%I0.1.41">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="AI_Higher_Saturation" typeName="ARRAY[1..72] OF BOOL">
			<comment>Higher saturation of the analogue signal.</comment>
		</variables>
		<variables name="LC_Eau2_A_Doser" typeName="INT"></variables>
		<variables name="Presence_prod_Eau1" typeName="EBOOL"></variables>
		<variables name="Stock_manu_Adj_4" typeName="BOOL"></variables>
		<variables name="Alarme_Niveau_haut_ADJ_Comp10" typeName="EBOOL" topologicalAddress="%M653">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="TT_granulat_stable" typeName="EBOOL"></variables>
		<variables name="Manu_Tps_ferm_trappe" typeName="TIME" topologicalAddress="%MW5548"></variables>
		<variables name="suite_index_sortie_adjuvant" typeName="INT"></variables>
		<variables name="Manu_Log_Vibreur_TT_gra" typeName="BOOL"></variables>
		<variables name="DI_54" typeName="EBOOL" topologicalAddress="%I0.1.53">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Limite_correction_Anh" typeName="INT"></variables>
		<variables name="Conf_eau2_TON_vibreur_bal" typeName="TIME" topologicalAddress="%MW8044"></variables>
		<variables name="DI_PB_Pro_Horn_Activation" typeName="EBOOL">
			<comment>Horn' pushbutton is pushed - Direct-to-process console(France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_Agg_Bin11_Open" typeName="EBOOL" topologicalAddress="%Q0.4.10">
			<comment>Open aggregate 'bin 11'</comment>
		</variables>
		<variables name="AI_52_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="CPT15_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.10.6.2"></variables>
		<variables name="Prerequis_comm" typeName="EBOOL"></variables>
		<variables name="TON_mini_malaxage_mal2" typeName="TON_P"></variables>
		<variables name="DO_Mixer2_Gate1_Horn_ON" typeName="EBOOL">
			<comment>Turn 'mixer 2' 'gate 1' horn ON (for a user-defined duration)</comment>
		</variables>
		<variables name="LEC_BIN_BCD_TT_cim" typeName="LEC_BIN_BCD"></variables>
		<variables name="AI_7_Error" typeName="BOOL" topologicalAddress="%I0.7.2.ERR">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="mot2_temps_mini_malaxage1" typeName="WORD"></variables>
		<variables name="Etat_balance_Eau2" typeName="EBOOL"></variables>
		<variables name="decalage_ppe_adj2" typeName="EBOOL"></variables>
		<variables name="Valeurs_recu_TR1" typeName="ARRAY[1..100] OF INT" topologicalAddress="%MW6020">
			<comment>Tableau contenant les valeurs recues</comment>
		</variables>
		<variables name="TON_26" typeName="TON"></variables>
		<variables name="Vidange_en_cours_Gra2" typeName="EBOOL"></variables>
		<variables name="Info_balance_Adj_fermee" typeName="EBOOL" topologicalAddress="%M5"></variables>
		<variables name="Poids_simu_Anh" typeName="WORD" topologicalAddress="%MW5410"></variables>
		<variables name="Alarme_prot_mot_Dos_ADJ" typeName="EBOOL" topologicalAddress="%M694">
			<comment>(Inde)</comment>
		</variables>
		<variables name="Extract_dest_Mal2" typeName="EBOOL"></variables>
		<variables name="DI_Water1_Weigher_PB_PLC_Open" typeName="EBOOL">
			<comment>Open 'water 1' weigher' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_13" typeName="EBOOL" topologicalAddress="%I0.1.12">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Presence_cde_pupitre_Eau" typeName="BOOL"></variables>
		<variables name="DI_Cem_Weigher_CBT" typeName="EBOOL">
			<comment>Cement weigher and silos extraction aid circuit breaker tripped - A non-blocking alarm appears. An eventual 'flow fault' may stop the weighing ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Skip_SCHG_High_Position" typeName="EBOOL">
			<comment>Skip in high position for speed change (if this sensor doesn't exist, the 'intermediary' position sensor should be used instead) ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Lancement_transfert" typeName="EBOOL"></variables>
		<variables name="BCMix_DO_66" typeName="EBOOL" topologicalAddress="%M866">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Introduction_Cim2_terminee" typeName="EBOOL"></variables>
		<variables name="Conf_adjuvant_basc_seuil_maxi" typeName="INT" topologicalAddress="%MW8085"></variables>
		<variables name="AI_12_Error" typeName="BOOL" topologicalAddress="%I0.8.3.ERR">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="BP_dosage_Eau_2" typeName="EBOOL" topologicalAddress="%M163"></variables>
		<variables name="Stock_manu_Eau_3" typeName="BOOL"></variables>
		<variables name="LEC_ARPEGE_Gra3" typeName="LEC_ARPEGE"></variables>
		<variables name="Debug_MotStatus2_Word" typeName="WORD" topologicalAddress="%MW4509"></variables>
		<variables name="Depassement_poids_Ppe" typeName="INTARR20"></variables>
		<variables name="Bit_validation_trappe2_malax1" typeName="EBOOL" topologicalAddress="%M486"></variables>
		<variables name="Cde_validation_boite_noire" typeName="EBOOL" topologicalAddress="%M254"></variables>
		<variables name="BCMix_DO_13" typeName="EBOOL" topologicalAddress="%M813">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Cde_petite_vitesse_Cim2" typeName="EBOOL" topologicalAddress="%M268"></variables>
		<variables name="Saturation_inf_Adj_Weight3" typeName="BOOL"></variables>
		<variables name="Ppe_Etape5_Apres_coulant" typeName="BOOLARR20"></variables>
		<variables name="memo_skip_attente" typeName="EBOOL"></variables>
		<variables name="Recup_voie_ana_Adj_Weight4" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="P2_TT_gra" typeName="INT" topologicalAddress="%MW8416">
			<comment>Value in points for the high point of the calibration for hopper bin</comment>
		</variables>
		<variables name="Conf_techno_basc_TP_skip_gra2" typeName="INT" topologicalAddress="%MW7830">
			<comment>0=Bin 1=BCD 2=TCP_Arpege 3=Ana 4=Profibus</comment>
		</variables>
		<variables name="Saturation_sup_Cim1" typeName="BOOL"></variables>
		<variables name="Stock_Adj_manu" typeName="BOOL"></variables>
		<variables name="Poids_demande_Eau2" typeName="INT" topologicalAddress="%MW4560"></variables>
		<variables name="Conf_ppe_tps_detect_bloquee" typeName="INT" topologicalAddress="%MW8119"></variables>
		<variables name="AI_1_Error" typeName="BOOL" topologicalAddress="%I0.6.0.ERR">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="Dosage_ppe_en_cours_Section392" typeName="EBOOL"></variables>
		<variables name="DO_122" typeName="EBOOL" topologicalAddress="%Q0.4.57">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Manu_Log_Marche_Tapis_Trans" typeName="BOOL"></variables>
		<variables name="TON_Attente_fin_tranfert_color" typeName="TON"></variables>
		<variables name="NG_Anh" typeName="INT" topologicalAddress="%MW4530"></variables>
		<variables name="Poids_simu_Eau2" typeName="WORD" topologicalAddress="%MW5407"></variables>
		<variables name="Conf_cim1_nb_vibreur_bal" typeName="INT" topologicalAddress="%MW7892">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="CPT01_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.0.1.3"></variables>
		<variables name="CPT15_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.10.6.6"></variables>
		<variables name="AI_40" typeName="INT">
			<comment>Old %IW104</comment>
		</variables>
		<variables name="remplacement_granulat2" typeName="EBOOL" topologicalAddress="%M478"></variables>
		<variables name="Manu_cde_fermeture_trappe_1_mal1" typeName="EBOOL" topologicalAddress="%M725"></variables>
		<variables name="Poids_demande_Ppe" typeName="INTARR20" topologicalAddress="%MW4564"></variables>
		<variables name="conf_anhydrite_avec_sequence" typeName="EBOOL" topologicalAddress="%M401"></variables>
		<variables name="DI_Mixer1_Gate1_Closed" typeName="EBOOL" topologicalAddress="%I0.1.25">
			<comment>Mixer 1' Gate 1' closed ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Vidange_bloquee_Eau1" typeName="EBOOL" topologicalAddress="%M597"></variables>
		<variables name="TON_seuil_vide_Adj" typeName="TON"></variables>
		<variables name="BP_dosage_Adj_14" typeName="EBOOL" topologicalAddress="%M179"></variables>
		<variables name="DI_85" typeName="EBOOL" topologicalAddress="%I0.2.20">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="DO_08" typeName="EBOOL" topologicalAddress="%Q0.3.7">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_Admix_Status_4" typeName="EBOOL"></variables>
		<variables name="consigne_ppe11" typeName="INT" topologicalAddress="%MW5961"></variables>
		<variables name="Cde_Marche_Aspi" typeName="BOOL"></variables>
		<variables name="voie_basc_Eau1" typeName="INT" topologicalAddress="%MW7999">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="Numero_produit_Gra1_aux1" typeName="INT"></variables>
		<variables name="BCMix_DO_122" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="BCMix_DO_95" typeName="EBOOL" topologicalAddress="%M895">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Agg_WH_Empty" typeName="EBOOL">
			<comment>Aggregate hopper bin empty ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Color_Machine_OK" typeName="EBOOL">
			<comment>Colouring machine is OK - Made for an independant colouring machine in Herriot, France. ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_TT_cim_pres_vibreur" typeName="EBOOL" topologicalAddress="%M445"></variables>
		<variables name="AI_Error" typeName="ARRAY[1..72] OF BOOL">
			<comment>Error with the analog channel.</comment>
		</variables>
		<variables name="Conf_cim2_tps_stabilisation" typeName="TIME" topologicalAddress="%MW7928"></variables>
		<variables name="AI_5_Higher_Saturation" typeName="BOOL" topologicalAddress="%IW0.7.0.1.5">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Stock_manu_Cim_6" typeName="BOOL"></variables>
		<variables name="DO_Air_Compr_ON" typeName="EBOOL" topologicalAddress="%Q0.3.33">
			<comment>Turn the air compressor ON - Controlable with a profibus console only</comment>
		</variables>
		<variables name="Conf_eau_TOFF_ajustement" typeName="TIMEARR4" topologicalAddress="%MW7152"></variables>
		<variables name="BCMix_DO_4" typeName="EBOOL" topologicalAddress="%M804">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Vidange_Dry_Cim1" typeName="Vidange_Basc_Dry2"></variables>
		<variables name="Conf_tps_retard_Aspi" typeName="TIME" topologicalAddress="%MW8650"></variables>
		<variables name="Manu_cde_ouverture_trappe_1_mal2" typeName="EBOOL" topologicalAddress="%M728"></variables>
		<variables name="Ajustement_auto_anhydrite" typeName="EBOOL" topologicalAddress="%M300"></variables>
		<variables name="AI_Admix_Weigher_1_Status" typeName="BOOL">
			<comment>Adress in M340 only (%I0.6.0.ERR)</comment>
		</variables>
		<variables name="Manu_Log_Vibreur_Eau" typeName="BOOL"></variables>
		<variables name="Saturation_sup_Adj_Weight4" typeName="BOOL"></variables>
		<variables name="BCMix_DO_40" typeName="EBOOL" topologicalAddress="%M840">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="mot_entree2_ccr2" typeName="WORD" topologicalAddress="%MW5946"></variables>
		<variables name="Conf_multipl_Eau2" typeName="REAL" topologicalAddress="%MW8062"></variables>
		<variables name="Introduction_Eau2_encours" typeName="EBOOL"></variables>
		<variables name="Conf_granulat_TOFF_ajustement" typeName="TIMEARR14" topologicalAddress="%MW6662"></variables>
		<variables name="DI_Cem_Extraction_Aid_PB_PLC_ON" typeName="EBOOL">
			<comment>Aid extraction on cement lines' pushbutton pressed (vibrator, air shock, …) - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_113" typeName="EBOOL" topologicalAddress="%Q0.4.48">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TP_boite_noire" typeName="TP"></variables>
		<variables name="Numero_produit_Cim1_initial" typeName="INT"></variables>
		<variables name="bit_conf_anhy_8" typeName="EBOOL"></variables>
		<variables name="Sequence_dry_termine" typeName="EBOOL"></variables>
		<variables name="DO_Mixer1_Gate1_Open" typeName="EBOOL" topologicalAddress="%Q0.3.13">
			<comment>Open 'mixer 1' 'door 1'</comment>
		</variables>
		<variables name="Data_Mesomatic2" typeName="ARRAY[1..5] OF INT">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Gachee_Suivante_Cim2" typeName="BOOL"></variables>
		<variables name="Recup_voie_ana_Cim2" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="DI_61" typeName="EBOOL" topologicalAddress="%I0.1.60">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="CPT12_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.10.3.6"></variables>
		<variables name="FM_Cde_Manu_PPE_09" typeName="R_TRIG"></variables>
		<variables name="Tapis_transfert_vitesse_rotation" typeName="EBOOL" topologicalAddress="%M591"></variables>
		<variables name="Cond_Vid_Dry4" typeName="BOOL"></variables>
		<variables name="DO_Water2_Weigher_Open" typeName="EBOOL">
			<comment>Open 'water 2' weigher</comment>
		</variables>
		<variables name="Cde_anti_talutage_G1" typeName="EBOOL"></variables>
		<variables name="voie_basc_Gra3" typeName="INT" topologicalAddress="%MW7870">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="DO_49" typeName="EBOOL" topologicalAddress="%Q0.3.48">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Dosages_ppe_termine_Section392" typeName="ARRAY[1..20] OF EBOOL"></variables>
		<variables name="DO_67" typeName="EBOOL" topologicalAddress="%Q0.4.2">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Debug_Controle1" typeName="EBOOL" topologicalAddress="%M651"></variables>
		<variables name="AI_66" typeName="INT">
			<comment>Old %IW130</comment>
		</variables>
		<variables name="Info_arret_urgence_malaxeur" typeName="EBOOL" topologicalAddress="%M54"></variables>
		<variables name="DI_Water2_Weigher_PB_PLC_Open" typeName="EBOOL">
			<comment>Open 'water 2' weigher' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_71" typeName="EBOOL" topologicalAddress="%I0.2.6">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Info_arret_urgence_pupitre" typeName="EBOOL" topologicalAddress="%M57"></variables>
		<variables name="Conf_TT_granulat_tps_stab" typeName="TIME" topologicalAddress="%MW8390">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="BCMix_DO_48" typeName="EBOOL" topologicalAddress="%M848">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_77" typeName="EBOOL" topologicalAddress="%Q0.4.12">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_36" typeName="INT">
			<comment>Old %IW100</comment>
		</variables>
		<variables name="t0_Transfert_Glace_Add" typeName="EBOOL"></variables>
		<variables name="Seuils_vides_atteints_Gra2" typeName="BOOL"></variables>
		<variables name="CPT06_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.9.5.4"></variables>
		<variables name="CPT17_LOWER_TH_VALUE" typeName="DINT"></variables>
		<variables name="CPT10_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="DI_95" typeName="EBOOL" topologicalAddress="%I0.2.30">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="DO_15" typeName="EBOOL" topologicalAddress="%Q0.3.14">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="CPT06_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="Conf_eau2_nb_vibreur_bal" typeName="INT" topologicalAddress="%MW8048"></variables>
		<variables name="suite_index_malaxeur1" typeName="INT"></variables>
		<variables name="TON_ARRET_MAL1" typeName="TON"></variables>
		<variables name="Saturation_inf_TT_granulat" typeName="BOOL"></variables>
		<variables name="BCMix_DO_110" typeName="EBOOL" topologicalAddress="%M910">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Admix_Tank4_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.35">
			<comment>Open admixture 'tank 4'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Simulation_dosage_Gra1" typeName="Simulation_dosage"></variables>
		<variables name="Conf_Cem_Hopper_Empty_Time" typeName="TIME">
			<comment>cylinder</comment>
		</variables>
		<variables name="Conf_granulat1_tps_max_pesage" typeName="TIME" topologicalAddress="%MW7756">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="DI_Water_Tank2_PB_PLC_Open" typeName="EBOOL">
			<comment>Open water 'tank 2'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="sens_pesage_fin_granulat1" typeName="EBOOL" topologicalAddress="%M307"></variables>
		<variables name="FM_DOS_Cim2" typeName="R_TRIG"></variables>
		<variables name="NP_Gra_ctrl_poids_TT_Gra" typeName="INT"></variables>
		<variables name="Arret_RAMPE" typeName="BOOL"></variables>
		<variables name="TON_121" typeName="TON"></variables>
		<variables name="FORCE_SYNC_CPT" typeName="ARRAY[1..20] OF EBOOL"></variables>
		<variables name="Stock_Gra1_auto" typeName="BOOL"></variables>
		<variables name="mot1_temps_malaxage2" typeName="WORD"></variables>
		<variables name="Seuil_vide_atteint_Cim2" typeName="EBOOL"></variables>
		<variables name="DO_Admix_Tank19_Open" typeName="EBOOL" topologicalAddress="%Q0.4.50">
			<comment>Open admixture 'tank 19'</comment>
		</variables>
		<variables name="Tol_inf_Adj" typeName="EBOOL" topologicalAddress="%M566">
			<comment>tolérance inférieure</comment>
		</variables>
		<variables name="DO_Admix_Tank7_Open" typeName="EBOOL" topologicalAddress="%Q0.4.38">
			<comment>Open admixture 'tank 7'</comment>
		</variables>
		<variables name="DI_Admix_Weighing_CBT" typeName="EBOOL">
			<comment>Admixture (weighing/counting) pumps circuit breaker tripped - An alarm stops the pumps ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Intro_Glace_encours_Gra2" typeName="BOOL"></variables>
		<variables name="fm_montee_skip" typeName="R_TRIG"></variables>
		<variables name="BCMix_DO_52" typeName="EBOOL" topologicalAddress="%M852">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Idx_adj" typeName="INT"></variables>
		<variables name="Limite_correction_Gra2" typeName="INT"></variables>
		<variables name="temps_dosage_eau" typeName="INT" topologicalAddress="%MW4639"></variables>
		<variables name="AI_58_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="AI_9" typeName="INT" topologicalAddress="%IW0.8.0">
			<comment>Old %IW73</comment>
		</variables>
		<variables name="Etat_bat_processeur" typeName="EBOOL" topologicalAddress="%M645">
			<comment>Etat baterie processeur</comment>
		</variables>
		<variables name="AI_64_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Stock_Anh_auto" typeName="BOOL"></variables>
		<variables name="DI_Mixer1_Thermal_Relay_CBT" typeName="EBOOL">
			<comment>Mixer 1' thermal relay tripped - An alarm sets the output 'STOR_marche_mal1' to OFF ['1' for 'TRUE']</comment>
		</variables>
		<variables name="LEC_Basc_gra1_1" typeName="LEC_Basc_gra1"></variables>
		<variables name="conf_mal2_sens_fc_trap2_fer" typeName="EBOOL" topologicalAddress="%M473"></variables>
		<variables name="Introduction_Eau1_encours" typeName="EBOOL"></variables>
		<variables name="conf_eau1_bcd" typeName="EBOOL" topologicalAddress="%M347">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="TG3_nouvelle" typeName="BOOL"></variables>
		<variables name="Info_Tension_NOK" typeName="EBOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="DO_Mixer_Gates_PLC_In_Auto" typeName="EBOOL">
			<comment>Turn 'Mixer gates in automatic mode' light ON - Direct-to-PLC console</comment>
		</variables>
		<variables name="Cde_vibreur_balance_Eau1" typeName="EBOOL" topologicalAddress="%M266"></variables>
		<variables name="Alarme_Niveau_haut_ADJ_Comp8" typeName="EBOOL" topologicalAddress="%M655">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="conf_Cim2_positif_a_1" typeName="EBOOL" topologicalAddress="%M378"></variables>
		<variables name="Numero_produit_Gra1_cumul" typeName="INT"></variables>
		<variables name="DO_Admix_Tank7_Simulation" typeName="EBOOL" topologicalAddress="%Q0.5.2">
			<comment>Generate a 'counting pulse' for simulating a counting on the admixture pump of 'tank 7' (has no effect on site, only for simulation)</comment>
		</variables>
		<variables name="Tol_inf_Eau2" typeName="EBOOL" topologicalAddress="%M774">
			<comment>tolérance inférieure</comment>
		</variables>
		<variables name="consigne_ppe5" typeName="INT" topologicalAddress="%MW5943"></variables>
		<variables name="DO_85" typeName="EBOOL" topologicalAddress="%Q0.4.20">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="conf_Eau2_positif_a_1" typeName="EBOOL" topologicalAddress="%M388"></variables>
		<variables name="top_fuite" typeName="SAMPLETM"></variables>
		<variables name="NP_initial_Cim2_A_Doser" typeName="INT"></variables>
		<variables name="Conf_granulat1_seuil_maxi" typeName="INT" topologicalAddress="%MW7743"></variables>
		<variables name="AI_18" typeName="INT">
			<comment>Old %IW82</comment>
		</variables>
		<variables name="CPT16_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.7.1.3"></variables>
		<variables name="Conf_techno_basc_adj2" typeName="INT">
			<comment>0=Bin 1=BCD 2=TCP_Arpege 3=Ana 4=Profibus</comment>
		</variables>
		<variables name="Conf_Water2_Ana_Offset" typeName="INT">
			<comment>offset for water weigher 2</comment>
		</variables>
		<variables name="DI_Transfer_Emergency_Stop" typeName="EBOOL">
			<comment>Transfer area' emergency stop is pushed (or cable was pulled) - Displays an alarm - To be used with 'ETOR_etat_arret_urgence' ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="CPT01_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.9.0.6"></variables>
		<variables name="DI_22" typeName="EBOOL" topologicalAddress="%I0.1.21">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Temps_vid_Dry_Eau2" typeName="DINT"></variables>
		<variables name="AI_43_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="TON_912" typeName="TON"></variables>
		<variables name="DI_Agg1_PB_PLC_Slow_Weighing" typeName="EBOOL">
			<comment>Slow weighing on 'aggregate 1' line' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="EJ_Cim2_A_Doser" typeName="INT"></variables>
		<variables name="BALANCE_Cim1_M340" typeName="ARRAY[1..16] OF EBOOL">
			<comment>Adresse en M340 uniquement</comment>
		</variables>
		<variables name="Alarme_satur_inf_Gra2" typeName="EBOOL" topologicalAddress="%M678"></variables>
		<variables name="Poids_instantane_Anh" typeName="INT" topologicalAddress="%MW4665"></variables>
		<variables name="Glace_Eau2_a_transferer" typeName="BOOL"></variables>
		<variables name="AI_22_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="PULSE_KLAXON_D" typeName="TP"></variables>
		<variables name="FM_Cde_Manu_PPE_10" typeName="R_TRIG"></variables>
		<variables name="CPT20_LOWER_TH_VALUE" typeName="DINT"></variables>
		<variables name="Gachee_EC_Cim1" typeName="BOOL"></variables>
		<variables name="DO_30" typeName="EBOOL" topologicalAddress="%Q0.3.29">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_59" typeName="INT">
			<comment>Old %IW123</comment>
		</variables>
		<variables name="Pesee_Gra1_terminee" typeName="EBOOL"></variables>
		<variables name="Conf_cim1_tps_vidange" typeName="TIME" topologicalAddress="%MW7880">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="depart_skip_attente" typeName="EBOOL" topologicalAddress="%M498"></variables>
		<variables name="Conf_skip_tps_vidange" typeName="TIME" topologicalAddress="%MW8358"></variables>
		<variables name="Etat_balance_Cim1" typeName="EBOOL"></variables>
		<variables name="W2_adj_Weight5" typeName="REAL" topologicalAddress="%MW8230">
			<comment>Value in kg for high point of the calibration for adm weigher 5</comment>
		</variables>
		<variables name="Vid_Gra_Terminee" typeName="EBOOL"></variables>
		<variables name="Surcharge_Gra4" typeName="BOOL">
			<comment>Non utilise</comment>
		</variables>
		<variables name="fm_doser_Cim_manu" typeName="R_TRIG"></variables>
		<variables name="Depas_puissance_max_malaxeur2" typeName="EBOOL" topologicalAddress="%M636"></variables>
		<variables name="Manu_cde_vidange_basc_eau1" typeName="EBOOL" topologicalAddress="%M708"></variables>
		<variables name="ouverture_trappe_mal2" typeName="EBOOL"></variables>
		<variables name="AI_Array_Value_Part_1" typeName="INTARR24" topologicalAddress="%MW4412"></variables>
		<variables name="BCMix_DO_74" typeName="EBOOL" topologicalAddress="%M874">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TON_TOFF_PV_Cim1" typeName="TON_TOFF"></variables>
		<variables name="Simulation_dosage_Cim2" typeName="Simulation_dosage"></variables>
		<variables name="AI_27_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="BP_dosage_Gra_1" typeName="EBOOL" topologicalAddress="%M142"></variables>
		<variables name="Petite_vitesse_Eau1" typeName="EBOOL"></variables>
		<variables name="Conf_Gra4_seuil_mini" typeName="INT">
			<comment>Seuil de détarrage</comment>
		</variables>
		<variables name="conf_adjuvant_val_actif_1" typeName="EBOOL" topologicalAddress="%M360"></variables>
		<variables name="Alarme_IDE500_Gra4" typeName="EBOOL" topologicalAddress="%M537"></variables>
		<variables name="Conf_anhydrite_tps_stabilisation" typeName="TIME" topologicalAddress="%MW8242"></variables>
		<variables name="DI_Skip_Moving_Up" typeName="EBOOL" topologicalAddress="%I0.1.17">
			<comment>Skip moving forward to mixer or truck ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Vidange_bloquee_Eau2" typeName="EBOOL" topologicalAddress="%M783"></variables>
		<variables name="W1_adj_Weight2" typeName="REAL" topologicalAddress="%MW8164">
			<comment>Value in kg for low point of the calibration for adm weigher 2</comment>
		</variables>
		<variables name="DO_103" typeName="EBOOL" topologicalAddress="%Q0.4.38">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="W1_anh" typeName="REAL" topologicalAddress="%MW8264">
			<comment>Value in kg for low point of the calibration for anhydrite weigher</comment>
		</variables>
		<variables name="AI_24_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Vidange_bloquee_Gra2" typeName="EBOOL" topologicalAddress="%M534"></variables>
		<variables name="Conf_multipl_Granulat1" typeName="REAL" topologicalAddress="%MW7776"></variables>
		<variables name="Densite_MES" typeName="INT" topologicalAddress="%MW4769"></variables>
		<variables name="Debug_MotStatus3_Word" typeName="WORD" topologicalAddress="%MW4510"></variables>
		<variables name="Info_ids_en_fonction" typeName="EBOOL" topologicalAddress="%M35"></variables>
		<variables name="DO_93" typeName="EBOOL" topologicalAddress="%Q0.4.28">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Mode_Simu" typeName="INT" topologicalAddress="%MW5414">
			<comment>0: Mode Production / 1: Mode Simulation (pompes simulees) / 2 : Mode Simulation (pompes par CCR)</comment>
			<variableInit value="0"></variableInit>
		</variables>
		<variables name="Alarme_vidange_Mal1" typeName="EBOOL" topologicalAddress="%M626"></variables>
		<variables name="Poids_deja_pese_Cim1" typeName="INT" topologicalAddress="%MW4589"></variables>
		<variables name="Conf_eau2_nb_cuves" typeName="INT" topologicalAddress="%MW8064"></variables>
		<variables name="DO_Mixer1_Grease_PP_ON" typeName="EBOOL">
			<comment>Run 'mixer 1' grease pump</comment>
		</variables>
		<variables name="Conf_TT_Cim_BCD" typeName="EBOOL" topologicalAddress="%M447">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="Vidange_Anh" typeName="EBOOL"></variables>
		<variables name="Puissance_sup_seuil_vide_Mal2" typeName="EBOOL" topologicalAddress="%M637"></variables>
		<variables name="Basc_instable_Gra2" typeName="EBOOL" topologicalAddress="%M528"></variables>
		<variables name="Defaut_Eau1" typeName="EBOOL"></variables>
		<variables name="CPT09_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="AI_20_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Conf_silo_anhydrite_TON_pv" typeName="TIME" topologicalAddress="%MW7698">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="DINT_TT_gra_pourcent" typeName="DINT"></variables>
		<variables name="Auto_marche_mal1" typeName="BOOL"></variables>
		<variables name="DI_Admix_Weigher_Cpt9_PB_PLC_Op" typeName="EBOOL">
			<comment>Open admixture weigher 'compartment 9'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Alarme_satur_sup_Cim1" typeName="EBOOL" topologicalAddress="%M770"></variables>
		<variables name="Temps_vid_Dry_Cim2" typeName="DINT"></variables>
		<variables name="DI_Agg1_Weigher_PB_PLC_Open" typeName="EBOOL">
			<comment>Open 'aggregate 1' weigher' pushbutton pressed, or 'Start 'aggregate 1' bin/belt' - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="fm_cumul_Gra_manu_stable" typeName="R_TRIG"></variables>
		<variables name="Cde_vidange_bascule_Eau1" typeName="EBOOL" topologicalAddress="%M228"></variables>
		<variables name="Poids_simu_TT_Gra" typeName="WORD" topologicalAddress="%MW5411"></variables>
		<variables name="Ecart_pesee_Eau1" typeName="INT" topologicalAddress="%MW4794">
			<comment>Ecart de pesee en unités de dosage pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="Stock_manu_Gra_5" typeName="BOOL"></variables>
		<variables name="DI_Plant_Emergency_Stop" typeName="EBOOL">
			<comment>Emergency stop state' : It is safe to set all outputs to OFF (after plant was made totally free of any energy) - This sets PLC outputs OFF, 'breaks' the current batch and makes impossible to start new batches. ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Cumul_Cim1_auto_stable" typeName="BOOL"></variables>
		<variables name="Conf_granulat1_temps_ecoulement" typeName="TIME" topologicalAddress="%MW7780"></variables>
		<variables name="Dosage_manu_pupitre_Eau" typeName="EBOOL"></variables>
		<variables name="Vidange_TT_cim" typeName="EBOOL"></variables>
		<variables name="CPT19_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="voie_basc_Cim2" typeName="INT" topologicalAddress="%MW7947">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="Conf_granulat2_ecart_stabilite" typeName="INT" topologicalAddress="%MW7809"></variables>
		<variables name="Info_Gate_Mode_Auto" typeName="EBOOL" topologicalAddress="%M22">
			<comment>Gate in mode “Auto”</comment>
		</variables>
		<variables name="CPT09_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.10.0.2"></variables>
		<variables name="memo_cpt_pour_QDC" typeName="INTARR20"></variables>
		<variables name="Tapis_peseur1_vitesse_rotation" typeName="EBOOL" topologicalAddress="%M519"></variables>
		<variables name="Cde_vibreur_balance_Cim1" typeName="EBOOL" topologicalAddress="%M234"></variables>
		<variables name="Info_skip_attente" typeName="EBOOL" topologicalAddress="%M10"></variables>
		<variables name="Temps_Vid_Dry" typeName="ARRAY[1..12] OF DINT">
			<comment>temps écoulé pour chaque vidange</comment>
		</variables>
		<variables name="LEC_ARPEGE_Cim1" typeName="LEC_ARPEGE"></variables>
		<variables name="CPT10_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.10.1.4"></variables>
		<variables name="Saturation_inf_Eau1" typeName="BOOL"></variables>
		<variables name="AI_15_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Dos_max_ppe" typeName="INTARR20">
			<comment>Poids demandé + tolérance</comment>
		</variables>
		<variables name="Alarme_Reserv_Exped_Plein" typeName="EBOOL" topologicalAddress="%M671">
			<comment>Colorant</comment>
		</variables>
		<variables name="Numero_pupitre_cim_cumul" typeName="INT"></variables>
		<variables name="AI_28_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="AI_66_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Manu_Log_Vibreur_Cim2" typeName="BOOL"></variables>
		<variables name="DO_38" typeName="EBOOL" topologicalAddress="%Q0.3.37">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_Agg_Bin3_Open" typeName="EBOOL" topologicalAddress="%Q0.4.2">
			<comment>Open aggregate 'bin 3'</comment>
		</variables>
		<variables name="Cde_dosage_Cim" typeName="BOOLARR6" topologicalAddress="%MW4723"></variables>
		<variables name="Conf_TT_granulat_pourcent" typeName="INT" topologicalAddress="%MW8422">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="index_sortie_buffer" typeName="INT" topologicalAddress="%MW4521"></variables>
		<variables name="Info_TT_Gra_ouverte" typeName="EBOOL" topologicalAddress="%M16"></variables>
		<variables name="CPT13_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.4.1.3"></variables>
		<variables name="AI_49" typeName="INT">
			<comment>Old %IW113</comment>
		</variables>
		<variables name="Stabilite_Anh_en_cours" typeName="BOOL"></variables>
		<variables name="BCMix_DO_84" typeName="EBOOL" topologicalAddress="%M884">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="alarme_malaxeur1_arrete" typeName="EBOOL" topologicalAddress="%M630"></variables>
		<variables name="LEC_ANA_Gra1" typeName="LEC_ANA"></variables>
		<variables name="FM_dos_Manulog_PPE_15" typeName="R_TRIG"></variables>
		<variables name="FM_dos_pupitre_PPE_16" typeName="R_TRIG"></variables>
		<variables name="Top_depart_Vid_Adj" typeName="EBOOL"></variables>
		<variables name="Introduction_Gra_terminee" typeName="EBOOL"></variables>
		<variables name="test_no_pup" typeName="BOOL"></variables>
		<variables name="Conf_granulat1_filtre_Nb_Vals" typeName="INT" topologicalAddress="%MW7764">
			<variableInit value="3"></variableInit>
		</variables>
		<variables name="DI_30" typeName="EBOOL" topologicalAddress="%I0.1.29">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="DI_Admix_Tank14_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.45">
			<comment>Open admixture 'tank 14'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Silo_Emergency_Stop" typeName="EBOOL">
			<comment>Silo screws area' emergency stop is pushed - Displays an alarm - To be used with 'ETOR_etat_arret_urgence' ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="AI_72_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="voie_basc_TT_gra" typeName="INT" topologicalAddress="%MW8407">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="LEC_ANA_Adj" typeName="LEC_5ANA"></variables>
		<variables name="TON_Comm_Arpege_possible" typeName="TON"></variables>
		<variables name="DI_Agg_Bin3_PB_PLC_Open" typeName="EBOOL">
			<comment>Open aggregate 'bin 3'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Cem_Silo4_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.19">
			<comment>Open cement 'silo 4'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="BCMix_DO_118" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Numero_produit_Anh_initial" typeName="INT"></variables>
		<variables name="DI_Agg_Bin13_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.12">
			<comment>Open aggregate 'bin 13'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Dosages_ppe_en_cours_Section392" typeName="ARRAY[1..20] OF EBOOL"></variables>
		<variables name="Conf_Water_Dis_PP_Mot_Prot_Act0" typeName="EBOOL">
			<comment>Water discharging pumps motor protection</comment>
		</variables>
		<variables name="Conf_skip_tps_attente_haut" typeName="TIME" topologicalAddress="%MW8364"></variables>
		<variables name="DI_Aux2_Emergency_Stop" typeName="EBOOL">
			<comment>Auxiliary 2' emergency stop is pushed - Displays an alarm - To be used with 'ETOR_etat_arret_urgence' ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="suite_index_transfert_G" typeName="INT"></variables>
		<variables name="Conf_Eau2_seuil_vide" typeName="INT" topologicalAddress="%MW8028"></variables>
		<variables name="CPT07_LOWER_TH_VALUE" typeName="DINT" topologicalAddress="%QD0.9.6.2"></variables>
		<variables name="Numero_produit_Adj_cumul" typeName="INT"></variables>
		<variables name="PD_Eau1_A_Doser" typeName="INT"></variables>
		<variables name="Alarme_satur_inf_Eau2" typeName="EBOOL" topologicalAddress="%M784"></variables>
		<variables name="Conf_Gra3_seuil_maxi" typeName="INT"></variables>
		<variables name="Recup_voie_ana_Eau2" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="fm_cumul_Gra2_auto_stable" typeName="R_TRIG"></variables>
		<variables name="Conf_cim_TOFF_pesage_fin" typeName="TIMEARR6" topologicalAddress="%MW6920">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="DI_Water_Tank1_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.24">
			<comment>Open water 'tank 1'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_Comm_Arpege_TCP_Active" typeName="EBOOL" topologicalAddress="%M454"></variables>
		<variables name="TON_TOFF_VIB_Eau2" typeName="TON_TOFF"></variables>
		<variables name="Idx2" typeName="INT"></variables>
		<variables name="TOF_77_265" typeName="TOF"></variables>
		<variables name="conf_eau_presence_MES" typeName="EBOOL" topologicalAddress="%M350"></variables>
		<variables name="TON_skip_bas" typeName="TON"></variables>
		<variables name="bit_mal_grand_ouv_conf_anhy_8" typeName="EBOOL"></variables>
		<variables name="AI_24" typeName="INT">
			<comment>Old %IW88</comment>
		</variables>
		<variables name="conf_cim1_positif_a_1" typeName="EBOOL" topologicalAddress="%M338"></variables>
		<variables name="P1_TT_gra" typeName="INT" topologicalAddress="%MW8414">
			<comment>Value in points for low point of the calibration for hopper bin</comment>
		</variables>
		<variables name="Depart_verif_Eau1" typeName="BOOL"></variables>
		<variables name="CPT02_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.9.1.1.3"></variables>
		<variables name="Defaut_Cim2" typeName="EBOOL"></variables>
		<variables name="AI_1" typeName="INT" topologicalAddress="%IW0.6.0">
			<comment>Old %IW16</comment>
		</variables>
		<variables name="TOF_Arret_ASPI" typeName="TOF"></variables>
		<variables name="BP_dosage_Cim_1" typeName="EBOOL" topologicalAddress="%M156"></variables>
		<variables name="Idx_Dos_Dif" typeName="INT"></variables>
		<variables name="DI_Color_Hopper_XV2_Opened" typeName="EBOOL">
			<comment>Colourant hopper internal valve 'XV2' is open - Made for an independant colouring machine in Herriot, France. ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Vibreur_TT_gra_pesee" typeName="EBOOL"></variables>
		<variables name="Ajustement_auto_adjuvant" typeName="BOOLARR20" topologicalAddress="%MW7432"></variables>
		<variables name="Consigne_ManuLog_PPE" typeName="INTARR20" topologicalAddress="%MW5573">
			<comment>Cons en Manu Log Créée à l'ancienne adresse de la consigne PPE</comment>
		</variables>
		<variables name="Alarme_Mesomatic4" typeName="BOOL">
			<comment>defaut Hardware NOT USED YET</comment>
		</variables>
		<variables name="Poids_real_Gra1" typeName="REAL" topologicalAddress="%MW4678">
			<comment>Poids granulat 1 en reel</comment>
		</variables>
		<variables name="Conf_TT_cim_seuil_mini" typeName="INT" topologicalAddress="%MW8472">
			<comment>Seuil de detarrage</comment>
		</variables>
		<variables name="Manu_Pup_ouv_basc_Cim2" typeName="BOOL"></variables>
		<variables name="BCMix_DO_102" typeName="EBOOL" topologicalAddress="%M902">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Conf_Mixer1_Auto_Stop" typeName="EBOOL">
			<comment>Enable Mixer 1 automatic Stop</comment>
		</variables>
		<variables name="P2_adj_Weight2" typeName="INT" topologicalAddress="%MW8170">
			<comment>Value in point for high point of the calibration for adm weigher 2</comment>
		</variables>
		<variables name="AI_47_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Etape_155_030_Etat_AU" typeName="EBOOL"></variables>
		<variables name="Plage_etendue_Gra1" typeName="BOOL"></variables>
		<variables name="Pup_Cde_PV_Gra1" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="AI_10" typeName="INT" topologicalAddress="%IW0.8.1">
			<comment>Old %IW74</comment>
		</variables>
		<variables name="DI_69" typeName="EBOOL" topologicalAddress="%I0.2.4">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="CPT02_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.9.1.2"></variables>
		<variables name="AI_Admix_Weigher_2_Status" typeName="BOOL">
			<comment>Adress in M340 only</comment>
		</variables>
		<variables name="DO_07" typeName="EBOOL" topologicalAddress="%Q0.3.6">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="CPT20_FORCE_RESET" typeName="EBOOL"></variables>
		<variables name="tps_apres_coulant_anh_gra" typeName="TIME"></variables>
		<variables name="Conf_trappe1_mal2_tps_reponse" typeName="TIME" topologicalAddress="%MW8576"></variables>
		<variables name="Rapport_Lec_IDE500" typeName="ARRAY[0..3] OF INT"></variables>
		<variables name="Ppe_Etape1_Init_cpt" typeName="BOOLARR20"></variables>
		<variables name="DI_Mixer1_Grease_PP_CBT" typeName="EBOOL">
			<comment>Mixer 1' grease pump circuit breaker tripped - An alarm stops the pump ['1' for 'TRUE']</comment>
		</variables>
		<variables name="conf_granulat1_binaire" typeName="EBOOL" topologicalAddress="%M309">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="BCMix_DO_24" typeName="EBOOL" topologicalAddress="%M824">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_45" typeName="EBOOL" topologicalAddress="%I0.1.44">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Pesee_suivante_Cim1" typeName="EBOOL"></variables>
		<variables name="DO_Mixer1_Gate2_Horn_ON" typeName="EBOOL" topologicalAddress="%Q0.3.35">
			<comment>Turn 'mixer 1' 'gate 2' horn ON (for a user-defined duration)</comment>
		</variables>
		<variables name="TON_243" typeName="TON"></variables>
		<variables name="Pesee_bloquee_Gra2" typeName="EBOOL" topologicalAddress="%M525"></variables>
		<variables name="Temps_malax1_avec_prod_dif" typeName="INT">
			<comment>sert uniquement au lancement des prod dif apres le retard d'intro</comment>
		</variables>
		<variables name="Conf_AU_aux2_Actif0" typeName="EBOOL" topologicalAddress="%M435"></variables>
		<variables name="Tempo_vibreur_Eau1" typeName="TP"></variables>
		<variables name="Compteur_ppe_fuites" typeName="INTARR20">
			<comment>Nombre d'impulsions actuel sur les cartes de comptage (ou sur simulateur, mais dans ce cas on rapporte aux 5 premières voies si on est en comptage multiplexé)</comment>
		</variables>
		<variables name="P2_gra1" typeName="INT" topologicalAddress="%MW7774">
			<comment>Value in points for the high point of the calibration for agg weigher 1</comment>
		</variables>
		<variables name="conf_Cim2_val_actif_1" typeName="EBOOL" topologicalAddress="%M377"></variables>
		<variables name="TON_TOFF_AJU_Eau2" typeName="TON_TOFF"></variables>
		<variables name="Conf_cim_TON_ajustement" typeName="TIMEARR6" topologicalAddress="%MW6976">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="AI_51" typeName="INT">
			<comment>Old %IW115</comment>
		</variables>
		<variables name="TON_TOFF_VIB_Gra2" typeName="TON_TOFF"></variables>
		<variables name="AI_25_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="BP_dosage_Adj_3" typeName="EBOOL" topologicalAddress="%M168"></variables>
		<variables name="CGG_activee_Cim2" typeName="BOOL"></variables>
		<variables name="Lecture_Bin_BCD_ACTIVE" typeName="EBOOL"></variables>
		<variables name="AI_11_Higher_Saturation" typeName="BOOL" topologicalAddress="%IW0.8.2.1.5">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Vidange_en_cours_Mal1" typeName="EBOOL"></variables>
		<variables name="Intro_autres_produits_ACTIVE" typeName="EBOOL"></variables>
		<variables name="CPT14_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="DI_Mixer1_ON" typeName="EBOOL" topologicalAddress="%I0.1.23">
			<comment>Mixer 1' is running ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Val_Cpt_pour_anticipation" typeName="INT"></variables>
		<variables name="RE_adj4" typeName="R_TRIG"></variables>
		<variables name="Numeros_produits_granulat1" typeName="INT"></variables>
		<variables name="DO_54" typeName="EBOOL" topologicalAddress="%Q0.3.53">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="P1_gra2" typeName="INT" topologicalAddress="%MW7836">
			<comment>Value in points for low point of the calibration for agg weigher 2</comment>
		</variables>
		<variables name="Saturation_inf_Gra2" typeName="BOOL"></variables>
		<variables name="AI_8_Higher_Saturation" typeName="BOOL" topologicalAddress="%IW0.7.3.1.5">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="BALANCE_Eau2_M340" typeName="ARRAY[1..16] OF EBOOL"></variables>
		<variables name="CPT14_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.5.1.3"></variables>
		<variables name="TON_skip_attente_haut" typeName="TON"></variables>
		<variables name="Conf_trappe2_mal1_tps_reponse" typeName="TIME" topologicalAddress="%MW8556"></variables>
		<variables name="fm_rotation_tapis_trans" typeName="R_TRIG"></variables>
		<variables name="Stock_manu_Adj_11" typeName="BOOL"></variables>
		<variables name="Poids_vise_deja_ecrit_Gra2" typeName="BOOL"></variables>
		<variables name="TON_capteur_chgt_vitesse_bas" typeName="TON"></variables>
		<variables name="DI_Voltage_Control" typeName="EBOOL">
			<comment>Mains voltage external fault ['0' or '1' for 'TRUE' - see 'Conf_Controle_Tension_Actif0' variable]</comment>
		</variables>
		<variables name="Cde_fermeture_bascule_Anh" typeName="EBOOL" topologicalAddress="%M260"></variables>
		<variables name="NG_Gra2" typeName="INT" topologicalAddress="%MW4523"></variables>
		<variables name="Conf_techno_basc_cim2" typeName="INT" topologicalAddress="%MW7948">
			<comment>0=Bin 1=BCD 2=TCP_Arpege 3=Ana 4=Profibus</comment>
		</variables>
		<variables name="BALANCE_Eau1_M340" typeName="ARRAY[1..16] OF EBOOL">
			<comment>Adresse en M340 uniquement</comment>
		</variables>
		<variables name="Simu_dosage_en_cours_Adj_pese" typeName="BOOL"></variables>
		<variables name="AI_45_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Gra1_presence_prod_Eau2" typeName="BOOL"></variables>
		<variables name="Pup_Cde_vid_basc_Eau1" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="Ajustement_auto_granulat" typeName="BOOLARR14" topologicalAddress="%MW6746"></variables>
		<variables name="DI_Anh_Weigher_Closed" typeName="EBOOL" topologicalAddress="%I0.1.9">
			<comment>Anhydrite weigher closed ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Memo_Cpt_manulog_PPE" typeName="INTARR20"></variables>
		<variables name="Auto_ouv_basc_Adj" typeName="BOOL"></variables>
		<variables name="Seq_ppe_vers_malax_termine" typeName="ARRAY[1..6] OF EBOOL"></variables>
		<variables name="CPT20_COUNTER_CURRENT_VALUE" typeName="DINT"></variables>
		<variables name="fm_cumul_Gra1_auto_stable" typeName="R_TRIG"></variables>
		<variables name="nb_voies_comptage" typeName="INT"></variables>
		<variables name="Cumul_Adj_auto" typeName="STOCK5"></variables>
		<variables name="DO_Admix_Cpt2_PP_ON" typeName="EBOOL">
			<comment>Run the admixture weigher 'compartment 2' emptying pump - For the Romanian-type admixture process</comment>
		</variables>
		<variables name="conf_Trappes2_communes" typeName="EBOOL" topologicalAddress="%M464"></variables>
		<variables name="DI_79" typeName="EBOOL" topologicalAddress="%I0.2.14">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="FM_Cde_Manu_PPE_06" typeName="R_TRIG"></variables>
		<variables name="Limite_correction_Cim1" typeName="INT"></variables>
		<variables name="Comm_HMS_possible" typeName="EBOOL"></variables>
		<variables name="Manu_Log_ouv_basc_Eau1" typeName="BOOL"></variables>
		<variables name="NP_Eau2" typeName="INT">
			<comment>Index de produit ds table de dosage</comment>
		</variables>
		<variables name="AI_9_Higher_Saturation" typeName="BOOL" topologicalAddress="%IW0.8.0.1.5">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="DO_Cem_Silo2_Open" typeName="EBOOL" topologicalAddress="%Q0.4.17">
			<comment>Open cement 'silo 2'</comment>
		</variables>
		<variables name="DO_Skip_High_Speed" typeName="EBOOL">
			<comment>Activate the 'high speed' on the skip</comment>
		</variables>
		<variables name="Seq_Vid_Pourcentage_a_vidanger" typeName="INT">
			<comment>Récupéré dans TG_IN[].Vidange_dry[].Qte</comment>
		</variables>
		<variables name="Bonbonne_cim_vide" typeName="EBOOL" topologicalAddress="%M500"></variables>
		<variables name="Cumul_Adj_manu" typeName="STOCK5"></variables>
		<variables name="DI_84" typeName="EBOOL" topologicalAddress="%I0.2.19">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Temps_vid_Dry_Gra" typeName="DINT"></variables>
		<variables name="Conf_adj_tps_ecoulement" typeName="TIMEARR20" topologicalAddress="%MW7352"></variables>
		<variables name="CPT03_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.9.2.2"></variables>
		<variables name="Conf_malaxeur1_tps_stab_watt" typeName="TIME" topologicalAddress="%MW8544"></variables>
		<variables name="DINT_TT_cim_pourcent" typeName="DINT"></variables>
		<variables name="Conf_skip_tps_bas_attente" typeName="TIME" topologicalAddress="%MW8362"></variables>
		<variables name="Conf_granulat2_tps_vidange" typeName="TIME" topologicalAddress="%MW7814"></variables>
		<variables name="DO_Agg1_Weigher_Extraction_Aid" typeName="EBOOL" topologicalAddress="%Q0.3.24">
			<comment>Activate extraction aid of 'aggregate 1' line (for bins and belt/weigher)</comment>
		</variables>
		<variables name="Idx_Vid_Dry_Cim1" typeName="INT"></variables>
		<variables name="DI_Agg_Bin4_PB_Pro_Open" typeName="EBOOL" topologicalAddress="%I0.2.3">
			<comment>Open aggregate 'bin 4'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="FM_dos_ManuLog_PPE_4" typeName="R_TRIG"></variables>
		<variables name="code_plasticite_malax1" typeName="INT"></variables>
		<variables name="AI_19_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Conf_eau2_TOFF_vibreur_bal" typeName="TIME" topologicalAddress="%MW8046"></variables>
		<variables name="Defaut_Eau2" typeName="EBOOL"></variables>
		<variables name="DI_Admix_Tank3_PB_PLC_Open" typeName="EBOOL">
			<comment>Open admixture 'tank 3'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Numero_produit_Eau1_initial" typeName="INT"></variables>
		<variables name="Cde_vibreur_balance_Anh" typeName="EBOOL" topologicalAddress="%M235"></variables>
		<variables name="Conf_Wat1_Ana_Step" typeName="INT">
			<comment>step for water weigher 1</comment>
		</variables>
		<variables name="pause_temps_malaxage" typeName="EBOOL"></variables>
		<variables name="AI_Value_Agg2" typeName="INT"></variables>
		<variables name="sur_debit_ppe" typeName="BOOLARR20" topologicalAddress="%MW5252"></variables>
		<variables name="AI_69_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="DI_02" typeName="EBOOL" topologicalAddress="%I0.1.1">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Conf_adjuvant2_basc_seuil_maxi" typeName="INT"></variables>
		<variables name="fm_memo_skip_haut" typeName="R_TRIG"></variables>
		<variables name="Alarme_RAMPE" typeName="EBOOL" topologicalAddress="%M643">
			<comment>NOT USED YET</comment>
		</variables>
		<variables name="Info_indispo_temporaire" typeName="EBOOL" topologicalAddress="%M36"></variables>
		<variables name="Stock_manu_Gra_11" typeName="BOOL"></variables>
		<variables name="Surcharge_Adj" typeName="BOOL"></variables>
		<variables name="NG_Eau2" typeName="INT" topologicalAddress="%MW4527"></variables>
		<variables name="DO_Admix_Tank11_Open" typeName="EBOOL" topologicalAddress="%Q0.4.42">
			<comment>Open admixture 'tank 11'</comment>
		</variables>
		<variables name="Reserv_Exped_non_vide" typeName="EBOOL" topologicalAddress="%M947">
			<comment>Colorants</comment>
			<variableInit value="TRUE"></variableInit>
		</variables>
		<variables name="Cde_mode_manuel_logiciel" typeName="EBOOL"></variables>
		<variables name="Detarage_TT_granulat" typeName="BOOL"></variables>
		<variables name="Alarme_prot_PPE_Graisse1" typeName="EBOOL" topologicalAddress="%M699">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Cumul_Gra2_auto_deptstab" typeName="BOOL"></variables>
		<variables name="DO_40" typeName="EBOOL" topologicalAddress="%Q0.3.39">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="AI_Value_Cem1" typeName="INT"></variables>
		<variables name="DO_21" typeName="EBOOL" topologicalAddress="%Q0.3.20">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DI_Admix_Weigher_Cpt1_PB_PLC_Op" typeName="EBOOL">
			<comment>Open admixture weigher 'compartment 1'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_Gra2_seuil_vide" typeName="INT" topologicalAddress="%MW7806"></variables>
		<variables name="FM_dos_pupitre_PPE_7" typeName="R_TRIG"></variables>
		<variables name="cde_marche_mal1" typeName="EBOOL"></variables>
		<variables name="Alarme_Com_HMS_Profibus_Cim1" typeName="EBOOL" topologicalAddress="%M682">
			<comment>(Roumanie) Defaut : esclave Profibus ne rÃ©ponds pas (esclave 3)</comment>
		</variables>
		<variables name="DI_38" typeName="EBOOL" topologicalAddress="%I0.1.37">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="conf_granulat2_bcd" typeName="EBOOL" topologicalAddress="%M325">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="BP_dosage_Gra_8" typeName="EBOOL" topologicalAddress="%M149"></variables>
		<variables name="conf_sens_fc_skip_bas" typeName="EBOOL" topologicalAddress="%M414"></variables>
		<variables name="Conf_Cim1_filtre_Nb_Vals" typeName="INT" topologicalAddress="%MW7894">
			<variableInit value="3"></variableInit>
		</variables>
		<variables name="Alarme_satur_inf_TT_cim" typeName="EBOOL" topologicalAddress="%M621"></variables>
		<variables name="LEC_ARPEGE_TT_cim" typeName="LEC_ARPEGE"></variables>
		<variables name="Gachee_Suivante_Eau2" typeName="BOOL"></variables>
		<variables name="AI_Admix_Array_Status" typeName="ARRAY[1..5] OF BOOL"></variables>
		<variables name="Cde_fermeture_trappe1_mal1" typeName="EBOOL" topologicalAddress="%M247"></variables>
		<variables name="Cde_Ouv_XV3" typeName="EBOOL" topologicalAddress="%M261">
			<comment>Colorant - Ouv air comprimé pour vidange bonbonne colorant</comment>
		</variables>
		<variables name="exclusion_trappes_malaxeurs" typeName="EBOOL"></variables>
		<variables name="Poids_sup_seuil_vide_Eau1" typeName="EBOOL" topologicalAddress="%M551"></variables>
		<variables name="W1_gra1" typeName="REAL" topologicalAddress="%MW7768">
			<comment>Value in kg for low point of the calibration for agg weigher 1</comment>
		</variables>
		<variables name="fd_doser_Cim_manu" typeName="F_TRIG"></variables>
		<variables name="CPT09_EVT_COUNTER_LOW_ENABLE" typeName="BOOL" topologicalAddress="%QW0.10.0.1.3"></variables>
		<variables name="Flags_pesage_Gra1" typeName="flags_pesage_struct"></variables>
		<variables name="Alarme_detare_Eau2" typeName="EBOOL" topologicalAddress="%M781"></variables>
		<variables name="BCMix_DO_96" typeName="EBOOL" topologicalAddress="%M896">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="TON_TOFF_AJU_Cim2" typeName="TON_TOFF"></variables>
		<variables name="Simulation_dosage_Eau1" typeName="Simulation_dosage"></variables>
		<variables name="Numero_produit_Adj" typeName="INT" topologicalAddress="%MW4548"></variables>
		<variables name="Etat_balance_Cim2" typeName="EBOOL"></variables>
		<variables name="Vidange_TT_granulat" typeName="EBOOL"></variables>
		<variables name="DO_Color_XV2_Open" typeName="EBOOL">
			<comment>Open the colourant hopper internal valve 'XV2' - Made for an independant colouring machine in Herriot, France.</comment>
		</variables>
		<variables name="AI_Value_Module_7" typeName="INTARR8a" topologicalAddress="%MW4460">
			<comment>Not used</comment>
		</variables>
		<variables name="DI_Agg2_Weigher_Closed" typeName="EBOOL" topologicalAddress="%I0.1.4">
			<comment>Aggregate 2' weigher closed (or weighing belt stopped) ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_Ash_Scr_Mot_Prot_Act0" typeName="EBOOL">
			<comment>Fly ash screws motor protection</comment>
		</variables>
		<variables name="index_entree_buffer" typeName="INT" topologicalAddress="%MW4520"></variables>
		<variables name="conf_granulat1_positif_a_1" typeName="EBOOL" topologicalAddress="%M312"></variables>
		<variables name="Auto_ouv_basc_Cim1" typeName="BOOL"></variables>
		<variables name="bit_presence_config" typeName="EBOOL" topologicalAddress="%M492"></variables>
		<variables name="Conf_tps_deval_boite_noire" typeName="TIME" topologicalAddress="%MW8654"></variables>
		<variables name="top_detection_fuite" typeName="EBOOL"></variables>
		<variables name="bonbonne_prete_pour_transfert" typeName="EBOOL" topologicalAddress="%M945"></variables>
		<variables name="Auto_arret_mal1_RO" typeName="EBOOL">
			<comment>Arret type Roumanie</comment>
		</variables>
		<variables name="Manu_fermeture_basc_anhydrite" typeName="EBOOL" topologicalAddress="%M740"></variables>
		<variables name="TG_IN" typeName="ARRAY[1..4] OF table_gachee_in" topologicalAddress="%MW2"></variables>
		<variables name="AI_1_Higher_Saturation" typeName="BOOL" topologicalAddress="%IW0.6.0.1.5">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Conf_adj1_nb_cuves" typeName="INT" topologicalAddress="%MW8118"></variables>
		<variables name="Conf_Manu_Station_Discordance" typeName="BOOL">
			<comment>0 = pas de gestion en mode pupitre</comment>
		</variables>
		<variables name="Gachee_Suivante_Cim1" typeName="BOOL"></variables>
		<variables name="FM_Cde_Manu_PPE_18" typeName="R_TRIG"></variables>
		<variables name="BALANCE_TT_Gra_M340" typeName="ARRAY[1..16] OF EBOOL">
			<comment>Adresse en M340 uniquement</comment>
		</variables>
		<variables name="Pesee_suivante_Adj" typeName="EBOOL"></variables>
		<variables name="Cde_PPE_Graisse1" typeName="BOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Amp_Gra2" typeName="REAL">
			<comment>valeur en Ampere (debug)</comment>
		</variables>
		<variables name="W2_eau2" typeName="REAL" topologicalAddress="%MW8056">
			<comment>Value in kg for high point of the calibration for water weigher 2</comment>
		</variables>
		<variables name="Alarme_coffret_non_pret" typeName="EBOOL" topologicalAddress="%M673">
			<comment>Colorant</comment>
		</variables>
		<variables name="Poids_sup_seuil_vide_Cim1" typeName="EBOOL" topologicalAddress="%M538"></variables>
		<variables name="W1_cim2" typeName="REAL" topologicalAddress="%MW7950">
			<comment>Value in kg for low point of the calibration for cement weigher 2</comment>
		</variables>
		<variables name="Conf_Bonbonne_Colorant" typeName="EBOOL" topologicalAddress="%M354">
			<comment>colorants</comment>
		</variables>
		<variables name="Skip_pret_pour_vidange_dans_TT" typeName="EBOOL"></variables>
		<variables name="DO_Admix_Weigher_Cpt2_Open" typeName="EBOOL" topologicalAddress="%Q0.3.5">
			<comment>Open admixture weigher 'compartment 2' - For the French-type admixture process</comment>
		</variables>
		<variables name="FM_Cde_Manu_PPE_20" typeName="R_TRIG"></variables>
		<variables name="AI_67" typeName="INT">
			<comment>Old %IW131</comment>
		</variables>
		<variables name="Alarme_IDE500_Eau1" typeName="EBOOL" topologicalAddress="%M562"></variables>
		<variables name="auto_pupitre_et_logiciel" typeName="EBOOL"></variables>
		<variables name="Stock_manu_Adj_5" typeName="BOOL"></variables>
		<variables name="Pesee_Cim2_terminee" typeName="EBOOL"></variables>
		<variables name="debit_ppe" typeName="INTARR20" topologicalAddress="%MW4770"></variables>
		<variables name="Conf_tps_rep_Aspi" typeName="TIME" topologicalAddress="%MW8652"></variables>
		<variables name="DO_48" typeName="EBOOL" topologicalAddress="%Q0.3.47">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="CPT01_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="Conf_Skip_SCHG_DI_Filter_Time" typeName="TIME">
			<comment>filter time on speed change sensors of the skip</comment>
		</variables>
		<variables name="Cumul_Eau_manu" typeName="STOCK5"></variables>
		<variables name="Nb_vib_anh_gra" typeName="INT"></variables>
		<variables name="voie_basc_Gra2" typeName="INT" topologicalAddress="%MW7829">
			<comment>Num voie analogique ou TCP</comment>
		</variables>
		<variables name="Dosages_ppe_en_cours" typeName="BOOLARR20" topologicalAddress="%MW6180">
			<comment>Pourquoi est-ce mappé ?</comment>
		</variables>
		<variables name="Manu_Pup_Vibreur_Cim1" typeName="BOOL"></variables>
		<variables name="Pesee_Adj_terminee" typeName="EBOOL"></variables>
		<variables name="Manu_cde_vidange_basc_anhydrite" typeName="EBOOL" topologicalAddress="%M710"></variables>
		<variables name="Manu_cde_ouverture_trappe_2_mal1" typeName="EBOOL" topologicalAddress="%M726"></variables>
		<variables name="Conf_cim1_seuil_dos_simult" typeName="INTARR6" topologicalAddress="%MW7044"></variables>
		<variables name="remplacement_granulat1" typeName="EBOOL" topologicalAddress="%M477"></variables>
		<variables name="CPT11_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.10.2.6"></variables>
		<variables name="DI_96" typeName="EBOOL" topologicalAddress="%I0.2.31">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Conf_Cim1_filtre_Coef" typeName="INT" topologicalAddress="%MW7893">
			<variableInit value="100"></variableInit>
		</variables>
		<variables name="Tempo_vibreur_Cim1" typeName="TP"></variables>
		<variables name="Poids_sup_seuil_vide_Eau2" typeName="EBOOL" topologicalAddress="%M771"></variables>
		<variables name="Pup_Cde_Arret_Urgence" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="DO_Admix_Tank6_Open" typeName="EBOOL" topologicalAddress="%Q0.4.37">
			<comment>Open admixture 'tank 6'</comment>
		</variables>
		<variables name="CPT11_COUNTER_LOW" typeName="BOOL"></variables>
		<variables name="conf_anhydrite_sens_fc_vidange" typeName="EBOOL" topologicalAddress="%M396"></variables>
		<variables name="BCMix_DO_14" typeName="EBOOL" topologicalAddress="%M814">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="decalage_ppe_adj1" typeName="EBOOL"></variables>
		<variables name="Cde_manu_ppe" typeName="ARRAY[1..20] OF BOOL">
			<comment>temporisée.</comment>
		</variables>
		<variables name="BP_dosage_Adj_17" typeName="EBOOL" topologicalAddress="%M182"></variables>
		<variables name="fin_vidange_basc_adj" typeName="EBOOL"></variables>
		<variables name="DI_55" typeName="EBOOL" topologicalAddress="%I0.1.54">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="DO_98" typeName="EBOOL" topologicalAddress="%Q0.4.33">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_123" typeName="EBOOL" topologicalAddress="%Q0.4.58">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Pup_Cde_Arret_Urgence_PTOR" typeName="BOOL"></variables>
		<variables name="Manu_cde_transfert_cim" typeName="EBOOL" topologicalAddress="%M739"></variables>
		<variables name="Cde_vibreur_balance_Gra2" typeName="EBOOL" topologicalAddress="%M233"></variables>
		<variables name="AI_51_Error" typeName="BOOL">
			<comment>Error with the analog channel. For AMI module (M340) the adress type is : '%Ix.y.z.ERR'.</comment>
		</variables>
		<variables name="AI_58_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="CPT05_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.9.4.6"></variables>
		<variables name="mot2_temps_mini_malaxage2" typeName="WORD"></variables>
		<variables name="BCMix_DO_65" typeName="EBOOL" topologicalAddress="%M865">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Manu_Pup_ouv_TT_gra" typeName="BOOL"></variables>
		<variables name="AI_24_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="AI_Admix_Array_P2" typeName="ARRAY[1..5] OF INT"></variables>
		<variables name="BP_dosage_Eau_3" typeName="EBOOL" topologicalAddress="%M164"></variables>
		<variables name="Basc_instable_Eau2" typeName="EBOOL" topologicalAddress="%M775"></variables>
		<variables name="Detarage_Eau1" typeName="BOOL"></variables>
		<variables name="Conf_mal1_tps_stab_watt_plast" typeName="TIME" topologicalAddress="%MW8546"></variables>
		<variables name="Info_pressostat_presence_air" typeName="EBOOL" topologicalAddress="%M48"></variables>
		<variables name="Malaxeur2_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Limite_correction_Eau1" typeName="INT"></variables>
		<variables name="Pesee_suivante_Cim2" typeName="EBOOL"></variables>
		<variables name="CPT01_FORCE_SYNC" typeName="EBOOL" topologicalAddress="%Q0.9.0.4"></variables>
		<variables name="Info_skip_tres_bas" typeName="EBOOL" topologicalAddress="%M9"></variables>
		<variables name="Saturation_inf_Adj_Weight2" typeName="BOOL"></variables>
		<variables name="Ecart_pesee_Adj" typeName="INT" topologicalAddress="%MW4796">
			<comment>Ecart de pesee en unités de dosage pour le message d'alarme de BC-Mix</comment>
		</variables>
		<variables name="Conf_Gra1_retard_ferm_balance" typeName="TIME" topologicalAddress="%MW7752">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="DO_Agg_Bin8_Open" typeName="EBOOL" topologicalAddress="%Q0.4.7">
			<comment>Open aggregate 'bin 8'</comment>
		</variables>
		<variables name="Alarme_prot_thermique_Skip" typeName="EBOOL" topologicalAddress="%M663">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Conf_techno_basc_TP_skip_gra1" typeName="INT" topologicalAddress="%MW7766">
			<comment>0=Bin 1=BCD 2=TCP_Arpege 3=Ana 4=Profibus</comment>
		</variables>
		<variables name="Alarme_vidange_Anh" typeName="EBOOL" topologicalAddress="%M584"></variables>
		<variables name="Impulsions_attendues" typeName="EBOOL"></variables>
		<variables name="DI_PB_PLC_Emergency_Stop" typeName="EBOOL">
			<comment>Emergency stop' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_granulat1_TON_vibreur_bal" typeName="TIME" topologicalAddress="%MW7758">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="Data_Mesomatic3" typeName="ARRAY[1..5] OF INT">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Conf_techno_basc_anh" typeName="INT" topologicalAddress="%MW8262">
			<comment>0=Bin 1=BCD 2=TCP_Arpege 3=Ana 4=Profibus</comment>
		</variables>
		<variables name="FM_Cde_Manu_PPE" typeName="BOOLARR20"></variables>
		<variables name="fd_doser_Anh_manu" typeName="F_TRIG"></variables>
		<variables name="TON_Ouv_XV3" typeName="TON"></variables>
		<variables name="AI_55_Higher_Saturation" typeName="BOOL">
			<comment>Higher saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.6'.</comment>
		</variables>
		<variables name="Tapis_transfert_bloque" typeName="EBOOL" topologicalAddress="%M590"></variables>
		<variables name="AI_41" typeName="INT">
			<comment>Old %IW105</comment>
		</variables>
		<variables name="Saturation_sup_Adj_Weight5" typeName="BOOL"></variables>
		<variables name="TOF_cde_montee_skip" typeName="TOF"></variables>
		<variables name="DI_60" typeName="EBOOL" topologicalAddress="%I0.1.59">
			<comment>(For displaying the state of the digital input on BC-Mix)</comment>
		</variables>
		<variables name="Conf_anhydrite_pres_bascule" typeName="EBOOL" topologicalAddress="%M394"></variables>
		<variables name="DO_66" typeName="EBOOL" topologicalAddress="%Q0.4.1">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="conf_anhydrite_sens_fc_ouvert" typeName="EBOOL" topologicalAddress="%M402"></variables>
		<variables name="CPT16_COUNTER_CURRENT_VALUE" typeName="DINT" topologicalAddress="%ID0.10.7.2"></variables>
		<variables name="Vidange_skip_dans_TT" typeName="EBOOL"></variables>
		<variables name="Info_prot_mot_Vid_ADJ_PPE" typeName="EBOOL">
			<comment>(Roumanie)</comment>
		</variables>
		<variables name="Alarme_satur_inf_Cim1" typeName="EBOOL" topologicalAddress="%M769"></variables>
		<variables name="CPT14_FORCE_ENABLE" typeName="EBOOL" topologicalAddress="%Q0.10.5.6"></variables>
		<variables name="DO_112" typeName="EBOOL" topologicalAddress="%Q0.4.47">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="FD_VAL_CAM_A" typeName="F_TRIG"></variables>
		<variables name="Manu_cde_vibreur_bal_granulat1" typeName="EBOOL" topologicalAddress="%M713"></variables>
		<variables name="BCMix_DO_123" typeName="EBOOL">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Vibreur_cuves_Eau1" typeName="EBOOL"></variables>
		<variables name="BCMix_DO_32" typeName="EBOOL" topologicalAddress="%M832">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="mot_entree2_ccr3" typeName="WORD" topologicalAddress="%MW5959"></variables>
		<variables name="Poids_instantane_Eau2" typeName="INT" topologicalAddress="%MW4662"></variables>
		<variables name="Stock_manu_Eau_4" typeName="BOOL"></variables>
		<variables name="TP_1" typeName="TP"></variables>
		<variables name="BCMix_DO_7" typeName="EBOOL" topologicalAddress="%M807">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="Stock_manu_Adj_19" typeName="BOOL"></variables>
		<variables name="Conf_DI_Manu_Station" typeName="BOOL"></variables>
		<variables name="Arret_prod_ou_Manu_logiciel" typeName="EBOOL"></variables>
		<variables name="CPT12_FORCE_RESET" typeName="EBOOL" topologicalAddress="%Q0.10.3.7"></variables>
		<variables name="BCMix_DO_43" typeName="EBOOL" topologicalAddress="%M843">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="P2_eau2" typeName="INT" topologicalAddress="%MW8060">
			<comment>Value in points for high point of the calibration for water weigher 2</comment>
		</variables>
		<variables name="AI_41_Lower_Saturation" typeName="BOOL">
			<comment>Lower saturation of the analogue signal. For AMI module (M340) the adress type is : '%IWx.y.z.1.5'.</comment>
		</variables>
		<variables name="Conf_AU_adjuvant_Actif0" typeName="EBOOL" topologicalAddress="%M353"></variables>
		<variables name="COMPARE_ENABLE_CPT" typeName="BOOLARR20"></variables>
		<variables name="Depas_puissance_max_malaxeur1" typeName="EBOOL" topologicalAddress="%M627"></variables>
		<variables name="DO_31" typeName="EBOOL" topologicalAddress="%Q0.3.30">
			<comment>(For displaying the state of the digital output on BC-Mix)</comment>
		</variables>
		<variables name="DO_Agg_Bin10_Open" typeName="EBOOL" topologicalAddress="%Q0.4.9">
			<comment>Open aggregate 'bin 10'</comment>
		</variables>
		<variables name="Conf_Eau2_retard_ferm_balance" typeName="TIME" topologicalAddress="%MW8038">
			<comment>Modifs_M340</comment>
		</variables>
		<variables name="pause_vidange_Adj_C2" typeName="BOOL"></variables>
		<variables name="Defaut_skip" typeName="EBOOL">
			<comment>Défaut devant entrainer l'arrêt du skip</comment>
		</variables>
		<variables name="Conf_bonbonne_tps_max_attente" typeName="TIME" topologicalAddress="%MW8508"></variables>
		<variables name="Recup_voie_ana_Cim1" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="DO_Water2_Fine_Weighing" typeName="EBOOL">
			<comment>Activate fine weighing on the current tank of the 'water 2' weighing line ['0' or '1' for 'ON']</comment>
		</variables>
		<variables name="FD_manu_2_Cim" typeName="F_TRIG"></variables>
		<variables name="Pup_Cde_RAZ_alarmes" typeName="BOOL"></variables>
		<variables name="Info_RAZ_Alarmes" typeName="EBOOL" topologicalAddress="%M63"></variables>
		<variables name="Index_E" typeName="INT"></variables>
		<variables name="Pulse_TON_1_RAZ_Alarme_Q" typeName="EBOOL"></variables>
		<variables name="Pulse_TON_2_RAZ_Alarme_Q" typeName="EBOOL"></variables>
		<variables name="TON_1_RAZ_Alarmes" typeName="TON"></variables>
		<variables name="TON_2_RAZ_Alarmes" typeName="TON"></variables>
		<variables name="fin_vidange_comp2_adj" typeName="EBOOL"></variables>
		<variables name="zz_X" typeName="INT"></variables>
		<variables name="zz_X2" typeName="INT"></variables>
		<variables name="RAZ_Alarmes" typeName="EBOOL"></variables>
		<variables name="DI_PB_Reset_Alarms" typeName="EBOOL">
			<comment>Reset alarms' pushbutton pressed ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_PP_Process_Tol_Default" typeName="INTARR20" topologicalAddress="%MW7543">
			<comment>Tolerance de dosage trié par pompe (déterminé à partir des tolérances des cuves)</comment>
		</variables>
		<variables name="Conf_Adj_origine_pompes" typeName="ARRAY[1..20] OF INT">
			<comment>0=pompe non associee a une cuve adj, &gt;0=numero de cuve adj associee a la pompe</comment>
		</variables>
		<variables name="Conf_Eau_origine_pompes" typeName="ARRAY[1..20] OF INT">
			<comment>0=pompe non associee a une cuve eau, &gt;0=numero de cuve eau associee a la pompe</comment>
		</variables>
		<variables name="Analyse_glissante_MastCycleTime" typeName="Rolling_analysis"></variables>
		<variables name="Conf_mise_a_jour_configuration" typeName="EBOOL" topologicalAddress="%M439"></variables>
		<variables name="bit_envoi_config" typeName="EBOOL">
			<comment>Bit mis à 1 sur un cycle lorsque BC-Mix vient d'envoyer la config à l'API</comment>
		</variables>
		<variables name="Idx_cuve" typeName="INT"></variables>
		<variables name="Pulse_conf_mise_a_jour_config" typeName="EBOOL"></variables>
		<variables name="Cde_dosage_Ppe_copie" typeName="ARRAY[0..20] OF BOOL">
			<comment>Copie interne. L'élément à l'index 0 est utilisé lors de la conversion {num cuve}-&gt;{num pompe} lorsque la cuve n'a pas de pompe associée.</comment>
		</variables>
		<variables name="Cde_dosage_Adj_ppe" typeName="BOOLARR20">
			<comment>Idem que 'Cde_dosage_ppe', mais trié par cuve à adjuvant</comment>
		</variables>
		<variables name="Cde_dosage_Eau_ppe" typeName="BOOLARR4">
			<comment>Idem que 'Cde_dosage_ppe', mais trié par cuve à eau</comment>
		</variables>
		<variables name="BP_dosage_Ppe" typeName="BOOLARR20">
			<comment>copie interne faite à partir des BP_dosage_adj[*] et BP_dosage_eau_*</comment>
		</variables>
		<variables name="BP_dosage_Eau" typeName="BOOLARR4">
			<comment>copie interne des BP_dosage_eau_*</comment>
		</variables>
		<variables name="zzDiag_Dataset_1" typeName="Diag_dataset">
			<comment>Réservé pour diagnostic</comment>
		</variables>
		<variables name="Cde_bascule_Cim1_vide___old" typeName="EBOOL"></variables>
		<variables name="DO_Cem1_Weigher_Empty_old" typeName="EBOOL">
			<comment>(Signal for cement pneumatic transfer) The 'cement 1' weigher is empty (old version of STOR_bascule_cim1_vide)</comment>
		</variables>
		<variables name="Gestion_CCRs_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Dosage_Add_ACTIVE" typeName="EBOOL"></variables>
		<variables name="BP_dosage_Add_1" typeName="EBOOL" topologicalAddress="%M137"></variables>
		<variables name="BP_dosage_Add_2" typeName="EBOOL" topologicalAddress="%M138"></variables>
		<variables name="BP_dosage_Add_3" typeName="EBOOL" topologicalAddress="%M139"></variables>
		<variables name="BP_dosage_Add_4" typeName="EBOOL" topologicalAddress="%M140"></variables>
		<variables name="Cde_vidange_bascule_Add" typeName="EBOOL" topologicalAddress="%M264"></variables>
		<variables name="Cde_petite_vitesse_Add" typeName="EBOOL" topologicalAddress="%M270"></variables>
		<variables name="Cde_vibreur_balance_Add" typeName="EBOOL" topologicalAddress="%M271"></variables>
		<variables name="conf_basc_add_pres_bascule" typeName="EBOOL" topologicalAddress="%M275"></variables>
		<variables name="sens_pesage_fin_basc_add" typeName="EBOOL" topologicalAddress="%M276"></variables>
		<variables name="conf_basc_add_sens_fc_vidange" typeName="EBOOL" topologicalAddress="%M277"></variables>
		<variables name="conf_basc_add_binaire" typeName="EBOOL" topologicalAddress="%M278">
			<comment>Mappage inutile depuis P706</comment>
		</variables>
		<variables name="conf_basc_add_bcd" typeName="EBOOL" topologicalAddress="%M279"></variables>
		<variables name="conf_basc_add_val_actif_1" typeName="EBOOL" topologicalAddress="%M280"></variables>
		<variables name="conf_basc_add_positif_a_1" typeName="EBOOL" topologicalAddress="%M281"></variables>
		<variables name="conf_basc_add_mode_decomptage" typeName="EBOOL" topologicalAddress="%M282"></variables>
		<variables name="conf_basc_add_pesage_individuel" typeName="EBOOL" topologicalAddress="%M283"></variables>
		<variables name="Conf_basc_add_ctrl_vide" typeName="EBOOL" topologicalAddress="%M284"></variables>
		<variables name="Conf_basc_add_ctrl_vide_actif0" typeName="EBOOL" topologicalAddress="%M285"></variables>
		<variables name="Conf_basc_add_capt_capot1" typeName="EBOOL" topologicalAddress="%M286"></variables>
		<variables name="remplacement_Add" typeName="EBOOL" topologicalAddress="%M495"></variables>
		<variables name="Info_balance_Add_fermee" typeName="EBOOL" topologicalAddress="%M51"></variables>
		<variables name="Manu_cde_PV_add" typeName="EBOOL" topologicalAddress="%M748"></variables>
		<variables name="Manu_cde_vidange_basc_add" typeName="EBOOL" topologicalAddress="%M749"></variables>
		<variables name="Manu_cde_vibreur_bal_add" typeName="EBOOL" topologicalAddress="%M750"></variables>
		<variables name="Manu_cde_dosage_add" typeName="EBOOL" topologicalAddress="%M751"></variables>
		<variables name="Basc_add_vide" typeName="EBOOL" topologicalAddress="%M948"></variables>
		<variables name="Poids_sup_seuil_vide_Add" typeName="EBOOL" topologicalAddress="%M952"></variables>
		<variables name="Pesee_bloquee_Add" typeName="EBOOL" topologicalAddress="%M953"></variables>
		<variables name="Pesee_incomplete_Add" typeName="EBOOL" topologicalAddress="%M954"></variables>
		<variables name="Tol_inf_Add" typeName="EBOOL" topologicalAddress="%M955">
			<comment>tolérance inférieure</comment>
		</variables>
		<variables name="Basc_instable_Add" typeName="EBOOL" topologicalAddress="%M956"></variables>
		<variables name="Depassement_tolerance_Add" typeName="EBOOL" topologicalAddress="%M957"></variables>
		<variables name="Discordance_vidange_basc_add" typeName="EBOOL" topologicalAddress="%M958"></variables>
		<variables name="Alarme_vidange_Add" typeName="EBOOL" topologicalAddress="%M959"></variables>
		<variables name="Alarme_poids_max_Add" typeName="EBOOL" topologicalAddress="%M960"></variables>
		<variables name="Vidange_bloquee_Add" typeName="EBOOL" topologicalAddress="%M961"></variables>
		<variables name="Alarme_detare_Add" typeName="EBOOL" topologicalAddress="%M962"></variables>
		<variables name="Alarme_IDE500_Add" typeName="EBOOL" topologicalAddress="%M963"></variables>
		<variables name="Alarme_satur_inf_Add" typeName="EBOOL" topologicalAddress="%M964"></variables>
		<variables name="Alarme_satur_sup_Add" typeName="EBOOL" topologicalAddress="%M965"></variables>
		<variables name="Alarme_capot1_ouvert_Add" typeName="EBOOL" topologicalAddress="%M966"></variables>
		<variables name="NG_Add" typeName="INT" topologicalAddress="%MW4529"></variables>
		<variables name="Numero_produit_Add" typeName="INT" topologicalAddress="%MW4549"></variables>
		<variables name="Poids_demande_Add" typeName="INT" topologicalAddress="%MW4562"></variables>
		<variables name="Poids_deja_pese_Add" typeName="INT" topologicalAddress="%MW4594"></variables>
		<variables name="Poids_instantane_Add" typeName="DINT" topologicalAddress="%MW4668"></variables>
		<variables name="Poids_real_Add" typeName="REAL" topologicalAddress="%MW4704"></variables>
		<variables name="BCMix_Pds_Add" typeName="ARRAY[1..4] OF INT" topologicalAddress="%MW4711"></variables>
		<variables name="Cde_dosage_Add" typeName="BOOLARR4" topologicalAddress="%MW4749"></variables>
		<variables name="Ecart_pesee_Add" typeName="INT" topologicalAddress="%MW4797"></variables>
		<variables name="Ecart_pesee_en_taux_Add" typeName="INT" topologicalAddress="%MW4806"></variables>
		<variables name="Pese_Add_auto" typeName="UDINTARR4" topologicalAddress="%MW5090">
			<comment>Suivi conso (lec BCMIX)</comment>
		</variables>
		<variables name="Pese_Add_manu" typeName="UDINTARR4" topologicalAddress="%MW5100">
			<comment>Suivi conso (lec BCMIX)</comment>
		</variables>
		<variables name="Poids_simu_Add" typeName="ARRAY[1..4] OF WORD" topologicalAddress="%MW5415"></variables>
		<variables name="Produit_remplacement_Add" typeName="INT" topologicalAddress="%MW5509"></variables>
		<variables name="Erreur_jetee_Add" typeName="INT" topologicalAddress="%MW5526"></variables>
		<variables name="Manu_Tps_dosage_Add" typeName="TIME" topologicalAddress="%MW5550"></variables>
		<variables name="Numero_manu_Add" typeName="INT" topologicalAddress="%MW5567"></variables>
		<variables name="Conf_Add_Process_Tol_Default" typeName="INTARR4" topologicalAddress="%MW7566"></variables>
		<variables name="Conf_Add_limite_sous_dosage" typeName="INTARR4" topologicalAddress="%MW7571">
			<comment>Correction gachee sur gachee</comment>
		</variables>
		<variables name="Conf_Add_pesage_fin" typeName="INTARR4" topologicalAddress="%MW7581"></variables>
		<variables name="Conf_Add_TON_pesage_fin" typeName="TIMEARR4" topologicalAddress="%MW7586"></variables>
		<variables name="Conf_Add_TOFF_pesage_fin" typeName="TIMEARR4" topologicalAddress="%MW7596"></variables>
		<variables name="Conf_Add_TON_vibreur" typeName="TIMEARR4" topologicalAddress="%MW7606"></variables>
		<variables name="Conf_Add_TOFF_vibreur" typeName="TIMEARR4" topologicalAddress="%MW7616"></variables>
		<variables name="Conf_Add_nb_vibreur" typeName="INTARR4" topologicalAddress="%MW7626"></variables>
		<variables name="Conf_Add_TON_ajustement" typeName="TIMEARR4" topologicalAddress="%MW7632"></variables>
		<variables name="Conf_Add_TOFF_ajustement" typeName="TIMEARR4" topologicalAddress="%MW7642"></variables>
		<variables name="Conf_Add_tps_ecoulement" typeName="TIMEARR4" topologicalAddress="%MW7652"></variables>
		<variables name="Conf_add_tps_apres_coulant" typeName="TIMEARR4" topologicalAddress="%MW7662"></variables>
		<variables name="Ajustement_auto_Add" typeName="BOOLARR4" topologicalAddress="%MW7672"></variables>
		<variables name="Conf_basc_add_seuil_vide" typeName="INT" topologicalAddress="%MW8700"></variables>
		<variables name="Conf_basc_add_seuil_maxi" typeName="INT" topologicalAddress="%MW8701"></variables>
		<variables name="Conf_basc_add_seuil_mini" typeName="INT" topologicalAddress="%MW8702"></variables>
		<variables name="Conf_basc_add_ecart_stabilite" typeName="INT" topologicalAddress="%MW8703"></variables>
		<variables name="Conf_basc_add_tps_stabilisation" typeName="TIME" topologicalAddress="%MW8704"></variables>
		<variables name="Conf_basc_add_tps_max_stab" typeName="TIME" topologicalAddress="%MW8706"></variables>
		<variables name="Conf_basc_add_tps_vidange" typeName="TIME" topologicalAddress="%MW8708"></variables>
		<variables name="Conf_basc_add_retard_ferm" typeName="TIME" topologicalAddress="%MW8710"></variables>
		<variables name="Conf_basc_add_tps_reponse" typeName="TIME" topologicalAddress="%MW8712"></variables>
		<variables name="Conf_basc_add_tps_max_pesage" typeName="TIME" topologicalAddress="%MW8714"></variables>
		<variables name="Conf_basc_add_TON_vibreur_bal" typeName="TIME" topologicalAddress="%MW8716"></variables>
		<variables name="Conf_basc_add_TOFF_vibreur_bal" typeName="TIME" topologicalAddress="%MW8718"></variables>
		<variables name="Conf_basc_add_nb_vibreur_bal" typeName="INT" topologicalAddress="%MW8720"></variables>
		<variables name="Conf_basc_add_filtre_Coef" typeName="INT" topologicalAddress="%MW8721">
			<variableInit value="100"></variableInit>
		</variables>
		<variables name="Conf_basc_add_filtre_Nb_Vals" typeName="INT" topologicalAddress="%MW8722">
			<variableInit value="3"></variableInit>
		</variables>
		<variables name="voie_basc_Add_Weight1" typeName="INT" topologicalAddress="%MW8723"></variables>
		<variables name="Conf_techno_basc_add" typeName="INT" topologicalAddress="%MW8724">
			<comment>0=Bin 1=BCD 2=TCP_Arpege 3=Ana 4=Profibus</comment>
		</variables>
		<variables name="W1_add_Weight1" typeName="REAL" topologicalAddress="%MW8726">
			<comment>Value in kg for low point of the calibration for add weigher</comment>
		</variables>
		<variables name="W2_add_Weight1" typeName="REAL" topologicalAddress="%MW8728">
			<comment>Value in kg for high point of the calibration for add weigher</comment>
		</variables>
		<variables name="P1_add_Weight1" typeName="INT" topologicalAddress="%MW8730">
			<comment>Value in point for low point of the calibration for add weigher</comment>
		</variables>
		<variables name="P2_add_Weight1" typeName="INT" topologicalAddress="%MW8732">
			<comment>Value in point for high point of the calibration for add weigher</comment>
		</variables>
		<variables name="Conf_multipl_basc_add" typeName="REAL" topologicalAddress="%MW8734"></variables>
		<variables name="Conf_basc_add_nb_organes" typeName="INT" topologicalAddress="%MW8736"></variables>
		<variables name="Conf_basc_add_dest" typeName="INT" topologicalAddress="%MW8737">
			<comment>0=Bypass, 1=Mal1, 2=Mal2, 3=S-Seche, 4=Camion, 5=Gra1, 6=Gra2, 7=Tapis transf, 8=Skip transf, 9=TT gra, 10=Cim1, 11=Cim2, 12=TT cim, 13=Eau1, 14=Eau2, 15=Adj, 16=Adj Comp2, 17=Anh</comment>
		</variables>
		<variables name="Conf_basc_add_tps_filt_ctrl_vide" typeName="TIME" topologicalAddress="%MW8738"></variables>
		<variables name="voie_basc_Add_Weight2" typeName="INT" topologicalAddress="%MW8752"></variables>
		<variables name="W1_add_Weight2" typeName="REAL" topologicalAddress="%MW8754">
			<comment>Value in kg for low point of the calibration for add weigher</comment>
		</variables>
		<variables name="W2_add_Weight2" typeName="REAL" topologicalAddress="%MW8756">
			<comment>Value in kg for high point of the calibration for add weigher</comment>
		</variables>
		<variables name="P1_add_Weight2" typeName="INT" topologicalAddress="%MW8758">
			<comment>Value in point for low point of the calibration for add weigher</comment>
		</variables>
		<variables name="P2_add_Weight2" typeName="INT" topologicalAddress="%MW8760">
			<comment>Value in point for high point of the calibration for add weigher</comment>
		</variables>
		<variables name="voie_basc_Add_Weight3" typeName="INT" topologicalAddress="%MW8762"></variables>
		<variables name="W1_add_Weight3" typeName="REAL" topologicalAddress="%MW8764">
			<comment>Value in kg for low point of the calibration for add weigher</comment>
		</variables>
		<variables name="W2_add_Weight3" typeName="REAL" topologicalAddress="%MW8766">
			<comment>Value in kg for high point of the calibration for add weigher</comment>
		</variables>
		<variables name="P1_add_Weight3" typeName="INT" topologicalAddress="%MW8768">
			<comment>Value in point for low point of the calibration for add weigher</comment>
		</variables>
		<variables name="P2_add_Weight3" typeName="INT" topologicalAddress="%MW8770">
			<comment>Value in point for high point of the calibration for add weigher</comment>
		</variables>
		<variables name="voie_basc_Add_Weight4" typeName="INT" topologicalAddress="%MW8772"></variables>
		<variables name="W1_add_Weight4" typeName="REAL" topologicalAddress="%MW8774">
			<comment>Value in kg for low point of the calibration for add weigher</comment>
		</variables>
		<variables name="W2_add_Weight4" typeName="REAL" topologicalAddress="%MW8776">
			<comment>Value in kg for high point of the calibration for add weigher</comment>
		</variables>
		<variables name="P1_add_Weight4" typeName="INT" topologicalAddress="%MW8778">
			<comment>Value in point for low point of the calibration for add weigher</comment>
		</variables>
		<variables name="P2_add_Weight4" typeName="INT" topologicalAddress="%MW8780">
			<comment>Value in point for high point of the calibration for add weigher</comment>
		</variables>
		<variables name="Etape_280_010_Init_Section" typeName="BOOL"></variables>
		<variables name="Etape_280_020_Att_Donnees_TG" typeName="BOOL"></variables>
		<variables name="Etape_280_030_Verif_Qte_Demandee" typeName="BOOL"></variables>
		<variables name="Etape_280_040_Decla_prod_present" typeName="BOOL"></variables>
		<variables name="Etape_280_050_Att_Basc_Prete" typeName="BOOL"></variables>
		<variables name="Etape_280_060_Decla_Dos_En_Cours" typeName="BOOL"></variables>
		<variables name="Etape_280_070_Init_Dosage" typeName="BOOL"></variables>
		<variables name="Etape_280_080_Dosage" typeName="BOOL"></variables>
		<variables name="Etape_280_090_Ecr_Compte_Rendu" typeName="BOOL"></variables>
		<variables name="Etape_280_100_Prod_Suivant" typeName="BOOL"></variables>
		<variables name="Etape_280_190_Decla_Dos_Termine" typeName="BOOL"></variables>
		<variables name="Etape_280_200_Gachee_Suivante" typeName="BOOL"></variables>
		<variables name="Etape_280_Designee" typeName="EBOOL"></variables>
		<variables name="Memo_Basc_stable_Add" typeName="BOOL"></variables>
		<variables name="Bloc_fonction_Add_Actif" typeName="BOOL"></variables>
		<variables name="Seuil_vide_atteint_Add" typeName="EBOOL"></variables>
		<variables name="Etat_balance_Add" typeName="BOOL"></variables>
		<variables name="NP_Add" typeName="INT"></variables>
		<variables name="Pesee_suivante_Add" typeName="EBOOL"></variables>
		<variables name="Limite_correction_Add" typeName="INT"></variables>
		<variables name="Poids_de_reference_Add" typeName="INT"></variables>
		<variables name="Numero_produit_Add_cumul" typeName="INT"></variables>
		<variables name="Numero_produit_Add_initial" typeName="INT"></variables>
		<variables name="Poids_vise_deja_ecrit_Add" typeName="BOOL"></variables>
		<variables name="CGG_activee_Add" typeName="BOOL"></variables>
		<variables name="Flags_pesage_Add" typeName="flags_pesage_struct"></variables>
		<variables name="Defaut_Add" typeName="EBOOL"></variables>
		<variables name="TON_TOFF_AJU_Add" typeName="TON_TOFF"></variables>
		<variables name="TON_TOFF_PV_Add" typeName="TON_TOFF"></variables>
		<variables name="TON_TOFF_VIB_Add" typeName="TON_TOFF"></variables>
		<variables name="PESA_Add" typeName="PESA"></variables>
		<variables name="Cde_dosage_generale_Add" typeName="EBOOL"></variables>
		<variables name="Petite_vitesse_Add" typeName="EBOOL"></variables>
		<variables name="Vibreur_organes_Add" typeName="EBOOL"></variables>
		<variables name="TON_manu_Add" typeName="TON"></variables>
		<variables name="FD_manu_1_Add" typeName="F_TRIG"></variables>
		<variables name="FD_manu_2_Add" typeName="F_TRIG"></variables>
		<variables name="Vidange_Add" typeName="EBOOL"></variables>
		<variables name="Bit_cde_dos_Add" typeName="BOOL"></variables>
		<variables name="Alarme_bloquante_dosage_Add" typeName="BOOL"></variables>
		<variables name="Poids_bin_BCD_Adj" typeName="WORD"></variables>
		<variables name="Poids_bin_BCD_Anh" typeName="WORD"></variables>
		<variables name="Poids_bin_BCD_Cim1" typeName="WORD"></variables>
		<variables name="Poids_bin_BCD_Cim2" typeName="WORD"></variables>
		<variables name="Poids_bin_BCD_Eau1" typeName="WORD"></variables>
		<variables name="Poids_bin_BCD_Eau2" typeName="WORD"></variables>
		<variables name="Poids_bin_BCD_Gra1" typeName="WORD"></variables>
		<variables name="Poids_bin_BCD_Gra2" typeName="WORD"></variables>
		<variables name="Poids_bin_BCD_TT_Cim" typeName="WORD"></variables>
		<variables name="Poids_bin_BCD_TT_Gra" typeName="WORD"></variables>
		<variables name="BALANCE_Add_Weight1" typeName="WORD">
			<comment>Adresse en Qt uniquement</comment>
		</variables>
		<variables name="BALANCE_Add_Weight2" typeName="WORD">
			<comment>Adresse en Qt uniquement</comment>
		</variables>
		<variables name="BALANCE_Add_Weight3" typeName="WORD">
			<comment>Adresse en Qt uniquement</comment>
		</variables>
		<variables name="BALANCE_Add_Weight4" typeName="WORD">
			<comment>Adresse en Qt uniquement</comment>
		</variables>
		<variables name="BALANCE_Add_Weight1_M340" typeName="ARRAY[1..16] OF EBOOL">
			<comment>Adresse en M340 uniquement</comment>
		</variables>
		<variables name="BALANCE_Add_Weight2_M340" typeName="ARRAY[1..16] OF EBOOL">
			<comment>Adresse en M340 uniquement</comment>
		</variables>
		<variables name="BALANCE_Add_Weight3_M340" typeName="ARRAY[1..16] OF EBOOL">
			<comment>Adresse en M340 uniquement</comment>
		</variables>
		<variables name="BALANCE_Add_Weight4_M340" typeName="ARRAY[1..16] OF EBOOL">
			<comment>Adresse en M340 uniquement</comment>
		</variables>
		<variables name="Recup_voie_ana_Add_Weight1" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="Recup_voie_ana_Add_Weight2" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="Recup_voie_ana_Add_Weight3" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="Recup_voie_ana_Add_Weight4" typeName="RECUP_VOIE_ANA"></variables>
		<variables name="Simuler_dosage_Add" typeName="BOOL"></variables>
		<variables name="LEC_ARPEGE_Add_Weight1" typeName="LEC_ARPEGE"></variables>
		<variables name="LEC_ARPEGE_Add_Weight2" typeName="LEC_ARPEGE"></variables>
		<variables name="LEC_ARPEGE_Add_Weight3" typeName="LEC_ARPEGE"></variables>
		<variables name="LEC_ARPEGE_Add_Weight4" typeName="LEC_ARPEGE"></variables>
		<variables name="Poids_bin_BCD_Add" typeName="ARRAY[1..4] OF WORD"></variables>
		<variables name="AI_Add_Value" typeName="ARRAY[1..4] OF INT"></variables>
		<variables name="Surcharge_Add" typeName="ARRAY[1..4] OF BOOL"></variables>
		<variables name="Detarage_Add" typeName="ARRAY[1..4] OF BOOL"></variables>
		<variables name="Saturation_inf_Add" typeName="ARRAY[1..4] OF BOOL"></variables>
		<variables name="Saturation_sup_Add" typeName="ARRAY[1..4] OF BOOL"></variables>
		<variables name="Pds_Add" typeName="ARRAY[1..4] OF REAL"></variables>
		<variables name="LEC_BIN_BCD_Add_Weight1" typeName="LEC_BIN_BCD"></variables>
		<variables name="Alarme_IDE500_Add_Weight" typeName="ARRAY[1..4] OF BOOL"></variables>
		<variables name="LEC_BIN_BCD_Add_Weight2" typeName="LEC_BIN_BCD"></variables>
		<variables name="LEC_BIN_BCD_Add_Weight3" typeName="LEC_BIN_BCD"></variables>
		<variables name="LEC_BIN_BCD_Add_Weight4" typeName="LEC_BIN_BCD"></variables>
		<variables name="LEC_ANA_Add_Weight1" typeName="LEC_ANA"></variables>
		<variables name="LEC_ANA_Add_Weight2" typeName="LEC_ANA"></variables>
		<variables name="LEC_ANA_Add_Weight3" typeName="LEC_ANA"></variables>
		<variables name="LEC_ANA_Add_Weight4" typeName="LEC_ANA"></variables>
		<variables name="Conf_Admix_Add_Step" typeName="INT">
			<comment>step for additionnal weigher</comment>
		</variables>
		<variables name="Amp_Add" typeName="ARRAY[1..4] OF REAL">
			<comment>valeur en Ampere (debug)</comment>
		</variables>
		<variables name="Conf_Add_Ana_Offset" typeName="INT">
			<comment>offset for additionnal weigher</comment>
		</variables>
		<variables name="Idx_org" typeName="INT"></variables>
		<variables name="Poids_instantane_Add_EC" typeName="INT">
			<comment>Correspond à la ligne de poids en cours (à la différence de 'Poids_instantane_Add' qui est la somme des lignes de poids, et qui est sur un DINT)</comment>
		</variables>
		<variables name="Pup_Cde_vid_basc_Add" typeName="BOOL"></variables>
		<variables name="Pup_Cde_PV_Add" typeName="BOOL"></variables>
		<variables name="Pup_Cde_vibreur_Add" typeName="BOOL"></variables>
		<variables name="Pup_Cde_dos_Add" typeName="ARRAY[1..4] OF BOOL"></variables>
		<variables name="DI_Add_Tank1_PB_PLC_Open" typeName="EBOOL">
			<comment>Open additional 'tank 1'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Add_Tank2_PB_PLC_Open" typeName="EBOOL">
			<comment>Open additional 'tank 2'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Add_Tank3_PB_PLC_Open" typeName="EBOOL">
			<comment>Open additional 'tank 3'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Add_Tank4_PB_PLC_Open" typeName="EBOOL">
			<comment>Open additional 'tank 4'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Add_PB_PLC_Slow_Weighing" typeName="EBOOL">
			<comment>Slow weighing on 'additional' line' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Add_Extraction_Aid_PB_PLC_ON" typeName="EBOOL">
			<comment>Aid extraction on additional line' pushbutton pressed (vibrator, air shock, …) - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Add_Weigher_PB_PLC_Open" typeName="EBOOL">
			<comment>Open 'additional' weigher' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Add_Weigher_Closed" typeName="EBOOL">
			<comment>Additional weigher closed ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Storage_Add_hood1_Opened" typeName="EBOOL">
			<comment>Additional storage 1 cover open ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Add_Weigher_Empty" typeName="EBOOL">
			<comment>Additional weigher empty ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Add_Storage1_PB_Pro_Open" typeName="EBOOL">
			<comment>Open additional 'storage 1'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Add_Storage2_PB_Pro_Open" typeName="EBOOL">
			<comment>Open additional 'storage 2'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Add_Storage3_PB_Pro_Open" typeName="EBOOL">
			<comment>Open additional 'storage 3'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Add_Storage4_PB_Pro_Open" typeName="EBOOL">
			<comment>Open additional 'storage 4'' pushbutton pressed - Direct-to-process console (France) ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DO_Add1_Open" typeName="EBOOL">
			<comment>Open additional 'storage 1'</comment>
		</variables>
		<variables name="DO_Add2_Open" typeName="EBOOL">
			<comment>Open additional 'storage 2'</comment>
		</variables>
		<variables name="DO_Add3_Open" typeName="EBOOL">
			<comment>Open additional 'storage 3'</comment>
		</variables>
		<variables name="DO_Add4_Open" typeName="EBOOL">
			<comment>Open additional 'storage 4'</comment>
		</variables>
		<variables name="DO_Add_Fine_Weighing" typeName="EBOOL">
			<comment>Activate fine weighing on the current additional storage ['0' or '1' for 'ON']</comment>
		</variables>
		<variables name="DO_Add_Weigher_Extraction_Aid" typeName="EBOOL">
			<comment>Activate extraction aid of 'additional' line (for storage units and weigher)</comment>
		</variables>
		<variables name="DO_Add_Weigher_Open" typeName="EBOOL">
			<comment>Open additional weigher</comment>
		</variables>
		<variables name="DO_Add1_Weigher_Open" typeName="EBOOL">
			<comment>Open additional weigher only if 'storage unit 1' was used for the batch</comment>
		</variables>
		<variables name="DO_Add2_Weigher_Open" typeName="EBOOL">
			<comment>Open additional weigher only if 'storage unit 2' was used for the batch</comment>
		</variables>
		<variables name="DO_Add3_Weigher_Open" typeName="EBOOL">
			<comment>Open additional weigher only if 'storage unit 3' was used for the batch</comment>
		</variables>
		<variables name="DO_Add4_Weigher_Open" typeName="EBOOL">
			<comment>Open additional weigher only if 'storage unit 4' was used for the batch</comment>
		</variables>
		<variables name="Conf_TT_cim_sens_fc_ferme" typeName="EBOOL" topologicalAddress="%M444"></variables>
		<variables name="Info_ctrl_vide_basc_add" typeName="EBOOL"></variables>
		<variables name="Info_capot1_ouvert_stock_add" typeName="EBOOL" topologicalAddress="%M64"></variables>
		<variables name="Cde_vidange_bascule_Add_Organe" typeName="ARRAY[1..4] OF EBOOL"></variables>
		<variables name="Auto_ouv_basc_Add" typeName="BOOL"></variables>
		<variables name="Manu_Log_ouv_basc_Add" typeName="BOOL"></variables>
		<variables name="Manu_Pup_ouv_basc_Add" typeName="BOOL"></variables>
		<variables name="Tempo_vibreur_Add" typeName="TP"></variables>
		<variables name="Vibreur_balance_Add" typeName="EBOOL"></variables>
		<variables name="Auto_Vibreur_Add" typeName="BOOL"></variables>
		<variables name="Manu_Log_Vibreur_Add" typeName="BOOL"></variables>
		<variables name="Manu_Pup_Vibreur_Add" typeName="BOOL"></variables>
		<variables name="FBI_77_504" typeName="VIB_BAL"></variables>
		<variables name="Stock_Add_auto" typeName="BOOL"></variables>
		<variables name="Stock_Add_manu" typeName="BOOL"></variables>
		<variables name="Doser_Add_auto" typeName="BOOL"></variables>
		<variables name="fm_doser_Add_auto" typeName="R_TRIG"></variables>
		<variables name="test_fm_dos_Add_auto" typeName="BOOL"></variables>
		<variables name="Cumul_Add_auto" typeName="STOCK5"></variables>
		<variables name="Cumul_Add_auto_stable" typeName="BOOL"></variables>
		<variables name="Cumul_Add_auto_deptstab" typeName="BOOL"></variables>
		<variables name="fm_cumul_Add_auto_stable" typeName="R_TRIG"></variables>
		<variables name="Stock_manu_Add_1" typeName="BOOL"></variables>
		<variables name="Stock_manu_Add_2" typeName="BOOL"></variables>
		<variables name="Stock_manu_Add_3" typeName="BOOL"></variables>
		<variables name="Stock_manu_Add_4" typeName="BOOL"></variables>
		<variables name="Numero_Add_pupitre" typeName="NUM_PUP"></variables>
		<variables name="Numero_pupitre_Add_cumul" typeName="INT"></variables>
		<variables name="Presence_cde_pupitre_Add" typeName="BOOL"></variables>
		<variables name="Doser_Add_manu" typeName="BOOL"></variables>
		<variables name="fd_doser_Add_manu" typeName="F_TRIG"></variables>
		<variables name="fm_doser_Add_manu" typeName="R_TRIG"></variables>
		<variables name="Stabilite_Add_en_cours" typeName="BOOL"></variables>
		<variables name="Numero_manu_Add_cumul" typeName="INT"></variables>
		<variables name="Cumul_Add_manu" typeName="STOCK5"></variables>
		<variables name="Cumul_Add_manu_deptstab" typeName="BOOL"></variables>
		<variables name="Cumul_Add_manu_stable" typeName="BOOL"></variables>
		<variables name="fm_cumul_Add_manu_stable" typeName="R_TRIG"></variables>
		<variables name="Cde_dosage_Add_5_Reserve" typeName="ARRAY[1..1] OF BOOL" topologicalAddress="%MW4751"></variables>
		<variables name="Cde_dosage_Cim_7_Reserve" typeName="ARRAY[1..1] OF BOOL" topologicalAddress="%MW4726"></variables>
		<variables name="TON_seuil_vide_Add" typeName="TON"></variables>
		<variables name="Introduction_Add_encours" typeName="EBOOL"></variables>
		<variables name="DIS_BAL_Add" typeName="DIS_BAL"></variables>
		<variables name="Simulation_dosage_Add" typeName="Simulation_dosage"></variables>
		<variables name="Simu_dosage_en_cours_Add" typeName="BOOL"></variables>
		<variables name="Simu_cde_rempl_organe_stock_Add" typeName="ARRAY[1..4] OF BOOL">
			<comment>Utilisé pour la simulation par l'API de la ligne additionnelle en mode décomptage.</comment>
		</variables>
		<variables name="Dummy_Int" typeName="INT">
			<comment>Cette variable n'a aucun rôle fonctionnel</comment>
		</variables>
		<variables name="Dummy_ARRAY_1_4_OF_REAL" typeName="ARRAY[1..4] OF REAL">
			<comment>Cette variable n'a aucun rôle fonctionnel</comment>
		</variables>
		<variables name="Dummy_ARRAY_1_4_OF_BOOL" typeName="ARRAY[1..4] OF BOOL">
			<comment>Cette variable n'a aucun rôle fonctionnel</comment>
		</variables>
		<variables name="Memo_compartiment_Add_non_vide" typeName="ARRAY[1..4] OF BOOL">
			<comment>'Cde_vidange_bascule_Add_Organe[]' sera à faire pour l'organe dont le 'Memo' est à TRUE. De telle sorte que seul les organes sur lesquels un dosage s'est fait s'ouvrent.</comment>
		</variables>
		<variables name="Idx_Org_Add" typeName="INT"></variables>
		<variables name="Pulse_Cde_dosage_Add" typeName="ARRAY[1..4] OF EBOOL"></variables>
		<variables name="Vidange_Add_finie" typeName="EBOOL"></variables>
		<variables name="Pulse_Vidange_Add_finie" typeName="EBOOL"></variables>
		<variables name="Presence_prod_Add" typeName="EBOOL"></variables>
		<variables name="Pesee_Add_terminee" typeName="EBOOL"></variables>
		<variables name="pause_vidange_Add" typeName="BOOL"></variables>
		<variables name="Vid_Add_En_Cours" typeName="EBOOL"></variables>
		<variables name="Top_depart_Vid_Add" typeName="EBOOL"></variables>
		<variables name="Vid_Add_Terminee" typeName="EBOOL"></variables>
		<variables name="Vidange_Dry_Add" typeName="Vidange_Basc_Dry2"></variables>
		<variables name="Intro_Add_terminee" typeName="EBOOL"></variables>
		<variables name="Idx_Vid_Dry_Add" typeName="INT"></variables>
		<variables name="Temps_vid_Dry_Add" typeName="DINT"></variables>
		<variables name="Introduction_Add_terminee" typeName="EBOOL"></variables>
		<variables name="TOF_77_246" typeName="TOF"></variables>
		<variables name="TON_245" typeName="TON"></variables>
		<variables name="Poids_instantane_Add_Cumuls" typeName="ARRAY[1..4] OF INT"></variables>
		<variables name="Consigne_pour_CCR" typeName="INTARR20"></variables>
		<variables name="Dosage_manu_pupitre_Add" typeName="EBOOL"></variables>
		<variables name="Dosage_manu_pupitre_Anh" typeName="EBOOL"></variables>
		<variables name="Obliger_tps_malaxage_mal1" typeName="EBOOL"></variables>
		<variables name="Obliger_tps_malaxage_mal2" typeName="EBOOL"></variables>
		<variables name="Cde_interdiction_trappes_mal1" typeName="EBOOL"></variables>
		<variables name="Cde_interdiction_trappes_mal2" typeName="EBOOL"></variables>
		<variables name="DO_Mixer1_Gates_Disable" typeName="EBOOL">
			<comment>Disable operating 'mixer 1' gates (until the minimal mixing duration is elapsed)</comment>
		</variables>
		<variables name="DO_Mixer2_Gates_Disable" typeName="EBOOL">
			<comment>Disable operating 'mixer 2' gates (until the minimal mixing duration is elapsed)</comment>
		</variables>
		<variables name="Conf_tampons_ppe_presence" typeName="BOOLARR20" topologicalAddress="%MW8125"></variables>
		<variables name="Cde_vidange_tampon_ppe" typeName="BOOLARR20" topologicalAddress="%MW4759"></variables>
		<variables name="Info_tampon_ppe_vide" typeName="BOOLARR20" topologicalAddress="%MW4892"></variables>
		<variables name="Alarme_vidange_tampons_ppe" typeName="EBOOL" topologicalAddress="%M972"></variables>
		<variables name="Defaut_sequence_Gra1" typeName="EBOOL" topologicalAddress="%M973"></variables>
		<variables name="Conf_Gra1_avec_sequence" typeName="EBOOL" topologicalAddress="%M314"></variables>
		<variables name="Defaut_sequence_Gra2" typeName="EBOOL" topologicalAddress="%M974"></variables>
		<variables name="Conf_Gra2_avec_sequence" typeName="EBOOL" topologicalAddress="%M328"></variables>
		<variables name="Conf_Gra1_tps_sequence_ouv" typeName="TIME" topologicalAddress="%MW7786"></variables>
		<variables name="Conf_Gra1_tps_sequence_att" typeName="TIME" topologicalAddress="%MW7788"></variables>
		<variables name="Conf_Gra2_tps_sequence_ouv" typeName="TIME" topologicalAddress="%MW7850"></variables>
		<variables name="Conf_Gra2_tps_sequence_att" typeName="TIME" topologicalAddress="%MW7852"></variables>
		<variables name="Conf_Gra1_nb_sequence" typeName="INT" topologicalAddress="%MW7790"></variables>
		<variables name="Conf_Gra1_seuil_arret_seq_vid" typeName="INT" topologicalAddress="%MW7791"></variables>
		<variables name="Conf_Gra2_nb_sequence" typeName="INT" topologicalAddress="%MW7854"></variables>
		<variables name="Conf_Gra2_seuil_arret_seq_vid" typeName="INT" topologicalAddress="%MW7855"></variables>
		<variables name="Conf_Cim1_seuil_arret_seq_vid" typeName="INT" topologicalAddress="%MW7915"></variables>
		<variables name="Conf_Cim2_seuil_arret_seq_vid" typeName="INT" topologicalAddress="%MW7967"></variables>
		<variables name="Conf_Anh_seuil_arret_seq_vid" typeName="INT" topologicalAddress="%MW8281"></variables>
		<variables name="Cde_vidange_bascule_Gra1_1" typeName="EBOOL" topologicalAddress="%M218">
			<comment>Commande de la sortie de vidange '1' du mode '2 sorties de vidange'</comment>
		</variables>
		<variables name="Cde_vidange_bascule_Gra1_2" typeName="EBOOL" topologicalAddress="%M219">
			<comment>Commande de la sortie de vidange '2' du mode '2 sorties de vidange'</comment>
		</variables>
		<variables name="Manu_cde_vidange_basc_gra1_1" typeName="EBOOL" topologicalAddress="%M752"></variables>
		<variables name="Manu_cde_vidange_basc_gra1_2" typeName="EBOOL" topologicalAddress="%M753"></variables>
		<variables name="Conf_Gra1_seuil_ouv_ttes_sorties" typeName="INT" topologicalAddress="%MW7792">
			<comment>Utilisé pour bascule à 2 sorties de vidange</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP1_Empty" typeName="EBOOL">
			<comment>Pump 1' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP2_Empty" typeName="EBOOL">
			<comment>Pump 2' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP3_Empty" typeName="EBOOL">
			<comment>Pump 3' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP4_Empty" typeName="EBOOL">
			<comment>Pump 4' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP5_Empty" typeName="EBOOL">
			<comment>Pump 5' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP6_Empty" typeName="EBOOL">
			<comment>Pump 6' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP7_Empty" typeName="EBOOL">
			<comment>Pump 7' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP8_Empty" typeName="EBOOL">
			<comment>Pump 8' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP9_Empty" typeName="EBOOL">
			<comment>Pump 9' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP10_Empty" typeName="EBOOL">
			<comment>Pump 10' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP11_Empty" typeName="EBOOL">
			<comment>Pump 11' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP12_Empty" typeName="EBOOL">
			<comment>Pump 12' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP13_Empty" typeName="EBOOL">
			<comment>Pump 13' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP14_Empty" typeName="EBOOL">
			<comment>Pump 14' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP15_Empty" typeName="EBOOL">
			<comment>Pump 15' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP16_Empty" typeName="EBOOL">
			<comment>Pump 16' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP17_Empty" typeName="EBOOL">
			<comment>Pump 17' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP18_Empty" typeName="EBOOL">
			<comment>Pump 18' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP19_Empty" typeName="EBOOL">
			<comment>Pump 19' hopper tank is empty</comment>
		</variables>
		<variables name="DI_Hopper_Tank_PP20_Empty" typeName="EBOOL">
			<comment>Pump 20' hopper tank is empty</comment>
		</variables>
		<variables name="DO_Admix_PP1_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 1' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP20_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 2' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP3_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 3' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP4_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 4' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP5_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 5' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP6_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 6' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP7_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 7' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP8_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 8' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP9_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 9' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP10_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 10' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP11_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 11' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP12_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 12' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP13_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 13' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP14_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 14' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP15_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 15' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP16_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 16' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP17_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 17' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP18_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 18' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP19_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 19' hopper tank</comment>
		</variables>
		<variables name="DO_Admix_PP21_WH_Open" typeName="EBOOL">
			<comment>Open 'pump 20' hopper tank</comment>
		</variables>
		<variables name="Conf_Hopper_Tank_Empty_Time" typeName="TIME">
			<comment>empty threshold not reached</comment>
		</variables>
		<variables name="Conf_Hopper_Tank_Response_Time" typeName="TIME">
			<comment>hopper tank closed</comment>
		</variables>
		<variables name="Conf_Hopper_Tank1_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 1 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank2_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 2 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank3_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 3 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank4_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 4 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank5_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 5 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank6_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 6 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank7_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 7 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank8_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 8 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank9_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 9 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank10_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 10 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank11_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 11 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank12_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 12 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank13_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 13 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank14_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 14 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank15_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 15 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank16_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 16 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank17_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 17 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank18_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 18 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank19_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 19 empty</comment>
		</variables>
		<variables name="Conf_Hopper_Tank20_Empty_Act0" typeName="EBOOL">
			<comment>hopper tank 20 empty</comment>
		</variables>
		<variables name="Stockage_inter_Ppe_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Etape_385_Designee" typeName="BOOLARR20"></variables>
		<variables name="Tampon_ppe_ferme" typeName="BOOLARR20"></variables>
		<variables name="Etape_385_010_Att_Cond_Initiales" typeName="BOOLARR20"></variables>
		<variables name="Etape_385_020_Att_gestion_ccr" typeName="BOOLARR20"></variables>
		<variables name="Etape_385_030_Att_fin_dosage_Ppe" typeName="BOOLARR20"></variables>
		<variables name="Etape_385_040_Att_Demande_Intro" typeName="BOOLARR20"></variables>
		<variables name="Etape_385_050_Vidange_tampon" typeName="BOOLARR20"></variables>
		<variables name="Etape_385_060_Att_Ferm_tampon" typeName="BOOLARR20"></variables>
		<variables name="TON_Ferm_tampon_ppe1" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe2" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe3" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe4" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe5" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe6" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe7" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe8" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe9" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe10" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe11" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe12" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe13" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe14" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe15" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe16" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe17" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe18" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe19" typeName="TON"></variables>
		<variables name="TON_Ferm_tampon_ppe20" typeName="TON"></variables>
		<variables name="Ppe_en_cours" typeName="ARRAY[1..20] OF EBOOL">
			<comment>Mis à 1 à chaque lancement de dosage PPE</comment>
		</variables>
		<variables name="Dem_autorisation_dos_tampon_ppe" typeName="BOOLARR20"></variables>
		<variables name="Autorisation_dosage_tampon_ppe" typeName="BOOLARR20"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe1" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe2" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe3" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe4" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe5" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe6" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe7" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe8" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe9" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe10" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe11" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe12" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe13" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe14" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe15" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe16" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe17" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe18" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe19" typeName="TON"></variables>
		<variables name="TON_Alarme_vidange_tampon_ppe20" typeName="TON"></variables>
		<variables name="Top_depart_Vid_Tampon_Ppe" typeName="EBOOL">
			<comment>Commun pour tous les tampons-pompe</comment>
		</variables>
		<variables name="Mem_Depart_Vid_Tampon_Ppe" typeName="EBOOL"></variables>
		<variables name="Pulse_Top_depart_Vid_Tampon_ppe" typeName="EBOOL"></variables>
		<variables name="Dem_vidange_tampon_ppe" typeName="BOOLARR20"></variables>
		<variables name="IndexSeqVid_Tampon_ppe" typeName="ARRAY[1..20] OF INT"></variables>
		<variables name="Vid_Tampon_ppe_terminee" typeName="BOOLARR20"></variables>
		<variables name="Cond_Vid_Dry7" typeName="BOOL"></variables>
		<variables name="Cond_Vid_Dry8" typeName="BOOL"></variables>
		<variables name="Camion_OK" typeName="EBOOL"></variables>
		<variables name="Camion_OK_Malaxeur_OK" typeName="EBOOL">
			<comment>Autorise l'introduction de la phase 1</comment>
		</variables>
		<variables name="Malaxeur_OK" typeName="EBOOL">
			<comment>Malaxeur en état pour l'introduction</comment>
		</variables>
		<variables name="Pret_pour_intro_produit_ph1" typeName="EBOOL"></variables>
		<variables name="Intros_ph1_terminees" typeName="EBOOL"></variables>
		<variables name="Statut_Pres_Vid_Dry_Ph1" typeName="WORD"></variables>
		<variables name="Est_Seq_Intro_Ph1" typeName="BOOL"></variables>
		<variables name="Sequence_dry_init_fait" typeName="EBOOL"></variables>
		<variables name="FM_Seq_Intro_en_cours" typeName="R_TRIG"></variables>
		<variables name="Dosage_Ppe_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Etape_300_Designee" typeName="EBOOL"></variables>
		<variables name="Etape_300_010_Init_Section" typeName="BOOL"></variables>
		<variables name="Etape_300_030_Verif_Qte_Demandee" typeName="BOOL"></variables>
		<variables name="Etape_300_020_Att_Donnees_TG" typeName="BOOL"></variables>
		<variables name="Etape_300_040_Decla_prod_present" typeName="BOOL"></variables>
		<variables name="Etape_300_060_Decla_Dos_En_Cours" typeName="BOOL"></variables>
		<variables name="Etape_300_050_Att_Dest_Prete" typeName="BOOL"></variables>
		<variables name="Etape_300_070_Init_Dosage" typeName="BOOL"></variables>
		<variables name="Etape_300_080_Att_Fin_Dosage" typeName="BOOL"></variables>
		<variables name="Etape_300_090_Dos_Termine" typeName="BOOL"></variables>
		<variables name="Etape_300_190_Decla_Dos_Termine" typeName="BOOL"></variables>
		<variables name="Etape_300_200_Gachee_Suivante" typeName="BOOL"></variables>
		<variables name="Etape_300_100_Prod_Suivant" typeName="BOOL"></variables>
		<variables name="NG_Ppe" typeName="INT" topologicalAddress="%MW4531"></variables>
		<variables name="NP_Ppe" typeName="INT"></variables>
		<variables name="Numero_produit_Ppe" typeName="INT" topologicalAddress="%MW4551"></variables>
		<variables name="Dest_ppe_prete_tampon_ppe" typeName="BOOL"></variables>
		<variables name="Dest_ppe_prete_camion_ou_malax" typeName="BOOL"></variables>
		<variables name="Dosages_ppe_en_cours_Section300" typeName="ARRAY[1..20] OF EBOOL"></variables>
		<variables name="NP_Compteurs_ppe" typeName="INTARR20">
			<comment>Numéro de l'index du dosage de la zone "Compteurs" qui a conduit à l'activation de la pompe</comment>
		</variables>
		<variables name="Dosage_ppe_en_cours_Section300" typeName="EBOOL"></variables>
		<variables name="Statut_Ppe_en_cours_Section300" typeName="DINT"></variables>
		<variables name="Dosages_ppe_termine_Section300" typeName="ARRAY[1..20] OF EBOOL"></variables>
		<variables name="No_prod_Section300" typeName="INT">
			<comment>Numéro de produit dans la table 'Compteurs'</comment>
		</variables>
		<variables name="Etape_300_180_Att_Fin_Dosages" typeName="BOOL"></variables>
		<variables name="Dosages_Ppe_termines" typeName="EBOOL"></variables>
		<variables name="Presence_prod_Ppe" typeName="EBOOL"></variables>
		<variables name="Pulse_S5_1" typeName="EBOOL"></variables>
		<variables name="Ligne_prete_pour_intro" typeName="EBOOL"></variables>
		<variables name="Liste_Dosages_Ppe_bloquants" typeName="INT"></variables>
		<variables name="Dosage_Ppe_bloquant_pour_intro" typeName="ARRAY[1..5] OF EBOOL"></variables>
		<variables name="Introduction_Tampon_ppe_encours" typeName="EBOOL"></variables>
		<variables name="Introduction_Tampon_ppe_terminee" typeName="EBOOL"></variables>
		<variables name="Nb_intros_tampons_ppe_restantes" typeName="INT"></variables>
		<variables name="Pb_cond_initiales_tampon_ppe" typeName="BOOL"></variables>
		<variables name="Faire_vidange_Gra1" typeName="BOOL"></variables>
		<variables name="Faire_vidange_Gra2" typeName="BOOL"></variables>
		<variables name="Vid_seq_Gra1" typeName="EBOOL"></variables>
		<variables name="Vid_seq_Gra2" typeName="EBOOL"></variables>
		<variables name="Faire_vidange_Anh" typeName="BOOL"></variables>
		<variables name="FBI_77_855" typeName="Seq_Vid_Basc"></variables>
		<variables name="SR_fin_vid_Gra1" typeName="SR"></variables>
		<variables name="FBI_77_856" typeName="Seq_Vid_Basc"></variables>
		<variables name="SR_fin_vid_Gra2" typeName="SR"></variables>
		<variables name="Vid_seq_maint_Anh" typeName="BOOL"></variables>
		<variables name="Vid_seq_maint_Gra1" typeName="BOOL"></variables>
		<variables name="Vid_seq_maint_Gra2" typeName="BOOL"></variables>
		<variables name="Vid_seq_maint_Cim1" typeName="BOOL"></variables>
		<variables name="Vid_seq_maint_Cim2" typeName="BOOL"></variables>
		<variables name="FBI_77_852" typeName="Seq_Vid_Basc"></variables>
		<variables name="SR_fin_vid_Anh" typeName="SR"></variables>
		<variables name="DO_Agg1_Weigher_Output1_Open" typeName="EBOOL">
			<comment>Open 'aggregate 1' weigher, 'output 1' (specific to 2-output mode)</comment>
		</variables>
		<variables name="DO_Agg1_Weigher_Output2_Open" typeName="EBOOL">
			<comment>Open 'aggregate 1' weigher, 'output 2' (specific to 2-output mode)</comment>
		</variables>
		<variables name="DI_Agg1_1_Weigher_PB_PLC_Open" typeName="EBOOL">
			<comment>Open 'aggregate 1' weigher 'output 1'' pushbutton pressed (specific to 2-output mode) - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Agg1_2_Weigher_PB_PLC_Open" typeName="EBOOL">
			<comment>Open 'aggregate 1' weigher 'output 2'' pushbutton pressed (specific to 2-output mode) - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Memo_Seuil_passage_sortie_2_Gra1" typeName="INT"></variables>
		<variables name="Phase_vid_basc_Gra1_a_N_sorties" typeName="INT">
			<comment>1 : Ouvrir sortie 1 / 2 : Ouvrir sortie 2 / 99 : Ouvrir toutes les sorties</comment>
		</variables>
		<variables name="Dest_Gra1_Prete" typeName="BOOL"></variables>
		<variables name="Pup_Cde_vid_basc_Gra1_1" typeName="BOOL"></variables>
		<variables name="Pup_Cde_vid_basc_Gra1_2" typeName="BOOL"></variables>
		<variables name="Conf_ppe_dest" typeName="INTARR20" topologicalAddress="%MW8135">
			<comment>0=Bypass, 1=Mal1, 2=Mal2, 3=S-Seche, 4=Camion, 5=Gra1, 6=Gra2, 7=Tapis transf, 8=Skip transf, 9=TT gra, 10=Cim1, 11=Cim2, 12=TT cim, 13=Eau1, 14=Eau2, 15=Adj, 16=Adj Comp2, 17=Anh</comment>
		</variables>
		<variables name="Dest_ppe_prete_basc_Eau1" typeName="BOOL"></variables>
		<variables name="Attente_fin_phase_3_dry" typeName="BOOL"></variables>
		<variables name="Dos_ppe_vers_Eau1_termines" typeName="BOOL"></variables>
		<variables name="nb_dos_ppe_en_cours_Eau1" typeName="INT">
			<comment>Variable pour synchronisation entre le dosage par pompe et le dosage dans la bascule Eau1</comment>
		</variables>
		<variables name="nb_dos_ppe_en_cours_Eau1_valide" typeName="BOOL">
			<comment>Variable pour synchronisation entre le dosage par pompe et le dosage dans la bascule Eau1</comment>
		</variables>
		<variables name="No_ppe_initial" typeName="INT"></variables>
		<variables name="Intros_terminees" typeName="EBOOL"></variables>
		<variables name="Nouvelle_gachee_a_introduire" typeName="BOOL"></variables>
		<variables name="Sequence_dry_init_en_cours" typeName="EBOOL"></variables>
		<variables name="Com_ETH_HMS_Profibus_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Com_ETH_Arpege_TCP_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Gestion_HMS_Profibus_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Acquisition_entrees_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Lecture_Arpege_TCP_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Lecture_Bin_BCD_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Lecture_Mesomatic_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Lecture_Analogique_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Gestion_Gachees_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Dosage_Gra1_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Dosage_Gra2_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Dosage_Cim_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Dosage_Eau_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Dosage_Adj_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Dosage_Add_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Dosage_Ppe_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Gestion_CCRs_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Dosage_Anh_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Sorties_Anh_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Stockage_inter_Gra_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Stockage_inter_Cim_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Stockage_inter_Ppe_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Pret_pour_Intro_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Intro_Gra_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Intro_autres_produits_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Malaxeur1_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Malaxeur2_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Cumul_pesee_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Discordances_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Restitution_sorties_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Gestion_HMS_Profibus_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Prepa_Acquisition_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Prepa_Acquisition_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Malaxeur1_INIT_EN_COURS" typeName="EBOOL"></variables>
		<variables name="Malaxeur2_INIT_EN_COURS" typeName="EBOOL"></variables>
		<variables name="Dosage_Gra1_INIT_EN_COURS" typeName="EBOOL"></variables>
		<variables name="Dosage_Gra2_INIT_EN_COURS" typeName="EBOOL"></variables>
		<variables name="Dosage_Cim_INIT_EN_COURS" typeName="EBOOL"></variables>
		<variables name="Dosage_Eau_INIT_EN_COURS" typeName="EBOOL"></variables>
		<variables name="Dosage_Adj_INIT_EN_COURS" typeName="EBOOL"></variables>
		<variables name="Dosage_Add_INIT_EN_COURS" typeName="EBOOL"></variables>
		<variables name="Dosage_Anh_INIT_EN_COURS" typeName="EBOOL"></variables>
		<variables name="Preliminaires_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Activ_sections_Divers_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Mode_Simulation_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Initialisations_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="RAZ_Alarmes_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Arrets_Urgence_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Etat_Equipements_ST_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Etat_Equipements_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Sorties_Gra_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Sorties_Cim_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Sorties_Eau_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Sorties_Adj_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Sorties_Add_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Adressage_CCRs_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Remplacement_produits_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Gestion_Glace_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Sequence_Intro_Vidange_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Rampe_Eau_Aspi_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Commandes_pupitre_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Trappes_malaxeurs_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Commandes_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Bypass_Anh_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Simulation_par_API_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Restitution_sorties_ST_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Simulation_par_API_INIT_EN_COURS" typeName="EBOOL"></variables>
		<variables name="Activ_sections_Div_INIT_EN_COURS" typeName="EBOOL"></variables>
		<variables name="Stockage_inter_Ppe_INIT_EN_COURS" typeName="EBOOL"></variables>
		<variables name="conf_TT_pres_capt_ouvert" typeName="EBOOL" topologicalAddress="%M419"></variables>
		<variables name="Mem_vid_basc_Eau2_Ppe" typeName="BOOL"></variables>
		<variables name="Mem_vid_basc_Eau1_Ppe" typeName="BOOL"></variables>
		<variables name="Cde_auto_ppe" typeName="ARRAY[1..20] OF BOOL"></variables>
		<variables name="zzDiag_Timestamp_1" typeName="ARRAY[0..49] OF Diag_timestamp">
			<comment>Réservé pour diagnostic</comment>
		</variables>
		<variables name="zzHorodatage_1" typeName="Diag_Horodatage_v3"></variables>
		<variables name="zzDiag_Inputs_tag_1" typeName="ARRAY[1..16] OF string[40]">
			<comment>Réservé pour diagnostic</comment>
		</variables>
		<variables name="Vidange_tampon_ppe" typeName="BOOLARR20"></variables>
		<variables name="zzInitEspions" typeName="EBOOL">
			<comment>Réservé pour diagnostic</comment>
		</variables>
		<variables name="Start_comptage_ppe_QT" typeName="BOOLARR20">
			<comment>Chargement compteur pour quantum</comment>
		</variables>
		<variables name="Entre_vidanges_Eau1" typeName="EBOOL"></variables>
		<variables name="Poids_avant_vidange_Eau1" typeName="INT"></variables>
		<variables name="Poids_avant_vidange_Eau1_Disp" typeName="BOOL"></variables>
		<variables name="I5" typeName="INT"></variables>
		<variables name="I6" typeName="INT"></variables>
		<variables name="I7" typeName="INT"></variables>
		<variables name="Code_Prod_Decla_en_cours" typeName="INT"></variables>
		<variables name="CR_vidange_Dry_nb_en_cours" typeName="ARRAY[1..14] OF INT"></variables>
		<variables name="CR_vidange_Dry_nb_termines" typeName="ARRAY[1..14] OF INT"></variables>
		<variables name="CR_vidange_Dry_nb_total" typeName="ARRAY[1..14] OF INT"></variables>
		<variables name="Entre_vidanges" typeName="BOOL"></variables>
		<variables name="Attente_fin_vidange_Eau1" typeName="BOOL"></variables>
		<variables name="Vidange_Partielle" typeName="BOOL"></variables>
		<variables name="Vidange_Partielle_Eau1" typeName="EBOOL"></variables>
		<variables name="Skip_peseur_stabilise" typeName="BOOL">
			<comment>Skip peseur arrete et stabilise : les dosages peuvent commencer</comment>
		</variables>
		<variables name="TON_skip_peseur_stabilise" typeName="TON"></variables>
		<variables name="Attente_fin_dos_Add" typeName="BOOL"></variables>
		<variables name="Attente_fin_dos_Adj" typeName="BOOL"></variables>
		<variables name="Attente_fin_dos_Anh" typeName="BOOL"></variables>
		<variables name="Attente_fin_dos_Cim1" typeName="BOOL"></variables>
		<variables name="Attente_fin_dos_Cim2" typeName="BOOL"></variables>
		<variables name="Attente_fin_dos_Eau1" typeName="BOOL"></variables>
		<variables name="Attente_fin_dos_Eau2" typeName="BOOL"></variables>
		<variables name="Attente_fin_dos_Gra1" typeName="BOOL"></variables>
		<variables name="Attente_fin_dos_Gra2" typeName="BOOL"></variables>
		<variables name="Stockage_inter_Color_ACTIVE" typeName="EBOOL"></variables>
		<variables name="Stockage_inter_Color_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Etape_386_0xx_Designee" typeName="EBOOL"></variables>
		<variables name="Etape_386_1xx_Designee" typeName="EBOOL"></variables>
		<variables name="Etape_386_010_Init_Section" typeName="BOOL"></variables>
		<variables name="Etape_386_020_Att_Cond_Initiales" typeName="BOOL"></variables>
		<variables name="Etape_386_030_Autoris_Vidange" typeName="BOOL"></variables>
		<variables name="Etape_386_040_Vidange_En_Cours" typeName="BOOL"></variables>
		<variables name="Etape_386_050_Vidange_Terminee" typeName="BOOL"></variables>
		<variables name="Etape_386_070_Autoris_Transfert" typeName="BOOL"></variables>
		<variables name="Etape_386_080_Transfert_En_Cours" typeName="BOOL"></variables>
		<variables name="Etape_386_110_Att_Aut_Ferm_Clap" typeName="BOOL"></variables>
		<variables name="Etape_386_120_Fermer_clapet_XV2" typeName="BOOL"></variables>
		<variables name="Etape_386_140_Mise_pression_XV3" typeName="BOOL"></variables>
		<variables name="Etape_386_150_Transf_Termine" typeName="BOOL"></variables>
		<variables name="Attente_Autoris_Vidange_Colorant" typeName="EBOOL"></variables>
		<variables name="Etape_386_090_Transfert_Termine" typeName="BOOL"></variables>
		<variables name="Etape_386_060_Autoris_Ferm_Clap" typeName="BOOL"></variables>
		<variables name="Etape_386_130_Att_Autoris_Transf" typeName="BOOL"></variables>
		<variables name="TON_SIMUL_PSL1_MA1" typeName="TON"></variables>
		<variables name="TON_SIMUL_PSL1_MA0" typeName="TON"></variables>
		<variables name="Simu_Colorant_Tps_avant_Ma1_PSL1" typeName="TIME">
			<variableInit value="t#7s"></variableInit>
		</variables>
		<variables name="Simu_Colorant_Tps_avant_Ma0_PSL1" typeName="TIME">
			<variableInit value="t#14s"></variableInit>
		</variables>
		<variables name="Simu_Colorant_Tps_Reponse_XV2" typeName="TIME">
			<variableInit value="t#1s_500ms"></variableInit>
		</variables>
		<variables name="Vidange_Adj_dans_bonb_colorants" typeName="EBOOL"></variables>
		<variables name="Etape_386_2xx_Designee" typeName="EBOOL"></variables>
		<variables name="Etape_386_210_Detect_Fin_Transf1" typeName="BOOL"></variables>
		<variables name="Etape_386_220_Detect_Fin_Transf2" typeName="BOOL"></variables>
		<variables name="Etape_386_230_Fin_Transf_Detecte" typeName="BOOL"></variables>
		<variables name="Pulse_Seuil_vide_atteint_Adj" typeName="EBOOL"></variables>
		<variables name="Discordance_colorants_XV2_1" typeName="EBOOL"></variables>
		<variables name="TON_dis_XV2_1a" typeName="TON"></variables>
		<variables name="TON_dis_XV2_2a" typeName="TON"></variables>
		<variables name="Discordance_colorants_XV2_2" typeName="EBOOL"></variables>
		<variables name="Discordance_colorants_XV2_3" typeName="EBOOL"></variables>
		<variables name="TON_dis_XV2_1b" typeName="TON"></variables>
		<variables name="TON_dis_XV2_2b" typeName="TON"></variables>
		<variables name="Conf_Color_XV2_Wait_After_Close" typeName="TIME"></variables>
		<variables name="Conf_Color_Valid_Time_PSL1" typeName="TIME"></variables>
		<variables name="Conf_Color_Tranf_Time_200g" typeName="TIME"></variables>
		<variables name="Conf_Color_Wait_End_Transf" typeName="TIME"></variables>
		<variables name="Conf_Color_Wait_Airlock_Depress" typeName="TIME"></variables>
		<variables name="Conf_Color_Simu_Admix_Wgh_Close" typeName="TIME"></variables>
		<variables name="Conf_Colo_PSL1_Too_Long" typeName="TIME"></variables>
		<variables name="Conf_Color_XV2_Response_Time" typeName="TIME"></variables>
		<variables name="Conf_Color_XV2_Open_Close_Time" typeName="TIME"></variables>
		<variables name="Etape_386_2xx_Init_a_faire" typeName="BOOL"></variables>
		<variables name="Arret_prod" typeName="EBOOL"></variables>
		<variables name="Numero_manu_pup_Gra1" typeName="INT">
			<comment>Num. de trémie autorisée à être dosée en mode pupitre dans l'organe de pesage Gra1</comment>
		</variables>
		<variables name="Numero_manu_pup_Gra2" typeName="INT">
			<comment>Num. de trémie autorisée à être dosée en mode pupitre dans l'organe de pesage Gra2</comment>
		</variables>
		<variables name="Numero_manu_pup_Cim1" typeName="INT">
			<comment>Num. de silo autorisé à être dosé en mode pupitre dans la bascule Cim1</comment>
		</variables>
		<variables name="Numero_manu_pup_Cim2" typeName="INT">
			<comment>Num. de silo autorisé à être dosé en mode pupitre dans la bascule Cim2</comment>
		</variables>
		<variables name="Numero_manu_pup_Eau1" typeName="INT">
			<comment>Num. de cuve autorisée à être dosée en mode pupitre dans la bascule Eau1</comment>
		</variables>
		<variables name="Numero_manu_pup_Eau2" typeName="INT">
			<comment>Num. de cuve autorisée à être dosée en mode pupitre dans la bascule Eau2</comment>
		</variables>
		<variables name="Numero_manu_pup_Anh" typeName="INT">
			<comment>Num. de trémie/silo autorisé à être dosé en mode pupitre dans la bascule Anh</comment>
		</variables>
		<variables name="Numero_manu_pup_Add" typeName="INT">
			<comment>Num. d'org. de stock. autorisé à être dosé en mode pupitre dans la bascule Add</comment>
		</variables>
		<variables name="Numero_manu_pup_Adj" typeName="INT">
			<comment>Num. de cuve autorisée à être dosée en mode pupitre dans la bascule Adj</comment>
		</variables>
		<variables name="Dest_ppe_Adj" typeName="INT"></variables>
		<variables name="Detect_pompe_vers_Eau1" typeName="BOOL"></variables>
		<variables name="TON_fin_dosage_ppe_vers_Eau1" typeName="TON"></variables>
		<variables name="TON_fin_vidange_dans_Eau1" typeName="TON"></variables>
		<variables name="TON_fin_vidange_dans_Gra1" typeName="TON"></variables>
		<variables name="TON_fin_vidange_dans_Gra2" typeName="TON"></variables>
		<variables name="QdC_basc_valide_Eau1" typeName="ARRAY[0..4] OF INT"></variables>
		<variables name="TON_att_avant_calc_QdC_basc_Eau1" typeName="TON"></variables>
		<variables name="TON_stab_vid_partielle_Eau1" typeName="TON"></variables>
		<variables name="Lire_poids_apres_pause_vid_Eau1" typeName="EBOOL"></variables>
		<variables name="Poids_apres_debut_pause_vid_Eau1" typeName="REAL"></variables>
		<variables name="QdC_basc_valeurs_Eau1" typeName="ARRAY[0..4] OF REAL"></variables>
		<variables name="QdC_basc_moyenne_Eau1" typeName="REAL"></variables>
		<variables name="QdC_basc_somme_valeurs_Eau1" typeName="REAL"></variables>
		<variables name="Poids_avant_debut_pause_vid_Eau1" typeName="REAL"></variables>
		<variables name="Calcul_QdC_basc_Eau1" typeName="EBOOL"></variables>
		<variables name="QdC_basc_nb_valeurs_Eau1" typeName="INT"></variables>
		<variables name="QdC_basc_Index_Eau1" typeName="INT"></variables>
		<variables name="Mesure_QdC_bascules_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Poids_reel_pese_Gra1" typeName="INT"></variables>
		<variables name="Erreur_jetee_mesuree_Gra1" typeName="INT"></variables>
		<variables name="CTU_2" typeName="CTU_UDINT"></variables>
		<variables name="Temps_dep_gra_ph1" typeName="UDINT">
			<comment>temps écoulé depuis la fin du pesage des granulats en 1/10 sec</comment>
		</variables>
		<variables name="Conf_anticipation_gra_phase2" typeName="EBOOL" topologicalAddress="%M331"></variables>
		<variables name="Conf_tps_retard_anticip_gra_ph2" typeName="INT" topologicalAddress="%MW8657"></variables>
		<variables name="Pret_pour_intro_anticip_gra_ph2" typeName="EBOOL"></variables>
		<variables name="FD_VAL_CAM_E" typeName="F_TRIG"></variables>
		<variables name="PULSE_KLAXON_E" typeName="TP"></variables>
		<variables name="cde_klaxon_dry" typeName="EBOOL"></variables>
		<variables name="DO_Horn_Dry_Batch_ON" typeName="EBOOL">
			<comment>Turn horn ON (for a user-defined duration and for dry batch process)</comment>
		</variables>
		<variables name="SR_fin_vid_Cim1_0" typeName="SR"></variables>
		<variables name="FBI_77_857" typeName="Seq_Vid_Basc"></variables>
		<variables name="Faire_vidange_Add" typeName="BOOL"></variables>
		<variables name="conf_Add_avec_sequence" typeName="EBOOL" topologicalAddress="%M292"></variables>
		<variables name="Defaut_sequence_Add" typeName="EBOOL" topologicalAddress="%M970"></variables>
		<variables name="Vid_seq_Add" typeName="EBOOL"></variables>
		<variables name="Conf_Add_tps_sequence_ouv" typeName="TIME" topologicalAddress="%MW8740"></variables>
		<variables name="Conf_Add_tps_sequence_att" typeName="TIME" topologicalAddress="%MW8742"></variables>
		<variables name="Conf_Add_nb_sequence" typeName="INT" topologicalAddress="%MW8746"></variables>
		<variables name="Conf_Add_seuil_arret_seq_vid" typeName="DINT" topologicalAddress="%MW8744"></variables>
		<variables name="Vid_seq_maint_Add" typeName="BOOL"></variables>
		<variables name="Info_capot2_ouvert_stock_add" typeName="EBOOL" topologicalAddress="%M65"></variables>
		<variables name="Info_capot3_ouvert_stock_add" typeName="EBOOL" topologicalAddress="%M66"></variables>
		<variables name="Info_capot4_ouvert_stock_add" typeName="EBOOL" topologicalAddress="%M67"></variables>
		<variables name="DI_Storage_Add_hood2_Opened" typeName="BOOL">
			<comment>Additional storage 2 cover open ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Storage_Add_hood3_Opened" typeName="EBOOL">
			<comment>Additional storage 3 cover open ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Storage_Add_hood4_Opened" typeName="EBOOL">
			<comment>Additional storage 4 cover open ['0' or '1' for 'TRUE']</comment>
		</variables>
		<variables name="Conf_basc_add_capt_capot1_actif0" typeName="EBOOL" topologicalAddress="%M287"></variables>
		<variables name="Conf_basc_add_capt_capot2_actif0" typeName="EBOOL" topologicalAddress="%M289"></variables>
		<variables name="Conf_basc_add_capt_capot3_actif0" typeName="EBOOL" topologicalAddress="%M291"></variables>
		<variables name="Conf_basc_add_capt_capot4_actif0" typeName="EBOOL" topologicalAddress="%M316"></variables>
		<variables name="Conf_basc_add_capt_capot4" typeName="EBOOL" topologicalAddress="%M315"></variables>
		<variables name="Conf_basc_add_capt_capot3" typeName="EBOOL" topologicalAddress="%M290"></variables>
		<variables name="Conf_basc_add_capt_capot2" typeName="EBOOL" topologicalAddress="%M288"></variables>
		<variables name="Memo_Poids_deja_pese_add" typeName="INT">
			<comment>Memoire Poids déja pesé en Mode Décomptage si ouverture capot</comment>
		</variables>
		<variables name="Poids_basc_add_decomptage" typeName="INT" topologicalAddress="%MW4670">
			<comment>Poids bascule après dosage en mode décomptage</comment>
		</variables>
		<variables name="Poids_deja_pese_Add_Cum" typeName="INT">
			<comment>Poids pesé ligne Add mode décomptage = cumul poids pesés pour la gachée</comment>
		</variables>
		<variables name="Poids_deja_pese_add_decomptage" typeName="INTARR4"></variables>
		<variables name="TON_ctrl_vide_basc_add" typeName="TON"></variables>
		<variables name="TOF_ctrl_vide_basc_add" typeName="TOF"></variables>
		<variables name="Info_ctrl_vide_basc_add_filt" typeName="EBOOL"></variables>
		<variables name="Seuil_vide_add_dispo" typeName="EBOOL"></variables>
		<variables name="Alarme_capot2_ouvert_Add" typeName="EBOOL" topologicalAddress="%M967"></variables>
		<variables name="Alarme_capot3_ouvert_Add" typeName="EBOOL" topologicalAddress="%M968"></variables>
		<variables name="Alarme_capot4_ouvert_Add" typeName="EBOOL" topologicalAddress="%M969"></variables>
		<variables name="Alarme_capot_ouvert_stock_add" typeName="BOOLARR4"></variables>
		<variables name="Lancer_transfert_ADD_gra" typeName="BOOL">
			<comment>Ligne additionnelle vers GRA1 or GRA2</comment>
		</variables>
		<variables name="Lancer_transfert_Add_Eau1" typeName="BOOL">
			<comment>Ligne additionnelle vers Eau1</comment>
		</variables>
		<variables name="Lancer_transfert_Add_skip" typeName="BOOL">
			<comment>Ligne additionnelle vers skip</comment>
		</variables>
		<variables name="Etat_balance_Add_et_son_TP" typeName="EBOOL"></variables>
		<variables name="Poids_de_depart_Add_Decompt" typeName="INT">
			<comment>Poids instantane stock add à l'init du dosage en mode décomptage</comment>
		</variables>
		<variables name="Poids_deja_pese_add_Decompt" typeName="INT">
			<comment>Poids déja pesé en mode décomptage pour correction Poids_i dans bloc PESA</comment>
		</variables>
		<variables name="Cnd_arret_dosage_capot_ouvert" typeName="BOOL"></variables>
		<variables name="TON_Poids_Add_Stab_Cap_Ouvert" typeName="TON"></variables>
		<variables name="TOF_Poids_Add_Stab_Cap_Ouvert" typeName="TOF"></variables>
		<variables name="Stock_Add_En_Remplissage" typeName="BOOL">
			<comment>Stockage Add ouvert pour remplissage</comment>
		</variables>
		<variables name="TON_Poids_Add_Stab_Cap_Ouvert_Ec" typeName="EBOOL">
			<comment>Tempo attente stabilité poids suite fermeture ODS si capot ouvert</comment>
		</variables>
		<variables name="Remplacement_Add_Mem" typeName="BOOL"></variables>
		<variables name="bit_decrement_vid_basc_add" typeName="BOOL"></variables>
		<variables name="palier_vid_basc_add_dec" typeName="INT"></variables>
		<variables name="Intro_Presence_Add_Gra1" typeName="BOOL"></variables>
		<variables name="Intro_Presence_Add_Gra2" typeName="BOOL"></variables>
		<variables name="Transf_Presence_Add_Gra1" typeName="BOOL"></variables>
		<variables name="Transf_Presence_Add_Gra2" typeName="BOOL"></variables>
		<variables name="Seuil_vide_Add_vers_Gra1" typeName="BOOL"></variables>
		<variables name="Seuil_vide_Add_vers_Gra2" typeName="BOOL"></variables>
		<variables name="Intro_Add_Prete_Gra1" typeName="EBOOL"></variables>
		<variables name="Intro_Add_Prete_Gra2" typeName="EBOOL"></variables>
		<variables name="Transfert_Add_Pret_Gra" typeName="EBOOL"></variables>
		<variables name="Intro_Add_encours_Gra1" typeName="BOOL"></variables>
		<variables name="Intro_Add_encours_Gra2" typeName="BOOL"></variables>
		<variables name="Seuil_vide_atteint_Add_Eau1" typeName="BOOL"></variables>
		<variables name="Intro_Presence_Add_Eau1" typeName="BOOL"></variables>
		<variables name="Transf_Presence_Add_skip" typeName="BOOL"></variables>
		<variables name="Intro_Presence_Add_skip" typeName="BOOL"></variables>
		<variables name="retard_transfert_add" typeName="INT"></variables>
		<variables name="Add_a_transferer" typeName="BOOL"></variables>
		<variables name="Conf_Transfert_ADD_Gra" typeName="BOOL"></variables>
		<variables name="TON_246" typeName="TON"></variables>
		<variables name="Poids_total_pese_eau1" typeName="INT"></variables>
		<variables name="Pourcentage_eau_ph1" typeName="INT"></variables>
		<variables name="Poids_demande_eau_ph1" typeName="INT"></variables>
		<variables name="Poids_necessaire_pour_anticip" typeName="INT"></variables>
		<variables name="Pulse_Pesee_Eau1_terminee" typeName="EBOOL"></variables>
		<variables name="inc3" typeName="INT"></variables>
		<variables name="Correction_humidite_gra1" typeName="Correction_Humidite">
			<comment>Parametre de correction Humidite sur les granulats 1</comment>
		</variables>
		<variables name="inc2" typeName="INT"></variables>
		<variables name="inc1" typeName="INT"></variables>
		<variables name="Calc_Depart_eau" typeName="EBOOL"></variables>
		<variables name="INIT_Depart_Eau_Avec_CHU" typeName="ARRAY[1..4] OF EBOOL"></variables>
		<variables name="RAZ_CHU_EAU" typeName="EBOOL"></variables>
		<variables name="AI_Value_Humidity" typeName="ARRAY[1..16] OF INT"></variables>
		<variables name="Correction_Humidite_Eau2" typeName="Correction_Humidite">
			<comment>Parametre de correction humidite sur l'eau 2</comment>
		</variables>
		<variables name="Gestion_Humidite_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Val_humidite_gra_calc" typeName="ARRAY[1..4,1..16] OF REAL"></variables>
		<variables name="Poids_Gra_A_Doser" typeName="ARRAY[1..4,1..16] OF INT">
			<comment>Poids Gra a peser pour la gachee</comment>
		</variables>
		<variables name="Poids_Eau_A_Doser" typeName="ARRAY[1..16] OF INT">
			<comment>Poids Eau1 et Eau2 a peser pour la gachee en litre</comment>
		</variables>
		<variables name="Prod_Gra_a_Doser" typeName="ARRAY[1..4,1..16] OF BOOL">
			<comment>Produit Gra a doser pour la gachee</comment>
		</variables>
		<variables name="Ecart_CHU_Eau_Prod" typeName="ARRAY[1..4,1..16] OF INT">
			<comment>Ecart a corriger sur chaque prod eau par gachee</comment>
		</variables>
		<variables name="Recup_voie_ana_Humidite" typeName="RECUP_VOIE_Humidite"></variables>
		<variables name="Correction_Humidite_Eau1" typeName="Correction_Humidite">
			<comment>Parametre de correction humidite sur l'eau 1</comment>
		</variables>
		<variables name="Reste_Ecart_Eau_CHU" typeName="ARRAY[1..16] OF INT">
			<comment>Reste en litre d'eau à corriger pour la gâchée en cours</comment>
		</variables>
		<variables name="Humidite_Gra" typeName="ARRAY[1..16] OF REAL">
			<comment>Humidite utilisee dans le calcul</comment>
		</variables>
		<variables name="Humidite_Utilisee_Gra" typeName="ARRAY[1..16] OF REAL"></variables>
		<variables name="Calc_Ecart_CHU_Eau" typeName="EBOOL"></variables>
		<variables name="inc7" typeName="INT"></variables>
		<variables name="Ecart_CHU_Gra" typeName="ARRAY[1..4,1..16] OF INT">
			<comment>Ecart Calcule pour la correction humidite pour chaque prod gra / gachee</comment>
		</variables>
		<variables name="inc6" typeName="INT"></variables>
		<variables name="Ecart_CHU_Total_Eau" typeName="ARRAY[1..4] OF INT">
			<comment>Ecart total a corriger sur l'ensemble des eaux en litre</comment>
		</variables>
		<variables name="Correction_humidite_gra2" typeName="Correction_Humidite">
			<comment>Parametre de correction Humidite sur les granulats 2</comment>
		</variables>
		<variables name="Prod_Eau_A_Doser" typeName="ARRAY[1..16] OF BOOL">
			<comment>Produit Eau1 et Eau2 a doser pour la gachee</comment>
		</variables>
		<variables name="Reste_Ecart_Eau_deja_Ecrit" typeName="ARRAY[1..4] OF EBOOL"></variables>
		<variables name="Humidite_Instantanee_Gra" typeName="ARRAY[1..16] OF REAL">
			<comment>Humidite issue de la sonde (apres calibration)</comment>
		</variables>
		<variables name="Conf_Dosage_Eau_Retarde" typeName="BOOL"></variables>
		<variables name="Top_Depart_Eau_Avec_CHU" typeName="ARRAY[1..4] OF EBOOL"></variables>
		<variables name="Conf_Seuil_Correc_Humidite_Gra" typeName="ARRAY[1..16] OF INT"></variables>
		<variables name="TON_Calc_Depart_eau" typeName="TON"></variables>
		<variables name="TON_Calc_Ecart" typeName="TON"></variables>
		<variables name="Lec_ANA_Humidite" typeName="Lec_Humidite"></variables>
		<variables name="Humidite_deja_ecrit_Gra1" typeName="BOOL"></variables>
		<variables name="Poids_demande_Gra1_CHU" typeName="INT"></variables>
		<variables name="Humidite_deja_ecrit_Gra2" typeName="BOOL"></variables>
		<variables name="Poids_demande_Gra2_CHU" typeName="INT"></variables>
		<variables name="Correction_humidite_Autres" typeName="Correction_Humidite"></variables>
		<variables name="Voie_Humidite_Gra" typeName="ARRAY[1..16] OF INT" topologicalAddress="%MW8792"></variables>
		<variables name="Conf_Humidite_Gra_TRE" typeName="ARRAY[1..16] OF BOOL" topologicalAddress="%MW8810">
			<comment>Lecture de l'humidite en temps reel</comment>
		</variables>
		<variables name="Conf_Humidite_Gra_Manu" typeName="ARRAY[1..16] OF BOOL" topologicalAddress="%MW8819">
			<comment>Flag type d'humidite. 0=AUTO, 1=MANU</comment>
		</variables>
		<variables name="Humidite_Manuelle_Gra" typeName="ARRAY[1..16] OF REAL" topologicalAddress="%MW8828">
			<comment>Humidite manuelle issue de BCMix</comment>
		</variables>
		<variables name="P1_Humi_gra" typeName="ARRAY[1..16] OF INT" topologicalAddress="%MW8864"></variables>
		<variables name="P2_Humi_gra" typeName="ARRAY[1..16] OF INT" topologicalAddress="%MW8882"></variables>
		<variables name="Val1_Humi_gra" typeName="ARRAY[1..16] OF REAL" topologicalAddress="%MW8900"></variables>
		<variables name="Val2_Humi_gra" typeName="ARRAY[1..16] OF REAL" topologicalAddress="%MW8936"></variables>
		<variables name="ENSI_BC_MIX_Dispo_Conf" typeName="INT" topologicalAddress="%MW28000"></variables>
		<variables name="ENSI_BC_MIX_Nb_silos" typeName="INT" topologicalAddress="%MW28001"></variables>
		<variables name="ENSI_BC_MIX_Nb_tremie" typeName="INT" topologicalAddress="%MW28002"></variables>
		<variables name="ENSI_BC_MIX_Nb_adjuvant" typeName="INT" topologicalAddress="%MW28003"></variables>
		<variables name="ENSI_BC_MIX_Ver_automate" typeName="STRING" topologicalAddress="%MW28004"></variables>
		<variables name="ENSI_BC_MIX_Nom_centrale" typeName="STRING" topologicalAddress="%MW28012"></variables>
		<variables name="ENSI_BC_MIX_Dispo_Ensilage" typeName="BOOL" topologicalAddress="%MW28100"></variables>
		<variables name="ENSI_BC_MIX_LT_CODE_GTIN" typeName="ARRAY[1..7] OF string[20]" topologicalAddress="%MW28102"></variables>
		<variables name="ENSI_BC_MIX_LT_Capa_Silo" typeName="ARRAY[1..7] OF UDINT" topologicalAddress="%MW28172"></variables>
		<variables name="ENSI_BC_MIX_LT_Lib_Produit" typeName="ARRAY[1..7] OF STRING" topologicalAddress="%MW28186"></variables>
		<variables name="ENSI_BC_MIX_GR_CODE_GTIN" typeName="ARRAY[1..12] OF string[20]" topologicalAddress="%MW28300"></variables>
		<variables name="ENSI_BC_MIX_GR_Capa_Tremie" typeName="ARRAY[1..12] OF UDINT" topologicalAddress="%MW28420"></variables>
		<variables name="ENSI_BC_MIX_GR_Lib_Produit" typeName="ARRAY[1..12] OF STRING" topologicalAddress="%MW28444"></variables>
		<variables name="ENSI_BC_MIX_ADJ_CODE_GTIN" typeName="ARRAY[1..40] OF string[20]" topologicalAddress="%MW28600"></variables>
		<variables name="ENSI_BC_MIX_ADJ_Capa_Cuve" typeName="ARRAY[1..40] OF UDINT" topologicalAddress="%MW29000"></variables>
		<variables name="ENSI_BC_MIX_ADJ_Lib_Produit" typeName="ARRAY[1..40] OF STRING" topologicalAddress="%MW29080"></variables>
		<variables name="ENSI_BC_MIX_BL_Numero_BL" typeName="string[20]" topologicalAddress="%MW29400"></variables>
		<variables name="ENSI_BC_MIX_BL_Qte_livree" typeName="string[20]" topologicalAddress="%MW29410"></variables>
		<variables name="ENSI_BC_MIX_BL_Num_stock" typeName="INT" topologicalAddress="%MW29420"></variables>
		<variables name="ENSI_BC_MIX_BL_GTIN_Produit" typeName="string[20]" topologicalAddress="%MW29421"></variables>
		<variables name="ENSI_BC_MIX_BL_Date" typeName="string[20]" topologicalAddress="%MW29431"></variables>
		<variables name="ENSI_BC_MIX_BL_Lib_Produit" typeName="string[20]" topologicalAddress="%MW29441"></variables>
		<variables name="ENSI_BC_MIX_BL_Flag_Acquisition" typeName="INT" topologicalAddress="%MW29451"></variables>
		<variables name="ENSI_BC_MIX_Sav_LT_OTB" typeName="BOOL" topologicalAddress="%MW30000"></variables>
		<variables name="ENSI_BC_MIX_Sav_LT_Registre" typeName="ARRAY[1..5] OF DINT" topologicalAddress="%MW30002"></variables>
		<variables name="ENSI_BC_MIX_Sav_LT_Nb_registre" typeName="ARRAY[1..5] OF INT" topologicalAddress="%MW30012"></variables>
		<variables name="ENSI_BC_MIX_Sav_LT_Adresse_IP" typeName="string[30]" topologicalAddress="%MW30017"></variables>
		<variables name="ENSI_BC_MIX_Sav_LT_Cablage" typeName="ARRAY[1..8] OF BOOL" topologicalAddress="%MW30032"></variables>
		<variables name="ENSI_BC_MIX_Sav_LT_Utilisation" typeName="ARRAY[1..28] OF BOOL" topologicalAddress="%MW30036"></variables>
		<variables name="ENSI_BC_MIX_Sav_LT_Tempos" typeName="ARRAY[1..9] OF TIME" topologicalAddress="%MW30050"></variables>
		<variables name="ENSI_BC_MIX_Sav_GR_OTB" typeName="BOOL" topologicalAddress="%MW30100"></variables>
		<variables name="ENSI_BC_MIX_Sav_GR_Registre" typeName="ARRAY[1..5] OF DINT" topologicalAddress="%MW30102"></variables>
		<variables name="ENSI_BC_MIX_Sav_GR_Nb_registre" typeName="ARRAY[1..5] OF INT" topologicalAddress="%MW30112"></variables>
		<variables name="ENSI_BC_MIX_Sav_GR_Adresse_IP" typeName="string[30]" topologicalAddress="%MW30117"></variables>
		<variables name="ENSI_BC_MIX_Sav_GR_Cablage" typeName="ARRAY[1..14] OF BOOL" topologicalAddress="%MW30132"></variables>
		<variables name="ENSI_BC_MIX_Sav_GR_Utilisation" typeName="ARRAY[1..26] OF BOOL" topologicalAddress="%MW30139"></variables>
		<variables name="ENSI_BC_MIX_Sav_GR_Tempos" typeName="ARRAY[1..9] OF TIME" topologicalAddress="%MW30152"></variables>
		<variables name="ENSI_BC_MIX_Sav_LOC_OTB" typeName="BOOL" topologicalAddress="%MW30200"></variables>
		<variables name="ENSI_BC_MIX_Sav_LOC_Registre" typeName="ARRAY[1..3] OF DINT" topologicalAddress="%MW30202"></variables>
		<variables name="ENSI_BC_MIX_Sav_LOC_Nb_registre" typeName="ARRAY[1..3] OF INT" topologicalAddress="%MW30208"></variables>
		<variables name="ENSI_BC_MIX_Sav_LOC_Adresse_IP" typeName="string[30]" topologicalAddress="%MW30211"></variables>
		<variables name="ENSI_BC_MIX_Sav_EA_OTB" typeName="BOOL" topologicalAddress="%MW30300"></variables>
		<variables name="ENSI_BC_MIX_Sav_EA_Registre" typeName="ARRAY[1..5] OF DINT" topologicalAddress="%MW30302"></variables>
		<variables name="ENSI_BC_MIX_Sav_EA_Nb_registre" typeName="ARRAY[1..5] OF INT" topologicalAddress="%MW30312"></variables>
		<variables name="ENSI_BC_MIX_Sav_EA_Adresse_IP" typeName="string[30]" topologicalAddress="%MW30317"></variables>
		<variables name="ENSI_BC_MIX_Sav_EA_Presence" typeName="ARRAY[1..32] OF BOOL" topologicalAddress="%MW30332"></variables>
		<variables name="ENSI_BC_MIX_Sav_EA_Materiel" typeName="ARRAY[1..3] OF INT" topologicalAddress="%MW30348"></variables>
		<variables name="ENSI_BC_MIX_Sav_AD_OTB" typeName="BOOL" topologicalAddress="%MW30400"></variables>
		<variables name="ENSI_BC_MIX_Sav_AD_Registre" typeName="ARRAY[1..12] OF DINT" topologicalAddress="%MW30402"></variables>
		<variables name="ENSI_BC_MIX_Sav_AD_Nb_registre" typeName="ARRAY[1..12] OF INT" topologicalAddress="%MW30426"></variables>
		<variables name="ENSI_BC_MIX_Sav_AD_Adresse_IP" typeName="string[30]" topologicalAddress="%MW30438"></variables>
		<variables name="ENSI_BC_MIX_Sav_Gen_Reglage" typeName="ARRAY[1..6] OF BOOL" topologicalAddress="%MW30500"></variables>
		<variables name="ENSI_BC_MIX_Sav_GEN_Act_Process" typeName="ARRAY[1..10] OF BOOL" topologicalAddress="%MW30503"></variables>
		<variables name="Conf_ppe_pulse_per_liter" typeName="INTARR20" topologicalAddress="%MW7252"></variables>
		<variables name="Tempo_apres_coulant_manu" typeName="INTARR20"></variables>
		<variables name="DO_Admix_Tank_Open" typeName="ARRAY[1..20] OF EBOOL"></variables>
		<variables name="Memo_Cpt_manu_PPE" typeName="INTARR20"></variables>
		<variables name="Adj_ppe_en_cours" typeName="ARRAY[1..20] OF EBOOL"></variables>
		<variables name="Cumul_ppe_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="Memo_FE_DO_Admix_Dosage" typeName="ARRAY[1..20] OF EBOOL">
			<comment>Memorised falling edges of Digital Outputs admixture dosage </comment>
		</variables>
		<variables name="Simuler_dosage_Prod_compte" typeName="BOOL"></variables>
		<variables name="Simulation_dosage_Prod_compte" typeName="Simulation_dosage"></variables>
		<variables name="Stock_Cim2_auto" typeName="BOOL"></variables>
		<variables name="Doser_cim2_auto" typeName="BOOL"></variables>
		<variables name="fm_doser_Cim2_auto" typeName="R_TRIG"></variables>
		<variables name="Cumul_Cim2_auto" typeName="STOCK5"></variables>
		<variables name="Cumul_Cim2_auto_stable" typeName="BOOL"></variables>
		<variables name="Cumul_Cim2_auto_deptstab" typeName="BOOL"></variables>
		<variables name="Numero_produit_Cim2_cumul" typeName="INT"></variables>
		<variables name="fm_cumul_Cim2_auto_stable" typeName="R_TRIG"></variables>
		<variables name="manu_Poids_instantane_Cim" typeName="INT"></variables>
		<variables name="Manu_Cim_tps_stabilisation" typeName="TIME"></variables>
		<variables name="Manu_Cim_tps_max_pesage" typeName="TIME"></variables>
		<variables name="Manu_Cim_ecart_stabilite" typeName="INT"></variables>
		<variables name="numero_chaine_en_cours_manu_Cim" typeName="INT"></variables>
		<variables name="Stock_Eau2_auto" typeName="BOOL"></variables>
		<variables name="Doser_eau2_auto" typeName="BOOL"></variables>
		<variables name="fm_doser_Eau2_auto" typeName="R_TRIG"></variables>
		<variables name="Cumul_Eau2_auto" typeName="STOCK5"></variables>
		<variables name="Cumul_Eau2_auto_stable" typeName="BOOL"></variables>
		<variables name="Cumul_Eau2_auto_deptstab" typeName="BOOL"></variables>
		<variables name="Numero_produit_Eau2_cumul" typeName="INT"></variables>
		<variables name="fm_cumul_Eau2_auto_stable" typeName="R_TRIG"></variables>
		<variables name="manu_Poids_instantane_Eau" typeName="INT"></variables>
		<variables name="Manu_Eau_tps_stabilisation" typeName="TIME"></variables>
		<variables name="Manu_Eau_tps_max_pesage" typeName="TIME"></variables>
		<variables name="Manu_Eau_ecart_stabilite" typeName="INT"></variables>
		<variables name="numero_chaine_en_cours_manu_Eau" typeName="INT"></variables>
		<variables name="inc4" typeName="INT"></variables>
		<variables name="Lancer_transfert_Add_tapis_tr" typeName="BOOL">
			<comment>Ligne additionnelle vers tapis transfert</comment>
		</variables>
		<variables name="Transf_Presence_Add_tapis_tr" typeName="BOOL"></variables>
		<variables name="Intro_Presence_Add_tapis_tr" typeName="BOOL"></variables>
		<variables name="Conf_Tapis_Tr_ADD_Gra_sans_TT" typeName="BOOL"></variables>
		<variables name="TON_detarage_Add" typeName="TON"></variables>
		<variables name="Poids_de_depart_Add_Decompt_manu" typeName="ARRAY[1..4] OF INT">
			<comment>Poids instantane stock add à l'init du dosage en mode décomptage manu</comment>
		</variables>
		<variables name="Poids_basc_add_decomptage_Memo" typeName="INT"></variables>
		<variables name="Auto_Calibration_Check_Gra1" typeName="Auto_Calibration_Check"></variables>
		<variables name="Auto_Calibration_Check_Gra2" typeName="Auto_Calibration_Check"></variables>
		<variables name="Auto_Calibration_Check_Cim1" typeName="Auto_Calibration_Check"></variables>
		<variables name="Auto_Calibration_Check_Cim2" typeName="Auto_Calibration_Check"></variables>
		<variables name="Auto_Calibration_Check_Eau1" typeName="Auto_Calibration_Check"></variables>
		<variables name="Auto_Calibration_Check_Eau2" typeName="Auto_Calibration_Check"></variables>
		<variables name="Auto_Calibration_Check_Adj" typeName="Auto_Calibration_Check"></variables>
		<variables name="Auto_Calibration_Check_Anh" typeName="Auto_Calibration_Check"></variables>
		<variables name="Auto_Calibration_Check_Add" typeName="Auto_Calibration_Check"></variables>
		<variables name="Fin_Verif_Calib_Gra1" typeName="EBOOL" topologicalAddress="%M1016"></variables>
		<variables name="Poids_Verif_Calib_Gra1" typeName="INT" topologicalAddress="%MW9000"></variables>
		<variables name="Conf_Calib_Check_Time" typeName="TIME">
			<comment>Waiting time until the weigher is stable</comment>
		</variables>
		<variables name="Cde_BCMix_Verif_Calib_Gra1" typeName="EBOOL" topologicalAddress="%M1000"></variables>
		<variables name="Cde_BCMix_Verif_Calib_Gra2" typeName="EBOOL" topologicalAddress="%M1001"></variables>
		<variables name="Cde_BCMix_Verif_Calib_Cim1" typeName="EBOOL" topologicalAddress="%M1002"></variables>
		<variables name="Cde_BCMix_Verif_Calib_Cim2" typeName="EBOOL" topologicalAddress="%M1003"></variables>
		<variables name="Cde_BCMix_Verif_Calib_Eau1" typeName="EBOOL" topologicalAddress="%M1004"></variables>
		<variables name="Cde_BCMix_Verif_Calib_Eau2" typeName="EBOOL" topologicalAddress="%M1005"></variables>
		<variables name="Cde_BCMix_Verif_Calib_Adj" typeName="EBOOL" topologicalAddress="%M1006"></variables>
		<variables name="Cde_BCMix_Verif_Calib_Anh" typeName="EBOOL" topologicalAddress="%M1007"></variables>
		<variables name="Cde_BCMix_Verif_Calib_Add" typeName="EBOOL" topologicalAddress="%M1008"></variables>
		<variables name="Cde_Verif_Calib_Gra1" typeName="BOOL"></variables>
		<variables name="Cde_Verif_Calib_Gra2" typeName="BOOL"></variables>
		<variables name="Cde_Verif_Calib_Cim1" typeName="BOOL"></variables>
		<variables name="Cde_Verif_Calib_Cim2" typeName="BOOL"></variables>
		<variables name="Cde_Verif_Calib_Eau1" typeName="BOOL"></variables>
		<variables name="Cde_Verif_Calib_Eau2" typeName="BOOL"></variables>
		<variables name="Cde_Verif_Calib_Adj" typeName="BOOL"></variables>
		<variables name="Cde_Verif_Calib_Anh" typeName="BOOL"></variables>
		<variables name="Cde_Verif_Calib_Add" typeName="BOOL"></variables>
		<variables name="DO_Agg1_Weigher_ACC_ON" typeName="EBOOL">
			<comment>Activate auto calibration checking on 'aggregate 1' weigher</comment>
		</variables>
		<variables name="DO_Agg2_Weigher_ACC_ON" typeName="EBOOL">
			<comment>Activate auto calibration checking on 'aggregate 2' weigher</comment>
		</variables>
		<variables name="DO_Cem1_Weigher_ACC_ON" typeName="EBOOL">
			<comment>Activate auto calibration checking on 'cement 1' weigher</comment>
		</variables>
		<variables name="DO_Cem2_Weigher_ACC_ON" typeName="EBOOL">
			<comment>Activate auto calibration checking on 'cement 2' weigher</comment>
		</variables>
		<variables name="DO_Water1_Weigher_ACC_ON" typeName="EBOOL">
			<comment>Activate auto calibration checking on 'water 1' weigher</comment>
		</variables>
		<variables name="DO_Water2_Weigher_ACC_ON" typeName="EBOOL">
			<comment>Activate auto calibration checking on 'water 2' weigher</comment>
		</variables>
		<variables name="DO_Admix_Weigher_ACC_ON" typeName="EBOOL">
			<comment>Activate auto calibration checking on admixture weigher</comment>
		</variables>
		<variables name="DO_Anh_Weigher_ACC_ON" typeName="EBOOL">
			<comment>Activate auto calibration checking on anhydrite weigher</comment>
		</variables>
		<variables name="DO_Add_Weigher_ACC_ON" typeName="EBOOL">
			<comment>Activate auto calibration checking on additional weigher</comment>
		</variables>
		<variables name="Fin_Verif_Calib_Gra2" typeName="EBOOL" topologicalAddress="%M1017"></variables>
		<variables name="Fin_Verif_Calib_Cim1" typeName="EBOOL" topologicalAddress="%M1018"></variables>
		<variables name="Fin_Verif_Calib_Cim2" typeName="EBOOL" topologicalAddress="%M1019"></variables>
		<variables name="Fin_Verif_Calib_Eau1" typeName="EBOOL" topologicalAddress="%M1020"></variables>
		<variables name="Fin_Verif_Calib_Eau2" typeName="EBOOL" topologicalAddress="%M1021"></variables>
		<variables name="Fin_Verif_Calib_Adj" typeName="EBOOL" topologicalAddress="%M1022"></variables>
		<variables name="Fin_Verif_Calib_Anh" typeName="EBOOL" topologicalAddress="%M1023"></variables>
		<variables name="Fin_Verif_Calib_Add" typeName="EBOOL" topologicalAddress="%M1024"></variables>
		<variables name="Poids_Verif_Calib_Gra2" typeName="INT" topologicalAddress="%MW9001"></variables>
		<variables name="Poids_Verif_Calib_Cim1" typeName="INT" topologicalAddress="%MW9002"></variables>
		<variables name="Poids_Verif_Calib_Cim2" typeName="INT" topologicalAddress="%MW9003"></variables>
		<variables name="Poids_Verif_Calib_Eau1" typeName="INT" topologicalAddress="%MW9004"></variables>
		<variables name="Poids_Verif_Calib_Eau2" typeName="INT" topologicalAddress="%MW9005"></variables>
		<variables name="Poids_Verif_Calib_Adj" typeName="INT" topologicalAddress="%MW9006"></variables>
		<variables name="Poids_Verif_Calib_Anh" typeName="INT" topologicalAddress="%MW9007"></variables>
		<variables name="Poids_Verif_Calib_Add" typeName="INT" topologicalAddress="%MW9008"></variables>
		<variables name="Calib_Check_DEM_INIT" typeName="EBOOL"></variables>
		<variables name="inc5" typeName="INT"></variables>
		<variables name="NG_CHU" typeName="INT"></variables>
		<variables name="Manu_Cmd_Conveyor_Belt_ON" typeName="EBOOL" topologicalAddress="%M719"></variables>
		<variables name="Weighing_Tolerances" typeName="Weighing_Tolerances"></variables>
		<variables name="Conf_Add_Tol_Used" typeName="INT"></variables>
		<variables name="Conf_Agg1_Tol_Used" typeName="INT"></variables>
		<variables name="Conf_Cem1_Tol_Used" typeName="INT"></variables>
		<variables name="Conf_Water1_Tol_Used" typeName="INT"></variables>
		<variables name="Conf_Admix_Tol_Used" typeName="INT"></variables>
		<variables name="Conf_PP_Tol_Used" typeName="INTARR20"></variables>
		<variables name="Conf_Agg2_Tol_Used" typeName="INT"></variables>
		<variables name="Conf_Cem2_Tol_Used" typeName="INT"></variables>
		<variables name="Conf_Water2_Tol_Used" typeName="INT"></variables>
		<variables name="Conf_Anh_Tol_Used" typeName="INT"></variables>
		<variables name="Pulse_Agg1_Dosage_Started" typeName="EBOOL"></variables>
		<variables name="Pulse_Agg2_Dosage_Started" typeName="EBOOL"></variables>
		<variables name="Index_Gachee_Terminee" typeName="INT"></variables>
		<variables name="DI_Mixer1_Gate2_PB_Pro_Open" typeName="EBOOL"></variables>
		<variables name="DI_Mixer1_Gate2_PB_Pro_Close" typeName="EBOOL"></variables>
		<variables name="BP_ouverture_trappe2_mal1" typeName="BOOL"></variables>
		<variables name="BP_fermeture_trappe2_mal1" typeName="BOOL"></variables>
		<variables name="DI_Mixer1_Gate2_PB_PLC_Open" typeName="EBOOL">
			<comment>Open 'mixer 1' 'Gate 2'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Mixer1_Gate2_PB_PLC_Close" typeName="EBOOL">
			<comment>Close 'mixer 1' 'gate 2'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="Pup_cde_ouverture_trappe2_mal1" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="Pup_cde_fermeture_trappe2_mal1" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="BI_Ouverture_trappe2_mal1" typeName="BOOL"></variables>
		<variables name="BI_fermeture_trappe2_mal1" typeName="BOOL"></variables>
		<variables name="BP_ouverture_trappe1_mal2" typeName="BOOL"></variables>
		<variables name="Pup_Cde_Ouverture_trappe1_mal2" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="BI_Ouverture_trappe1_mal2" typeName="BOOL"></variables>
		<variables name="BP_fermeture_trappe1_mal2" typeName="BOOL"></variables>
		<variables name="Pup_Cde_fermeture_trappe1_mal2" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="BI_fermeture_trappe1_mal2" typeName="BOOL"></variables>
		<variables name="BP_ouverture_trappe2_mal2" typeName="BOOL"></variables>
		<variables name="Pup_Cde_Ouverture_trappe2_mal2" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="BI_Ouverture_trappe2_mal2" typeName="BOOL"></variables>
		<variables name="BP_fermeture_trappe2_mal2" typeName="BOOL"></variables>
		<variables name="Pup_Cde_fermeture_trappe2_mal2" typeName="BOOL">
			<comment>(Roumanie) BP pupitre communication</comment>
		</variables>
		<variables name="BI_fermeture_trappe2_mal2" typeName="BOOL"></variables>
		<variables name="DI_Mixer2_Gate1_PB_PLC_Open" typeName="EBOOL">
			<comment>Open 'mixer 2' 'Gate 1'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Mixer2_Gate1_PB_PLC_Close" typeName="EBOOL">
			<comment>Close 'mixer 2' 'gate 1'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Mixer2_Gate2_PB_PLC_Open" typeName="EBOOL">
			<comment>Open 'mixer 2' 'Gate 2'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Mixer2_Gate2_PB_PLC_Close" typeName="EBOOL">
			<comment>Close 'mixer 2' 'gate 2'' pushbutton pressed - Direct-to-PLC console ['1' for 'TRUE']</comment>
		</variables>
		<variables name="DI_Mixer2_Gate1_PB_Pro_Open" typeName="EBOOL"></variables>
		<variables name="DI_Mixer2_Gate1_PB_Pro_Close" typeName="EBOOL"></variables>
		<variables name="DI_Mixer2_Gate2_PB_Pro_Open" typeName="EBOOL"></variables>
		<variables name="DI_Mixer2_Gate2_PB_Pro_Close" typeName="EBOOL"></variables>
		<variables name="Cem1_Total_Weight_Weighed" typeName="INT"></variables>
		<variables name="Cem2_Total_Weight_Weighed" typeName="INT"></variables>
		<variables name="Water1_Total_Weight_Weighed" typeName="INT"></variables>
		<variables name="Manu_Cmd_Conveyor_Belt_OFF" typeName="EBOOL" topologicalAddress="%M711"></variables>
		<variables name="Pulse_Manu_logiciel" typeName="EBOOL"></variables>
		<variables name="Anhydrite_CPC" typeName="BOOL"></variables>
		<variables name="Pres_Gra1_Skip_TT_anhCPC" typeName="BOOL"></variables>
		<variables name="Pres_Gra2_Skip_TT_anhCPC" typeName="BOOL"></variables>
		<variables name="Vid_terminee_Gra_Skip_TT_anhCPC" typeName="BOOL"></variables>
		<variables name="Water2_Total_Weight_Weighed" typeName="INT"></variables>
		<variables name="Conf_2_Signal_Waiting_Hopper" typeName="EBOOL"></variables>
		<variables name="Conf_Mixer1_1Gate_2LoadingPT" typeName="EBOOL"></variables>
		<variables name="TP_Top_Close_Waiting_Hopper" typeName="TP"></variables>
		<variables name="DO_Agg_WH_Close" typeName="EBOOL"></variables>
		<variables name="DI_Mixer1_G1_And_G2_Closed" typeName="EBOOL">
			<comment>Mixer gate 1 and mixer gate 2 are closed</comment>
		</variables>
		<variables name="DO_Mixer1_OpenG1_CloseG2" typeName="EBOOL">
			<comment>Open mixer 1 gate 1 or close mixer 1 gate 2</comment>
		</variables>
		<variables name="DO_Mixer1_OpenG2_CloseG1" typeName="EBOOL">
			<comment>Open mixer 1 gate 2 or close mixer 1 gate 1</comment>
		</variables>
		<variables name="Gra12_Total_Weight_Weighed" typeName="INT"></variables>
		<variables name="Product_Replacement" typeName="ARRAY[1..16] OF INT">
			<comment>0: nothing happen 1: Product replaced 2: New product</comment>
		</variables>
		<variables name="WaterCorrectionDone" typeName="ARRAY[1..4,1..16] OF BOOL"></variables>
		<variables name="MoistureUsed" typeName="ARRAY[1..16] OF BOOL"></variables>
		<variables name="TON_Calc_Ecart_Gra2" typeName="TON"></variables>
		<variables name="Calc_Ecart_CHU_Eau_Gra2" typeName="EBOOL"></variables>
		<variables name="Dosage_auto_Gra1" typeName="BOOL" topologicalAddress="%MW5120.0"></variables>
		<variables name="Dosage_auto_Gra2" typeName="BOOL" topologicalAddress="%MW5120.1"></variables>
		<variables name="Dosage_auto_Add" typeName="BOOL" topologicalAddress="%MW5120.6"></variables>
		<variables name="Dosage_auto_Adj" typeName="BOOL" topologicalAddress="%MW5120.7"></variables>
		<variables name="Dosage_auto_Anh" typeName="BOOL" topologicalAddress="%MW5120.8"></variables>
		<variables name="Dosage_auto_Cim1" typeName="BOOL" topologicalAddress="%MW5120.4"></variables>
		<variables name="Dosage_auto_Cim2" typeName="BOOL" topologicalAddress="%MW5120.5"></variables>
		<variables name="Dosage_auto_Eau1" typeName="BOOL" topologicalAddress="%MW5120.2"></variables>
		<variables name="Dosage_auto_Eau2" typeName="BOOL" topologicalAddress="%MW5120.3"></variables>
		<variables name="Dosage_auto" typeName="INT" topologicalAddress="%MW5120"></variables>
		<variables name="Ecart_CHU_Total_Eau_PH3" typeName="ARRAY[1..4] OF INT"></variables>
	</dataBlock>
	<Motion></Motion>
	<comm>
		<network>
			<ethernet name="Ethernet_1" networkFamilyCatKey="NetworkFamily_Ethernet_Micro_Basic_Embedded" networkCatKey="Network_Ethernet_Micro_Basic" topoAddress="\0.0\0.0.3">
				<basicMicro NTP_SRV="0">
					<IPConfiguration ethernetConfiguration="0" networkConfiguration="1">
						<IPNetwork>
							<IPAddress IP0="172" IP1="16" IP2="1" IP3="22"></IPAddress>
						</IPNetwork>
						<mask>
							<IPAddress IP0="255" IP1="255" IP2="255" IP3="0"></IPAddress>
						</mask>
						<gateway>
							<IPAddress IP0="0" IP1="0" IP2="0" IP3="0"></IPAddress>
						</gateway>
						<DeviceName></DeviceName>
					</IPConfiguration>
					<Messaging nbLine="0" CtrlIPAddress="0">
						<Connection accessControl="0"></Connection>
					</Messaging>
					<SNMP location="" contact="" set="public" get="public" trap="public" manager="0" authentification="0">
						<IPAddressMgr1>
							<IPAddress IP0="0" IP1="0" IP2="0" IP3="0"></IPAddress>
						</IPAddressMgr1>
						<IPAddressMgr2>
							<IPAddress IP0="0" IP1="0" IP2="0" IP3="0"></IPAddress>
						</IPAddressMgr2>
					</SNMP>
					<bandwidth>
						<BWEstimation globalDataEstimation="0" messagingEstimation="0" EthernetEnv="0"></BWEstimation>
					</bandwidth>
				</basicMicro>
			</ethernet>
		</network>
	</comm>
	<logicConf>
		<resource resName="Micro Basic" resIdent="BMX P34 2020 01.00">
			<taskDesc task="MAST" taskType="cyclic" valueType="0" maxExecTime="250">
				<sectionDesc name="010_Infos_Generales" FMName="Commun" FMId="3084K" FMOrder="0x0017" SectionOrder="1"></sectionDesc>
				<sectionDesc name="020_Preliminaires" FMName="Commun" FMId="3084K" FMOrder="0x0001" SectionOrder="2"></sectionDesc>
				<sectionDesc name="030_Com_ETH_HMS_Profibus_M340" activationCondition="Com_ETH_HMS_Profibus_ACTIVE" logicCondition="standard" FMName="M340" FMId="3088K" FMOrder="0x0001" SectionOrder="3"></sectionDesc>
				<sectionDesc name="050_Com_ETH_Arpege_TCP_M340" activationCondition="Com_ETH_Arpege_TCP_ACTIVE" logicCondition="standard" FMName="M340" FMId="3088K" FMOrder="0x0002" SectionOrder="4"></sectionDesc>
				<sectionDesc name="061_Gestion_HMS_Profibus" activationCondition="Gestion_HMS_Profibus_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0004" SectionOrder="5"></sectionDesc>
				<sectionDesc name="068_Prepa_Acquisition_M340" activationCondition="Prepa_Acquisition_ACTIVE" logicCondition="standard" FMName="M340" FMId="3088K" FMOrder="0x0003" SectionOrder="6"></sectionDesc>
				<sectionDesc name="070_Acquisition_entrees" activationCondition="Acquisition_entrees_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0015" SectionOrder="7"></sectionDesc>
				<sectionDesc name="080_Lecture_Arpege_TCP" activationCondition="Lecture_Arpege_TCP_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0018" SectionOrder="8"></sectionDesc>
				<sectionDesc name="100_Lecture_Bin_BCD" activationCondition="Lecture_Bin_BCD_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0019" SectionOrder="9"></sectionDesc>
				<sectionDesc name="110_Lecture_Mesomatic" activationCondition="Lecture_Mesomatic_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x001A" SectionOrder="10"></sectionDesc>
				<sectionDesc name="130_Lecture_Analogique" activationCondition="Lecture_Analogique_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x001B" SectionOrder="11"></sectionDesc>
				<sectionDesc name="140_Activ_sections_Divers" FMName="Commun" FMId="3084K" FMOrder="0x001C" SectionOrder="12"></sectionDesc>
				<sectionDesc name="145_Mode_Simulation" FMName="Commun" FMId="3084K" FMOrder="0x001E" SectionOrder="13"></sectionDesc>
				<sectionDesc name="150_Initialisations" FMName="Commun" FMId="3084K" FMOrder="0x001D" SectionOrder="14"></sectionDesc>
				<sectionDesc name="152_RAZ_Alarmes" FMName="Commun" FMId="3084K" FMOrder="0x0013" SectionOrder="15"></sectionDesc>
				<sectionDesc name="155_Arrets_Urgence" FMName="Commun" FMId="3084K" FMOrder="0x001F" SectionOrder="16"></sectionDesc>
				<sectionDesc name="160_Etat_Equipements_ST" FMName="Commun" FMId="3084K" FMOrder="0x0020" SectionOrder="17"></sectionDesc>
				<sectionDesc name="170_Etat_Equipements" FMName="Commun" FMId="3084K" FMOrder="0x0021" SectionOrder="18"></sectionDesc>
				<sectionDesc name="180_Gestion_Gachees" activationCondition="Gestion_Gachees_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0022" SectionOrder="19"></sectionDesc>
				<sectionDesc name="185_Gestion_Humidite" FMName="Commun" FMId="3084K" FMOrder="0x0029" SectionOrder="20"></sectionDesc>
				<sectionDesc name="190_Dosage_Gra1" activationCondition="Dosage_Gra1_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0024" SectionOrder="21"></sectionDesc>
				<sectionDesc name="200_Dosage_Gra2" activationCondition="Dosage_Gra2_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0012" SectionOrder="22"></sectionDesc>
				<sectionDesc name="210_Sorties_Gra" FMName="Commun" FMId="3084K" FMOrder="0x0023" SectionOrder="23"></sectionDesc>
				<sectionDesc name="221_Dosage_Cim" activationCondition="Dosage_Cim_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x002C" SectionOrder="24"></sectionDesc>
				<sectionDesc name="231_Sorties_Cim" FMName="Commun" FMId="3084K" FMOrder="0x002D" SectionOrder="25"></sectionDesc>
				<sectionDesc name="241_Dosage_Eau" activationCondition="Dosage_Eau_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x002E" SectionOrder="26"></sectionDesc>
				<sectionDesc name="251_Sorties_Eau" FMName="Commun" FMId="3084K" FMOrder="0x002F" SectionOrder="27"></sectionDesc>
				<sectionDesc name="260_Dosage_Adj" activationCondition="Dosage_Adj_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0030" SectionOrder="28"></sectionDesc>
				<sectionDesc name="270_Sorties_Adj" FMName="Commun" FMId="3084K" FMOrder="0x0031" SectionOrder="29"></sectionDesc>
				<sectionDesc name="280_Dosage_Add" activationCondition="Dosage_Add_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0014" SectionOrder="30"></sectionDesc>
				<sectionDesc name="290_Sorties_Add" FMName="Commun" FMId="3084K" FMOrder="0x0016" SectionOrder="31"></sectionDesc>
				<sectionDesc name="300_Dosage_Ppe" activationCondition="Dosage_Ppe_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0026" SectionOrder="32"></sectionDesc>
				<sectionDesc name="320_Adressage_CCRs_M340" FMName="M340" FMId="3088K" FMOrder="0x0004" SectionOrder="33"></sectionDesc>
				<sectionDesc name="321_Gestion_CCRs" activationCondition="Gestion_CCRs_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0032" SectionOrder="34"></sectionDesc>
				<sectionDesc name="340_Dosage_Anh" activationCondition="Dosage_Anh_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0033" SectionOrder="35"></sectionDesc>
				<sectionDesc name="350_Sorties_Anh" activationCondition="Sorties_Anh_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0034" SectionOrder="36"></sectionDesc>
				<sectionDesc name="360_Remplacement_produits" FMName="Commun" FMId="3084K" FMOrder="0x0035" SectionOrder="37"></sectionDesc>
				<sectionDesc name="365_Gestion_Glace_Add_vers_Gra" FMName="Commun" FMId="3084K" FMOrder="0x0037" SectionOrder="38"></sectionDesc>
				<sectionDesc name="370_Stockage_inter_Gra" activationCondition="Stockage_inter_Gra_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0036" SectionOrder="39"></sectionDesc>
				<sectionDesc name="380_Stockage_inter_Cim" activationCondition="Stockage_inter_Cim_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0002" SectionOrder="40"></sectionDesc>
				<sectionDesc name="385_Stockage_inter_Ppe" activationCondition="Stockage_inter_Ppe_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0025" SectionOrder="41"></sectionDesc>
				<sectionDesc name="386_Stockage_inter_Color" activationCondition="Stockage_inter_Color_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0027" SectionOrder="42"></sectionDesc>
				<sectionDesc name="390_Pret_Pour_Intro" activationCondition="Pret_pour_Intro_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0005" SectionOrder="43"></sectionDesc>
				<sectionDesc name="391_Mesure_QdC_bascules" FMName="Commun" FMId="3084K" FMOrder="0x0028" SectionOrder="44"></sectionDesc>
				<sectionDesc name="392_Sequence_Intro_Vidange" FMName="Commun" FMId="3084K" FMOrder="0x0003" SectionOrder="45"></sectionDesc>
				<sectionDesc name="400_Intro_Gra" activationCondition="Intro_Gra_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0006" SectionOrder="46"></sectionDesc>
				<sectionDesc name="410_Intro_autres_produits" activationCondition="Intro_autres_produits_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0007" SectionOrder="47"></sectionDesc>
				<sectionDesc name="440_Rampe_Eau_Aspi" FMName="Commun" FMId="3084K" FMOrder="0x0008" SectionOrder="48"></sectionDesc>
				<sectionDesc name="450_Malaxeur1" activationCondition="Malaxeur1_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0009" SectionOrder="49"></sectionDesc>
				<sectionDesc name="460_Malaxeur2" activationCondition="Malaxeur2_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x000A" SectionOrder="50"></sectionDesc>
				<sectionDesc name="470_Trappes_malaxeurs" FMName="Commun" FMId="3084K" FMOrder="0x000B" SectionOrder="51"></sectionDesc>
				<sectionDesc name="480_Commandes_pupitre" FMName="Commun" FMId="3084K" FMOrder="0x000C" SectionOrder="52"></sectionDesc>
				<sectionDesc name="490_Cumul_pesee" activationCondition="Cumul_pesee_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x000D" SectionOrder="53"></sectionDesc>
				<sectionDesc name="500_Cumul_ppe" FMName="Commun" FMId="3084K" FMOrder="0x002A" SectionOrder="54"></sectionDesc>
				<sectionDesc name="510_Auto_Calibration_Check" FMName="Commun" FMId="3084K" FMOrder="0x002B" SectionOrder="55"></sectionDesc>
				<sectionDesc name="530_Commandes" FMName="Commun" FMId="3084K" FMOrder="0x000E" SectionOrder="56"></sectionDesc>
				<sectionDesc name="540_Bypass_Anh" FMName="Commun" FMId="3084K" FMOrder="0x000F" SectionOrder="57"></sectionDesc>
				<sectionDesc name="550_Discordances" activationCondition="Discordances_ACTIVE" logicCondition="standard" FMName="Commun" FMId="3084K" FMOrder="0x0010" SectionOrder="58"></sectionDesc>
				<sectionDesc name="555_Simulation_par_API" FMName="Commun" FMId="3084K" FMOrder="0x0011" SectionOrder="59"></sectionDesc>
				<sectionDesc name="560_Restitution_sorties" activationCondition="Restitution_sorties_ACTIVE" logicCondition="standard" FMName="M340" FMId="3088K" FMOrder="0x0005" SectionOrder="60"></sectionDesc>
				<sectionDesc name="570_Restitution_sorties_ST_M340" FMName="M340" FMId="3088K" FMOrder="0x0006" SectionOrder="61"></sectionDesc>
			</taskDesc>
			<FMDesc name="Fonctionnel Station" FMId="ROOT">
				<FMDesc name="Commun" FMId="3084K"></FMDesc>
				<FMDesc name="M340" FMId="3088K"></FMDesc>
			</FMDesc>
		</resource>
	</logicConf>
	<program>
		<identProgram name="010_Infos_Generales" type="section" task="MAST"></identProgram>
		<STSource>(*************************************************************************************************************************************
19/01/09 Fusion M340 / Quantum 

l'objectif principale est de faire en sorte que le code API (gestion de variables incluse) soit identique dans les 2 API.
Cela n'est pas possible a cause de l'utlisation d'EFB specifiqes à chaque API (communication essentiellement).
On crée donc un module fonctionel commun au deux API et 2 modules fonctionnelles spécifiques.
Les modules fonctionnels spécifique contiennent le code API qui ne peut pes être commun : EFB Specifique et codes d'affectation des 
variables d'entrées/sorties.
Le reste du code, même si il est utilisable dans un seul API, est placé dans le module fonctionnel commun.
Cea permet de conserver un maximum de variables dans ce module commun. 

*************************************************************************************************************************************)


(*************************************************************************************************************************************
19/12/2007 site Lavaur : test M340

Matériel : BMX CPU P342020
Langage API : Instruction List (IL)

Description du problème rencontré lors de l’utilisation du M340 :
L’utilisation de la fonction Reset « R » ne fonctionne pas correctement si elle est conditionnée directement par la fonction « LDN »

Exemple :
LDN Demande_Reset
R Bit_to_Reset

Fonctionnement voulu :
Lorsque « Demande_Reset » est à 0, on désire mettre à 0 l’information « Bit_to_Reset ».
Lorsque « Demande_Reset » est à 1, on désire rien faire.

Fonctionnement observé :
Quelque soit l’état de « Demande_Reset, l’information « Bit_to_Reset » est mise à 0.

Emplacement :
Cde_0_bascule_cim1
Manu_cde_dosage_anhydrite
inhib_set_intro_dif_en_cours
*************************************************************************************************************************************)
</STSource>
	</program>
	<program>
		<identProgram name="020_Preliminaires" type="section" task="MAST"></identProgram>
		<STSource>(* Initialisation des variables locales de la section *)
IF Preliminaires_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Preliminaires_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(*****************************************)
(* CONFIGURATION MANUELLE DU PROG API*** *)
(*****************************************)

Conf_Profibus_Manu_Station	:= 0; (* 0 = Pas de pupitre Profibus*)
Conf_DI_Manu_Station		:= 0; (* 0 = Pas de pupitre TOR*) (* Ajout R.C. 15/05/2009 *)

(* Configuration Pompe à graisse malaxeur 1 *)
Conf_Grease_PP_TON		:= 180; (* en secondes *)
Conf_Grease_PP_TOFF		:= 7200;  (* en secondes *)

(* Modif M.D. 06/05/2008 : Gestion de la bascule à Adjuvants *)
(* La configuration Bonbonne à colorant est disponible dans BC-Mix *)
Conf_Admix_Weigher_FR		:= 1; (* 1 bascule, 1 capteur *)
Conf_Admix_Weigher_PP_With_Sens	:= 0; (* 2 compartiments, 2 capteurs *)
Conf_Admix_Weigher_PP_No_Sens	:= 0; (* 10 compartiment, 0 capteurs *)

(* Modif M.D. 06/05/2008 : Gestion de la bascule à EAU *)
Conf_Water_Weigher_FR		:= 1; (* 1 bascule, 1 capteur *)
Conf_Water_Weigher_RO		:= 0; (* clapet+capteur et pompe+capteur *)
Conf_Water_Weigher_IN		:= 0; (* clapet+capteur et pompe sans capteur *)

(* Modif M.D. 06/05/2008 : Temporisation du capteur skip mou*)
(* Timer for slack steel*)
Conf_Skip_Slack_Steel_TON	:= t#1000ms;

(* Divers bit d'activité *)
(*If value = 0 then it means sensor is giving a value of 1 on the input of the PLC*) 
Conf_Voltage_Control_Act0	:= 0; (* Voltage control *) 
Conf_Mixer1_Mot_Prot_Act0	:= 0; (* Mixer motor protection *) 
Conf_Mixer1_Therm_Prot_Act0	:= 0; (* Mixer thermal protection *) 
Conf_Skip_Mot_Prot_Act0		:= 0; (* Skip motor protection *) 
Conf_Skip_Therm_Prot_Act0	:= 0; (* Skip thermal protection *) 
Conf_Compr_Mot_Prot_Act0	:= 0; (* Compressor motor protection *)   
Conf_Skip_Slack_Steel_Act0	:= 0; (* use of slack steel *) 

(* Modif M.D. 10/12/2008 *)
Conf_Agg1_Vib_Mot_Prot_Act0	:= 0; (* Aggregate weigher1 vibrator motor protection *) 
Conf_Cem1_Vib_Mot_Prot_Act0	:= 0; (* Cement weigher1 vibrator motor protection *) 
Conf_Cem1_Scr_Mot_Prot_Act0	:= 0; (* Cement screws motor protection *) 
Conf_Ash_Scr_Mot_Prot_Act0	:= 0; (* Fly ash screws motor protechion *) 
Conf_Admix_Dos_Mot_Prot_Act0	:= 0; (* Admixtures weighing pumps motor protection *) 
Conf_Admix_Dis_PP_Mot_Prot_Act0	:= 0; (* Admixtures discharging pumps motor protection *) 
Conf_Water_Dis_PP_Mot_Prot_Act0	:= 0; (* Water discharging pumps motor protection *) 

(* Modif Jérémie BOUVET 13/12/2008 *) 
Conf_PP_Grease1_Prot_Act0	:= 0; (* Grease pump protection*) 
Conf_Agg_Weigh_Conv_Prot_Act0	:= 0; (* aggregate weighing conveyor motor protection *) 

(* Gestion des discordances MODE PUPITRE*)
Conf_Manu_Station_Discordance	:= 0; (*0 = pas de gestion en mode pupitre*)


(* Temporisation avant alarme controle de tension *)
(* Timer before voltage control alarm*)
Conf_Voltage_Control_TON	:= t#5s;

(* Conf bascule analogique *)
(* "Pas" *)
Conf_Agg1_Ana_Step		:= 1; (* step for aggregate weigher 1 *)
Conf_Agg2_Ana_Step		:= 1; (* step for aggregate weigher 2 *)
Conf_Cem1_Ana_Step		:= 1; (* step for cement weigher 1 *)
Conf_Cem2_Ana_Step		:= 1; (* step for cement weigher 2 *)
Conf_Wat1_Ana_Step		:= 1; (* step for water weigher 1 *)
Conf_Wat2_Ana_Step		:= 1; (* step for water weigher 2 *)
(*Conf_Admix_Ana_Step		:= 1; (* step for admixture weigher *)*)(* - Not managed for admixtures *)
Conf_Admix_Anh_Step		:= 1; (* step for anhydrite weigher *)
Conf_Admix_Add_Step		:= 0; (* step for additionnal weigher *)
Conf_Agg_WH_Ana_Step		:= 1; (* step for aggregate waiting hopper *)
Conf_Cem_WH_Ana_Step		:= 1; (* step for cement waiting hopper *)
(* "Correction" (eq. Offset) *)
(* Supprimé par M.D. le 16/01/2009 en P700, car n'aurait plus dû être utilisé *)
(* Recréé par Jérémie BOUVET en P707 (voir #808 - Modifs Inde) *)
(* Ajout en section préliminaires par R.C. 28/09/2011 P856, car était lu mais jamais écrit dans le programme. *)
Conf_Agg1_Ana_Offset		:= 0; (* offset for aggregate weigher 1 *)
Conf_Agg2_Ana_Offset		:= 0; (* offset for aggregate weigher 2 *)
Conf_Cem1_Ana_Offset		:= 0; (* offset for cement weigher 1 *)
Conf_Cem2_Ana_Offset		:= 0; (* offset for cement weigher 2 *)
Conf_Water1_Ana_Offset		:= 0; (* offset for water weigher 1 *)
Conf_Water2_Ana_Offset		:= 0; (* offset for water weigher 2 *)
Conf_Admix_Ana_Offset		:= 0; (* offset for dmixture weigher *)
Conf_Anh_Ana_Offset		:= 0; (* offset for anhydrite weigher *)
Conf_Add_Ana_Offset		:= 0; (* offset for additionnal weigher *)
Conf_Cem_WH_Ana_Offset		:= 0; (* offset for aggregate waiting hopper *)
Conf_Agg_WH_Ana_Offset		:= 0; (* offset for cement waiting hopper *)


(* Modif M.D. 21/01/2009 P700 : Marche Malaxeur*)
Conf_Mixer1_Auto_Start		:= 0; (* Enable Mixer 1 automatic Start *) 
Conf_Mixer1_Auto_Stop		:= 0; (* Enable Mixer 1 automatic Stop *) 
Conf_Mixer2_Auto_Start		:= 0; (* Enable Mixer 2 automatic Start *) 
Conf_Mixer2_Auto_Stop		:= 0; (* Enable Mixer 2 automatic Stop *) 
(* Permet d'utiliser :
   - l'arret si la table de gachée est vide (type RO)
   ou
   - l'arret par "non utilisation" du malaxeur (type Inde)*)
Conf_Mixer_RO_Stop		:= 0; (* 1 = Arret auto Roumanie (première version)
		            		0 = Arret auto Inde (Jeremie) *)

(* Remarque : 
   En inde on utilise seulement la sortie 
   marche malaxeur -&gt; à 1 = Marche
                   -&gt; à 0 = Arret
   La sortie Arret malaxeur est différente et permet (Roumanie je crois)
   de bloquer le fonctionnement du malaxeur.
*)
(* FIN Modif M.D. 21/01/2009 P700 : Marche Malaxeur*)


(* Modifs Jérémie BOUVET "Inde" 15/02/2010 *)
(* Filter on the sensors *)
Conf_Skip_DI_Filter		:= 0; (*if set to one the filter on the skip sensors is activated*)
Conf_Skip_DI_Filter_Time	:= t#100ms; (* filter time on skip sensors*)
Conf_Skip_SCHG_DI_Filter	:= 0; (*if set to one the filter on the speed change sensors of the skip is activated*)
Conf_Skip_SCHG_DI_Filter_Time	:= t#100ms; (* filter time on speed change sensors of the skip*)
Conf_Mixer1_Gate_DI_Filter	:= 0; (*if set to one the filter on the mixer gate sensors is activated*)
Conf_Mixer1_Gate_DI_Filter_Time	:= t#100ms; (* filter time on smixer gate sensors*)
Conf_Mixer2_Gate_DI_Filter	:= 0; (*if set to one the filter on the mixer gate sensors is activated*)
Conf_Mixer2_Gate_DI_Filter_Time	:= t#100ms; (* filter time on smixer gate sensors*)

(* Modifs Jérémie BOUVET "Inde" 15/02/2010 *)
(* SIMEM plants / Adjuvants avec flotteur *)
Conf_Admix_Empty_Limit_Simen	:= 0; (* put conf_seuil_vide_simem to 1 if you are in a SIMEM plant, it will manage to leave some admixture in the jars *)
Conf_Admix_Empty_Filter_Ti_Simen:= t#2s;


(* Modif R.C. 04/10/2010 *)
Conf_Cem_Hopper_Empty_Time	:= t#10s; (* emptying time for cement hopper (first cement hopper after the cement weigher = "cylinder") *)
						(* t#10s by default. Use more if required if there is a cement screw between that hopper and the mixer *)


(* Modif R.C. 23/02/2012 P857 Gestion des tampons-pompes pour la Malaisie *)
(* Hopper tanks *)
Conf_Hopper_Tank_Empty_Time	:= t#90s; (* Used as reference for the alarm "empty threshold not reached" *)
Conf_Hopper_Tank_Response_Time	:= t#5s; (* Used for synthetising the "hopper tank closed" state *)
Conf_Hopper_Tank1_Empty_Act0	:= 0; (* 1 : invert "hopper tank 1 empty" signal *) 
Conf_Hopper_Tank2_Empty_Act0	:= 0; (* 1 : invert "hopper tank 2 empty" signal *) 
Conf_Hopper_Tank3_Empty_Act0	:= 0; (* 1 : invert "hopper tank 3 empty" signal *) 
Conf_Hopper_Tank4_Empty_Act0	:= 0; (* 1 : invert "hopper tank 4 empty" signal *) 
Conf_Hopper_Tank5_Empty_Act0	:= 0; (* 1 : invert "hopper tank 5 empty" signal *) 
Conf_Hopper_Tank6_Empty_Act0	:= 0; (* 1 : invert "hopper tank 6 empty" signal *) 
Conf_Hopper_Tank7_Empty_Act0	:= 0; (* 1 : invert "hopper tank 7 empty" signal *) 
Conf_Hopper_Tank8_Empty_Act0	:= 0; (* 1 : invert "hopper tank 8 empty" signal *) 
Conf_Hopper_Tank9_Empty_Act0	:= 0; (* 1 : invert "hopper tank 9 empty" signal *) 
Conf_Hopper_Tank10_Empty_Act0	:= 0; (* 1 : invert "hopper tank 10 empty" signal *) 
Conf_Hopper_Tank11_Empty_Act0	:= 0; (* 1 : invert "hopper tank 11 empty" signal *) 
Conf_Hopper_Tank12_Empty_Act0	:= 0; (* 1 : invert "hopper tank 12 empty" signal *) 
Conf_Hopper_Tank13_Empty_Act0	:= 0; (* 1 : invert "hopper tank 13 empty" signal *) 
Conf_Hopper_Tank14_Empty_Act0	:= 0; (* 1 : invert "hopper tank 14 empty" signal *) 
Conf_Hopper_Tank15_Empty_Act0	:= 0; (* 1 : invert "hopper tank 15 empty" signal *) 
Conf_Hopper_Tank16_Empty_Act0	:= 0; (* 1 : invert "hopper tank 16 empty" signal *) 
Conf_Hopper_Tank17_Empty_Act0	:= 0; (* 1 : invert "hopper tank 17 empty" signal *) 
Conf_Hopper_Tank18_Empty_Act0	:= 0; (* 1 : invert "hopper tank 18 empty" signal *) 
Conf_Hopper_Tank19_Empty_Act0	:= 0; (* 1 : invert "hopper tank 19 empty" signal *) 
Conf_Hopper_Tank20_Empty_Act0	:= 0; (* 1 : invert "hopper tank 20 empty" signal *) 



(* Ajout R.C. 04/01/2013 Réglages bonbonne à colorants *)
Conf_Color_XV2_Wait_After_Close	:= t#2s; (* Délai entre la détection de fermeture du clapet XV2 et la mise sous pression (par XV3) *)
Conf_Color_Valid_Time_PSL1	:= t#10s; (* Délai minimal avant prise en compte de l'état actif du pressostat PSL1 (détection de fin de transfert, pour des quantités non faibles) *)
Conf_Color_Tranf_Time_200g	:= t#30s; (* Temps de transfert total à partir de la mise sous pression pour des quantités faibles &lt;200g (détection de fin de transfert, pour des quantités faibles) *)
Conf_Color_Wait_End_Transf	:= t#20s; (* Temps de transfert à partir de la perte de l'activité du pressostat PSL1 (détection de fin de transfert, pour des quantités non faibles) *)
Conf_Color_Wait_Airlock_Depress	:= t#5s; (* Délai après la fin du transfert pour que la bonbonne se dépressurise totalement, avant d'autoriser une ouverture du clapet XV2 *)
Conf_Color_Simu_Admix_Wgh_Close	:= t#2s; (* Temps de réponse estimé de la trappe de la bascule à colorant, pour simuler le retour d'état "bascule adj fermée" (ce retour d'état n'est pas disponible sur la machine à colorants) *)
Conf_Colo_PSL1_Too_Long		:= t#120s; (* Temps maximal toléré d'activité du pressostat PSL1. Au delà, on affiche une alarme "Pressostat bloqué". *)
Conf_Color_XV2_Response_Time	:= t#2s; (* Temps maximal toléré entre une commande du clapet XV2, et la perte du capteur de position de départ. Au delà, on estime qu'il y a discordance, et on affiche une alarme "Coffret non prêt". *)
Conf_Color_XV2_Open_Close_Time	:= t#5s; (* Temps maximal toléré entre une commande du clapet XV2, et la détection du capteur de la position d'arrivée. Au delà, on estime qu'il y a discordance, et on affiche une alarme "Coffret non prêt". *)

(*------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------- 
				Modif FOR MALAYSIA
--------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------*)

(*----------**************-------------------**************--*------------**************---------*)
			(*ACTIVATION OF SPECIFIC CONFIGURATION MALAYSIA*)
(*----------**************-------------------**************--*------------**************---------*)
(*Settings on Close output signal on AGG Waiting Hopper*)
	Conf_2_Signal_Waiting_Hopper := FALSE; (*AGG Waiting hopper door using 2 signals for open and close*)
(*END OF Settings on Close output signal on Waiting Hopper*)

(*Settings on Mixer1 gates : For a specific plant where there is one mixer with 1 gate and 2 loading points "CHANSOW LIN PLANT"*)
(*In BCMix setting will be 1mixer with 2 gates*)
Conf_Mixer1_1Gate_2LoadingPT:=FALSE; (*Activation of the process*)
(*See other modification on feedbacks and output section 070 line 222 and section 560 line 324*)
(*END of settings on mixer1 gates*)
(*----------**************-------------------**************--*------------**************---------*)
			(*END OF ACTIVATION OF SPECIFIC CONFIGURATION MALAYSIA*)
(*----------**************-------------------**************--*------------**************---------*)
(***********************Others modifications for MALAYSIA**********************************)
TP_Top_Close_Waiting_Hopper (IN := FE(DO_Agg_WH_Open) AND Conf_2_Signal_Waiting_Hopper,
                             PT := t#2s,
                             Q =&gt; DO_Agg_WH_Close);(*Translated from STOR_Close_Waiting_Hopper from initial Prog*)

(**********************END OF Other modifications for Malaysia********************************)

(*------------------------------------------------------------------------------------------------
				END Modif FOR MALAYSIA
-------------------------------------------------------------------------------------------------*)

(******************************************)
(* FIN CONFIGURATION MANUELLE DU PROG API *)
(******************************************)

Version_Number := 875 ;
	(* La centaine est utilisée pour les versions majeures. *)
Revision_Number := 1;
	(* 0= version initiale / 1= rev.'A' / 2= rev.'B' / 3= rev.'C' *)
	(* 4= rev. 'D' / 5= rev. 'E' / 6= rev. 'F' / 7= rev. 'G' *)
	(* 8= rev. 'H' / 9= rev. 'I' / 10= rev. 'J' / 11= rev. 'K' *)
	(* 12= rev. 'L' / 13= rev. 'M' / 14= rev. 'N' / 15= rev. 'O' *)
	(* 16= rev. 'P' / 17= rev. 'Q' / 18= rev. 'R' / 19= rev. 'S' *)
	(* 20= rev. 'T' / 21= rev. 'U' / 22= rev. 'V' / 23= rev. 'W' *)
	(* 24= rev. 'X' / 25= rev. 'Y' / 26= rev. 'Z' *)
	(* Le numéro de révision permet de repérer des variantes particulières à *)
	(* 	certains sites; ou des versions dans lesquelles on a reporté des *)
	(* 	correctifs présents sur des versions ultérieures. *)
	(* Exemples d'utilisation : *)
	(* P702B : version P702 contenant un correctif important qui a été *)
	(* 	fait en P705. (P702 était la dernière version compatible pour *)
	(*	les CPUs Quantum pendant quelques mois.) *)
	(* P706B : version temporaire qui s'est intercallée en urgence entre P706 *)
	(* 	et P707 pour un site en particulier *)
	(* P702J : version pour une expérimentation sur les vibreurs des bascules *)
	(*	prévue pour 1 site en Jordanie. *)
	(* P702L : version avec un 'quickfix' spéciale pour le site de Wissous *)


(*Vérifier le paramétrage des alarmes et de la com avant de commencer !!!! *)

(*ROUMANIE : MODE AUTO ***************************)
IF Manu_Station_Auto_Mode 
AND NOT Manu_Station_Manu_Mode
AND (Conf_Profibus_Manu_Station OR Conf_DI_Manu_Station)
THEN
	Info_Plant_In_Auto := 1;
END_IF;
IF Manu_Station_Manu_Mode 
AND NOT Manu_Station_Auto_Mode  
AND (Conf_Profibus_Manu_Station OR Conf_DI_Manu_Station)
THEN
	Info_Plant_In_Auto := 0;
END_IF;
(* Modif R.C. 18/05/2009 : Ajout des conditions Conf_DI_Manu_Station *)
(*FIN : MODE AUTO ***************************)



(*ROUMANIE : MODE TRAPPE ***************************)
(* Commutation ON &lt;&gt; OFF du mode des trappes sur réception d'une commande *)
(* impulsionnelle d'un pupitre *)

Pulse_Manu_Station_Gate_Mode := Manu_Station_Cmd_Gate_Mode;
Pulse_Cmd_Gate_Mode_Switch := PB_Gate_Mode_Switch;
IF (Conf_Profibus_Manu_Station OR Conf_DI_Manu_Station)
AND (RE(Pulse_Manu_Station_Gate_Mode) (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
	OR RE(Pulse_Cmd_Gate_Mode_Switch)) (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
THEN
	Info_Gate_Mode_Auto := NOT (Info_Gate_Mode_Auto);
END_IF;
(* Modif R.C. 18/05/2009 : Ajout de la condition Conf_DI_Manu_Station *)
(* Modif R.C. 28/01/2010 : Réécriture pour meilleure lisibilité *)

(* Recopie ON ou OFF sur changement d'état d'un sélecteur sur pupitre *)
(* Ajout R.C. 28/01/2010 *)
Pulse_Cmd_Gate_Mode_Auto := Manu_Station_Cmd_Gate_Mode_Auto;
IF (Conf_DI_Manu_Station)
AND (	RE(Pulse_Cmd_Gate_Mode_Auto) (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
	OR FE(Pulse_Cmd_Gate_Mode_Auto)) (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
THEN
	Info_Gate_Mode_Auto := Manu_Station_Cmd_Gate_Mode_Auto;
END_IF;

(*FIN : MODE TRAPPE ***************************)

(* XX/12/2014 - P865 - artf1517141 *)
Conf_Calib_Check_Time := t#5s;
</STSource>
	</program>
	<program>
		<identProgram name="030_Com_ETH_HMS_Profibus_M340" type="section" task="MAST"></identProgram>
		<STSource>(* 19/01/09 *)
(* Cette section de communication utilise un EFB de communication
   spécifique au M340 *)
(* La passerelle HMS est utilisée en ROUMANIE *)




(*----------------- GESTION DES TRAMES  ------------------------------------*)
(*
En fonctionnement normal, on effectue une lecture/écriture toute les 20ms (mise à jour Siwarex).
En cas d'erreur ou de Time Out (100ms), Il on rééemmet 3 fois la trame. 
Au bout des 3 fois, on active le défaut communication.
Le processus n'est pas des plus simple mais il permet de détecter rapidement un defaut communication.

Une methode plus simple en codage serait de considérer le time out com comme défaut communication. mais dans ce cas, le time out doit 
accepter le plus long des temps de réponse ... mesuré à environ 700ms sur la centrale de Stefanisti Roumanie, ce qui est plutot long en cours de dosage!
*)

(* La longeur des données transmise est calculée sur la taile des tableau
   a envoyer et à receptionner 
   Equation de correspondance profibus *)
(* NETTOOL : Octet en lecture = 60
   + 8 Octet de live list = 68
   / 2 = 34 mots
   + 1 (car le premier octet est l'octet 0) = @35 dans la HMS *)
(* NETTOOL : Octet en Ecriture = 60
   / 2 = 30 mots
   + 1 (car le premier octet est l'octet 0) = @31 dans la HMS
   --&gt; les ecritures sont décalée à l'adresse 1025 dans la HMS *)

(* Initialisation des variables locales de la section *)
IF Com_ETH_HMS_Profibus_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Com_ETH_HMS_Profibus_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;

IP_HMS (IP1 := Conf_HMS_Profibus_IP1,
	IP2 := Conf_HMS_Profibus_IP2,
	IP3 := Conf_HMS_Profibus_IP3,
	IP4 := Conf_HMS_Profibus_IP4,
	Adresse =&gt; Adresse_HMS);

Com_ETH_HMS (TimeOut := 1,
		BDT_Com := t#20ms,
		Cible_TCP := Adresse_HMS,
		Tableau_envoi := Valeurs_envoi_TR1,
		Adresse_Lecture := 0,
		Adresse_Ecriture := 1024,
		Tableau_Reception =&gt; Valeurs_recu_TR1,
		Alarme_Com_API_ModbusTCP_1 =&gt; Def_com_HMS,
		Diag_Lecture =&gt; Rapport_Lec,
		Diag_Ecriture =&gt; Rapport_Ecr);
</STSource>
	</program>
	<program>
		<identProgram name="050_Com_ETH_Arpege_TCP_M340" type="section" task="MAST"></identProgram>
		<STSource>(* 19/01/09 *)
(* Cette section de communication utilise un EFB de communication
	spécifique au M340 *)
(* La bascule TCP Arpege est utilisée en France et au Maroc*)


(*----------------- GESTION DES TRAMES  ------------------------------------*)
(*
En fonctionnement normal, on effectue une lecture/écriture toute les 20ms (mise à jour Siwarex).
En cas d'erreur ou de Time Out (100ms), Il on rééemmet 3 fois la trame. 
Au bout des 3 fois, on active le défaut communication.
Le processus n'est pas des plus simple mais il permet de détecter rapidement un defaut communication.

Une methode plus simple en codage serait de considérer le time out com comme défaut communication. mais dans ce cas, le time out doit 
accepter le plus long des temps de réponse ... mesuré à environ 700ms sur la centrale de Stefanisti Roumanie, ce qui est plutot long en cours de dosage!
*)

(* La longeur des données transmise est calculée sur la taile des tableau
	a envoyer et à receptionner 
	Equation de correspondance profibus *)
(* NETTOOL : Octet en lecture = 60
	+ 8 Octet de live list = 68
	/ 2 = 34 mots
	+ 1 (car le premier octet est l'octet 0) = @35 dans la HMS *)
(* NETTOOL : Octet en Ecriture = 60
	/ 2 = 30 mots
	+ 1 (car le premier octet est l'octet 0) = @31 dans la HMS
	--&gt; les ecritures sont décalée à l'adresse 1025 dans la HMS *)

(* Initialisation des variables locales de la section *)
IF Com_ETH_Arpege_TCP_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Com_ETH_Arpege_TCP_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;

IP_ARPEGE (IP1 := Conf_Arpege_IP1,
	IP2 := Conf_Arpege_IP2,
	IP3 := Conf_Arpege_IP3,
	IP4 := Conf_Arpege_IP4,
	Adresse =&gt; Adresse_Arpege_TCP);

Com_ETH_Arpege (TimeOut := 1,
		BDT_Com := t#20ms,
		Cible_TCP := Adresse_Arpege_TCP,
		Tableau_envoi := Valeurs_envoi_IDE500,
		Adresse_Lecture := 0,
		Adresse_Ecriture := 1024,(* Ecriture non utilisee *)
		Tableau_Reception =&gt; Valeurs_recu_IDE500,
		Alarme_Com_API_ModbusTCP_1 =&gt; Def_com_IDE500,
		Diag_Lecture =&gt; Rapport_Lec_IDE500,
		Diag_Ecriture =&gt; Rapport_Ecr_IDE500); 

(* ALARME MODBUS TCP *)
IF Def_com_IDE500 THEN
	Alarme_Com_API_ModbusTCP_1 := 1 ;
END_IF;

(* DONNEES A ENVOYER *)
(* Aucun envoi n'est prévu, on met donc le tableau d'envoi à 0 *)
MOVE_INT_ARINT (IN := 0, OUT =&gt; Valeurs_envoi_IDE500);

(* DONNEES RECUES *)
IDE500_info_voie[1].Etat  := Valeurs_recu_IDE500[1];
IDE500_info_voie[1].Pds1  := Valeurs_recu_IDE500[2];
IDE500_info_voie[1].Pds2  := Valeurs_recu_IDE500[3];
IDE500_info_voie[2].Etat  := Valeurs_recu_IDE500[4];
IDE500_info_voie[2].Pds1  := Valeurs_recu_IDE500[5];
IDE500_info_voie[2].Pds2  := Valeurs_recu_IDE500[6];
IDE500_info_voie[3].Etat  := Valeurs_recu_IDE500[7];
IDE500_info_voie[3].Pds1  := Valeurs_recu_IDE500[8];
IDE500_info_voie[3].Pds2  := Valeurs_recu_IDE500[9];
IDE500_info_voie[4].Etat  := Valeurs_recu_IDE500[10];
IDE500_info_voie[4].Pds1  := Valeurs_recu_IDE500[11];
IDE500_info_voie[4].Pds2  := Valeurs_recu_IDE500[12];
IDE500_info_voie[5].Etat  := Valeurs_recu_IDE500[13];
IDE500_info_voie[5].Pds1  := Valeurs_recu_IDE500[14];
IDE500_info_voie[5].Pds2  := Valeurs_recu_IDE500[15];
IDE500_info_voie[6].Etat  := Valeurs_recu_IDE500[16];
IDE500_info_voie[6].Pds1  := Valeurs_recu_IDE500[17];
IDE500_info_voie[6].Pds2  := Valeurs_recu_IDE500[18];
IDE500_info_voie[7].Etat  := Valeurs_recu_IDE500[19];
IDE500_info_voie[7].Pds1  := Valeurs_recu_IDE500[20];
IDE500_info_voie[7].Pds2  := Valeurs_recu_IDE500[21];
IDE500_info_voie[8].Etat  := Valeurs_recu_IDE500[22];
IDE500_info_voie[8].Pds1  := Valeurs_recu_IDE500[23];
IDE500_info_voie[8].Pds2  := Valeurs_recu_IDE500[24];
IDE500_info_voie[9].Etat  := Valeurs_recu_IDE500[25];
IDE500_info_voie[9].Pds1  := Valeurs_recu_IDE500[26];
IDE500_info_voie[9].Pds2  := Valeurs_recu_IDE500[27];
IDE500_info_voie[10].Etat := Valeurs_recu_IDE500[28];
IDE500_info_voie[10].Pds1 := Valeurs_recu_IDE500[29];
IDE500_info_voie[10].Pds2 := Valeurs_recu_IDE500[30];
IDE500_info_voie[11].Etat := Valeurs_recu_IDE500[31];
IDE500_info_voie[11].Pds1 := Valeurs_recu_IDE500[32];
IDE500_info_voie[11].Pds2 := Valeurs_recu_IDE500[33];
IDE500_info_voie[12].Etat := Valeurs_recu_IDE500[34];
IDE500_info_voie[12].Pds1 := Valeurs_recu_IDE500[35];
IDE500_info_voie[12].Pds2 := Valeurs_recu_IDE500[36];
IDE500_Compteur	          := Valeurs_recu_IDE500[37];
(*
Alarme à tester sous BCMix :  mapping
*)
</STSource>
	</program>
	<program>
		<identProgram name="061_Gestion_HMS_Profibus" type="section" task="MAST"></identProgram>
		<STSource>(* 19/01/2009 *)
(* Mapping des données de la passerelle HMS *)
(* Utilisation en roumanie sur Quantum (I/O scanning) et M340 *)

(* Initialisation des variables locales de la section *)
IF Gestion_HMS_Profibus_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Gestion_HMS_Profibus_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;

(*ALARME MODBUS TCP*)
IF Def_com_HMS THEN
	Alarme_Com_HMS_Profibus := 1 ;
END_IF;

(*-------------------- LECTURE DONNEES HMS ---------------------*)

(* Lecture mot status HMS *)
Mot_Status_GTW := Valeurs_recu_TR1[1];

(* Lecture Live Liste Profibus *)
FOR i := 1 TO 4 DO
	LIVE_LIST[i] := Valeurs_recu_TR1[i+1];
END_FOR;
SWAP_ARINT(LIVE_LIST);

(* Données pupitre profibus (même si non existant) *)
FOR i := 1 TO 4 DO
	BP_Pupitre_PROFIBUS[i] := Valeurs_recu_TR1[i+5];
END_FOR;
SWAP_ARINT(BP_Pupitre_PROFIBUS);

(* Données Mesomatic #1 (même si non existant) *)
FOR i := 1 TO 5 DO
	Data_Mesomatic1[i] := Valeurs_recu_TR1[i+9];
END_FOR;
SWAP_ARINT(Data_Mesomatic1);

(* Données Mesomatic #2 (même si non existant) *)
FOR i := 1 TO 5 DO
	Data_Mesomatic2[i] := Valeurs_recu_TR1[i+14];
END_FOR;
SWAP_ARINT(Data_Mesomatic2);

(* Données Mesomatic #3 (même si non existant) *)
FOR i := 1 TO 5 DO
	Data_Mesomatic3[i] := Valeurs_recu_TR1[i+19];
END_FOR;
SWAP_ARINT(Data_Mesomatic3);

(* Données Mesomatic #4 (même si non existant) *)
FOR i := 1 TO 5 DO
	Data_Mesomatic4[i] := Valeurs_recu_TR1[i+24];
END_FOR;
SWAP_ARINT(Data_Mesomatic4);

(* Données Mesomatic #5 (même si non existant) *)
FOR i := 1 TO 5 DO
	Data_Mesomatic5[i] := Valeurs_recu_TR1[i+29];
END_FOR;
SWAP_ARINT(Data_Mesomatic5);

(* Données Mesomatic #6 (même si non existant) *)
FOR i := 1 TO 5 DO
	Data_Mesomatic6[i] := Valeurs_recu_TR1[i+34];
END_FOR;
SWAP_ARINT(Data_Mesomatic6);




(*-------------------- GESTION DEFAUT PROFIBUS --------------------*)


(* Surveillance du bit de run de la passerelle *)
Mot_Status_GTW.0 := GTW_bit_RUN ;

PROFIB_ADRESS_OK := COPY_ARINT_AREBOOL(IN := LIVE_LIST,
					P1 := 0,
					N := 4,
					P2:=0);


(* Pour faciliter la simulation, on désactive les alarmes de communication *)

(* Ajout R.C. 13/01/2010 *)
IF NOT Mode_simulation
AND (
	(Conf_techno_basc_TP_skip_gra1 = 4)
	OR (Conf_techno_basc_TP_skip_gra2 = 4)
	OR (Conf_techno_basc_TP_skip_gra3 = 4)
	OR (Conf_techno_basc_TP_skip_gra4 = 4)
	OR (Conf_techno_basc_cim1 = 4)
	OR (Conf_techno_basc_cim2 = 4)
	OR (Conf_techno_basc_eau1 = 4)
	OR (Conf_techno_basc_eau2 = 4)
	OR (Conf_techno_basc_anh = 4)
	OR (Conf_techno_basc_adj = 4)
	OR (Conf_techno_basc_adj2 = 4)
(*	OR (Conf_techno_basc_add = 4)*)(* Ligne additionnelle pas gérée en Profibus pour le moment *)
	OR (Conf_techno_TT_gra = 4)
	OR (Conf_techno_TT_cim = 4)
)
THEN
	Conf_Mesomatic_Profibus := TRUE;
ELSE
	Conf_Mesomatic_Profibus := FALSE;
END_IF;

Alarme_Com_HMS_Profibus_Pupitre := Conf_Profibus_Manu_Station
				AND (PROFIB_ADRESS_OK[5] &lt;&gt; 1); (*pupitre*)
Alarme_Com_HMS_Profibus_Gra1 := Conf_Mesomatic_Profibus
				AND (Conf_techno_basc_TP_skip_gra1 = 4)
				AND (PROFIB_ADRESS_OK[15] &lt;&gt; 1);(*gra1*)
Alarme_Com_HMS_Profibus_Cim1 := Conf_Mesomatic_Profibus
				AND (Conf_techno_basc_cim1 = 4)
				AND (PROFIB_ADRESS_OK[16] &lt;&gt; 1);(*cim1*)
Alarme_Com_HMS_Profibus_Eau1 := Conf_Mesomatic_Profibus
				AND (Conf_techno_basc_eau1 = 4)
				AND (PROFIB_ADRESS_OK[17] &lt;&gt; 1);(*eau1*)
Alarme_Com_HMS_Profibus_ADJ := Conf_Mesomatic_Profibus
				AND (Conf_techno_basc_adj = 4)
				AND (PROFIB_ADRESS_OK[18] &lt;&gt; 1);(*adj*)

	(*-------------------- DEMARRAGE X-GATEWAY --------------------*)


(*Gestion du Contol Word (@ modbus 1*)
(* Regroupage des 2 bits du "master mode" *)
NO_MAST_MODE := NOT Valeurs_recu_TR1[1].2 
		AND NOT Valeurs_recu_TR1[1].3
		AND Valeurs_recu_TR1[1].1;

(* Surveillance du "master mode" *)
IF NO_MAST_MODE THEN
	Valeurs_envoi_TR1[1]:= 2#1100; (*Mise à 000..1100 du control word*)
END_IF;




	(* GESTION PUPITRE PROFIBUS SI EXISTANT *)
IF Conf_Profibus_Manu_Station THEN
	(*-------------------- MAPPING DONNES RECUES --------------------*)

	(*"Sorties" d'un point de vue pupitre*)
	(*Données lues sur le pupitre*)
	Pup_Cde_vid_basc_Gra1		:= BP_Pupitre_PROFIBUS[1].0;
	Pup_Cde_PV_Gra1			:= BP_Pupitre_PROFIBUS[1].1;
	Pup_Cde_dos_Gra[1]		:= BP_Pupitre_PROFIBUS[1].2;
	Pup_Cde_dos_Gra[2]		:= BP_Pupitre_PROFIBUS[1].3;
	Pup_Cde_dos_Gra[3]		:= BP_Pupitre_PROFIBUS[1].4;
	Pup_Cde_dos_Gra[4]		:= BP_Pupitre_PROFIBUS[1].5;
	Pup_Cde_dos_Gra[5]		:= BP_Pupitre_PROFIBUS[1].6;
	Pup_Cde_dos_Gra[6]		:= BP_Pupitre_PROFIBUS[1].7;

	Pup_Cde_dos_Gra[7]		:= BP_Pupitre_PROFIBUS[1].8;
	Pup_Cde_vid_basc_Cim1		:= BP_Pupitre_PROFIBUS[1].9;
	Pup_Cde_PV_Cim1			:= BP_Pupitre_PROFIBUS[1].10;
	Pup_Cde_dos_Cim[1]		:= BP_Pupitre_PROFIBUS[1].11;
	Pup_Cde_dos_Cim[2]		:= BP_Pupitre_PROFIBUS[1].12;
	Pup_Cde_dos_Cim[3]		:= BP_Pupitre_PROFIBUS[1].13;
	Pup_Cde_dos_Cim[4]		:= BP_Pupitre_PROFIBUS[1].14;
	Pup_Cde_dos_Cim[5]		:= BP_Pupitre_PROFIBUS[1].15;
 
	Pup_Cde_vibreur_Cim1		:= BP_Pupitre_PROFIBUS[2].0;
	Pup_Cde_vibreur_Cim2		:= BP_Pupitre_PROFIBUS[2].0; (* Commun cim1/cim2 *)
	Pup_Cde_vid_basc_Cim2		:= BP_Pupitre_PROFIBUS[2].1;
	Pup_Cde_vid_basc_Eau1		:= BP_Pupitre_PROFIBUS[2].2;
	Pup_Cde_PV_Eau1			:= BP_Pupitre_PROFIBUS[2].3;
	Pup_Cde_dos_Eau[1]		:= BP_Pupitre_PROFIBUS[2].4;
	Pup_Cde_dos_Eau[2]		:= BP_Pupitre_PROFIBUS[2].5;
	Pup_Cde_dos_Eau[3]		:= BP_Pupitre_PROFIBUS[2].6;
	Pup_Cde_vibreur_Eau1		:= BP_Pupitre_PROFIBUS[2].7;
	Pup_Cde_vibreur_Eau2		:= BP_Pupitre_PROFIBUS[2].7; (* Commun eau1/eau2 *)
 
	Pup_Cde_vid_basc_Eau2		:= BP_Pupitre_PROFIBUS[2].8;
	Pup_Cde_vid_basc_Adj_comp[1]	:= BP_Pupitre_PROFIBUS[2].9;
	Pup_Cde_vid_basc_Adj_comp[2]	:= BP_Pupitre_PROFIBUS[2].10;
	Pup_Cde_dos_Adj[1]		:= BP_Pupitre_PROFIBUS[2].11;
	Pup_Cde_dos_Adj[2]		:= BP_Pupitre_PROFIBUS[2].12;
	Pup_Cde_dos_Adj[3]		:= BP_Pupitre_PROFIBUS[2].13;
	Pup_Cde_dos_Adj[4]		:= BP_Pupitre_PROFIBUS[2].14;
	Pup_Cde_dos_Adj[5]		:= BP_Pupitre_PROFIBUS[2].15;
 
	Pup_Cde_dos_Adj[6]		:= BP_Pupitre_PROFIBUS[3].0;
	Pup_Cde_dos_Adj[7]		:= BP_Pupitre_PROFIBUS[3].1;
	Pup_Cde_dos_Adj[8]		:= BP_Pupitre_PROFIBUS[3].2;
	Pup_Cde_Not_Used[3].3		:= BP_Pupitre_PROFIBUS[3].3;
	Pup_Cde_Not_Used[3].4		:= BP_Pupitre_PROFIBUS[3].4;
	Pup_Cde_vid_basc_Add		:= BP_Pupitre_PROFIBUS[3].5; (* Ajout R.C. 12/10/2011 P856, à la place de "Pup_Cde_Tapis_Trans" *)
	Pup_Cde_PV_Add			:= BP_Pupitre_PROFIBUS[3].6; (* Ajout R.C. 12/10/2011 P856, à la place de "Pup_Cde_ouv_TT_gra" *)
	Pup_Cde_dos_Add[1]		:= BP_Pupitre_PROFIBUS[3].7; (* Ajout R.C. 12/10/2011 P856 *)
 
	Pup_Cde_dos_Add[2]		:= BP_Pupitre_PROFIBUS[3].8; (* Ajout R.C. 12/10/2011 P856 *)
	Pup_Cde_dos_Add[3]		:= BP_Pupitre_PROFIBUS[3].9; (* Ajout R.C. 12/10/2011 P856 *)
	Pup_Cde_dos_Add[4]		:= BP_Pupitre_PROFIBUS[3].10; (* Ajout R.C. 12/10/2011 P856 *)
	Pup_Cde_vibreur_Add		:= BP_Pupitre_PROFIBUS[3].11; (* Ajout R.C. 12/10/2011 P856 *)
	Pup_Descente_Skip		:= BP_Pupitre_PROFIBUS[3].12;
	Pup_Cde_Tapis_Trans		:= BP_Pupitre_PROFIBUS[3].13; (* Déplacement R.C. 12/10/2011 P856 : "Pup_Cde_Tapis_Trans" était en [3].5 *)
	Pup_Montee_Skip			:= BP_Pupitre_PROFIBUS[3].14;
	Pup_Cde_ouv_TT_gra		:= BP_Pupitre_PROFIBUS[3].15; (* Déplacement R.C. 12/10/2011 P856 : "Pup_Cde_ouv_TT_gra" était en [3].6 *)
 
	Pup_Cde_stop_malax1		:= BP_Pupitre_PROFIBUS[4].0;
	Pup_Cde_start_malax1		:= BP_Pupitre_PROFIBUS[4].1;
	Pup_Cde_Not_Used[4].2		:= BP_Pupitre_PROFIBUS[4].2;
	Pup_Cde_RAZ_alarmes		:= BP_Pupitre_PROFIBUS[4].3; (* Ajout R.C. 12/07/2011 P852 *)
	Manu_Station_Manu_Mode		:= BP_Pupitre_PROFIBUS[4].4;
	Manu_Station_Auto_Mode		:= BP_Pupitre_PROFIBUS[4].5;
	Pup_Cde_vibreur_Gra1		:= BP_Pupitre_PROFIBUS[4].6;
	Pup_Cde_Not_Used[4].7		:= BP_Pupitre_PROFIBUS[4].7; 

	Pup_Cde_fermeture_trappe1_mal1	:= BP_Pupitre_PROFIBUS[4].8; 
	Manu_Station_Cmd_Gate_Mode	:= BP_Pupitre_PROFIBUS[4].9; 
	Pup_Cde_Not_Used[4].10		:= BP_Pupitre_PROFIBUS[4].10;
	Pup_Cde_Ouverture_trappe1_mal1	:= BP_Pupitre_PROFIBUS[4].11;
	Pup_Cde_Not_Used[4].12		:= BP_Pupitre_PROFIBUS[4].12; 
	Pup_Cde_Not_Used[4].13		:= BP_Pupitre_PROFIBUS[4].13;
	Pup_Cde_Klaxon			:= BP_Pupitre_PROFIBUS[4].14;
	Pup_Cde_Arret_Urgence		:= BP_Pupitre_PROFIBUS[4].15;
	
	(*-------------------- MAPPING DONNES ENVOYE ---------------------*)

	(*Données écrites sur le pupitre*)
	LED_Pupitre[1].0		:= not Info_balance_Gra1_fermee;
	LED_Pupitre[1].1		:= Cde_petite_vitesse_Gra1	;
	LED_Pupitre[1].2		:= Cde_dosage_Gra[1];
	LED_Pupitre[1].3		:= Cde_dosage_Gra[2];
	LED_Pupitre[1].4		:= Cde_dosage_Gra[3];
	LED_Pupitre[1].5		:= Cde_dosage_Gra[4];
	LED_Pupitre[1].6		:= Cde_dosage_Gra[5];
	LED_Pupitre[1].7		:= Cde_dosage_Gra[6];

	LED_Pupitre[1].8		:= Cde_dosage_Gra[7];
	LED_Pupitre[1].9		:= NOT Info_balance_Cim1_fermee;
	LED_Pupitre[1].10		:= Cde_petite_vitesse_Cim1;
	LED_Pupitre[1].11		:= Cde_dosage_Cim[1];
	LED_Pupitre[1].12		:= Cde_dosage_Cim[2];
	LED_Pupitre[1].13		:= Cde_dosage_Cim[3];
	LED_Pupitre[1].14		:= Cde_dosage_Cim[4];
	LED_Pupitre[1].15		:= Cde_dosage_Cim[5];

	LED_Pupitre[2].0		:= Cde_vibreur_balance_Cim1 OR Cde_vibreur_balance_Cim2;
	LED_Pupitre[2].1		:= NOT Info_balance_Cim2_fermee;
	LED_Pupitre[2].2		:= NOT Info_balance_eau1_fermee;
	LED_Pupitre[2].3		:= Cde_petite_vitesse_Eau1;
	LED_Pupitre[2].4		:= Cde_dosage_Eau[1];
	LED_Pupitre[2].5		:= Cde_dosage_Eau[2];
	LED_Pupitre[2].6		:= Cde_dosage_Eau[3];
	LED_Pupitre[2].7		:= Cde_vibreur_balance_Eau1 OR Cde_vibreur_balance_Eau2;

	LED_Pupitre[2].8		:= NOT Info_balance_Eau2_fermee;
	LED_Pupitre[2].9		:= Cde_ppe_vidange_Comp_Adj[1];
	LED_Pupitre[2].10		:= Cde_ppe_vidange_Comp_Adj[2];
	LED_Pupitre[2].11		:= Cde_dosage_Adj[1];
	LED_Pupitre[2].12		:= Cde_dosage_Adj[2];
	LED_Pupitre[2].13		:= Cde_dosage_Adj[3];
	LED_Pupitre[2].14		:= Cde_dosage_Adj[4];
	LED_Pupitre[2].15		:= Cde_dosage_Adj[5];

	LED_Pupitre[3].0		:= Cde_dosage_Adj[6];
	LED_Pupitre[3].1		:= Cde_dosage_Adj[7];
	LED_Pupitre[3].2		:= Cde_dosage_Adj[8];
	LED_Pupitre[3].3		:= LED_Pupitre_Not_Used[3].3;
	LED_Pupitre[3].4		:= LED_Pupitre_Not_Used[3].4;
	LED_Pupitre[3].5		:= NOT Info_balance_Add_fermee;
	LED_Pupitre[3].6		:= Cde_petite_vitesse_Add;
	LED_Pupitre[3].7		:= Cde_dosage_Add[1];

	LED_Pupitre[3].8		:= Cde_dosage_Add[2];
	LED_Pupitre[3].9		:= Cde_dosage_Add[3];
	LED_Pupitre[3].10		:= Cde_dosage_Add[4];
	LED_Pupitre[3].11		:= Cde_vibreur_balance_Add;
	LED_Pupitre[3].12		:= Info_Skip_Bas;
	LED_Pupitre[3].13		:= Info_tapis_transfert_en_marche;
	LED_Pupitre[3].14		:= Info_Skip_haut;
	LED_Pupitre[3].15		:= NOT Info_TT_Gra_fermee;

	LED_Pupitre[4].0		:= Not Info_malaxeur1_en_marche;
	LED_Pupitre[4].1		:= Info_malaxeur1_en_marche;
	LED_Pupitre[4].2		:= LED_Pupitre_Not_Used[4].2;
	LED_Pupitre[4].3		:= LED_Pupitre_Not_Used[4].3;
	LED_Pupitre[4].4		:= NOT Info_Plant_In_Auto;
	LED_Pupitre[4].5		:= Info_Plant_In_Auto;
	LED_Pupitre[4].6		:= Cde_vibreur_balance_Gra1;
	LED_Pupitre[4].7		:= LED_Pupitre_Not_Used[4].7;
 
	LED_Pupitre[4].8		:= Info_trappe1_fermee_mal1;
	LED_Pupitre[4].9		:= Info_Gate_Mode_Auto;
	LED_Pupitre[4].10		:= LED_Pupitre_Not_Used[4].10;
	LED_Pupitre[4].11		:= Info_trappe1_ouverte_mal1;
	LED_Pupitre[4].12		:= LED_Pupitre_Not_Used[4].12;
	LED_Pupitre[4].13		:= Cde_marche_compresseur;
	LED_Pupitre[4].14		:= Pup_Cde_Klaxon ;
	LED_Pupitre[4].15		:= Mode_AU; (* Modif. R.C. 09/02/2010 *)

	LED_Pupitre[5].0		:= LED_Pupitre_Not_Used[5].0;
	LED_Pupitre[5].1		:= LED_Pupitre_Not_Used[5].1;
	LED_Pupitre[5].2		:= LED_Pupitre_Not_Used[5].2;
	LED_Pupitre[5].3		:= LED_Pupitre_Not_Used[5].3;
	LED_Pupitre[5].4		:= LED_Pupitre_Not_Used[5].4;
	LED_Pupitre[5].5		:= LED_Pupitre_Not_Used[5].5;
	LED_Pupitre[5].6		:= LED_Pupitre_Not_Used[5].6;
	LED_Pupitre[5].7		:= LED_Pupitre_Not_Used[5].7;

	LED_Pupitre[5].8		:= Info_prot_mot_compresseur;
	LED_Pupitre[5].9		:= Info_prot_mot_compresseur;
	LED_Pupitre[5].10		:= Voyant_AU1;
	LED_Pupitre[5].11		:= Voyant_AU2;
	LED_Pupitre[5].12		:= Voyant_defaut1;
	LED_Pupitre[5].13		:= Voyant_defaut2;
	LED_Pupitre[5].14		:= LED_Pupitre_Not_Used[5].14;
	LED_Pupitre[5].15		:= LED_Pupitre_Not_Used[5].15;

	Tble_envoi_LED_Pupitre := LED_Pupitre;
	SWAP_ARINT(Tble_envoi_LED_Pupitre);
	FOR i := 1 TO 5 DO
		Valeurs_ENVOI_TR1[i+1] := Tble_envoi_LED_Pupitre[i];
	END_FOR;
	(*fin du IF (présence ou non du pupitre profibus)*)
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="068_Prepa_Acquisition_M340" type="section" task="MAST"></identProgram>
		<STSource>(* Dans cette section, on met tout ce qui est spécifique au M340 *)
(* pour l'acquisition des entrées *)

(* Initialisation des variables locales de la section *)
IF Prepa_Acquisition_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Prepa_Acquisition_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


M340_Actif := TRUE;
Quantum_Actif := FALSE;


(*En M340, il faut mettre les bits d'entrées dans des mots*)
(* Cela doit être dans une section spécifique M340, car sinon *)
(* le programme Quantum ne compilerait pas si une adresse est définie *)
(* pour une variable "BALANCE_*" *)
BALANCE_Gra1 := BIT_TO_WORD(
	BALANCE_Gra1_M340[16],
	BALANCE_Gra1_M340[15],
	BALANCE_Gra1_M340[14],
	BALANCE_Gra1_M340[13],
	BALANCE_Gra1_M340[12],
	BALANCE_Gra1_M340[11],
	BALANCE_Gra1_M340[10],
	BALANCE_Gra1_M340[9],
	BALANCE_Gra1_M340[8],
	BALANCE_Gra1_M340[7],
	BALANCE_Gra1_M340[6],
	BALANCE_Gra1_M340[5],
	BALANCE_Gra1_M340[4],
	BALANCE_Gra1_M340[3],
	BALANCE_Gra1_M340[2],
	BALANCE_Gra1_M340[1]);
BALANCE_Gra2 := BIT_TO_WORD(
	BALANCE_Gra2_M340[16],
	BALANCE_Gra2_M340[15],
	BALANCE_Gra2_M340[14],
	BALANCE_Gra2_M340[13],
	BALANCE_Gra2_M340[12],
	BALANCE_Gra2_M340[11],
	BALANCE_Gra2_M340[10],
	BALANCE_Gra2_M340[9],
	BALANCE_Gra2_M340[8],
	BALANCE_Gra2_M340[7],
	BALANCE_Gra2_M340[6],
	BALANCE_Gra2_M340[5],
	BALANCE_Gra2_M340[4],
	BALANCE_Gra2_M340[3],
	BALANCE_Gra2_M340[2],
	BALANCE_Gra2_M340[1]);
BALANCE_Cim1 := BIT_TO_WORD(
	BALANCE_Cim1_M340[16],
	BALANCE_Cim1_M340[15],
	BALANCE_Cim1_M340[14],
	BALANCE_Cim1_M340[13],
	BALANCE_Cim1_M340[12],
	BALANCE_Cim1_M340[11],
	BALANCE_Cim1_M340[10],
	BALANCE_Cim1_M340[9],
	BALANCE_Cim1_M340[8],
	BALANCE_Cim1_M340[7],
	BALANCE_Cim1_M340[6],
	BALANCE_Cim1_M340[5],
	BALANCE_Cim1_M340[4],
	BALANCE_Cim1_M340[3],
	BALANCE_Cim1_M340[2],
	BALANCE_Cim1_M340[1]);
BALANCE_Cim2 := BIT_TO_WORD(
	BALANCE_Cim2_M340[16],
	BALANCE_Cim2_M340[15],
	BALANCE_Cim2_M340[14],
	BALANCE_Cim2_M340[13],
	BALANCE_Cim2_M340[12],
	BALANCE_Cim2_M340[11],
	BALANCE_Cim2_M340[10],
	BALANCE_Cim2_M340[9],
	BALANCE_Cim2_M340[8],
	BALANCE_Cim2_M340[7],
	BALANCE_Cim2_M340[6],
	BALANCE_Cim2_M340[5],
	BALANCE_Cim2_M340[4],
	BALANCE_Cim2_M340[3],
	BALANCE_Cim2_M340[2],
	BALANCE_Cim2_M340[1]);
BALANCE_Eau1 := BIT_TO_WORD(
	BALANCE_Eau1_M340[16],
	BALANCE_Eau1_M340[15],
	BALANCE_Eau1_M340[14],
	BALANCE_Eau1_M340[13],
	BALANCE_Eau1_M340[12],
	BALANCE_Eau1_M340[11],
	BALANCE_Eau1_M340[10],
	BALANCE_Eau1_M340[9],
	BALANCE_Eau1_M340[8],
	BALANCE_Eau1_M340[7],
	BALANCE_Eau1_M340[6],
	BALANCE_Eau1_M340[5],
	BALANCE_Eau1_M340[4],
	BALANCE_Eau1_M340[3],
	BALANCE_Eau1_M340[2],
	BALANCE_Eau1_M340[1]);
BALANCE_Eau2 := BIT_TO_WORD(
	BALANCE_Eau2_M340[16],
	BALANCE_Eau2_M340[15],
	BALANCE_Eau2_M340[14],
	BALANCE_Eau2_M340[13],
	BALANCE_Eau2_M340[12],
	BALANCE_Eau2_M340[11],
	BALANCE_Eau2_M340[10],
	BALANCE_Eau2_M340[9],
	BALANCE_Eau2_M340[8],
	BALANCE_Eau2_M340[7],
	BALANCE_Eau2_M340[6],
	BALANCE_Eau2_M340[5],
	BALANCE_Eau2_M340[4],
	BALANCE_Eau2_M340[3],
	BALANCE_Eau2_M340[2],
	BALANCE_Eau2_M340[1]);
BALANCE_Adj := BIT_TO_WORD(
	BALANCE_Adj_M340[16],
	BALANCE_Adj_M340[15],
	BALANCE_Adj_M340[14],
	BALANCE_Adj_M340[13],
	BALANCE_Adj_M340[12],
	BALANCE_Adj_M340[11],
	BALANCE_Adj_M340[10],
	BALANCE_Adj_M340[9],
	BALANCE_Adj_M340[8],
	BALANCE_Adj_M340[7],
	BALANCE_Adj_M340[6],
	BALANCE_Adj_M340[5],
	BALANCE_Adj_M340[4],
	BALANCE_Adj_M340[3],
	BALANCE_Adj_M340[2],
	BALANCE_Adj_M340[1]);
BALANCE_Anh := BIT_TO_WORD(
	BALANCE_Anh_M340[16],
	BALANCE_Anh_M340[15],
	BALANCE_Anh_M340[14],
	BALANCE_Anh_M340[13],
	BALANCE_Anh_M340[12],
	BALANCE_Anh_M340[11],
	BALANCE_Anh_M340[10],
	BALANCE_Anh_M340[9],
	BALANCE_Anh_M340[8],
	BALANCE_Anh_M340[7],
	BALANCE_Anh_M340[6],
	BALANCE_Anh_M340[5],
	BALANCE_Anh_M340[4],
	BALANCE_Anh_M340[3],
	BALANCE_Anh_M340[2],
	BALANCE_Anh_M340[1]);
BALANCE_Add_Weight1 := BIT_TO_WORD(
	BALANCE_Add_Weight1_M340[16],
	BALANCE_Add_Weight1_M340[15],
	BALANCE_Add_Weight1_M340[14],
	BALANCE_Add_Weight1_M340[13],
	BALANCE_Add_Weight1_M340[12],
	BALANCE_Add_Weight1_M340[11],
	BALANCE_Add_Weight1_M340[10],
	BALANCE_Add_Weight1_M340[9],
	BALANCE_Add_Weight1_M340[8],
	BALANCE_Add_Weight1_M340[7],
	BALANCE_Add_Weight1_M340[6],
	BALANCE_Add_Weight1_M340[5],
	BALANCE_Add_Weight1_M340[4],
	BALANCE_Add_Weight1_M340[3],
	BALANCE_Add_Weight1_M340[2],
	BALANCE_Add_Weight1_M340[1]);
BALANCE_Add_Weight2 := BIT_TO_WORD(
	BALANCE_Add_Weight2_M340[16],
	BALANCE_Add_Weight2_M340[15],
	BALANCE_Add_Weight2_M340[14],
	BALANCE_Add_Weight2_M340[13],
	BALANCE_Add_Weight2_M340[12],
	BALANCE_Add_Weight2_M340[11],
	BALANCE_Add_Weight2_M340[10],
	BALANCE_Add_Weight2_M340[9],
	BALANCE_Add_Weight2_M340[8],
	BALANCE_Add_Weight2_M340[7],
	BALANCE_Add_Weight2_M340[6],
	BALANCE_Add_Weight2_M340[5],
	BALANCE_Add_Weight2_M340[4],
	BALANCE_Add_Weight2_M340[3],
	BALANCE_Add_Weight2_M340[2],
	BALANCE_Add_Weight2_M340[1]);
BALANCE_Add_Weight3 := BIT_TO_WORD(
	BALANCE_Add_Weight3_M340[16],
	BALANCE_Add_Weight3_M340[15],
	BALANCE_Add_Weight3_M340[14],
	BALANCE_Add_Weight3_M340[13],
	BALANCE_Add_Weight3_M340[12],
	BALANCE_Add_Weight3_M340[11],
	BALANCE_Add_Weight3_M340[10],
	BALANCE_Add_Weight3_M340[9],
	BALANCE_Add_Weight3_M340[8],
	BALANCE_Add_Weight3_M340[7],
	BALANCE_Add_Weight3_M340[6],
	BALANCE_Add_Weight3_M340[5],
	BALANCE_Add_Weight3_M340[4],
	BALANCE_Add_Weight3_M340[3],
	BALANCE_Add_Weight3_M340[2],
	BALANCE_Add_Weight3_M340[1]);
BALANCE_Add_Weight4 := BIT_TO_WORD(
	BALANCE_Add_Weight4_M340[16],
	BALANCE_Add_Weight4_M340[15],
	BALANCE_Add_Weight4_M340[14],
	BALANCE_Add_Weight4_M340[13],
	BALANCE_Add_Weight4_M340[12],
	BALANCE_Add_Weight4_M340[11],
	BALANCE_Add_Weight4_M340[10],
	BALANCE_Add_Weight4_M340[9],
	BALANCE_Add_Weight4_M340[8],
	BALANCE_Add_Weight4_M340[7],
	BALANCE_Add_Weight4_M340[6],
	BALANCE_Add_Weight4_M340[5],
	BALANCE_Add_Weight4_M340[4],
	BALANCE_Add_Weight4_M340[3],
	BALANCE_Add_Weight4_M340[2],
	BALANCE_Add_Weight4_M340[1]);
BALANCE_TT_Gra := BIT_TO_WORD(
	BALANCE_TT_Gra_M340[16],
	BALANCE_TT_Gra_M340[15],
	BALANCE_TT_Gra_M340[14],
	BALANCE_TT_Gra_M340[13],
	BALANCE_TT_Gra_M340[12],
	BALANCE_TT_Gra_M340[11],
	BALANCE_TT_Gra_M340[10],
	BALANCE_TT_Gra_M340[9],
	BALANCE_TT_Gra_M340[8],
	BALANCE_TT_Gra_M340[7],
	BALANCE_TT_Gra_M340[6],
	BALANCE_TT_Gra_M340[5],
	BALANCE_TT_Gra_M340[4],
	BALANCE_TT_Gra_M340[3],
	BALANCE_TT_Gra_M340[2],
	BALANCE_TT_Gra_M340[1]);
BALANCE_TT_Cim := BIT_TO_WORD(
	BALANCE_TT_Cim_M340[16],
	BALANCE_TT_Cim_M340[15],
	BALANCE_TT_Cim_M340[14],
	BALANCE_TT_Cim_M340[13],
	BALANCE_TT_Cim_M340[12],
	BALANCE_TT_Cim_M340[11],
	BALANCE_TT_Cim_M340[10],
	BALANCE_TT_Cim_M340[9],
	BALANCE_TT_Cim_M340[8],
	BALANCE_TT_Cim_M340[7],
	BALANCE_TT_Cim_M340[6],
	BALANCE_TT_Cim_M340[5],
	BALANCE_TT_Cim_M340[4],
	BALANCE_TT_Cim_M340[3],
	BALANCE_TT_Cim_M340[2],
	BALANCE_TT_Cim_M340[1]);
</STSource>
	</program>
	<program>
		<identProgram name="070_Acquisition_entrees" type="section" task="MAST"></identProgram>
		<STSource>(* ACQUISITION DES ENTREES TOUT OU RIEN *)

(* Initialisation des variables locales de la section *)
IF Acquisition_entrees_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Acquisition_entrees_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(* - Conduite de la centrale *)
(* (Auto/Manu pupitre, Trappes Auto/Manu, Arret cycle, ... *)
(* Modif M.D. 21/01/2009 : Gestion du mode sans pupitre (Roumanie) *)
(* 1: pas de pupitre communicant =&gt; 
	centrale en auto est définie par l'entrée *)
IF NOT Conf_Profibus_Manu_Station
AND NOT Conf_DI_Manu_Station THEN (* Ajout Gaëtan DEPOORTERE 04/08/2009 *)
	Info_Plant_In_Auto		:= DI_Plant_In_Auto;
	Info_Gate_Mode_Auto		:= DI_Mixer_Gates_PB_Pro_Auto_Manu ;
END_IF;

(* 2: pupitre communicant =&gt; 
	centrale en auto est définie par les pupitre (section de communication).
	Mais si l'etor est à 1, on force centrale en auto *)
IF Conf_Profibus_Manu_Station
AND DI_Plant_In_Auto THEN (* à 1, on force le mode Auto *)
	Info_Plant_In_Auto		:= TRUE;
	(* la RAZ, se fait en utilisant le pupitre communiquant apres
	avoir mis DI_Plant_In_Auto à 0 *)
END_IF;

(* 3: pupitre communicant =&gt; 
	Gestion du mode trappe auto/manu*)
IF Conf_Profibus_Manu_Station THEN
	(* avec un pupitre com, l'ETOR sert à désactiver la com *)
	PB_Gate_Mode_Switch		:= DI_Mixer_Gates_PB_Pro_Auto_Manu;
END_IF;
(* FIN Modif M.D. 21/01/2009 : Gestion du mode sans pupitre (Roumanie) *)
Info_arret_cycle			:= DI_Cycle_Stop;
Info_RAZ_Alarmes			:= DI_PB_Reset_Alarms; (* Ajout R.C. 12/07/2011 P852 *)



(* - Arrêts d'urgence *)
Info_etat_arret_urgence			:= DI_Plant_Emergency_Stop XOR Conf_etat_AU_Actif0;  	(* Arret urgence général *)(* Modif R.C. 04/02/2010 P706 ajout XOR *)
Info_arret_urgence_granulat1		:= DI_Agg1_Emergency_Stop XOR Conf_AU_Granulat1_Actif0; (* Modif M.D. 06/05/2008 ajout XOR *)
Info_arret_urgence_granulat2		:= DI_Agg2_Emergency_Stop XOR Conf_AU_Granulat2_Actif0; (* Modif M.D. 06/05/2008 ajout XOR *)
Info_arret_urgence_transfert		:= DI_Transfer_Emergency_Stop XOR Conf_AU_transfert_Actif0; (* Tapis de transfert *)(* Modif M.D. 06/05/2008 ajout XOR *)
Info_arret_urgence_skip			:= DI_Skip_Emergency_Stop XOR Conf_AU_skip_Actif0; (* Modif M.D. 06/05/2008 ajout XOR *)
Info_arret_urgence_malaxeur		:= DI_Mixer_Emergency_Stop XOR Conf_AU_malaxeur_Actif0; (* Modif M.D. 06/05/2008 ajout XOR *)
Info_arret_urgence_silo			:= DI_Silo_Emergency_Stop XOR Conf_AU_silo_Actif0; (* Modif M.D. 06/05/2008 ajout XOR *)
Info_arret_urgence_adjuvant		:= DI_Admix_Emergency_Stop XOR Conf_AU_adjuvant_Actif0; (* Modif M.D. 06/05/2008 ajout XOR *)
Info_arret_urgence_pupitre		:= DI_Manu_Station_Emergency_Stop XOR Conf_AU_pupitre_Actif0; (* Modif M.D. 06/05/2008 ajout XOR *)
Info_arret_urgence_aux1			:= DI_Aux1_Emergency_Stop XOR Conf_AU_aux1_Actif0; (* Modif M.D. 06/05/2008 ajout XOR *)
Info_arret_urgence_aux2			:= DI_Aux2_Emergency_Stop XOR Conf_AU_aux2_Actif0; (* Modif M.D. 06/05/2008 ajout XOR *)



(* - Balances *)
Info_balance_Gra1_fermee		:= DI_Agg1_Weigher_Closed XOR conf_granulat1_sens_fc_vidange;
Info_balance_Gra2_fermee		:= DI_Agg2_Weigher_Closed XOR conf_granulat2_sens_fc_vidange;
Info_balance_Cim1_fermee		:= DI_Cem1_Weigher_Closed XOR conf_cim1_sens_fc_vidange ;
Info_balance_Cim2_fermee		:= DI_Cem2_Weigher_Closed XOR conf_cim2_sens_fc_vidange; (* Ajout R.C. 23/07/2009 P704 *)
IF Conf_Water_Weigher_IN THEN (* Config Inde : Pas de retour sur la pompe de vidange EAU *)
	Info_balance_Eau1_fermee	:= (DI_Water1_Weigher_Closed XOR conf_eau1_sens_fc_vidange)
					AND (NOT Cde_vid_basc_Eau1_Ppe);
ELSIF Conf_Water_Weigher_RO THEN (* Config Roumanie : Capteur sur la pompe de vidange EAU *)
	Info_balance_Eau1_fermee	:= (DI_Water1_Weigher_Closed XOR conf_eau1_sens_fc_vidange)
					AND (DI_Water1_Weigher_Dis_PP_Closed XOR conf_eau1_sens_fc_vidange);
ELSIF Conf_Water_Weigher_FR THEN (* Config France : Clapet + capteur *)
	Info_balance_Eau1_fermee	:= DI_Water1_Weigher_Closed XOR conf_eau1_sens_fc_vidange;
ELSE
	Info_balance_Eau1_fermee 	:= TRUE; (* Modif R.C. 22/06/2009 pour permettre le dosage en dry-batch *)
END_IF;
Info_balance_Eau2_fermee		:= DI_Water2_Weigher_Closed XOR conf_Eau2_sens_fc_vidange; (* Ajout R.C. 16/10/2009 P704 *)
IF Conf_Bonbonne_Colorant THEN
	(* Les machines à colorants utilisées par Lafarge ne fournissent pas de retour d'état *)
	(* "bascule Adj fermée" =&gt; On synthétise l'information "bascule Adj fermée" d'après la *)
	(* commande de vidange de la bascule et d'après une temporisation *)
	TON_SIMUL_BONBONNE_FERMEE (IN := NOT Cde_vidange_bascule_Adj, PT := Conf_Color_Simu_Admix_Wgh_Close);(* 2s typiquement *)
	Info_balance_Adj_fermee			:= TON_SIMUL_BONBONNE_FERMEE.Q; (* Modif 06/05/2008 ROUMANIE /Colorants / INDE*)
ELSE
	IF Conf_Admix_Weigher_FR THEN
		Info_balance_Adj_fermee		:= DI_Admix_Weigher_Closed XOR conf_adjuvant_sens_fc_vidange;
	ELSIF Conf_Admix_Weigher_PP_With_Sens THEN
		(*Modif Roumanie : on à une entrés pour chaque pompe (vanne en amont)
		Pour le moment limité à 2 pompes de vidange*)
		Info_balance_Adj_fermee		:= (DI_Admix_Weigher_Cpt1_Closed XOR conf_adjuvant_sens_fc_vidange)
						AND (DI_Admix_Weigher_Cpt2_Closed XOR conf_adjuvant_sens_fc_vidange);
	ELSIF Conf_Admix_Weigher_PP_No_Sens THEN
		(*Modif Inde : 10 compartiments possible mais pas de capteur, on utilise la commande des pompes*)
		Info_balance_Adj_fermee		:= NOT Cde_ppe_vidange_Comp_Adj[1]
						AND NOT Cde_ppe_vidange_Comp_Adj[2]
						AND NOT Cde_ppe_vidange_Comp_Adj[3]
						AND NOT Cde_ppe_vidange_Comp_Adj[4]
						AND NOT Cde_ppe_vidange_Comp_Adj[5]
						AND NOT Cde_ppe_vidange_Comp_Adj[6]
						AND NOT Cde_ppe_vidange_Comp_Adj[7]
						AND NOT Cde_ppe_vidange_Comp_Adj[8]
						AND NOT Cde_ppe_vidange_Comp_Adj[9]
						AND NOT Cde_ppe_vidange_Comp_Adj[10];
	END_IF;
END_IF;
Info_balance_Adj_Comp_ferme		:= DI_Admix_Cpt_Closed XOR conf_adjuvant_sens_fc_vidange;
Info_balance_Anh_fermee			:= DI_Anh_Weigher_Closed XOR conf_anhydrite_sens_fc_vidange;
Info_balance_Anh_ouvert			:= DI_Anh_Weigher_Opened XOR conf_anhydrite_sens_fc_ouvert;
Info_balance_Add_fermee			:= DI_Add_Weigher_Closed XOR conf_basc_add_sens_fc_vidange; (* Ajout R.C. 13/10/2011 P856 *)
Info_ctrl_vide_basc_add			:= (DI_Add_Weigher_Empty XOR Conf_basc_add_ctrl_vide_actif0) (* Ajout R.C. 13/10/2011 P856 *)(* Cette variable sera filtrée temporellement soit par un TON, soit par un TOFF suivant le besoin. *)
					AND Conf_basc_add_ctrl_vide; (* Cette condition assure que "Info_ctrl_vide_basc_add" reste bien à FALSE s'il n'y a pas de capteur de contrôle de vide. *)




(* - Skip *)
Info_skip_tres_haut			:= DI_Skip_Very_High_Position;
					TON_skip_haut (IN := DI_Skip_High_Position XOR conf_sens_fc_skip_haut, PT := Conf_Skip_DI_Filter_Time * BOOL_TO_INT(Conf_Skip_DI_Filter));
Info_skip_haut				:= TON_skip_haut.Q; (* Modif Jérémie BOUVET "Inde" 15/02/2010 *)(* Filter on the sensors *)
					TON_capteur_chgt_vitesse_haut (IN := DI_Skip_SCHG_High_Position XOR Conf_sens_fc_skip_grde_vit_haut, PT := Conf_Skip_SCHG_DI_Filter_Time * BOOL_TO_INT(Conf_Skip_SCHG_DI_Filter));
IF Conf_skip_pres_cap_grde_vit_haut THEN
Info_skip_grde_vit_haut			:= TON_capteur_chgt_vitesse_haut.Q; (* Skip *)(* Filter on the sensors *)
ELSE
Info_skip_grde_vit_haut			:= Info_skip_attente;
END_IF;
					TON_skip_attente (IN := DI_Skip_Waiting_Position XOR conf_sens_fc_skip_attente, PT := Conf_Skip_DI_Filter_Time * BOOL_TO_INT(Conf_Skip_DI_Filter));
Info_skip_attente			:= TON_skip_attente.Q; (* Modif Jérémie BOUVET "Inde" 15/02/2010 *)(* Filter on the sensors *)
					TON_capteur_chgt_vitesse_bas (IN := DI_Skip_SCHG_Low_Position XOR Conf_sens_fc_skip_grde_vit_bas, PT := Conf_Skip_SCHG_DI_Filter_Time * BOOL_TO_INT(Conf_Skip_SCHG_DI_Filter));
Info_skip_grde_vit_bas			:= TON_capteur_chgt_vitesse_bas.Q; (* Modif Jérémie BOUVET "Inde" 15/02/2010 *)(* Skip *)(* Filter on the sensors *)
					TON_skip_bas (IN := DI_Skip_Low_Position XOR conf_sens_fc_skip_bas, PT := Conf_Skip_DI_Filter_Time * BOOL_TO_INT(Conf_Skip_DI_Filter));
Info_skip_bas				:= TON_skip_bas.Q; (* Modif Jérémie BOUVET "Inde" 15/02/2010 *)(* Filter on the sensors *)
Info_skip_tres_bas			:= DI_Skip_Very_Low_Position XOR conf_sens_fc_skip_tres_bas;	
Info_skip_en_montee			:= DI_Skip_Moving_Up;
Info_skip_en_descente			:= DI_Skip_Moving_Down;
					TON_ETOR_SKIP_MOU (IN := DI_Skip_Slack_Steel XOR Conf_Skip_Slack_Steel_Act0, PT := Conf_Skip_Slack_Steel_TON); (* Modif M.D. 06/05/2008 ajout XOR *)
Info_cable_skip_mou			:= TON_ETOR_SKIP_MOU.Q;     
Info_skip_defaut_ext_grde_vit		:= DI_Skip_SCHG_Fault;
Info_skip_defaut_ext_capt_GV		:= DI_Skip_SCHG_Sens_Fault XOR conf_skip_def_ext_capt_GV_actif0;



(* - Tapis et Transfert Granulats *)
Info_tapis_transfert_en_marche		:= DI_Conveyor_Belt_Running XOR conf_tapis_trans_sens_contact;
Info_ctrle_rot_tapis_granulat1		:= DI_Agg1_Weighing_Belt_SCTR; (* Modif M.D. 13/05/2008 PR504 *)
Info_ctrle_rot_tapis_granulat2		:= DI_Agg2_Weighing_Belt_SCTR; (* Modif M.D. 13/05/2008 PR504 *)
Info_ctrle_rot_tapis_transfert		:= DI_Conveyor_Belt_SCTR; (* Modif M.D. 13/05/2008 PR504 *)
Info_TT_Gra_fermee			:= DI_Agg_WH_Closed XOR conf_TT_sens_fc_fermee;
IF conf_TT_pres_capt_ouvert THEN
Info_TT_Gra_ouverte			:= DI_Agg_WH_Opened  XOR conf_TT_sens_fc_ouverte;
ELSE
Info_TT_Gra_ouverte			:= NOT Info_TT_Gra_fermee (* Ajout R.C. 17/04/2012 P857 S'il n'y a pas de capteur "TT ouverte", alors on synthétise l'info. *)
					AND Conf_TT_granulat; (* Modif R.C. 21/03/2013 P861 #0001928 Cette condition évite de passer "Info_TT_Gra_ouverte" à TRUE lorsqu'il n'y a pas de trémie tampon paramétrée. *)
END_IF;
Info_TT_Gra_ctrl_vide			:= (DI_Agg_WH_Empty XOR Conf_TT_Gra_ctrl_vide_actif0) (* Ajout R.C. 14/04/2010 P708 Capteur de controle de vide sur TT granulat *)
					AND Conf_TT_Gra_ctrl_vide; (* Cette condition assure que "Info_TT_Gra_ctrl_vide" reste bien à FALSE s'il n'y a pas de capteur de contrôle de vide. *)



(* - Transfert ciment *)
Info_TT_Cim_fermee			:= DI_Cem_WH_Closed XOR Conf_TT_cim_sens_fc_ferme; (* Correction R.C. 13/10/2011 On a utilisé "conf_sens_fc_skip_tres_bas" par erreur entre P600 et P852 *)
Info_TT_Cim_ouverte			:= DI_Cem_WH_Opened XOR Conf_TT_cim_sens_fc_ouvert;
Info_transfert_cim_termine		:= DI_Cem_Transfer_Done;
Info_autorisation_chargement_SAS	:= DI_Cem_Airlock_Ready;
Info_defaut_SAS				:= DI_Cem_Ailock_Fault;
info_2_5_bars				:= DI_2_5_bars;
Info_pressostat_presence_air		:= DI_Cem_Airlock_pressure_OK XOR inversion_info_presence;



(* - Transfert produits pompés *)
Info_tampon_ppe_vide[1]			:= DI_Hopper_Tank_PP1_Empty XOR Conf_Hopper_Tank1_Empty_Act0;
Info_tampon_ppe_vide[2]			:= DI_Hopper_Tank_PP2_Empty XOR Conf_Hopper_Tank2_Empty_Act0;
Info_tampon_ppe_vide[3]			:= DI_Hopper_Tank_PP3_Empty XOR Conf_Hopper_Tank3_Empty_Act0;
Info_tampon_ppe_vide[4]			:= DI_Hopper_Tank_PP4_Empty XOR Conf_Hopper_Tank4_Empty_Act0;
Info_tampon_ppe_vide[5]			:= DI_Hopper_Tank_PP5_Empty XOR Conf_Hopper_Tank5_Empty_Act0;
Info_tampon_ppe_vide[6]			:= DI_Hopper_Tank_PP6_Empty XOR Conf_Hopper_Tank6_Empty_Act0;
Info_tampon_ppe_vide[7]			:= DI_Hopper_Tank_PP7_Empty XOR Conf_Hopper_Tank7_Empty_Act0;
Info_tampon_ppe_vide[8]			:= DI_Hopper_Tank_PP8_Empty XOR Conf_Hopper_Tank8_Empty_Act0;
Info_tampon_ppe_vide[9]			:= DI_Hopper_Tank_PP9_Empty XOR Conf_Hopper_Tank9_Empty_Act0;
Info_tampon_ppe_vide[10]		:= DI_Hopper_Tank_PP10_Empty XOR Conf_Hopper_Tank10_Empty_Act0;
Info_tampon_ppe_vide[11]		:= DI_Hopper_Tank_PP11_Empty XOR Conf_Hopper_Tank11_Empty_Act0;
Info_tampon_ppe_vide[12]		:= DI_Hopper_Tank_PP12_Empty XOR Conf_Hopper_Tank12_Empty_Act0;
Info_tampon_ppe_vide[13]		:= DI_Hopper_Tank_PP13_Empty XOR Conf_Hopper_Tank13_Empty_Act0;
Info_tampon_ppe_vide[14]		:= DI_Hopper_Tank_PP14_Empty XOR Conf_Hopper_Tank14_Empty_Act0;
Info_tampon_ppe_vide[15]		:= DI_Hopper_Tank_PP15_Empty XOR Conf_Hopper_Tank15_Empty_Act0;
Info_tampon_ppe_vide[16]		:= DI_Hopper_Tank_PP16_Empty XOR Conf_Hopper_Tank16_Empty_Act0;
Info_tampon_ppe_vide[17]		:= DI_Hopper_Tank_PP17_Empty XOR Conf_Hopper_Tank17_Empty_Act0;
Info_tampon_ppe_vide[18]		:= DI_Hopper_Tank_PP18_Empty XOR Conf_Hopper_Tank18_Empty_Act0;
Info_tampon_ppe_vide[19]		:= DI_Hopper_Tank_PP19_Empty XOR Conf_Hopper_Tank19_Empty_Act0;
Info_tampon_ppe_vide[20]		:= DI_Hopper_Tank_PP20_Empty XOR Conf_Hopper_Tank20_Empty_Act0;



(* - MES (Matières En Suspension) *)
Info_densite_cuve_2			:= DI_Tank2_Solid_Content_Available;
Info_densite_cuve_1			:= DI_Tank1_Solid_Content_Available;
Info_indispo_temporaire			:= DI_Solid_Content_Measure_OFF;
Info_ids_en_fonction			:= DI_Solid_Content_Measure_ON;



(* - Machine à colorants  *)
Info_XV2_ferme				:= DI_Color_Hopper_XV2_Closed; (* Ajout M.D. 09/01/2009 Machine colorants  *)
Info_XV2_Ouvert				:= DI_Color_Hopper_XV2_Opened; (* Ajout M.D. 09/01/2009 Machine colorants  *)
Info_pressostat_actif			:= DI_Color_Machine_Pressurized; (* Ajout M.D. 09/01/2009 Machine colorants  *)
Info_Machine_Colorant_OK		:= DI_Color_Machine_OK; (* Ajout M.D. 09/01/2009 Machine colorants  *)
(*"Info_Machine_Colorant_OK" n'a pas d'adresse (non utilisé dans BC-Mix?) *)



(* - Autres systèmes *)
Info_Marche_RAMPE			:= DI_Water_Ramp_ON;
Info_Marche_ASPI			:= DI_Vacuum_Machine_ON;



(* - Bypass et Malaxeurs *)
Info_vidange_vers_malaxeur_1		:= DI_Bypass_Position1 XOR inversion_info_vidange_vers_mal1;
Info_vidange_vers_mal2_s_seche		:= DI_Bypass_Position2 XOR inversion_info_vidange_vers_mal2;
Info_malaxeur1_en_marche		:= DI_Mixer1_ON;
IF (NOT Conf_Mixer1_1Gate_2LoadingPT) THEN (*MY : Modif NY 03/09/2013*) 
						TON_trappe1_ouverte_mal1 (IN := DI_Mixer1_Gate1_Opened XOR conf_mal1_sens_fc_trap1_ouv, PT := Conf_Mixer1_Gate_DI_Filter_Time * BOOL_TO_INT(Conf_Mixer1_Gate_DI_Filter));
	Info_trappe1_ouverte_mal1		:= TON_trappe1_ouverte_mal1.Q; (* Modif Jérémie BOUVET "Inde" 15/02/2010 *)(* Filter on the sensors *)
						TON_trappe1_fermee_mal1 (IN := DI_Mixer1_Gate1_Closed XOR conf_mal1_sens_fc_trap1_fer, PT := Conf_Mixer1_Gate_DI_Filter_Time * BOOL_TO_INT(Conf_Mixer1_Gate_DI_Filter));
	Info_trappe1_fermee_mal1		:= TON_trappe1_fermee_mal1.Q; (* Modif Jérémie BOUVET "Inde" 15/02/2010 *)(* Filter on the sensors *)
	Info_trappe2_ouverte_mal1		:= DI_Mixer1_Gate2_Opened XOR conf_mal1_sens_fc_trap2_ouv;
	Info_trappe2_fermee_mal1		:= DI_Mixer1_Gate2_Closed XOR conf_mal1_sens_fc_trap2_fer;
ELSE (*Config MY One Gate on the mixer with 2 loading points*)
						TON_trappe1_ouverte_mal1 (IN := DI_Mixer1_Gate1_Opened XOR conf_mal1_sens_fc_trap1_ouv, PT := Conf_Mixer1_Gate_DI_Filter_Time * BOOL_TO_INT(Conf_Mixer1_Gate_DI_Filter));
	Info_trappe1_ouverte_mal1		:= TON_trappe1_ouverte_mal1.Q; 
						TON_trappe1_fermee_mal1 (IN := (DI_Mixer1_G1_And_G2_Closed XOR conf_mal1_sens_fc_trap1_fer)OR (Not Bit_validation_trappe1_malax1 AND Bit_validation_trappe2_malax1), PT := Conf_Mixer1_Gate_DI_Filter_Time * BOOL_TO_INT(Conf_Mixer1_Gate_DI_Filter));
	Info_trappe1_fermee_mal1		:= TON_trappe1_fermee_mal1.Q; 
	Info_trappe2_ouverte_mal1		:= DI_Mixer1_Gate2_Opened XOR conf_mal1_sens_fc_trap2_ouv;
	Info_trappe2_fermee_mal1		:= (DI_Mixer1_G1_And_G2_Closed XOR conf_mal1_sens_fc_trap2_fer) OR (Not Bit_validation_trappe2_malax1 AND Bit_validation_trappe1_malax1) ;

END_IF;

Info_malaxeur2_en_marche		:= DI_Mixer2_ON;
Info_trappe1_ouverte_mal2		:= DI_Mixer2_Gate1_Opened XOR conf_mal2_sens_fc_trap1_ouv;
Info_trappe1_fermee_mal2		:= DI_Mixer2_Gate1_Closed XOR conf_mal2_sens_fc_trap1_fer;
Info_trappe2_ouverte_mal2		:= DI_Mixer2_Gate2_Opened XOR conf_mal2_sens_fc_trap2_ouv;
Info_trappe2_fermee_mal2		:= DI_Mixer2_Gate2_Closed XOR conf_mal2_sens_fc_trap2_fer;



(* - Alarmes externes *)
Info_prot_mot_vib_Gra1			:= DI_Agg_Weigher_CBT XOR Conf_Agg1_Vib_Mot_Prot_Act0; (* Ajout M.D. 10/12/2008 *)
Info_prot_mot_vib_Cim			:= DI_Cem_Weigher_CBT XOR Conf_Cem1_Vib_Mot_Prot_Act0; (* Ajout M.D. 10/12/2008 *)
Info_prot_mot_vis_Cim			:= DI_Cem_Screw_CBT XOR Conf_Cem1_Scr_Mot_Prot_Act0; (* Ajout M.D. 10/12/2008 *)
Info_prot_mot_vis_Cendre		:= DI_Ash_Screw_CBT XOR Conf_Ash_Scr_Mot_Prot_Act0; (* Ajout M.D. 10/12/2008 *)
Info_prot_mot_Dos_ADJ			:= DI_Admix_Weighing_CBT XOR Conf_Admix_Dos_Mot_Prot_Act0; (* Ajout M.D. 10/12/2008 *)(*Protection pompes de dosage*)
Info_prot_mot_Vid_ADJ_PPE		:= DI_Admix_Weigher_PP_CBT XOR Conf_Admix_Dis_PP_Mot_Prot_Act0; (* Ajout M.D. 10/12/2008 *)
Info_prot_mot_Vid_EAU_PPE		:= DI_Water_Weigher_PP_CBT XOR Conf_Water_Dis_PP_Mot_Prot_Act0; (* Ajout M.D. 10/12/2008 *)
Info_prot_mot_malax1			:= DI_Mixer1_CBT XOR Conf_Mixer1_Mot_Prot_Act0; (* Modif M.D. 06/05/2008 ajout XOR *)
Info_prot_Thermique_malax1		:= DI_Mixer1_Thermal_Relay_CBT XOR Conf_Mixer1_Therm_Prot_Act0; (* Modif M.D. 06/05/2008 ajout XOR *)
Info_prot_mot_skip			:= DI_Skip_CBT XOR Conf_Skip_Mot_Prot_Act0; (* Modif M.D. 06/05/2008 ajout XOR *)
Info_prot_therm_skip			:= DI_Skip_Thermal_Relay_CBT XOR Conf_Skip_Therm_Prot_Act0; (* Modif M.D. 06/05/2008 ajout XOR *)
Info_prot_mot_compresseur		:= DI_Compr_CBT XOR Conf_Compr_Mot_Prot_Act0; (* Modif M.D. 06/05/2008 ajout XOR *)
Info_prot_tapis_pes_Gra			:= DI_Agg_Weighing_Belt_CBT XOR Conf_Agg_Weigh_Conv_Prot_Act0;(* Modif M.D. 16/01/2009 P700 ajout XOR *)
Info_prot_mot_PPE_gen_EAU		:= DI_Main_Water_PP_CBT;  	(*pompe de remplissage des stockage*)
Info_prot_PPE_Graisse1			:= DI_Mixer1_Grease_PP_CBT XOR Conf_PP_Grease1_Prot_Act0; (* Modif M.D. 16/01/2009 P700 ajout XOR *)
Info_Pression_PPE_Graisse1		:= DI_Mixer1_Grease_PP_Low_Pressure; (* Pression ppe graisse *)
Info_Tension_NOK			:= DI_Voltage_Control XOR Conf_Voltage_Control_Act0; (* Modif M.D. 06/05/2008 ajout XOR *)
Info_bac1_adj_plein			:= DI_Admix_Cpt1_High_Level;
Info_bac2_adj_plein			:= DI_Admix_Cpt2_High_Level;
Info_Alarme_Glace			:= DI_Ice_General_Alarm; (* Modif R.C. 18/10/2009 *)
Info_capot1_ouvert_stock_add		:= (DI_Storage_Add_hood1_Opened XOR Conf_basc_add_capt_capot1_actif0) AND Conf_basc_add_capt_capot1; (* Ajout R.C. 13/10/2011 P856 *)
Info_capot2_ouvert_stock_add		:= (DI_Storage_Add_hood2_Opened XOR Conf_basc_add_capt_capot2_actif0) AND Conf_basc_add_capt_capot2; (* Ajout ASM 09/01/2014 P864 *)
Info_capot3_ouvert_stock_add		:= (DI_Storage_Add_hood3_Opened XOR Conf_basc_add_capt_capot3_actif0) AND Conf_basc_add_capt_capot3; (* Ajout ASM 09/01/2014 P864 *)
Info_capot4_ouvert_stock_add		:= (DI_Storage_Add_hood4_Opened XOR Conf_basc_add_capt_capot4_actif0) AND Conf_basc_add_capt_capot4; (* Ajout ASM 09/01/2014 P864 *)



(* - Demandes de dosage sur Pupitre "France" (direct-to-process) *)
BP_dosage_Gra_1				:= DI_Agg_Bin1_PB_Pro_Open;
BP_dosage_Gra_2				:= DI_Agg_Bin2_PB_Pro_Open;
BP_dosage_Gra_3				:= DI_Agg_Bin3_PB_Pro_Open;
BP_dosage_Gra_4				:= DI_Agg_Bin4_PB_Pro_Open;
BP_dosage_Gra_5				:= DI_Agg_Bin5_PB_Pro_Open;
BP_dosage_Gra_6				:= DI_Agg_Bin6_PB_Pro_Open;
BP_dosage_Gra_7				:= DI_Agg_Bin7_PB_Pro_Open;
BP_dosage_Gra_8				:= DI_Agg_Bin8_PB_Pro_Open;
BP_dosage_Gra_9				:= DI_Agg_Bin9_PB_Pro_Open;
BP_dosage_Gra_10			:= DI_Agg_Bin10_PB_Pro_Open;
BP_dosage_Gra_11			:= DI_Agg_Bin11_PB_Pro_Open;
BP_dosage_Gra_12			:= DI_Agg_Bin12_PB_Pro_Open;
BP_dosage_Gra_13			:= DI_Agg_Bin13_PB_Pro_Open;
BP_dosage_Gra_14			:= DI_Agg_Bin14_PB_Pro_Open;
BP_dosage_Cim_1				:= DI_Cem_Silo1_PB_Pro_Open;
BP_dosage_Cim_2				:= DI_Cem_Silo2_PB_Pro_Open;
BP_dosage_Cim_3				:= DI_Cem_Silo3_PB_Pro_Open;
BP_dosage_Cim_4				:= DI_Cem_Silo4_PB_Pro_Open;
BP_dosage_Cim_5				:= DI_Cem_Silo5_PB_Pro_Open;
BP_dosage_Cim_6				:= DI_Cem_Silo6_PB_Pro_Open; 
BP_dosage_Eau_1				:= DI_Water_Tank1_PB_Pro_Open;
BP_dosage_Eau_2				:= DI_Water_Tank2_PB_Pro_Open;
BP_dosage_Eau_3				:= DI_Water_Tank3_PB_Pro_Open;
BP_dosage_Eau_4				:= DI_Water_Tank4_PB_Pro_Open;
BP_dosage_Adj_1				:= DI_Admix_Tank1_PB_Pro_Open;
BP_dosage_Adj_2				:= DI_Admix_Tank2_PB_Pro_Open;
BP_dosage_Adj_3				:= DI_Admix_Tank3_PB_Pro_Open;
BP_dosage_Adj_4				:= DI_Admix_Tank4_PB_Pro_Open;
BP_dosage_Adj_5				:= DI_Admix_Tank5_PB_Pro_Open;
BP_dosage_Adj_6				:= DI_Admix_Tank6_PB_Pro_Open;
BP_dosage_Adj_7				:= DI_Admix_Tank7_PB_Pro_Open;
BP_dosage_Adj_8				:= DI_Admix_Tank8_PB_Pro_Open;
BP_dosage_Adj_9				:= DI_Admix_Tank9_PB_Pro_Open;
BP_dosage_Adj_10			:= DI_Admix_Tank10_PB_Pro_Open;
BP_dosage_Adj_11			:= DI_Admix_Tank11_PB_Pro_Open;
BP_dosage_Adj_12			:= DI_Admix_Tank12_PB_Pro_Open;
BP_dosage_Adj_13			:= DI_Admix_Tank13_PB_Pro_Open;
BP_dosage_Adj_14			:= DI_Admix_Tank14_PB_Pro_Open;
BP_dosage_Adj_15			:= DI_Admix_Tank15_PB_Pro_Open;
BP_dosage_Adj_16			:= DI_Admix_Tank16_PB_Pro_Open;
BP_dosage_Adj_17			:= DI_Admix_Tank17_PB_Pro_Open;
BP_dosage_Adj_18			:= DI_Admix_Tank18_PB_Pro_Open;
BP_dosage_Adj_19			:= DI_Admix_Tank19_PB_Pro_Open;
BP_dosage_Adj_20			:= DI_Admix_Tank20_PB_Pro_Open;
BP_dosage_Anh				:= DI_Anh_Silo_PB_Pro_Open;
BP_dosage_Add_1				:= DI_Add_Storage1_PB_Pro_Open; (* Ajout R.C. 13/10/2011 P856 *)
BP_dosage_Add_2				:= DI_Add_Storage2_PB_Pro_Open; (* Ajout R.C. 13/10/2011 P856 *)
BP_dosage_Add_3				:= DI_Add_Storage3_PB_Pro_Open; (* Ajout R.C. 13/10/2011 P856 *)
BP_dosage_Add_4				:= DI_Add_Storage4_PB_Pro_Open; (* Ajout R.C. 13/10/2011 P856 *)
BP_ouverture_trappe1_mal1		:= DI_Mixer1_Gate1_PB_Pro_Open; (* Ajout M.D. 21/01/2009 (Roumanie) *)
BP_fermeture_trappe1_mal1		:= DI_Mixer1_Gate1_PB_Pro_Close; (* Ajout M.D. 21/01/2009 (Roumanie) *)
BP_ouverture_trappe2_mal1		:= DI_Mixer1_Gate2_PB_Pro_Open; (* XX/12/2015 - P868C - ARTF1346498 *)
BP_fermeture_trappe2_mal1		:= DI_Mixer1_Gate2_PB_Pro_Close; (* XX/12/2015 - P868C - ARTF1346498 *)
BP_ouverture_trappe1_mal2		:= DI_Mixer2_Gate1_PB_Pro_Open; (* XX/12/2015 - P868C - ARTF1346498 *)
BP_fermeture_trappe1_mal2		:= DI_Mixer2_Gate1_PB_Pro_Close; (* XX/12/2015 - P868C - ARTF1346498 *)
BP_ouverture_trappe2_mal2		:= DI_Mixer2_Gate2_PB_Pro_Open; (* XX/12/2015 - P868C - ARTF1346498 *)
BP_fermeture_trappe2_mal2		:= DI_Mixer2_Gate2_PB_Pro_Close; (* XX/12/2015 - P868C - ARTF1346498 *) 
BP_activation_Klaxon			:= DI_PB_Pro_Horn_Activation; (* Ajout M.D. 21/01/2009 (Roumanie) *)
BP_marche_malaxeur			:= DI_PB_Pro_Switch_Mixer_PB_Pro_ON; (* Ajout M.D. 21/01/2009 (Roumanie) *)
BP_arret_malaxeur			:= DI_PB_Pro_Mixer_Stop; (* Ajout M.D. 21/01/2009 (Roumanie) *)











(* ACQUISITION DES ENTREES ANALOGIQUES *)
  
valeur_instantanee_wattmetre1 := AI_1 ;
IF conf_mal2_presence_wattmetre THEN
	valeur_instantanee_wattmetre2 := AI_2 ;
ELSE
	AI_2_Value_Module_1 := AI_2 ;
END_IF;
AI_3_Value_Module_1 := AI_3 ;
AI_4_Value_Module_1 := AI_4 ;
AI_5_Value_Module1 := AI_5 ;
AI_6_Value_Module1 := AI_6 ;
AI_7_Value_Module1 := AI_7 ;
AI_8_Value_Module1 := AI_8 ;

  
(* Gestion de 9 cartes AVI sur CPU 113.03 *)
(* Ajout R.C. 30/09/03 *)
(* FAE LBS 37 *)
AI_Value_Module_2[1] := AI_9 ;
AI_Value_Module_2[2] := AI_10 ;
AI_Value_Module_2[3] := AI_11 ;
AI_Value_Module_2[4] := AI_12 ;
AI_Value_Module_2[5] := AI_13 ;
AI_Value_Module_2[6] := AI_14 ;
AI_Value_Module_2[7] := AI_15 ;
AI_Value_Module_2[8] := AI_16 ;
AI_Value_Module_3[1] := AI_17 ;
AI_Value_Module_3[2] := AI_18 ;
AI_Value_Module_3[3] := AI_19 ;
AI_Value_Module_3[4] := AI_20 ;
AI_Value_Module_3[5] := AI_21 ;
AI_Value_Module_3[6] := AI_22 ;
AI_Value_Module_3[7] := AI_23 ;
AI_Value_Module_3[8] := AI_24 ;
AI_Value_Module_4[1] := AI_25 ;
AI_Value_Module_4[2] := AI_26 ;
AI_Value_Module_4[3] := AI_27 ;
AI_Value_Module_4[4] := AI_28 ;
AI_Value_Module_4[5] := AI_29 ;
AI_Value_Module_4[6] := AI_30 ;
AI_Value_Module_4[7] := AI_31 ;
AI_Value_Module_4[8] := AI_32 ;
AI_Value_Module_5[1] := AI_33 ;
AI_Value_Module_5[2] := AI_34 ;
AI_Value_Module_5[3] := AI_35 ;
AI_Value_Module_5[4] := AI_36 ;
AI_Value_Module_5[5] := AI_37 ;
AI_Value_Module_5[6] := AI_38 ;
AI_Value_Module_5[7] := AI_39 ;
AI_Value_Module_5[8] := AI_40 ;
AI_Value_Module_6[1] := AI_41 ;
AI_Value_Module_6[2] := AI_42 ;
AI_Value_Module_6[3] := AI_43 ;
AI_Value_Module_6[4] := AI_44 ;
AI_Value_Module_6[5] := AI_45 ;
AI_Value_Module_6[6] := AI_46 ;
AI_Value_Module_6[7] := AI_47 ;
AI_Value_Module_6[8] := AI_48 ;
AI_Value_Module_7[1] := AI_49 ;
AI_Value_Module_7[2] := AI_50 ;
AI_Value_Module_7[3] := AI_51 ;
AI_Value_Module_7[4] := AI_52 ;
AI_Value_Module_7[5] := AI_53 ;
AI_Value_Module_7[6] := AI_54 ;
AI_Value_Module_7[7] := AI_55 ;
AI_Value_Module_7[8] := AI_56 ;
AI_Value_Module_8[1] := AI_57 ;
AI_Value_Module_8[2] := AI_58 ;
AI_Value_Module_8[3] := AI_59 ;
AI_Value_Module_8[4] := AI_60 ;
AI_Value_Module_8[5] := AI_61 ;
AI_Value_Module_8[6] := AI_62 ;
AI_Value_Module_8[7] := AI_63 ;
AI_Value_Module_8[8] := AI_64 ;
AI_Value_Module_9[1] := AI_65 ;
AI_Value_Module_9[2] := AI_66 ;
AI_Value_Module_9[3] := AI_67 ;
AI_Value_Module_9[4] := AI_68 ;
AI_Value_Module_9[5] := AI_69 ;
AI_Value_Module_9[6] := AI_70 ;
AI_Value_Module_9[7] := AI_71 ;
AI_Value_Module_9[8] := AI_72 ;
  
  

(* Modif M.D. 17/08/2008 Bascules Analogiques *)
IF Lecture_Analogique_ACTIVE THEN

	(* Mise en tableau des erreurs des cartes analogiques *)
	(* Ajout R.C. 09/02/2011 P803 *)
	AI_Error[1] := AI_1_Error;
	AI_Error[2] := AI_2_Error;
	AI_Error[3] := AI_3_Error;
	AI_Error[4] := AI_4_Error;
	AI_Error[5] := AI_5_Error;
	AI_Error[6] := AI_6_Error;
	AI_Error[7] := AI_7_Error;
	AI_Error[8] := AI_8_Error;
	AI_Error[9] := AI_9_Error;
	AI_Error[10] := AI_10_Error;
	AI_Error[11] := AI_11_Error;
	AI_Error[12] := AI_12_Error;
	AI_Error[13] := AI_13_Error;
	AI_Error[14] := AI_14_Error;
	AI_Error[15] := AI_15_Error;
	AI_Error[16] := AI_16_Error;
	AI_Error[17] := AI_17_Error;
	AI_Error[18] := AI_18_Error;
	AI_Error[19] := AI_19_Error;
	AI_Error[20] := AI_20_Error;
	AI_Error[21] := AI_21_Error;
	AI_Error[22] := AI_22_Error;
	AI_Error[23] := AI_23_Error;
	AI_Error[24] := AI_24_Error;
	AI_Error[25] := AI_25_Error;
	AI_Error[26] := AI_26_Error;
	AI_Error[27] := AI_27_Error;
	AI_Error[28] := AI_28_Error;
	AI_Error[29] := AI_29_Error;
	AI_Error[30] := AI_30_Error;
	AI_Error[31] := AI_31_Error;
	AI_Error[32] := AI_32_Error;
	AI_Error[33] := AI_33_Error;
	AI_Error[34] := AI_34_Error;
	AI_Error[35] := AI_35_Error;
	AI_Error[36] := AI_36_Error;
	AI_Error[37] := AI_37_Error;
	AI_Error[38] := AI_38_Error;
	AI_Error[39] := AI_39_Error;
	AI_Error[40] := AI_40_Error;
	AI_Error[41] := AI_41_Error;
	AI_Error[42] := AI_42_Error;
	AI_Error[43] := AI_43_Error;
	AI_Error[44] := AI_44_Error;
	AI_Error[45] := AI_45_Error;
	AI_Error[46] := AI_46_Error;
	AI_Error[47] := AI_47_Error;
	AI_Error[48] := AI_48_Error;
	AI_Error[49] := AI_49_Error;
	AI_Error[50] := AI_50_Error;
	AI_Error[51] := AI_51_Error;
	AI_Error[52] := AI_52_Error;
	AI_Error[53] := AI_53_Error;
	AI_Error[54] := AI_54_Error;
	AI_Error[55] := AI_55_Error;
	AI_Error[56] := AI_56_Error;
	AI_Error[57] := AI_57_Error;
	AI_Error[58] := AI_58_Error;
	AI_Error[59] := AI_59_Error;
	AI_Error[60] := AI_60_Error;
	AI_Error[61] := AI_61_Error;
	AI_Error[62] := AI_62_Error;
	AI_Error[63] := AI_63_Error;
	AI_Error[64] := AI_64_Error;
	AI_Error[65] := AI_65_Error;
	AI_Error[66] := AI_66_Error;
	AI_Error[67] := AI_67_Error;
	AI_Error[68] := AI_68_Error;
	AI_Error[69] := AI_69_Error;
	AI_Error[70] := AI_70_Error;
	AI_Error[71] := AI_71_Error;
	AI_Error[72] := AI_72_Error;
	AI_Higher_Saturation[1] := AI_1_Higher_Saturation;
	AI_Higher_Saturation[2] := AI_2_Higher_Saturation;
	AI_Higher_Saturation[3] := AI_3_Higher_Saturation;
	AI_Higher_Saturation[4] := AI_4_Higher_Saturation;
	AI_Higher_Saturation[5] := AI_5_Higher_Saturation;
	AI_Higher_Saturation[6] := AI_6_Higher_Saturation;
	AI_Higher_Saturation[7] := AI_7_Higher_Saturation;
	AI_Higher_Saturation[8] := AI_8_Higher_Saturation;
	AI_Higher_Saturation[9] := AI_9_Higher_Saturation;
	AI_Higher_Saturation[10] := AI_10_Higher_Saturation;
	AI_Higher_Saturation[11] := AI_11_Higher_Saturation;
	AI_Higher_Saturation[12] := AI_12_Higher_Saturation;
	AI_Higher_Saturation[13] := AI_13_Higher_Saturation;
	AI_Higher_Saturation[14] := AI_14_Higher_Saturation;
	AI_Higher_Saturation[15] := AI_15_Higher_Saturation;
	AI_Higher_Saturation[16] := AI_16_Higher_Saturation;
	AI_Higher_Saturation[17] := AI_17_Higher_Saturation;
	AI_Higher_Saturation[18] := AI_18_Higher_Saturation;
	AI_Higher_Saturation[19] := AI_19_Higher_Saturation;
	AI_Higher_Saturation[20] := AI_20_Higher_Saturation;
	AI_Higher_Saturation[21] := AI_21_Higher_Saturation;
	AI_Higher_Saturation[22] := AI_22_Higher_Saturation;
	AI_Higher_Saturation[23] := AI_23_Higher_Saturation;
	AI_Higher_Saturation[24] := AI_24_Higher_Saturation;
	AI_Higher_Saturation[25] := AI_25_Higher_Saturation;
	AI_Higher_Saturation[26] := AI_26_Higher_Saturation;
	AI_Higher_Saturation[27] := AI_27_Higher_Saturation;
	AI_Higher_Saturation[28] := AI_28_Higher_Saturation;
	AI_Higher_Saturation[29] := AI_29_Higher_Saturation;
	AI_Higher_Saturation[30] := AI_30_Higher_Saturation;
	AI_Higher_Saturation[31] := AI_31_Higher_Saturation;
	AI_Higher_Saturation[32] := AI_32_Higher_Saturation;
	AI_Higher_Saturation[33] := AI_33_Higher_Saturation;
	AI_Higher_Saturation[34] := AI_34_Higher_Saturation;
	AI_Higher_Saturation[35] := AI_35_Higher_Saturation;
	AI_Higher_Saturation[36] := AI_36_Higher_Saturation;
	AI_Higher_Saturation[37] := AI_37_Higher_Saturation;
	AI_Higher_Saturation[38] := AI_38_Higher_Saturation;
	AI_Higher_Saturation[39] := AI_39_Higher_Saturation;
	AI_Higher_Saturation[40] := AI_40_Higher_Saturation;
	AI_Higher_Saturation[41] := AI_41_Higher_Saturation;
	AI_Higher_Saturation[42] := AI_42_Higher_Saturation;
	AI_Higher_Saturation[43] := AI_43_Higher_Saturation;
	AI_Higher_Saturation[44] := AI_44_Higher_Saturation;
	AI_Higher_Saturation[45] := AI_45_Higher_Saturation;
	AI_Higher_Saturation[46] := AI_46_Higher_Saturation;
	AI_Higher_Saturation[47] := AI_47_Higher_Saturation;
	AI_Higher_Saturation[48] := AI_48_Higher_Saturation;
	AI_Higher_Saturation[49] := AI_49_Higher_Saturation;
	AI_Higher_Saturation[50] := AI_50_Higher_Saturation;
	AI_Higher_Saturation[51] := AI_51_Higher_Saturation;
	AI_Higher_Saturation[52] := AI_52_Higher_Saturation;
	AI_Higher_Saturation[53] := AI_53_Higher_Saturation;
	AI_Higher_Saturation[54] := AI_54_Higher_Saturation;
	AI_Higher_Saturation[55] := AI_55_Higher_Saturation;
	AI_Higher_Saturation[56] := AI_56_Higher_Saturation;
	AI_Higher_Saturation[57] := AI_57_Higher_Saturation;
	AI_Higher_Saturation[58] := AI_58_Higher_Saturation;
	AI_Higher_Saturation[59] := AI_59_Higher_Saturation;
	AI_Higher_Saturation[60] := AI_60_Higher_Saturation;
	AI_Higher_Saturation[61] := AI_61_Higher_Saturation;
	AI_Higher_Saturation[62] := AI_62_Higher_Saturation;
	AI_Higher_Saturation[63] := AI_63_Higher_Saturation;
	AI_Higher_Saturation[64] := AI_64_Higher_Saturation;
	AI_Higher_Saturation[65] := AI_65_Higher_Saturation;
	AI_Higher_Saturation[66] := AI_66_Higher_Saturation;
	AI_Higher_Saturation[67] := AI_67_Higher_Saturation;
	AI_Higher_Saturation[68] := AI_68_Higher_Saturation;
	AI_Higher_Saturation[69] := AI_69_Higher_Saturation;
	AI_Higher_Saturation[70] := AI_70_Higher_Saturation;
	AI_Higher_Saturation[71] := AI_71_Higher_Saturation;
	AI_Higher_Saturation[72] := AI_72_Higher_Saturation;
	AI_Lower_Saturation[1] := AI_1_Lower_Saturation;
	AI_Lower_Saturation[2] := AI_2_Lower_Saturation;
	AI_Lower_Saturation[3] := AI_3_Lower_Saturation;
	AI_Lower_Saturation[4] := AI_4_Lower_Saturation;
	AI_Lower_Saturation[5] := AI_5_Lower_Saturation;
	AI_Lower_Saturation[6] := AI_6_Lower_Saturation;
	AI_Lower_Saturation[7] := AI_7_Lower_Saturation;
	AI_Lower_Saturation[8] := AI_8_Lower_Saturation;
	AI_Lower_Saturation[9] := AI_9_Lower_Saturation;
	AI_Lower_Saturation[10] := AI_10_Lower_Saturation;
	AI_Lower_Saturation[11] := AI_11_Lower_Saturation;
	AI_Lower_Saturation[12] := AI_12_Lower_Saturation;
	AI_Lower_Saturation[13] := AI_13_Lower_Saturation;
	AI_Lower_Saturation[14] := AI_14_Lower_Saturation;
	AI_Lower_Saturation[15] := AI_15_Lower_Saturation;
	AI_Lower_Saturation[16] := AI_16_Lower_Saturation;
	AI_Lower_Saturation[17] := AI_17_Lower_Saturation;
	AI_Lower_Saturation[18] := AI_18_Lower_Saturation;
	AI_Lower_Saturation[19] := AI_19_Lower_Saturation;
	AI_Lower_Saturation[20] := AI_20_Lower_Saturation;
	AI_Lower_Saturation[21] := AI_21_Lower_Saturation;
	AI_Lower_Saturation[22] := AI_22_Lower_Saturation;
	AI_Lower_Saturation[23] := AI_23_Lower_Saturation;
	AI_Lower_Saturation[24] := AI_24_Lower_Saturation;
	AI_Lower_Saturation[25] := AI_25_Lower_Saturation;
	AI_Lower_Saturation[26] := AI_26_Lower_Saturation;
	AI_Lower_Saturation[27] := AI_27_Lower_Saturation;
	AI_Lower_Saturation[28] := AI_28_Lower_Saturation;
	AI_Lower_Saturation[29] := AI_29_Lower_Saturation;
	AI_Lower_Saturation[30] := AI_30_Lower_Saturation;
	AI_Lower_Saturation[31] := AI_31_Lower_Saturation;
	AI_Lower_Saturation[32] := AI_32_Lower_Saturation;
	AI_Lower_Saturation[33] := AI_33_Lower_Saturation;
	AI_Lower_Saturation[34] := AI_34_Lower_Saturation;
	AI_Lower_Saturation[35] := AI_35_Lower_Saturation;
	AI_Lower_Saturation[36] := AI_36_Lower_Saturation;
	AI_Lower_Saturation[37] := AI_37_Lower_Saturation;
	AI_Lower_Saturation[38] := AI_38_Lower_Saturation;
	AI_Lower_Saturation[39] := AI_39_Lower_Saturation;
	AI_Lower_Saturation[40] := AI_40_Lower_Saturation;
	AI_Lower_Saturation[41] := AI_41_Lower_Saturation;
	AI_Lower_Saturation[42] := AI_42_Lower_Saturation;
	AI_Lower_Saturation[43] := AI_43_Lower_Saturation;
	AI_Lower_Saturation[44] := AI_44_Lower_Saturation;
	AI_Lower_Saturation[45] := AI_45_Lower_Saturation;
	AI_Lower_Saturation[46] := AI_46_Lower_Saturation;
	AI_Lower_Saturation[47] := AI_47_Lower_Saturation;
	AI_Lower_Saturation[48] := AI_48_Lower_Saturation;
	AI_Lower_Saturation[49] := AI_49_Lower_Saturation;
	AI_Lower_Saturation[50] := AI_50_Lower_Saturation;
	AI_Lower_Saturation[51] := AI_51_Lower_Saturation;
	AI_Lower_Saturation[52] := AI_52_Lower_Saturation;
	AI_Lower_Saturation[53] := AI_53_Lower_Saturation;
	AI_Lower_Saturation[54] := AI_54_Lower_Saturation;
	AI_Lower_Saturation[55] := AI_55_Lower_Saturation;
	AI_Lower_Saturation[56] := AI_56_Lower_Saturation;
	AI_Lower_Saturation[57] := AI_57_Lower_Saturation;
	AI_Lower_Saturation[58] := AI_58_Lower_Saturation;
	AI_Lower_Saturation[59] := AI_59_Lower_Saturation;
	AI_Lower_Saturation[60] := AI_60_Lower_Saturation;
	AI_Lower_Saturation[61] := AI_61_Lower_Saturation;
	AI_Lower_Saturation[62] := AI_62_Lower_Saturation;
	AI_Lower_Saturation[63] := AI_63_Lower_Saturation;
	AI_Lower_Saturation[64] := AI_64_Lower_Saturation;
	AI_Lower_Saturation[65] := AI_65_Lower_Saturation;
	AI_Lower_Saturation[66] := AI_66_Lower_Saturation;
	AI_Lower_Saturation[67] := AI_67_Lower_Saturation;
	AI_Lower_Saturation[68] := AI_68_Lower_Saturation;
	AI_Lower_Saturation[69] := AI_69_Lower_Saturation;
	AI_Lower_Saturation[70] := AI_70_Lower_Saturation;
	AI_Lower_Saturation[71] := AI_71_Lower_Saturation;
	AI_Lower_Saturation[72] := AI_72_Lower_Saturation;


	(* Routage des entrées analogiques vers le buffer "Valeur_ANA" de *)
	(* chaque bascule. *)
	(* Ajout R.C. 12/01/2010 *)
	Recup_voie_ana_Gra1(voie_basc_Gra1,
		Conf_techno_basc_TP_skip_gra1,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Value_Agg1);
	Saturation_inf_Gra1 := Recup_voie_ana_Gra1.Saturation_inf;
	Saturation_sup_Gra1 := Recup_voie_ana_Gra1.Saturation_sup;

	Recup_voie_ana_Gra2(voie_basc_Gra2,
		Conf_techno_basc_TP_skip_gra2,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Value_Agg2);
	Saturation_inf_Gra2 := Recup_voie_ana_Gra2.Saturation_inf;
	Saturation_sup_Gra2 := Recup_voie_ana_Gra2.Saturation_sup;

	Recup_voie_ana_Cim1(voie_basc_Cim1,
		Conf_techno_basc_cim1,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Value_Cem1);
	Saturation_inf_Cim1 := Recup_voie_ana_Cim1.Saturation_inf;
	Saturation_sup_Cim1 := Recup_voie_ana_Cim1.Saturation_sup;

	Recup_voie_ana_Cim2(voie_basc_Cim2,
		Conf_techno_basc_cim2,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Value_Cem2);
	Saturation_inf_Cim2 := Recup_voie_ana_Cim2.Saturation_inf;
	Saturation_sup_Cim2 := Recup_voie_ana_Cim2.Saturation_sup;

	Recup_voie_ana_Eau1(voie_basc_Eau1,
		Conf_techno_basc_eau1,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Value_Water1);
	Saturation_inf_Eau1 := Recup_voie_ana_Eau1.Saturation_inf;
	Saturation_sup_Eau1 := Recup_voie_ana_Eau1.Saturation_sup;

	Recup_voie_ana_Eau2(voie_basc_Eau2,
		Conf_techno_basc_eau2,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Value_Water2);
	Saturation_inf_Eau2 := Recup_voie_ana_Eau2.Saturation_inf;
	Saturation_sup_Eau2 := Recup_voie_ana_Eau2.Saturation_sup;

	Recup_voie_ana_Adj_Weight1(voie_basc_Adj_Weight1,
		Conf_techno_basc_adj,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Adj_Weight_1_Value);
	Saturation_inf_Adj_Weight1 := Recup_voie_ana_Adj_Weight1.Saturation_inf;
	Saturation_sup_Adj_Weight1 := Recup_voie_ana_Adj_Weight1.Saturation_sup;

	Recup_voie_ana_Adj_Weight2(voie_basc_Adj_Weight2,
		Conf_techno_basc_adj,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Adj_Weight_2_Value);
	Saturation_inf_Adj_Weight2 := Recup_voie_ana_Adj_Weight2.Saturation_inf;
	Saturation_sup_Adj_Weight2 := Recup_voie_ana_Adj_Weight2.Saturation_sup;

	Recup_voie_ana_Adj_Weight3(voie_basc_Adj_Weight3,
		Conf_techno_basc_adj,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Adj_Weight_3_Value);
	Saturation_inf_Adj_Weight3 := Recup_voie_ana_Adj_Weight3.Saturation_inf;
	Saturation_sup_Adj_Weight3 := Recup_voie_ana_Adj_Weight3.Saturation_sup;

	Recup_voie_ana_Adj_Weight4(voie_basc_Adj_Weight4,
		Conf_techno_basc_adj,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Adj_Weight_4_Value);
	Saturation_inf_Adj_Weight4 := Recup_voie_ana_Adj_Weight4.Saturation_inf;
	Saturation_sup_Adj_Weight4 := Recup_voie_ana_Adj_Weight4.Saturation_sup;

	Recup_voie_ana_Adj_Weight5(voie_basc_Adj_Weight5,
		Conf_techno_basc_adj,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Adj_Weight_5_Value);
	Saturation_inf_Adj_Weight5 := Recup_voie_ana_Adj_Weight5.Saturation_inf;
	Saturation_sup_Adj_Weight5 := Recup_voie_ana_Adj_Weight5.Saturation_sup;

	Recup_voie_ana_Anh(voie_basc_Anh,
		Conf_techno_basc_anh,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Anh_Value);
	Saturation_inf_Anh := Recup_voie_ana_Anh.Saturation_inf;
	Saturation_sup_Anh := Recup_voie_ana_Anh.Saturation_sup;

	Recup_voie_ana_Add_Weight1(voie_basc_Add_Weight1,
		Conf_techno_basc_Add,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Add_Value[1]);
	Saturation_inf_Add[1] := Recup_voie_ana_Add_Weight1.Saturation_inf;
	Saturation_sup_Add[1] := Recup_voie_ana_Add_Weight1.Saturation_sup;

	Recup_voie_ana_Add_Weight2(voie_basc_Add_Weight2,
		Conf_techno_basc_Add,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Add_Value[2]);
	Saturation_inf_Add[2] := Recup_voie_ana_Add_Weight2.Saturation_inf;
	Saturation_sup_Add[2] := Recup_voie_ana_Add_Weight2.Saturation_sup;

	Recup_voie_ana_Add_Weight3(voie_basc_Add_Weight3,
		Conf_techno_basc_Add,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Add_Value[3]);
	Saturation_inf_Add[3] := Recup_voie_ana_Add_Weight3.Saturation_inf;
	Saturation_sup_Add[3] := Recup_voie_ana_Add_Weight3.Saturation_sup;

	Recup_voie_ana_Add_Weight4(voie_basc_Add_Weight4,
		Conf_techno_basc_Add,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Add_Value[4]);
	Saturation_inf_Add[4] := Recup_voie_ana_Add_Weight4.Saturation_inf;
	Saturation_sup_Add[4] := Recup_voie_ana_Add_Weight4.Saturation_sup;

	Recup_voie_ana_TT_Gra(voie_basc_TT_gra,
		Conf_techno_TT_gra,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Value_Agg_WH);
	Saturation_inf_TT_granulat := Recup_voie_ana_TT_Gra.Saturation_inf;
	Saturation_sup_TT_granulat := Recup_voie_ana_TT_Gra.Saturation_sup;

	Recup_voie_ana_TT_Cim(voie_basc_TT_cim,
		Conf_techno_TT_cim,
		AI_Array_Value_Part_1,
		AI_Array_Value_Part_2,
		AI_Error,
		AI_Higher_Saturation,
		AI_Lower_Saturation,
		AI_Value_Cem_WH);
	Saturation_inf_TT_cim := Recup_voie_ana_TT_Cim.Saturation_inf;
	Saturation_sup_TT_cim := Recup_voie_ana_TT_Cim.Saturation_sup;

	AI_Admix_Status_1	:= NOT AI_Admix_Weigher_1_Status;
	AI_Admix_Status_2	:= NOT AI_Admix_Weigher_2_Status;
	AI_Admix_Status_3	:= NOT AI_Admix_Weigher_3_Status;
	AI_Admix_Status_4	:= NOT AI_Admix_Weigher_4_Status;
	AI_Admix_Status_5	:= NOT AI_Admix_Weigher_5_Status;
	(* M340 adresse topologique : %I0.6.0.err (1er rack, carte6, 1ere voie)*)
	(* Qt adresse topologique :   %I1.6.1.1 (1er rack, carte6, 1ere voie)  *)
	(* Plus d'info : cf. doc api *)
	(* Routage des entrées analogiques vers le buffer "Valeur_ANA" de *)
	(* chaque Sonde d'humidite. *)
	(* Ajout R.C. 12/01/2010 *)
	Recup_voie_ana_Humidite(Voie_Humidite_Gra,
				Conf_Humidite_Gra_TRE,
				AI_Array_Value_Part_1,
				AI_Array_Value_Part_2,
				AI_Error,
				AI_Higher_Saturation,
				AI_Lower_Saturation,
				AI_Value_Humidity);

END_IF;




  




(* ACQUISITION DES VALEURS DES BALANCES BINAIRES OU BCD *)

IF (Lecture_Bin_BCD_ACTIVE) THEN
	IF (voie_basc_Gra1 = 0) THEN
		Poids_bin_BCD_Gra1 := BALANCE_Gra1 ;
	END_IF;
	IF (voie_basc_Cim1 = 0) THEN
		Poids_bin_BCD_Cim1 := BALANCE_Cim1 ;
	END_IF; 
	IF (voie_basc_Eau1 = 0) THEN
		Poids_bin_BCD_Eau1 := BALANCE_Eau1 ;
	END_IF;
	IF (voie_basc_Adj_Weight1 = 0) THEN
		Poids_bin_BCD_Adj := BALANCE_Adj ;
	END_IF;
	IF (voie_basc_Anh = 0) THEN
		Poids_bin_BCD_Anh := BALANCE_Anh ;
	END_IF;
	IF (voie_basc_Gra2 = 0) THEN
		Poids_bin_BCD_Gra2 := BALANCE_Gra2 ;
	END_IF;
	IF (voie_basc_Cim2 = 0) THEN
		Poids_bin_BCD_Cim2 := BALANCE_Cim2 ;
	END_IF; 
	IF (voie_basc_Eau2 = 0) THEN
		Poids_bin_BCD_Eau2 := BALANCE_Eau2 ;
	END_IF; 
	IF (voie_basc_Add_Weight1 = 0) THEN
		Poids_bin_BCD_Add[1] := BALANCE_Add_Weight1 ;
	END_IF; 
	IF (voie_basc_Add_Weight2 = 0) THEN
		Poids_bin_BCD_Add[2] := BALANCE_Add_Weight2 ;
	END_IF; 
	IF (voie_basc_Add_Weight3 = 0) THEN
		Poids_bin_BCD_Add[3] := BALANCE_Add_Weight3 ;
	END_IF; 
	IF (voie_basc_Add_Weight4 = 0) THEN
		Poids_bin_BCD_Add[4] := BALANCE_Add_Weight4 ;
	END_IF; 
	IF (voie_basc_TT_gra = 0) THEN
		Poids_bin_BCD_TT_Gra := BALANCE_TT_Gra ;
	END_IF;
	IF (voie_basc_TT_cim = 0) THEN
		Poids_bin_BCD_TT_Cim := BALANCE_TT_Cim ;
	END_IF; 
END_IF;

(* Densité (il faudrait un jou utiliser "BCD_TO_INT" *)
DENSITE_M_E_S (DENS_BCD := densite_mes_bcd,
	DENSITE =&gt; densite_mes);








(* RECOPIE DES ENTREES DANS DES MOTS LISIBLES PAR LE PC *)
(* Modif R.C. 28/05/2003 *)
(* Modif M.D. 18/12/2007 : Le PC à besoins de lire l'état des entrées
	dans un ordre physique. on configure donc les entrées ETORxx dans le fichier 
	.TXT pour pouvoir afficher les entrées sur le PC*)
(*Le adresses seront différentes entre M340 et Quantum*)

BCMix_ETOR_1a16 := BIT_TO_WORD ( 
	BIT0  := DI_01,
	BIT1  := DI_02,
	BIT2  := DI_03,
	BIT3  := DI_04,
	BIT4  := DI_05,
	BIT5  := DI_06,
	BIT6  := DI_07,
	BIT7  := DI_08,
	BIT8  := DI_09,
	BIT9  := DI_10,
	BIT10 := DI_11,
	BIT11 := DI_12,
	BIT12 := DI_13,
	BIT13 := DI_14,
	BIT14 := DI_15,
	BIT15 := DI_16);

BCMix_ETOR_17a32 := BIT_TO_WORD (
	BIT0  := DI_17,
	BIT1  := DI_18,
	BIT2  := DI_19,
	BIT3  := DI_20,
	BIT4  := DI_21,
	BIT5  := DI_22,
	BIT6  := DI_23,
	BIT7  := DI_24,
	BIT8  := DI_25,
	BIT9  := DI_26,
	BIT10 := DI_27,
	BIT11 := DI_28,
	BIT12 := DI_29,
	BIT13 := DI_30,
	BIT14 := DI_31,
	BIT15 := DI_32 );

BCMix_ETOR_33a48 := BIT_TO_WORD (
	BIT0  := DI_33,
	BIT1  := DI_34,
	BIT2  := DI_35,
	BIT3  := DI_36,
	BIT4  := DI_37,
	BIT5  := DI_38,
	BIT6  := DI_39,
	BIT7  := DI_40,
	BIT8  := DI_41,
	BIT9  := DI_42,
	BIT10 := DI_43,
	BIT11 := DI_44,
	BIT12 := DI_45,
	BIT13 := DI_46,
	BIT14 := DI_47,
	BIT15 := DI_48 );

BCMix_ETOR_49a64 := BIT_TO_WORD (
	BIT0  := DI_49,
	BIT1  := DI_50,
	BIT2  := DI_51,
	BIT3  := DI_52,
	BIT4  := DI_53,
	BIT5  := DI_54,
	BIT6  := DI_55,
	BIT7  := DI_56,
	BIT8  := DI_57,
	BIT9  := DI_58,
	BIT10 := DI_59,
	BIT11 := DI_60,
	BIT12 := DI_61,
	BIT13 := DI_62,
	BIT14 := DI_63,
	BIT15 := DI_64 );

BCMix_ETOR_65a80 := BIT_TO_WORD (
	BIT0  := DI_65,
	BIT1  := DI_66,
	BIT2  := DI_67,
	BIT3  := DI_68,
	BIT4  := DI_69,
	BIT5  := DI_70,
	BIT6  := DI_71,
	BIT7  := DI_72,
	BIT8  := DI_73,
	BIT9  := DI_74,
	BIT10 := DI_75,
	BIT11 := DI_76,
	BIT12 := DI_77,
	BIT13 := DI_78,
	BIT14 := DI_79,
	BIT15 := DI_80 );

(* Ajout M.D. 13/12/2007 *)
(* Cependant ETOR_81a96 n'est pas adressé = mise en correspondance avec le reste des sorties *)
BCMix_ETOR_81a96 := BIT_TO_WORD (
	BIT0  := DI_81,
	BIT1  := DI_82,
	BIT2  := DI_83,
	BIT3  := DI_84,
	BIT4  := DI_85,
	BIT5  := DI_86,
	BIT6  := DI_87,
	BIT7  := DI_88,
	BIT8  := DI_89,
	BIT9  := DI_90,
	BIT10 := DI_91,
	BIT11 := DI_92,
	BIT12 := DI_93,
	BIT13 := DI_94,
	BIT14 := DI_95,
	BIT15 := DI_96 );






(* PUPITRE TOR : LECTURE DES ENTREES *)
(* Ajout R.C. 15/05/2009 *)
IF Conf_DI_Manu_Station THEN

	(*"Sorties" d'un point de vue pupitre*)
	(*Données récupérées du pupitre*)

	Pup_Cde_vid_basc_Gra1 := DI_Agg1_Weigher_PB_PLC_Open;
	Pup_Cde_vid_basc_Gra1_1 := DI_Agg1_1_Weigher_PB_PLC_Open; (* Ajout R.C. 27/03/2010 P857 *)
	Pup_Cde_vid_basc_Gra1_2 := DI_Agg1_2_Weigher_PB_PLC_Open; (* Ajout R.C. 27/03/2010 P857 *)
	Pup_Cde_PV_Gra1 := DI_Agg1_PB_PLC_Slow_Weighing;
	Pup_cde_dos_gra[1] := DI_Agg_Bin1_PB_PLC_Open;
	Pup_cde_dos_gra[2] := DI_Agg_Bin2_PB_PLC_Open;
	Pup_cde_dos_gra[3] := DI_Agg_Bin3_PB_PLC_Open;
	Pup_cde_dos_gra[4] := DI_Agg_Bin4_PB_PLC_Open;
	Pup_cde_dos_gra[5] := DI_Agg_Bin5_PB_PLC_Open;
	Pup_cde_dos_gra[6] := DI_Agg_Bin6_PB_PLC_Open;
	Pup_cde_dos_gra[7] := DI_Agg_Bin7_PB_PLC_Open;
	Pup_Cde_vibreur_Gra1 := DI_Agg_Extraction_Aid_PB_PLC_ON;

	Pup_Cde_vid_basc_Cim1 := DI_Cem1_Weigher_PB_PLC_Open;
	Pup_Cde_vid_basc_Cim2 := DI_Cem2_Weigher_PB_PLC_Open;
	Pup_Cde_PV_Cim1 := DI_Cem1_PB_PLC_Slow_Weighing;
	Pup_cde_dos_cim[1] := DI_Cem_Silo1_PB_PLC_Open;
	Pup_cde_dos_cim[2] := DI_Cem_Silo2_PB_PLC_Open;
	Pup_cde_dos_cim[3] := DI_Cem_Silo3_PB_PLC_Open;
	Pup_cde_dos_cim[4] := DI_Cem_Silo4_PB_PLC_Open;
	Pup_cde_dos_cim[5] := DI_Cem_Silo5_PB_PLC_Open;
	Pup_Cde_vibreur_Cim1 := DI_Cem_Extraction_Aid_PB_PLC_ON;
	Pup_Cde_vibreur_Cim2 := DI_Cem_Extraction_Aid_PB_PLC_ON; (* commun cim1 et cim2 *)

	Pup_Cde_vid_basc_Eau1 := DI_Water1_Weigher_PB_PLC_Open;
	Pup_Cde_vid_basc_Eau2 := DI_Water2_Weigher_PB_PLC_Open;
	Pup_Cde_PV_Eau1 := DI_Water1_PB_PLC_Slow_Weighing;
	Pup_cde_dos_eau[1] := DI_Water_Tank1_PB_PLC_Open;
	Pup_cde_dos_eau[2] := DI_Water_Tank2_PB_PLC_Open;
	Pup_cde_dos_eau[3] := DI_Water_Tank3_PB_PLC_Open;
	Pup_Cde_vibreur_Eau1 := DI_Water_Aid_Extract_PB_PLC_ON; 
	Pup_Cde_vibreur_Eau2 := DI_Water_Aid_Extract_PB_PLC_ON; (* commun eau1 et eau2 *)

	Pup_Cde_vid_basc_Adj_comp[1] := DI_Admix_Weigher_Cpt1_PB_PLC_Op;
	Pup_Cde_vid_basc_Adj_comp[2] := DI_Admix_Weigher_Cpt2_PB_PLC_Op;
	Pup_Cde_vid_basc_Adj_comp[3] := DI_Admix_Weigher_Cpt3_PB_PLC_Op; (* Ajout R.C. 04/03/2010 *)
	Pup_Cde_vid_basc_Adj_comp[4] := DI_Admix_Weigher_Cpt4_PB_PLC_Op; (* Ajout R.C. 04/03/2010 *)
	Pup_Cde_vid_basc_Adj_comp[5] := DI_Admix_Weigher_Cpt5_PB_PLC_Op; (* Ajout R.C. 04/03/2010 *)
	Pup_Cde_vid_basc_Adj_comp[6] := DI_Admix_Weigher_Cpt6_PB_PLC_Op; (* Ajout R.C. 04/03/2010 *)
	Pup_Cde_vid_basc_Adj_comp[7] := DI_Admix_Weigher_Cpt7_PB_PLC_Op; (* Ajout R.C. 04/03/2010 *)
	Pup_Cde_vid_basc_Adj_comp[8] := DI_Admix_Weigher_Cpt8_PB_PLC_Op; (* Ajout R.C. 04/03/2010 *)
	Pup_Cde_vid_basc_Adj_comp[9] := DI_Admix_Weigher_Cpt9_PB_PLC_Op; (* Ajout R.C. 04/03/2010 *)
	Pup_Cde_vid_basc_Adj_comp[10] := DI_Admix_Weigher_Cpt10_PB_PLC_Op; (* Ajout R.C. 04/03/2010 *)
	Pup_cde_dos_adj[1] := DI_Admix_Tank1_PB_PLC_Open;
	Pup_cde_dos_adj[2] := DI_Admix_Tank2_PB_PLC_Open;
	Pup_cde_dos_adj[3] := DI_Admix_Tank3_PB_PLC_Open;
	Pup_cde_dos_adj[4] := DI_Admix_Tank4_PB_PLC_Open;
	Pup_cde_dos_adj[5] := DI_Admix_Tank5_PB_PLC_Open; (* Ajout R.C. 27/04/2010 *)
	Pup_cde_dos_adj[6] := DI_Admix_Tank6_PB_PLC_Open; (* Ajout R.C. 27/04/2010 *)
	Pup_cde_dos_adj[7] := DI_Admix_Tank7_PB_PLC_Open; (* Ajout R.C. 27/04/2010 *)
	Pup_cde_dos_adj[8] := DI_Admix_Tank8_PB_PLC_Open; (* Ajout R.C. 27/04/2010 *)
	Pup_cde_dos_adj[9] := DI_Admix_Tank9_PB_PLC_Open; (* Ajout R.C. 15/09/2010 - Mantis #1056 *)
	Pup_cde_dos_adj[10] := DI_Admix_Tank10_PB_PLC_Open; (* Ajout R.C. 15/09/2010 - Mantis #1056 *)

	Pup_Cde_vid_basc_Add := DI_Add_Weigher_PB_PLC_Open; (* Ajout R.C. 12/10/2011 P856 *)
	Pup_Cde_PV_Add := DI_Add_PB_PLC_Slow_Weighing; (* Ajout R.C. 12/10/2011 P856 *)
	Pup_cde_dos_Add[1] := DI_Add_Tank1_PB_PLC_Open; (* Ajout R.C. 12/10/2011 P856 *)
	Pup_cde_dos_Add[2] := DI_Add_Tank2_PB_PLC_Open; (* Ajout R.C. 12/10/2011 P856 *)
	Pup_cde_dos_Add[3] := DI_Add_Tank3_PB_PLC_Open; (* Ajout R.C. 12/10/2011 P856 *)
	Pup_cde_dos_Add[4] := DI_Add_Tank4_PB_PLC_Open; (* Ajout R.C. 12/10/2011 P856 *)
	Pup_Cde_vibreur_Add := DI_Add_Extraction_Aid_PB_PLC_ON; (* Ajout R.C. 12/10/2011 P856 *)

	Pup_Cde_Tapis_Trans := DI_Agg_Conveyor_Belt_PB_PLC_ON;
	Pup_Cde_ouv_TT_gra := DI_Agg_WH_PB_PLC_Open;
	Pup_Cde_vibreur_TT_gra := DI_Agg_WH_Aid_Extract_PB_PLC_ON; (* Ajout R.C. 15/09/2010 - Mantis #1056 *)
	Pup_descente_skip := DI_Skip_PB_PLC_Move_Down;
	Pup_montee_skip := DI_Skip_PB_PLC_Move_Up;
	Pup_cde_stop_malax1 := DI_Mixer1_PB_PLC_OFF;
	Pup_cde_start_malax1 := DI_Mixer1_PB_PLC_ON;

	Manu_Station_Cmd_Gate_Mode := DI_Mixer_Gates_PB_PLC_Auto_Manu;
	Manu_Station_Cmd_Gate_Mode_Auto := DI_Mixer_Gates_Auto_Manu; (* Ajout R.C. 29/01/2010 *)
	Pup_cde_ouverture_trappe1_mal1 := DI_Mixer1_Gate1_PB_PLC_Open;
	Pup_cde_fermeture_trappe1_mal1 := DI_Mixer1_Gate1_PB_PLC_Close;
	Pup_cde_ouverture_trappe2_mal1 := DI_Mixer1_Gate2_PB_PLC_Open; (* XX/12/2015 - P868C - ARTF1346498 *)
	Pup_cde_fermeture_trappe2_mal1 := DI_Mixer1_Gate2_PB_PLC_Close; (* XX/12/2015 - P868C - ARTF1346498 *)
	Pup_cde_ouverture_trappe1_mal2 := DI_Mixer2_Gate1_PB_PLC_Open; (* XX/12/2015 - P868C - ARTF1346498 *)
	Pup_cde_fermeture_trappe1_mal2 := DI_Mixer2_Gate1_PB_PLC_Close; (* XX/12/2015 - P868C - ARTF1346498 *)
	Pup_cde_ouverture_trappe2_mal2 := DI_Mixer2_Gate2_PB_PLC_Open; (* XX/12/2015 - P868C - ARTF1346498 *)
	Pup_cde_fermeture_trappe2_mal2 := DI_Mixer2_Gate2_PB_PLC_Close; (* XX/12/2015 - P868C - ARTF1346498 *)

	Manu_Station_Manu_Mode := DI_PB_PLC_Plant_Manu OR NOT DI_PB_PLC_Plant_Auto; (* Ajout suite à demande de Jérémie BOUVET du 06/07/2009 *)
	Manu_Station_Auto_Mode := DI_PB_PLC_Plant_Auto;
	Pup_Cde_Arret_Urgence_PTOR := DI_PB_PLC_Emergency_Stop; (* Modif R.C. 09/02/2010 *)
		(* On utilise une autre variable que "Pup_cde_arret_urgence" pour être *)
		(* certain que l'arrêt d'urgence du pupitre profibus ne sera pas surécrit *)
		(* par celui du pupitre TOR. (Bien que la cohabitation des 2 pupitres *)
		(* ne soit pas prévu, il serait regrettable qu'une erreur de configuration *)
		(* cause un dysfonctionnement de l'AU du pupitre profibus.)*)
	Pup_cde_klaxon := DI_PB_PLC_Horn;
	(* Note R.C. 18/05/2009 : on pourra éventuellement réutiliser les entrées existantes
		Suite à décision de Gaëtan DEPOORTERE le 18/05/2009 : on créé un jeu d'entrées
		complet pour l'heure, et on verra éventuellement plus tard pour réutiliser les
		entrées.
	Par exemple :
	Manu_Station_Manu_Mode := DI_Plant_In_Auto;
	Manu_Station_Auto_Mode := NOT(DI_Plant_In_Auto);
	Pup_cde_arret_urgence := ETOR_arret_urgence;
	Pup_cde_klaxon := DI_PB_Pro_Horn_Activated;
	*)

END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="080_Lecture_Arpege_TCP" type="section" task="MAST"></identProgram>
		<STSource>(* 19/01/2009 *)
(* Décodage des données de la bascule ARPEGE IDE500 (12 voies) *)

(* Initialisation des variables locales de la section *)
IF Lecture_Arpege_TCP_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Lecture_Arpege_TCP_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;





(*********************** GRANULAT1 *****************************)
IF (Conf_techno_basc_TP_skip_gra1 = 2)
AND (voie_basc_Gra1 &lt;&gt; 0)
AND (NOT Simuler_dosage_Gra1) THEN
	(* Bascule GRA1 Arpège TCP *)
	LEC_ARPEGE_Gra1 (Pds1_INT := IDE500_info_voie[voie_basc_Gra1].Pds1,
		Pds2_INT := IDE500_info_voie[voie_basc_Gra1].Pds2,
		Etat_voie := IDE500_info_voie[voie_basc_Gra1].Etat,
		Pds_max := Conf_granulat1_seuil_maxi,
		Pds_min := Conf_granulat1_seuil_mini,
		Multiplicateur := Conf_multipl_Granulat1 ,
		Surcharge =&gt; Surcharge_Gra1,
		Detarage =&gt; Detarage_Gra1,
		Donnee_non_valide =&gt; Alarme_IDE500_Gra1,
		Poids_S =&gt; Poids_real_Gra1);
(* Modif JNM 26/07/2007 : on transmet à BCMIX la valeur en REAL (la valeur INT est toujours utilisée dans le reste du programme) *)
	Poids_instantane_Gra1 := REAL_TO_INT(Poids_real_Gra1);
END_IF;

(*********************** GRANULAT2 ****************************)
IF (Conf_techno_basc_TP_skip_gra2 = 2)
AND (voie_basc_Gra2 &lt;&gt; 0)
AND (NOT Simuler_dosage_Gra2) THEN
	(* Bascule GRA2 Arpège TCP *)
	LEC_ARPEGE_Gra2 (Pds1_INT := IDE500_info_voie[voie_basc_Gra2].Pds1,
		Pds2_INT := IDE500_info_voie[voie_basc_Gra2].Pds2,
		Etat_voie := IDE500_info_voie[voie_basc_Gra2].Etat,
		Pds_max := Conf_Granulat2_seuil_maxi,
		Pds_min := Conf_Granulat2_seuil_mini,
		Multiplicateur := Conf_multipl_Granulat2 ,
		Surcharge =&gt; Surcharge_Gra2,
		Detarage =&gt; Detarage_Gra2,
		Donnee_non_valide =&gt; Alarme_IDE500_Gra2,
		Poids_S =&gt; Poids_real_Gra2);
	Poids_instantane_Gra2 := REAL_TO_INT(Poids_real_Gra2);
END_IF;


(*********************** GRANULAT3 ****************************)
IF (Conf_techno_basc_TP_skip_gra3 = 2)
AND (voie_basc_Gra3 &lt;&gt; 0) THEN
	(* Bascule GRA3 Arpège TCP *)
	LEC_ARPEGE_Gra3 (Pds1_INT := IDE500_info_voie[voie_basc_Gra3].Pds1,
		Pds2_INT := IDE500_info_voie[voie_basc_Gra3].Pds2,
		Etat_voie := IDE500_info_voie[voie_basc_Gra3].Etat,
		Pds_max := Conf_Gra3_seuil_maxi,
		Pds_min := Conf_Gra3_seuil_mini,
		Multiplicateur := Conf_multipl_Granulat3 ,
		Surcharge =&gt; Surcharge_Gra3,
		Detarage =&gt; Detarage_Gra3,
		Donnee_non_valide =&gt; Alarme_IDE500_Gra3,
		Poids_S =&gt; Poids_real_Gra3);
	Poids_instantane_Gra3 := REAL_TO_INT(Poids_real_Gra3);
END_IF;

(*********************** GRANULAT4 ****************************)
IF (Conf_techno_basc_TP_skip_gra4 = 2)
AND (voie_basc_Gra4 &lt;&gt; 0) THEN
	(* Bascule GRA4 Arpège TCP *)
	LEC_ARPEGE_Gra4 (Pds1_INT := IDE500_info_voie[voie_basc_Gra4].Pds1,
		Pds2_INT := IDE500_info_voie[voie_basc_Gra4].Pds2,
		Etat_voie := IDE500_info_voie[voie_basc_Gra4].Etat,
		Pds_max := Conf_Gra4_seuil_maxi,
		Pds_min := Conf_Gra4_seuil_mini,
		Multiplicateur := Conf_multipl_Granulat4 ,
		Surcharge =&gt; Surcharge_Gra4,
		Detarage =&gt; Detarage_Gra4,
		Donnee_non_valide =&gt; Alarme_IDE500_Gra4,
		Poids_S =&gt; Poids_real_Gra4);
	Poids_instantane_Gra4 := REAL_TO_INT(Poids_real_Gra4);
END_IF;

(*********************** CIMENT1 *****************************)
IF (Conf_techno_basc_cim1 = 2)
AND (voie_basc_Cim1 &lt;&gt; 0)
AND (NOT Simuler_dosage_Cim1) THEN
	(* Bascule CIM1 Arpège TCP *)
	LEC_ARPEGE_Cim1 (Pds1_INT := IDE500_info_voie[voie_basc_Cim1].Pds1,
		Pds2_INT := IDE500_info_voie[voie_basc_Cim1].Pds2,
		Etat_voie := IDE500_info_voie[voie_basc_Cim1].Etat,
		Pds_max := Conf_cim1_seuil_maxi,
		Pds_min := Conf_cim1_seuil_mini,
		Multiplicateur := Conf_multipl_Cim1 ,
		Surcharge =&gt; Surcharge_Cim1,
		Detarage =&gt; Detarage_Cim1,
		Donnee_non_valide =&gt; Alarme_IDE500_Cim1,
		Poids_S =&gt; Poids_real_Cim1);
	Poids_instantane_Cim1 := REAL_TO_INT(Poids_real_Cim1);
END_IF;

(*********************** CIMENT2 *****************************)
IF (Conf_techno_basc_cim2 = 2)
AND (voie_basc_Cim2 &lt;&gt; 0)
AND (NOT Simuler_dosage_Cim2) THEN
	(* Bascule CIM2 Arpège TCP *)
	LEC_ARPEGE_Cim2 (Pds1_INT := IDE500_info_voie[voie_basc_Cim2].Pds1,
		Pds2_INT := IDE500_info_voie[voie_basc_Cim2].Pds2,
		Etat_voie := IDE500_info_voie[voie_basc_Cim2].Etat,
		Pds_max := Conf_cim2_seuil_maxi,
		Pds_min := Conf_cim2_seuil_mini,
		Multiplicateur := Conf_multipl_Cim2 ,
		Surcharge =&gt; Surcharge_Cim2,
		Detarage =&gt; Detarage_Cim2,
		Donnee_non_valide =&gt; Alarme_IDE500_Cim2,
		Poids_S =&gt; Poids_real_Cim2);
	Poids_instantane_Cim2 := REAL_TO_INT(Poids_real_Cim2);
END_IF;

(*********************** EAU1 *****************************)
IF (Conf_techno_basc_eau1 = 2)
AND (voie_basc_Eau1 &lt;&gt; 0)
AND (NOT Simuler_dosage_Eau1) THEN
	(* Bascule EAU1 Arpège TCP *)
	LEC_ARPEGE_Eau1 (Pds1_INT := IDE500_info_voie[voie_basc_Eau1].Pds1,
		Pds2_INT := IDE500_info_voie[voie_basc_Eau1].Pds2,
		Etat_voie := IDE500_info_voie[voie_basc_Eau1].Etat,
		Pds_max := Conf_eau1_seuil_maxi,
		Pds_min := Conf_eau1_seuil_mini,
		Multiplicateur := Conf_multipl_eau1 ,
		Surcharge =&gt; Surcharge_Eau1,
		Detarage =&gt; Detarage_Eau1,
		Donnee_non_valide =&gt; Alarme_IDE500_Eau1,
		Poids_S =&gt; Poids_real_Eau1);
	Poids_instantane_Eau1 := REAL_TO_INT(Poids_real_Eau1);
END_IF;

(*********************** EAU2 *****************************)
IF (Conf_techno_basc_eau2 = 2)
AND (voie_basc_Eau2 &lt;&gt; 0)
AND (NOT Simuler_dosage_Eau2) THEN
	(* Bascule EAU2 Arpège TCP *)
	LEC_ARPEGE_Eau2 (Pds1_INT := IDE500_info_voie[voie_basc_Eau2].Pds1,
		Pds2_INT := IDE500_info_voie[voie_basc_Eau2].Pds2,
		Etat_voie := IDE500_info_voie[voie_basc_Eau2].Etat,
		Pds_max := Conf_eau2_seuil_maxi,
		Pds_min := Conf_eau2_seuil_mini,
		Multiplicateur := Conf_multipl_eau2 ,
		Surcharge =&gt; Surcharge_Eau2,
		Detarage =&gt; Detarage_Eau2,
		Donnee_non_valide =&gt; Alarme_IDE500_Eau2,
		Poids_S =&gt; Poids_real_Eau2);
	Poids_instantane_Eau2 := REAL_TO_INT(Poids_real_Eau2);
END_IF;


(*********************** ADJUVANT1 *****************************)
IF (Conf_techno_basc_adj = 2)
AND (voie_basc_Adj_Weight1 &lt;&gt; 0)
AND (NOT Simuler_dosage_Adj_pese) THEN
	(* Bascule ADJ Arpège TCP *)
	LEC_ARPEGE_Adj1 (Pds1_INT := IDE500_info_voie[voie_basc_Adj_Weight1].Pds1,
		Pds2_INT := IDE500_info_voie[voie_basc_Adj_Weight1].Pds2,
		Etat_voie := IDE500_info_voie[voie_basc_Adj_Weight1].Etat,
		Pds_max := Conf_adjuvant_basc_seuil_maxi,
		Pds_min := Conf_adjuvant_basc_seuil_mini,
		Multiplicateur := Conf_multipl_Adjuvant ,
		Surcharge =&gt; Surcharge_Adj,
		Detarage =&gt; Detarage_Adj,
		Donnee_non_valide =&gt; Alarme_IDE500_Adj,
		Poids_S =&gt; Poids_real_Adj);
	Poids_instantane_Adj := REAL_TO_INT(Poids_real_Adj);
END_IF;

(*********************** ADJUVANT2 *****************************)
IF (Conf_techno_basc_adj2 = 2)
AND (voie_basc_Adj_Weight2 &lt;&gt; 0) THEN
	(* Bascule ADJ2 Arpège TCP *)
	LEC_ARPEGE_Adj2 (Pds1_INT := IDE500_info_voie[voie_basc_Adj_Weight2].Pds1,
		Pds2_INT := IDE500_info_voie[voie_basc_Adj_Weight2].Pds2,
		Etat_voie := IDE500_info_voie[voie_basc_Adj_Weight2].Etat,
		Pds_max := Conf_adjuvant2_basc_seuil_maxi,
		Pds_min := Conf_adjuvant2_basc_seuil_mini,
		Multiplicateur := Conf_multipl_Adjuvant2 ,
		Surcharge =&gt; Surcharge_Adj2,
		Detarage =&gt; Detarage_Adj2,
		Donnee_non_valide =&gt; Alarme_IDE500_Adj2,
		Poids_S =&gt; Poids_real_Adj2);
	Poids_instantane_Adj2 := REAL_TO_INT(Poids_real_Adj2);
END_IF;

(*********************** ANHYDRITE ****************************)
IF (Conf_techno_basc_anh = 2)
AND (voie_basc_Anh &lt;&gt; 0)
AND (NOT Simuler_dosage_Anh) THEN
	(* Bascule ANH Arpège TCP *)
	LEC_ARPEGE_Anh (Pds1_INT := IDE500_info_voie[voie_basc_Anh].Pds1,
		Pds2_INT := IDE500_info_voie[voie_basc_Anh].Pds2,
		Etat_voie := IDE500_info_voie[voie_basc_Anh].Etat,
		Pds_max := Conf_Anhydrite_seuil_maxi,
		Pds_min := Conf_Anhydrite_seuil_mini,
		Multiplicateur := Conf_multipl_Anhydrite ,
		Surcharge =&gt; Surcharge_Anh,
		Detarage =&gt; Detarage_Anh,
		Donnee_non_valide =&gt; Alarme_IDE500_Anh,
		Poids_S =&gt; Poids_real_Anh);
	Poids_instantane_Anh := REAL_TO_INT(Poids_real_Anh);
END_IF;

(********************* ADDITIONNELLE **************************)
IF (Conf_techno_basc_Add = 2)
AND (NOT Simuler_dosage_Add) THEN
	IF (voie_basc_Add_Weight1 &lt;&gt; 0) THEN
	(* Bascule ADD, Voie #1 Arpège TCP *)
		LEC_ARPEGE_Add_Weight1 (Pds1_INT := IDE500_info_voie[voie_basc_Add_Weight1].Pds1,
			Pds2_INT := IDE500_info_voie[voie_basc_Add_Weight1].Pds2,
			Etat_voie := IDE500_info_voie[voie_basc_Add_Weight1].Etat,
			Pds_max := Conf_Basc_Add_seuil_maxi, (* Commun à toutes les lignes de poids *)
			Pds_min := Conf_Basc_Add_seuil_mini, (* Commun à toutes les lignes de poids *)
			Multiplicateur := Conf_multipl_Basc_Add, (* Commun à toutes les lignes de poids *)
			Surcharge =&gt; Surcharge_Add[1],
			Detarage =&gt; Detarage_Add[1],
			Donnee_non_valide =&gt; Alarme_IDE500_Add_Weight[1],
			Poids_S =&gt; Pds_Add[1]);
	ELSE
		Surcharge_Add[1] := FALSE;
		Detarage_Add[1] := FALSE;
		Alarme_IDE500_Add_Weight[1] := FALSE;
		Pds_Add[1] := 0.0;
	END_IF;
	IF (voie_basc_Add_Weight2 &lt;&gt; 0) THEN
		(* Bascule ADD, Voie #2 Arpège TCP *)
		LEC_ARPEGE_Add_Weight2 (Pds1_INT := IDE500_info_voie[voie_basc_Add_Weight2].Pds1,
			Pds2_INT := IDE500_info_voie[voie_basc_Add_Weight2].Pds2,
			Etat_voie := IDE500_info_voie[voie_basc_Add_Weight2].Etat,
			Pds_max := Conf_Basc_Add_seuil_maxi, (* Commun à toutes les lignes de poids *)
			Pds_min := Conf_Basc_Add_seuil_mini, (* Commun à toutes les lignes de poids *)
			Multiplicateur := Conf_multipl_Basc_Add, (* Commun à toutes les lignes de poids *)
			Surcharge =&gt; Surcharge_Add[2],
			Detarage =&gt; Detarage_Add[2],
			Donnee_non_valide =&gt; Alarme_IDE500_Add_Weight[2],
			Poids_S =&gt; Pds_Add[2]);
	ELSE
		Surcharge_Add[2] := FALSE;
		Detarage_Add[2] := FALSE;
		Alarme_IDE500_Add_Weight[2] := FALSE;
		Pds_Add[2] := 0.0;
	END_IF;
	IF (voie_basc_Add_Weight3 &lt;&gt; 0) THEN
		(* Bascule ADD, Voie #3 Arpège TCP *)
		LEC_ARPEGE_Add_Weight3 (Pds1_INT := IDE500_info_voie[voie_basc_Add_Weight3].Pds1,
			Pds2_INT := IDE500_info_voie[voie_basc_Add_Weight3].Pds2,
			Etat_voie := IDE500_info_voie[voie_basc_Add_Weight3].Etat,
			Pds_max := Conf_Basc_Add_seuil_maxi, (* Commun à toutes les lignes de poids *)
			Pds_min := Conf_Basc_Add_seuil_mini, (* Commun à toutes les lignes de poids *)
			Multiplicateur := Conf_multipl_Basc_Add, (* Commun à toutes les lignes de poids *)
			Surcharge =&gt; Surcharge_Add[3],
			Detarage =&gt; Detarage_Add[3],
			Donnee_non_valide =&gt; Alarme_IDE500_Add_Weight[3],
			Poids_S =&gt; Pds_Add[3]);
	ELSE
		Surcharge_Add[3] := FALSE;
		Detarage_Add[3] := FALSE;
		Alarme_IDE500_Add_Weight[3] := FALSE;
		Pds_Add[3] := 0.0;
	END_IF;
	IF (voie_basc_Add_Weight4 &lt;&gt; 0) THEN
		(* Bascule ADD, Voie #4 Arpège TCP *)
		LEC_ARPEGE_Add_Weight4 (Pds1_INT := IDE500_info_voie[voie_basc_Add_Weight4].Pds1,
			Pds2_INT := IDE500_info_voie[voie_basc_Add_Weight4].Pds2,
			Etat_voie := IDE500_info_voie[voie_basc_Add_Weight4].Etat,
			Pds_max := Conf_Basc_Add_seuil_maxi, (* Commun à toutes les lignes de poids *)
			Pds_min := Conf_Basc_Add_seuil_mini, (* Commun à toutes les lignes de poids *)
			Multiplicateur := Conf_multipl_Basc_Add, (* Commun à toutes les lignes de poids *)
			Surcharge =&gt; Surcharge_Add[4],
			Detarage =&gt; Detarage_Add[4],
			Donnee_non_valide =&gt; Alarme_IDE500_Add_Weight[4],
			Poids_S =&gt; Pds_Add[4]);
	ELSE
		Surcharge_Add[4] := FALSE;
		Detarage_Add[4] := FALSE;
		Alarme_IDE500_Add_Weight[4] := FALSE;
		Pds_Add[4] := 0.0;
	END_IF;
	(* Agrégation des 4 voies *)
	IF (conf_basc_add_pesage_individuel) THEN
		Poids_real_Add := Pds_Add[1] + Pds_Add[2] + Pds_Add[3] + Pds_Add[4];
	ELSE
		Poids_real_Add := Pds_Add[1];
	END_IF;
	Poids_instantane_Add := REAL_TO_DINT(Poids_real_Add);
	IF (Alarme_IDE500_Add_Weight[1])
	OR (Alarme_IDE500_Add_Weight[2])
	OR (Alarme_IDE500_Add_Weight[3])
	OR (Alarme_IDE500_Add_Weight[4]) THEN
		Alarme_IDE500_Add := TRUE; (* SET *)
	END_IF;
END_IF;

(*********************** TT_GRANULAT ****************************)
IF (Conf_techno_TT_gra = 2)
AND (voie_basc_TT_gra &lt;&gt; 0) THEN
	(* TT GRA Arpège TCP *)
	LEC_ARPEGE_TT_gra (Pds1_INT := IDE500_info_voie[voie_basc_TT_gra].Pds1,
		Pds2_INT := IDE500_info_voie[voie_basc_TT_gra].Pds2,
		Etat_voie := IDE500_info_voie[voie_basc_TT_gra].Etat,
		Pds_max := Conf_TT_Granulat_seuil_maxi,
		Pds_min := Conf_TT_Granulat_seuil_mini,
		Multiplicateur := Conf_multipl_TT_Granulat ,
		Surcharge =&gt; Surcharge_TT_granulat,
		Detarage =&gt; Detarage_TT_granulat,
		Donnee_non_valide =&gt; Alarme_IDE500_TT_granulat,
		Poids_S =&gt; Poids_real_TT_Gra);
	Poids_instantane_TT_Gra := REAL_TO_INT(Poids_real_TT_Gra);
END_IF;

(*********************** TT_CIMENT ****************************)
IF (Conf_techno_TT_cim = 2)
AND (voie_basc_TT_cim &lt;&gt; 0) THEN
	(* TT CIM Arpège TCP *)
	LEC_ARPEGE_TT_cim (Pds1_INT := IDE500_info_voie[voie_basc_TT_cim].Pds1,
		Pds2_INT := IDE500_info_voie[voie_basc_TT_cim].Pds2,
		Etat_voie := IDE500_info_voie[voie_basc_TT_cim].Etat,
		Pds_max := Conf_TT_cim_seuil_maxi,
		Pds_min := Conf_TT_cim_seuil_mini,
		Multiplicateur := Conf_multipl_TT_cim ,
		Surcharge =&gt; Surcharge_TT_cim,
		Detarage =&gt; Detarage_TT_cim,
		Donnee_non_valide =&gt; Alarme_IDE500_TT_cim,
		Poids_S =&gt; Poids_real_TT_Cim);
	Poids_instantane_TT_Cim := REAL_TO_INT(Poids_real_TT_Cim);
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="100_Lecture_Bin_BCD" type="section" task="MAST"></identProgram>
		<ILSource>(* 19/01/2009 *)
(* Décodage des données bascules
   cablées sur les entrées TOR de l'API.
   Décodage BCD/BINAIRE; Actif à 1 ou 0; Avec ou sans bit de signe *)


(* Initialisation des variables locales de la section *)
LD Lecture_Bin_BCD_DEM_INIT
JMPCN Init_Lecture_Bin_BCD__Fin
Init_Lecture_Bin_BCD:

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	LD TRUE
	R Lecture_Bin_BCD_DEM_INIT (* L'init de la section a bien été prise en compte. *)
Init_Lecture_Bin_BCD__Fin:


(*********************** GRANULAT1 *****************************)
LD Conf_techno_basc_TP_skip_gra1
EQ 0
ST Conf_granulat1_binaire
LD Conf_techno_basc_TP_skip_gra1
EQ 1
ST Conf_granulat1_BCD

LDN Conf_granulat1_binaire
ANDN Conf_granulat1_BCD
JMPC Fin_Gra1
ld voie_basc_Gra1
ne 0
jmpc Fin_Gra1
LD Simuler_dosage_Gra1
JMPC Fin_Gra1

	CAL LEC_BIN_BCD_Gra1 (VAL_BRUT := Poids_bin_BCD_Gra1,
			BINAIRE := Conf_granulat1_binaire,
			BCD := Conf_granulat1_BCD,
			Val_actif_1 := Conf_granulat1_val_actif_1,
			Signe_positif_1 := conf_granulat1_positif_a_1,
			Poids_min := Conf_granulat1_seuil_mini,
			Poids_max := Conf_granulat1_seuil_maxi,
			Filtre_Nb_Vals := Conf_granulat1_filtre_Nb_Vals,
			Filtre_coef := Conf_granulat1_filtre_Coef (*%*),
			Poids_simulateur := Poids_simu_Gra1,
			Simulation_en_cours := Mode_Simulation) 
	LD LEC_BIN_BCD_Gra1.POIDS_filtre
	st Poids_instantane_Gra1
	INT_TO_REAL
	ST Poids_real_Gra1
	LD LEC_BIN_BCD_Gra1.DEF_depassement_MAX
	ST Surcharge_Gra1
	LD LEC_BIN_BCD_Gra1.DEF_depassement_MIN
	ST Detarage_Gra1
Fin_Gra1:

(*********************** GRANULAT2 ****************************)
LD Conf_techno_basc_TP_skip_gra2
EQ 0
AND (Conf_granulat2_nb_tremies
GT 0
) (* Modif R.C. 01/07/2010 : Bug constaté : non départ du skip car on voit "32767kg" (-1) *)
(* sur la chaine granulat2 lorsqu'il n'y a pourtant aucune chaine granulat2 configurée *)
ST Conf_GRANULAT2_binaire
LD Conf_techno_basc_TP_skip_gra2
EQ 1
ST Conf_GRANULAT2_BCD

LDN Conf_GRANULAT2_binaire
ANDN Conf_GRANULAT2_BCD
JMPC Fin_Gra2
ld voie_basc_Gra2
ne 0
jmpc Fin_Gra2
LD Simuler_dosage_Gra2
JMPC Fin_Gra2
  
	CAL LEC_BIN_BCD_Gra2 (VAL_BRUT := Poids_bin_BCD_Gra2,
			BINAIRE := Conf_GRANULAT2_binaire,
			BCD := Conf_GRANULAT2_BCD,
			Val_actif_1 := Conf_GRANULAT2_val_actif_1,
			Signe_positif_1 := conf_GRANULAT2_positif_a_1,
			Poids_min := Conf_GRANULAT2_seuil_mini,
			Poids_max := Conf_GRANULAT2_seuil_maxi,
			Filtre_Nb_Vals := Conf_GRANULAT2_filtre_Nb_Vals,
			Filtre_coef := Conf_GRANULAT2_filtre_Coef(*%*),
			Poids_simulateur := Poids_simu_Gra2,
			Simulation_en_cours := Mode_Simulation) 
	LD LEC_BIN_BCD_Gra2.POIDS_filtre
	ST Poids_instantane_Gra2
	INT_TO_REAL
	ST Poids_real_Gra2
	LD LEC_BIN_BCD_Gra2.DEF_depassement_MAX
	ST Surcharge_Gra2
	LD LEC_BIN_BCD_Gra2.DEF_depassement_MIN
	ST Detarage_Gra2
Fin_Gra2:

(*********************** CIMENT1 *****************************)
LD Conf_techno_basc_cim1
EQ 0
ST conf_cim1_binaire
LD Conf_techno_basc_cim1
EQ 1
ST conf_cim1_bcd

LDN conf_cim1_binaire
ANDN conf_cim1_bcd
JMPC Fin_Cim
ld voie_basc_Cim1
ne 0
jmpc Fin_Cim 
LD Simuler_dosage_Cim1
JMPC Fin_Cim

	CAL LEC_BIN_BCD_Cim1 (VAL_BRUT := Poids_bin_BCD_Cim1,
			BINAIRE := conf_cim1_binaire,
			BCD := conf_cim1_bcd,
			Val_actif_1 := conf_cim1_Val_actif_1,
			Signe_positif_1 := conf_cim1_positif_a_1,
			Poids_min := Conf_cim1_seuil_mini,
			Poids_max := Conf_cim1_seuil_maxi,
			Filtre_Nb_Vals := Conf_Cim1_filtre_Nb_Vals,
			Filtre_coef := Conf_Cim1_filtre_Coef(*%*),
			Poids_simulateur := Poids_simu_Cim1,
			Simulation_en_cours := Mode_Simulation) 
	LD LEC_BIN_BCD_Cim1.POIDS_filtre
	ST Poids_instantane_Cim1
	INT_TO_REAL
	ST Poids_real_Cim1
	LD LEC_BIN_BCD_Cim1.DEF_depassement_MAX
	ST Surcharge_Cim1
	LD LEC_BIN_BCD_Cim1.DEF_depassement_MIN
	ST Detarage_Cim1
Fin_Cim:

(*********************** CIMENT2 *****************************)
LD Conf_techno_basc_cim2
EQ 0
ST conf_Cim2_binaire
LD Conf_techno_basc_cim2
EQ 1
ST conf_Cim2_bcd

LDN conf_Cim2_binaire
ANDN conf_Cim2_bcd
JMPC Fin_Cim2
ld voie_basc_Cim2
ne 0
jmpc Fin_Cim2 
LD Simuler_dosage_Cim2
JMPC Fin_Cim2

	CAL LEC_BIN_BCD_Cim2 (VAL_BRUT := Poids_bin_BCD_Cim2,
			BINAIRE := conf_Cim2_binaire,
			BCD := conf_Cim2_bcd,
			Val_actif_1 := conf_Cim2_val_actif_1,
			Signe_positif_1 := conf_Cim2_positif_a_1,
			Poids_min := Conf_cim2_seuil_mini,
			Poids_max := Conf_cim2_seuil_maxi,
			Filtre_Nb_Vals := Conf_cim2_filtre_Nb_Vals,
			Filtre_coef := Conf_cim2_filtre_Coef(*%*),
			Poids_simulateur := Poids_simu_Cim2,
			Simulation_en_cours := Mode_Simulation) 
	LD LEC_BIN_BCD_Cim2.POIDS_filtre
	ST Poids_instantane_Cim2
	INT_TO_REAL
	ST Poids_real_Cim2
	LD LEC_BIN_BCD_Cim2.DEF_depassement_MAX
	ST Surcharge_Cim2
	LD LEC_BIN_BCD_Cim2.DEF_depassement_MIN
	ST Detarage_Cim2
Fin_Cim2:

(*********************** EAU1 *****************************)
LD Conf_techno_basc_eau1
EQ 0
ST conf_eau1_binaire
LD Conf_techno_basc_eau1
EQ 1
ST conf_eau1_bcd

LDN conf_eau1_binaire
ANDN conf_eau1_bcd
JMPC Fin_Eau
ld voie_basc_Eau1
ne 0
jmpc Fin_Eau
LD Simuler_dosage_Eau1
JMPC Fin_Eau

(* Ajout R.C. 03/09/2010 cause : on déclenchait des défaut "bascule" quand il n'y a pas *)
(* de bascule empêchant le dosage des eaux pompées *)
LDN Conf_Water_Weigher_FR
ANDN Conf_Water_Weigher_RO
ANDN Conf_Water_Weigher_IN
JMPC Fin_Eau

	CAL LEC_BIN_BCD_Eau1 (VAL_BRUT := Poids_bin_BCD_Eau1,
			BINAIRE := conf_eau1_binaire,
			BCD := conf_eau1_bcd,
			Val_actif_1 := conf_eau1_val_actif_1,
			Signe_positif_1 := conf_eau1_positif_a_1,
			Poids_min := Conf_eau1_seuil_mini,
			Poids_max := Conf_eau1_seuil_maxi,
			Filtre_Nb_Vals := Conf_eau1_filtre_Nb_Vals,
			Filtre_coef := Conf_eau1_filtre_Coef(*%*),
			Poids_simulateur := Poids_simu_Eau1,
			Simulation_en_cours := Mode_Simulation) 
 	LD LEC_BIN_BCD_Eau1.POIDS_filtre
	ST Poids_instantane_Eau1
	INT_TO_REAL
	ST Poids_real_Eau1
	LD LEC_BIN_BCD_Eau1.DEF_depassement_MAX
	ST Surcharge_Eau1
	LD LEC_BIN_BCD_Eau1.DEF_depassement_MIN
	ST Detarage_Eau1
Fin_Eau:

(*********************** EAU2 *****************************)
LD Conf_techno_basc_eau2
EQ 0
ST conf_Eau2_binaire
LD Conf_techno_basc_eau2
EQ 1
ST conf_Eau2_bcd

LDN conf_Eau2_binaire
ANDN conf_Eau2_bcd
JMPC Fin_Eau2
ld voie_basc_Eau2
ne 0
jmpc Fin_Eau2
LD Simuler_dosage_Eau2
JMPC Fin_Eau2

(* Ajout R.C. 03/09/2010 cause : on déclenchait des défaut "bascule" quand il n'y a pas *)
(* de bascule empêchant le dosage des eaux pompées *)
LDN Conf_Water_Weigher_FR
ANDN Conf_Water_Weigher_RO
ANDN Conf_Water_Weigher_IN
JMPC Fin_Eau2
LD Conf_eau2_nb_cuves
EQ 0
JMPC Fin_Eau2

	CAL LEC_BIN_BCD_Eau2 (VAL_BRUT := Poids_bin_BCD_Eau2,
			BINAIRE := conf_Eau2_binaire,
			BCD := conf_Eau2_bcd,
			Val_actif_1 := conf_Eau2_val_actif_1,
			Signe_positif_1 := conf_Eau2_positif_a_1,
			Poids_min := Conf_eau2_seuil_mini,
			Poids_max := Conf_eau2_seuil_maxi,
			Filtre_Nb_Vals := Conf_eau2_filtre_Nb_Vals,
			Filtre_coef := Conf_eau2_filtre_Coef(*%*),
			Poids_simulateur := Poids_simu_Eau2,
			Simulation_en_cours := Mode_Simulation) 
	LD LEC_BIN_BCD_Eau2.POIDS_filtre
	ST Poids_instantane_Eau2
	INT_TO_REAL
	ST Poids_real_Eau2
	LD LEC_BIN_BCD_Eau2.DEF_depassement_MAX
	ST Surcharge_Eau2
	LD LEC_BIN_BCD_Eau2.DEF_depassement_MIN
	ST Detarage_Eau2
Fin_Eau2:

(*********************** ADJUVANT *****************************)
LD Conf_techno_basc_adj
EQ 0
ST Conf_ADJUVANT_binaire
LD Conf_techno_basc_adj
EQ 1
ST Conf_ADJUVANT_BCD

LDN Conf_ADJUVANT_binaire
ANDN Conf_ADJUVANT_BCD
JMPC Fin_Adj
ld voie_basc_Adj_Weight1
ne 0
jmpc Fin_Adj
LD Simuler_dosage_Adj_pese
JMPC Fin_Adj

(* Ajout R.C. 03/09/2010 cause : on déclenchait des défaut "bascule" quand il n'y a pas *)
(* de bascule empêchant le dosage des adjuvants pompés *)
LDN Conf_Admix_Weigher_FR
ANDN Conf_Admix_Weigher_PP_With_Sens
ANDN Conf_Admix_Weigher_PP_No_Sens
JMPC Fin_Adj

	CAL LEC_BIN_BCD_Adj (VAL_BRUT := Poids_bin_BCD_Adj,
			BINAIRE := Conf_ADJUVANT_binaire,
			BCD := Conf_ADJUVANT_BCD,
			Val_actif_1 := Conf_ADJUVANT_val_actif_1,
			Signe_positif_1 := conf_ADJUVANT_positif_a_1,
			Poids_min := Conf_ADJUVANT_basc_seuil_mini,
			Poids_max := Conf_ADJUVANT_basc_seuil_maxi,
			Filtre_Nb_Vals := Conf_ADJUVANT_filtre_Nb_Vals,
			Filtre_coef := Conf_ADJUVANT_filtre_Coef(*%*),
			Poids_simulateur := Poids_simu_Adj,
			Simulation_en_cours:= Mode_Simulation) 
	LD LEC_BIN_BCD_Adj.POIDS_filtre
	ST Poids_instantane_Adj
	INT_TO_REAL
	ST Poids_real_Adj
	LD LEC_BIN_BCD_Adj.DEF_depassement_MAX
	ST Surcharge_Adj
	LD LEC_BIN_BCD_Adj.DEF_depassement_MIN
	ST Detarage_Adj
Fin_Adj:

(*********************** ANHYDRITE ****************************)
LD Conf_techno_basc_anh
EQ 0
ST Conf_ANHYDRITE_binaire
LD Conf_techno_basc_anh
EQ 1
ST Conf_ANHYDRITE_BCD

LDN Conf_ANHYDRITE_binaire
ANDN Conf_ANHYDRITE_BCD
JMPC Fin_Anhydrite
ld voie_basc_Anh
ne 0
jmpc Fin_Anhydrite
LD Simuler_dosage_Anh
JMPC Fin_Anhydrite

	CAL LEC_BIN_BCD_Anh (VAL_BRUT := Poids_bin_BCD_Anh,
			BINAIRE := Conf_ANHYDRITE_binaire,
			BCD := Conf_ANHYDRITE_BCD,
			Val_actif_1 := Conf_ANHYDRITE_val_actif_1,
			Signe_positif_1 := conf_ANHYDRITE_positif_a_1,
			Poids_min := Conf_ANHYDRITE_seuil_mini,
			Poids_max := Conf_ANHYDRITE_seuil_maxi,
			Filtre_Nb_Vals := Conf_ANHYDRITE_filtre_Nb_Vals,
			Filtre_coef := Conf_ANHYDRITE_filtre_Coef(*%*),
			Poids_simulateur := Poids_simu_Anh,
			Simulation_en_cours := Mode_Simulation) 
	LD LEC_BIN_BCD_Anh.POIDS_filtre
	ST Poids_instantane_Anh
	INT_TO_REAL
	ST Poids_real_Anh
	LD LEC_BIN_BCD_Anh.DEF_depassement_MAX
	ST Surcharge_Anh
	LD LEC_BIN_BCD_Anh.DEF_depassement_MIN
	ST Detarage_Anh
Fin_Anhydrite:

(********************* ADDITIONNELLE **************************)
LD Conf_techno_basc_Add
EQ 0
ST Conf_Basc_Add_Binaire
LD Conf_techno_basc_Add
EQ 1
ST Conf_Basc_Add_BCD

LDN Conf_Basc_Add_Binaire
ANDN Conf_Basc_Add_BCD
JMPC Fin_Additionnelle
LD Simuler_dosage_Add
JMPC Fin_Additionnelle

	(* Bascule ADD, Voie #1 Binaire ou BCD *)
	LD voie_basc_Add_Weight1
	NE 0
	JMPC Reset_Additionnelle_Weight1
		CAL LEC_BIN_BCD_Add_Weight1 (VAL_BRUT := Poids_bin_BCD_Add[1],
				BINAIRE := Conf_Basc_Add_Binaire, (* Commun à toutes les lignes de poids *)
				BCD := Conf_Basc_Add_BCD, (* Commun à toutes les lignes de poids *)
				Val_actif_1 := Conf_Basc_Add_val_actif_1, (* Commun à toutes les lignes de poids *)
				Signe_positif_1 := conf_Basc_Add_positif_a_1, (* Commun à toutes les lignes de poids *)
				Poids_min := Conf_Basc_Add_seuil_mini, (* Commun à toutes les lignes de poids *)
				Poids_max := Conf_Basc_Add_seuil_maxi, (* Commun à toutes les lignes de poids *)
				Filtre_Nb_Vals := Conf_Basc_Add_filtre_Nb_Vals, (* Commun à toutes les lignes de poids *)
				Filtre_coef := Conf_Basc_Add_filtre_Coef(*%*), (* Commun à toutes les lignes de poids *)
				Poids_simulateur := Poids_simu_Add[1],
				Simulation_en_cours := Mode_Simulation) 
		LD LEC_BIN_BCD_Add_Weight1.POIDS_filtre
		INT_TO_REAL
		ST Pds_Add[1]
		LD LEC_BIN_BCD_Add_Weight1.DEF_depassement_MAX
		ST Surcharge_Add[1]
		LD LEC_BIN_BCD_Add_Weight1.DEF_depassement_MIN
		ST Detarage_Add[1]
	JMP Fin_Additionnelle_Weight1
	Reset_Additionnelle_Weight1:
		LD 0.0
		ST Pds_Add[1]
		LD FALSE
		ST Surcharge_Add[1]
		ST Detarage_Add[1]
	Fin_Additionnelle_Weight1:

	(* Bascule ADD, Voie #2 Binaire ou BCD *)
	LD voie_basc_Add_Weight2
	NE 0
	JMPC Reset_Additionnelle_Weight2
		CAL LEC_BIN_BCD_Add_Weight2 (VAL_BRUT := Poids_bin_BCD_Add[2],
				BINAIRE := Conf_Basc_Add_Binaire, (* Commun à toutes les lignes de poids *)
				BCD := Conf_Basc_Add_BCD, (* Commun à toutes les lignes de poids *)
				Val_actif_1 := Conf_Basc_Add_val_actif_1, (* Commun à toutes les lignes de poids *)
				Signe_positif_1 := conf_Basc_Add_positif_a_1, (* Commun à toutes les lignes de poids *)
				Poids_min := Conf_Basc_Add_seuil_mini, (* Commun à toutes les lignes de poids *)
				Poids_max := Conf_Basc_Add_seuil_maxi, (* Commun à toutes les lignes de poids *)
				Filtre_Nb_Vals := Conf_Basc_Add_filtre_Nb_Vals, (* Commun à toutes les lignes de poids *)
				Filtre_coef := Conf_Basc_Add_filtre_Coef(*%*), (* Commun à toutes les lignes de poids *)
				Poids_simulateur := Poids_simu_Add[2],
				Simulation_en_cours := Mode_Simulation) 
		LD LEC_BIN_BCD_Add_Weight2.POIDS_filtre
		INT_TO_REAL
		ST Pds_Add[2]
		LD LEC_BIN_BCD_Add_Weight2.DEF_depassement_MAX
		ST Surcharge_Add[2]
		LD LEC_BIN_BCD_Add_Weight2.DEF_depassement_MIN
		ST Detarage_Add[2]
	JMP Fin_Additionnelle_Weight2
	Reset_Additionnelle_Weight2:
		LD 0.0
		ST Pds_Add[2]
		LD FALSE
		ST Surcharge_Add[2]
		ST Detarage_Add[2]
	Fin_Additionnelle_Weight2:

	(* Bascule ADD, Voie #3 Binaire ou BCD *)
	LD voie_basc_Add_Weight3
	NE 0
	JMPC Reset_Additionnelle_Weight3
		CAL LEC_BIN_BCD_Add_Weight3 (VAL_BRUT := Poids_bin_BCD_Add[3],
				BINAIRE := Conf_Basc_Add_Binaire, (* Commun à toutes les lignes de poids *)
				BCD := Conf_Basc_Add_BCD, (* Commun à toutes les lignes de poids *)
				Val_actif_1 := Conf_Basc_Add_val_actif_1, (* Commun à toutes les lignes de poids *)
				Signe_positif_1 := conf_Basc_Add_positif_a_1, (* Commun à toutes les lignes de poids *)
				Poids_min := Conf_Basc_Add_seuil_mini, (* Commun à toutes les lignes de poids *)
				Poids_max := Conf_Basc_Add_seuil_maxi, (* Commun à toutes les lignes de poids *)
				Filtre_Nb_Vals := Conf_Basc_Add_filtre_Nb_Vals, (* Commun à toutes les lignes de poids *)
				Filtre_coef := Conf_Basc_Add_filtre_Coef(*%*), (* Commun à toutes les lignes de poids *)
				Poids_simulateur := Poids_simu_Add[3],
				Simulation_en_cours := Mode_Simulation) 
		LD LEC_BIN_BCD_Add_Weight3.POIDS_filtre
		INT_TO_REAL
		ST Pds_Add[3]
		LD LEC_BIN_BCD_Add_Weight3.DEF_depassement_MAX
		ST Surcharge_Add[3]
		LD LEC_BIN_BCD_Add_Weight3.DEF_depassement_MIN
		ST Detarage_Add[3]
	JMP Fin_Additionnelle_Weight3
	Reset_Additionnelle_Weight3:
		LD 0.0
		ST Pds_Add[3]
		LD FALSE
		ST Surcharge_Add[3]
		ST Detarage_Add[3]
	Fin_Additionnelle_Weight3:

	(* Bascule ADD, Voie #4 Binaire ou BCD *)
	LD voie_basc_Add_Weight4
	NE 0
	JMPC Reset_Additionnelle_Weight4
		CAL LEC_BIN_BCD_Add_Weight4 (VAL_BRUT := Poids_bin_BCD_Add[4],
				BINAIRE := Conf_Basc_Add_Binaire, (* Commun à toutes les lignes de poids *)
				BCD := Conf_Basc_Add_BCD, (* Commun à toutes les lignes de poids *)
				Val_actif_1 := Conf_Basc_Add_val_actif_1, (* Commun à toutes les lignes de poids *)
				Signe_positif_1 := conf_Basc_Add_positif_a_1, (* Commun à toutes les lignes de poids *)
				Poids_min := Conf_Basc_Add_seuil_mini, (* Commun à toutes les lignes de poids *)
				Poids_max := Conf_Basc_Add_seuil_maxi, (* Commun à toutes les lignes de poids *)
				Filtre_Nb_Vals := Conf_Basc_Add_filtre_Nb_Vals, (* Commun à toutes les lignes de poids *)
				Filtre_coef := Conf_Basc_Add_filtre_Coef(*%*), (* Commun à toutes les lignes de poids *)
				Poids_simulateur := Poids_simu_Add[4],
				Simulation_en_cours := Mode_Simulation) 
		LD LEC_BIN_BCD_Add_Weight4.POIDS_filtre
		INT_TO_REAL
		ST Pds_Add[4]
		LD LEC_BIN_BCD_Add_Weight4.DEF_depassement_MAX
		ST Surcharge_Add[4]
		LD LEC_BIN_BCD_Add_Weight4.DEF_depassement_MIN
		ST Detarage_Add[4]
	JMP Fin_Additionnelle_Weight4
	Reset_Additionnelle_Weight4:
		LD 0.0
		ST Pds_Add[4]
		LD FALSE
		ST Surcharge_Add[4]
		ST Detarage_Add[4]
	Fin_Additionnelle_Weight4:

	(* Agrégation des 4 voies *)
	(* - Calcul de Poids_real_Add en sommant les lignes de poids *)
	LDN conf_basc_add_pesage_individuel
	JMPC Poids_Bin_BCD_Add_global
	Poids_Bin_BCD_Add_individuel:
		LD Pds_Add[1]
		ADD Pds_Add[2]
		ADD Pds_Add[3]
		ADD Pds_Add[4]
		ST Poids_real_Add
	JMP Poids_Bin_BCD_Add__fin
	Poids_Bin_BCD_Add_global:
		LD Pds_Add[1]
		ST Poids_real_Add
	Poids_Bin_BCD_Add__fin:
	(* - Recopie dans Poids_instantane_Add *)
	LD Poids_real_Add
	REAL_TO_DINT
	ST Poids_instantane_Add

Fin_Additionnelle:

(*********************** TT_GRANULAT ****************************)
LD Conf_techno_TT_gra
EQ 0
ST Conf_TT_Gra_binaire
LD Conf_techno_TT_gra
EQ 1
ST Conf_TT_Gra_BCD

LDN Conf_TT_Gra_binaire
ANDN Conf_TT_Gra_BCD
JMPC Fin_TTGra
ld voie_basc_TT_gra
ne 0
jmpc Fin_TTGra

	CAL LEC_BIN_BCD_TT_gra (VAL_BRUT := Poids_bin_BCD_TT_Gra,
			BINAIRE := Conf_TT_Gra_binaire,
			BCD := Conf_TT_Gra_BCD,
			Val_actif_1 := Conf_TT_Gra_val_actif_1,
			Signe_positif_1 := conf_TT_Gra_positif_a_1,
			Poids_min := Conf_TT_GRANULAT_seuil_mini,
			Poids_max := Conf_TT_GRANULAT_seuil_maxi,
			Filtre_Nb_Vals := 3,
			Filtre_coef := 100(*%*),
			Poids_simulateur := Poids_simu_TT_Gra,
			Simulation_en_cours := Mode_Simulation) 
	LD LEC_BIN_BCD_TT_gra.POIDS_filtre
	ST Poids_instantane_TT_Gra
	INT_TO_REAL
	ST Poids_real_TT_Gra
	LD LEC_BIN_BCD_TT_gra.DEF_depassement_MAX
	ST Surcharge_TT_granulat
	LD LEC_BIN_BCD_TT_gra.DEF_depassement_MIN
	ST Detarage_TT_granulat
Fin_TTGra: 
 
(*********************** TT_CIMENT ****************************)
LD Conf_techno_TT_cim
EQ 0
ST Conf_TT_Cim_binaire
LD Conf_techno_TT_cim
EQ 1
ST Conf_TT_Cim_BCD

LDN Conf_TT_Cim_binaire
ANDN Conf_TT_Cim_BCD
JMPC Fin_TTCim
ld voie_basc_TT_cim
ne 0
jmpc Fin_TTCim
 
	CAL LEC_BIN_BCD_TT_cim (VAL_BRUT := Poids_bin_BCD_TT_Cim,
			BINAIRE := Conf_TT_Cim_binaire,
			BCD := Conf_TT_Cim_BCD,
			Val_actif_1 := Conf_TT_Cim_val_actif_1,
			Signe_positif_1 := conf_TT_Cim_positif_a_1,
			Poids_min := Conf_TT_cim_seuil_mini,
			Poids_max := Conf_TT_cim_seuil_maxi,
			Filtre_Nb_Vals := 3,
			Filtre_coef := 100(*%*),
			Poids_simulateur := Poids_simu_TT_Cim,
			Simulation_en_cours := Mode_Simulation) 
	LD LEC_BIN_BCD_TT_cim.POIDS_filtre
	ST Poids_instantane_TT_Cim
	INT_TO_REAL
	ST Poids_real_TT_Cim
	LD LEC_BIN_BCD_TT_cim.DEF_depassement_MAX
	ST Surcharge_TT_cim
	LD LEC_BIN_BCD_TT_cim.DEF_depassement_MIN
	ST Detarage_TT_cim
Fin_TTCim:
</ILSource>
	</program>
	<program>
		<identProgram name="110_Lecture_Mesomatic" type="section" task="MAST"></identProgram>
		<STSource>(* 19/01/2009 *)
(* Décodage des données bascules Mesomatic sur réseau Profibus
   au travers de la passerelle HMS.*)

(* Initialisation des variables locales de la section *)
IF Lecture_Mesomatic_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Lecture_Mesomatic_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(*Les alarmes du type "Alarme_Mesomatic?" ne sont pas utilisées dans le process*)


(*********************** GRANULAT1 *****************************)
IF (Conf_techno_basc_TP_skip_gra1 = 4)
(*AND (voie_basc_granulat1 &lt;&gt; 0)*)
AND (NOT Simuler_dosage_Gra1) THEN
(* Bascule GRA1 Profibus Mesomatic *)
	LEC_MESOMATIC_Gra1 (DATA_IN := Data_Mesomatic1,
		Poids_simulateur := Poids_simu_Gra1,
		Simulation_en_cours:=Mode_Simulation,
		poids_min := Conf_granulat1_seuil_mini,
		poids_max := Conf_granulat1_seuil_maxi,
		Poids =&gt; Poids_real_gra1,
		Err =&gt; Alarme_Mesomatic1,
(*		DEF_depassement_MAX =&gt; Depas_poids_max_granul1 ,*)
		DEF_depassement_MIN =&gt; Alarme_detare_Gra1);
	(*Modif Roumanie : cas du skip peseur*)
	TON_ALARME_DEP_PDS_SKIP (IN := Cable_skip_mou,
		PT := t#2s);
	Alarme_poids_max_Gra1 :=LEC_MESOMATIC_Gra1.DEF_depassement_MAX 
		AND TON_ALARME_DEP_PDS_SKIP.Q;
	Poids_instantane_gra1:=REAL_TO_INT (Poids_real_gra1);
END_IF;

(*********************** CIMENT1 *****************************)
IF (Conf_techno_basc_cim1 = 4)
(*AND (voie_basc_cim1 &lt;&gt; 0)*)
AND (NOT Simuler_dosage_Cim1) THEN
(* Bascule CIM1 Profibus Mesomatic *)
	LEC_MESOMATIC_Cim1 (DATA_IN := Data_Mesomatic2,
		Poids_simulateur := Poids_simu_Cim1,
		Simulation_en_cours:=Mode_Simulation,
		poids_min := Conf_cim1_seuil_mini,
		poids_max := Conf_cim1_seuil_maxi,
		Poids =&gt; Poids_real_Cim1,
		Err =&gt; Alarme_Mesomatic2,
		DEF_depassement_MAX =&gt; Alarme_poids_max_Cim1,
		DEF_depassement_MIN =&gt; Alarme_detare_Cim1);
		Poids_instantane_Cim1 := REAL_TO_INT (Poids_real_Cim1);
END_IF;

(*********************** CIMENT2 *****************************)
IF (Conf_techno_basc_cim2 = 4)
(*AND (voie_basc_cim2 &lt;&gt; 0)*)
AND (NOT Simuler_dosage_Cim2) THEN
(* Bascule CIM2 Profibus Mesomatic *)
	LEC_MESOMATIC_Cim2 (DATA_IN := Data_Mesomatic5,
		Poids_simulateur := Poids_simu_Cim2,
		Simulation_en_cours:=Mode_Simulation,
		poids_min := Conf_cim2_seuil_mini,
		poids_max := Conf_cim2_seuil_maxi,
		Poids =&gt; Poids_real_Cim2,
		Err =&gt; Alarme_Mesomatic5,
		DEF_depassement_MAX =&gt; Alarme_poids_max_Cim2,
		DEF_depassement_MIN =&gt; Alarme_detare_Cim2);
	Poids_instantane_Cim2 := REAL_TO_INT (Poids_real_Cim2);
END_IF;

(*********************** EAU1 *****************************)
IF (Conf_techno_basc_eau1 = 4)
(*AND (voie_Basc_eau1 &lt;&gt; 0)*)
AND (NOT Simuler_dosage_Eau1) THEN
(* Bascule EAU1 Profibus Mesomatic *)
	LEC_MESOMATIC_Eau1 (DATA_IN := Data_Mesomatic3,
		Poids_simulateur := Poids_simu_Eau1,
		Simulation_en_cours:=Mode_Simulation,
		poids_min := Conf_eau1_seuil_mini,
		poids_max := Conf_eau1_seuil_maxi,
		Poids =&gt; Poids_real_Eau1,
		Err =&gt; Alarme_Mesomatic3,
		DEF_depassement_MAX =&gt; Alarme_poids_max_Eau1,
		DEF_depassement_MIN =&gt; Alarme_detare_Eau1);
	Poids_instantane_Eau1 := REAL_TO_INT (Poids_real_Eau1);
END_IF;

(*********************** EAU2 *****************************)
IF (Conf_techno_basc_eau2 = 4)
(*AND (voie_basc_eau2 &lt;&gt; 0)*)
AND (NOT Simuler_dosage_Eau2) THEN
(* Bascule EAU2 Profibus Mesomatic *)
	LEC_MESOMATIC_Eau2 (DATA_IN := Data_Mesomatic6,
		Poids_simulateur := Poids_simu_Eau2,
		Simulation_en_cours:=Mode_Simulation,
		poids_min := Conf_eau2_seuil_mini,
		poids_max := Conf_eau2_seuil_maxi,
		Poids =&gt; Poids_real_Eau2,
		Err =&gt; Alarme_Mesomatic6,
		DEF_depassement_MAX =&gt; Alarme_poids_max_Eau2,
		DEF_depassement_MIN =&gt; Alarme_detare_Eau2);
	Poids_instantane_Eau2 := REAL_TO_INT (Poids_real_Eau2);
END_IF;

(*********************** ADJUVANT *****************************)
IF (Conf_techno_basc_adj = 4)
(*AND (voie_basc_adjuvant &lt;&gt; 0)*)
AND (NOT Simuler_dosage_Adj_pese) THEN
(* Bascule ADJ Profibus Mesomatic *)
	LEC_MESOMATIC_Adj (DATA_IN := Data_Mesomatic4,
		Poids_simulateur := Poids_simu_Adj,
		Simulation_en_cours:=Mode_Simulation,
		poids_min := Conf_adjuvant_basc_seuil_mini,
		poids_max := Conf_adjuvant_basc_seuil_maxi,
		Poids =&gt; Poids_real_Adj,
		Err =&gt; Alarme_Mesomatic4,
		DEF_depassement_MAX =&gt; Alarme_poids_max_Adj,
		DEF_depassement_MIN =&gt; Alarme_detare_Adj);
	Poids_instantane_adj := REAL_TO_INT (Poids_real_Adj);
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="130_Lecture_Analogique" type="section" task="MAST"></identProgram>
		<STSource>(* 19/01/2009 *)
(* Décodage des données bascules Analogiques *)
(* Mis en service en Inde *)

(* Initialisation des variables locales de la section *)
IF Lecture_Analogique_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Lecture_Analogique_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(*********************** GRANULAT1 *****************************)
IF (Conf_techno_basc_TP_skip_gra1 = 3)
AND (voie_basc_Gra1 &lt;&gt; 0)
AND (NOT Simuler_dosage_Gra1) THEN
	(* Bascule GRA1 Analogique *)
	LEC_ANA_Gra1 (Mesure_Ana := AI_Value_Agg1,
	              Simulation_en_cours := Mode_Simulation,
	              W1 := W1_gra1,
	              W2 := W2_gra1,
	              P1 := P1_gra1,
	              P2 := P2_gra1,
	              detarage_min := Conf_granulat1_seuil_mini,
	              detarage_max := Conf_granulat1_seuil_maxi,
	              Poids_simulateur := Poids_simu_Gra1,
	              conf_correction := Conf_Agg1_Ana_Offset,
	              conf_pas := Conf_Agg1_Ana_Step,
	              Poids =&gt; Poids_real_Gra1,
	              Amperemetre =&gt; Amp_Gra1,
	              DEF_depassement_Max =&gt; Surcharge_Gra1,
	              DEF_depassement_Min =&gt; Detarage_Gra1);
	Poids_instantane_Gra1 := REAL_TO_INT (Poids_real_Gra1);
END_IF;

(*********************** GRANULAT2 *****************************)
IF (Conf_techno_basc_TP_skip_gra2 = 3)
AND (voie_basc_Gra2 &lt;&gt; 0)
AND (NOT Simuler_dosage_Gra2) THEN
	(* Bascule GRA2 Analogique *)
	LEC_ANA_Gra2 (Mesure_Ana := AI_Value_Agg2,
	              Simulation_en_cours := Mode_Simulation,
	              W1 := W1_gra2,
	              W2 := W2_gra2,
	              P1 := P1_gra2,
	              P2 := P2_gra2,
	              detarage_min := Conf_granulat2_seuil_mini,
	              detarage_max := Conf_granulat2_seuil_maxi,
	              Poids_simulateur := Poids_simu_Gra2,
	              conf_correction := Conf_Agg2_Ana_Offset,
	              conf_pas := Conf_Agg2_Ana_Step,
	              Poids =&gt; Poids_real_Gra2,
	              Amperemetre =&gt; Amp_Gra2,
	              DEF_depassement_Max =&gt; Surcharge_Gra2,
	              DEF_depassement_Min =&gt; Detarage_Gra2);
	Poids_instantane_Gra2 := REAL_TO_INT (Poids_real_Gra2);
END_IF;

(*********************** CIMENT1 *****************************)
IF (Conf_techno_basc_cim1 = 3)
AND (voie_basc_Cim1 &lt;&gt; 0)
AND (NOT Simuler_dosage_Cim1) THEN
	(* Bascule CIM1 Analogique *)
	LEC_ANA_Cim1 (Mesure_Ana := AI_Value_Cem1,
	              Simulation_en_cours := Mode_Simulation,
	              W1 := W1_cim1,
	              W2 := W2_cim1,
	              P1 := P1_cim1,
	              P2 := P2_cim1,
	              detarage_min := Conf_cim1_seuil_mini,
	              detarage_max := Conf_cim1_seuil_maxi,
	              Poids_simulateur := Poids_simu_Cim1,
	              conf_correction := Conf_Cem1_Ana_Offset,
	              conf_pas := Conf_Cem1_Ana_Step,
	              Poids =&gt; Poids_real_Cim1,
	              Amperemetre =&gt; Amp_Cim1,
	              DEF_depassement_Max =&gt; Surcharge_Cim1,
	              DEF_depassement_Min =&gt; Detarage_Cim1);
	Poids_instantane_Cim1 := REAL_TO_INT (Poids_real_Cim1);
END_IF;

(*********************** CIMENT2 *****************************)
IF (Conf_techno_basc_cim2 = 3)
AND (voie_basc_Cim2 &lt;&gt; 0)
AND (NOT Simuler_dosage_Cim2) THEN
	(* Bascule CIM2 Analogique *)
	LEC_ANA_Cim2 (Mesure_Ana := AI_Value_Cem2,
	              Simulation_en_cours := Mode_Simulation,
	              W1 := W1_cim2,
	              W2 := W2_cim2,
	              P1 := P1_cim2,
	              P2 := P2_cim2,
	              detarage_min := Conf_cim2_seuil_mini,
	              detarage_max := Conf_cim2_seuil_maxi,
	              Poids_simulateur := Poids_simu_Cim2,
	              conf_correction := Conf_Cem2_Ana_Offset,
	              conf_pas := Conf_Cem2_Ana_Step,
	              Poids =&gt; Poids_real_cim2,
	              Amperemetre =&gt; Amp_Cim2,
	              DEF_depassement_Max =&gt; Surcharge_Cim2,
	              DEF_depassement_Min =&gt; Detarage_Cim2);
	Poids_instantane_Cim2 := REAL_TO_INT (Poids_real_Cim2);
END_IF;

(*********************** EAU1 *****************************)
IF (Conf_techno_basc_eau1 = 3)
AND (voie_basc_Eau1 &lt;&gt; 0)
AND (NOT Simuler_dosage_Eau1) THEN
	(* Bascule EAU1 Analogique *)
	LEC_ANA_Eau1 (Mesure_Ana := AI_Value_Water1,
	              Simulation_en_cours := Mode_Simulation,
	              W1 := W1_eau1,
	              W2 := W2_eau1,
	              P1 := P1_eau1,
	              P2 := P2_eau1,
	              detarage_min := Conf_eau1_seuil_mini,
	              detarage_max := Conf_eau1_seuil_maxi,
	              Poids_simulateur := Poids_simu_Eau1,
	              conf_correction := Conf_Water1_Ana_Offset,
	              conf_pas := Conf_Wat1_Ana_Step,
	              Poids =&gt; Poids_real_Eau1,
	              Amperemetre =&gt; Amp_Eau1,
	              DEF_depassement_Max =&gt; Surcharge_Eau1,
	              DEF_depassement_Min =&gt; Detarage_Eau1);
	Poids_instantane_Eau1 := REAL_TO_INT (Poids_real_Eau1);
END_IF;

(*********************** EAU2 *****************************)
IF (Conf_techno_basc_eau2 = 3)
AND (voie_basc_Eau2 &lt;&gt; 0)
AND (NOT Simuler_dosage_Eau2) THEN
	(* Bascule EAU2 Analogique *)
	LEC_ANA_Eau2 (Mesure_Ana := AI_Value_Water2,
	              Simulation_en_cours := Mode_Simulation,
	              W1 := W1_eau2,
	              W2 := W2_eau2,
	              P1 := P1_eau2,
	              P2 := P2_eau2,
	              detarage_min := Conf_eau2_seuil_mini,
	              detarage_max := Conf_eau2_seuil_maxi,
	              Poids_simulateur := Poids_simu_Eau2,
	              conf_correction := Conf_Water2_Ana_Offset,
	              conf_pas := Conf_Wat2_Ana_Step,
	              Poids =&gt; Poids_real_Eau2,
	              Amperemetre =&gt; Amp_Eau2,
	              DEF_depassement_Max =&gt; Surcharge_Eau2,
	              DEF_depassement_Min =&gt; Detarage_Eau2);
	Poids_instantane_Eau2 := REAL_TO_INT (Poids_real_Eau2);
END_IF;

(*********************** ANHYDRITE ****************************)
IF (Conf_techno_basc_anh = 3)
AND (voie_basc_Anh &lt;&gt; 0)
AND (NOT Simuler_dosage_Anh) THEN
	(* Bascule ANH Analogique *)
	LEC_ANA_Anh (Mesure_Ana := AI_Anh_Value,
	             Simulation_en_cours := Mode_Simulation,
	             W1 := W1_anh,
	             W2 := W2_anh,
	             P1 := P1_anh,
	             P2 := P2_anh,
	             detarage_min := Conf_anhydrite_seuil_mini,
	             detarage_max := Conf_anhydrite_seuil_maxi,
	             Poids_simulateur := Poids_simu_Anh,
	             conf_correction := Conf_Anh_Ana_Offset,
	             conf_pas := Conf_Admix_Anh_Step,
	             Poids =&gt; Poids_real_anh,
	             Amperemetre =&gt; Amp_Anh,
	             DEF_depassement_Max =&gt; Surcharge_Anh,
	             DEF_depassement_Min =&gt; Detarage_Anh);
	Poids_instantane_Anh := REAL_TO_INT (Poids_real_Anh);
END_IF;

(********************* ADDITIONNELLE **************************)
IF (Conf_techno_basc_Add = 3)
AND (NOT Simuler_dosage_Add) THEN

	IF (voie_basc_Add_Weight1 &lt;&gt; 0) THEN
		(* Bascule ADD, Voie #1 Analogique *)
		LEC_ANA_Add_Weight1 (Mesure_Ana := AI_Add_Value[1],
		                     Simulation_en_cours := FALSE,
		                     W1 := W1_add_Weight1,
		                     W2 := W2_add_Weight1,
		                     P1 := P1_add_Weight1,
		                     P2 := P2_add_Weight1,
		                     detarage_min := Conf_basc_add_seuil_mini,
		                     detarage_max := Conf_basc_add_seuil_maxi,
		                     Poids_simulateur := Poids_simu_Add[1],
		                     conf_correction := Conf_Add_Ana_Offset,
		                     conf_pas := Conf_Admix_Add_Step,
		                     Poids =&gt; Pds_Add[1],
		                     Amperemetre =&gt; Amp_Add[1],
		                     DEF_depassement_Max =&gt; Surcharge_Add[1],
		                     DEF_depassement_Min =&gt; Detarage_Add[1]);
	ELSE
		Pds_Add[1] := 0.0;
		Amp_Add[1] := 0.0;
		Surcharge_Add[1] := FALSE;
		Detarage_Add[1] := FALSE;
	END_IF;
	IF (voie_basc_Add_Weight2 &lt;&gt; 0) THEN
		(* Bascule ADD, Voie #2 Analogique *)
		LEC_ANA_Add_Weight2 (Mesure_Ana := AI_Add_Value[2],
		                     Simulation_en_cours := Mode_Simulation,
		                     W1 := W1_add_Weight2,
		                     W2 := W2_add_Weight2,
		                     P1 := P1_add_Weight2,
		                     P2 := P2_add_Weight2,
		                     detarage_min := Conf_basc_add_seuil_mini,
		                     detarage_max := Conf_basc_add_seuil_maxi,
		                     Poids_simulateur := Poids_simu_Add[2],
		                     conf_correction := Conf_Add_Ana_Offset,
		                     conf_pas := Conf_Admix_Add_Step,
		                     Poids =&gt; Pds_Add[2],
		                     Amperemetre =&gt; Amp_Add[2],
		                     DEF_depassement_Max =&gt; Surcharge_Add[2],
		                     DEF_depassement_Min =&gt; Detarage_Add[2]);
	ELSE
		Pds_Add[2] := 0.0;
		Amp_Add[2] := 0.0;
		Surcharge_Add[2] := FALSE;
		Detarage_Add[2] := FALSE;
	END_IF;
	IF (voie_basc_Add_Weight3 &lt;&gt; 0) THEN
		(* Bascule ADD, Voie #3 Analogique *)
		LEC_ANA_Add_Weight3 (Mesure_Ana := AI_Add_Value[3],
		                     Simulation_en_cours := Mode_Simulation,
		                     W1 := W1_add_Weight3,
		                     W2 := W2_add_Weight3,
		                     P1 := P1_add_Weight3,
		                     P2 := P2_add_Weight3,
		                     detarage_min := Conf_basc_add_seuil_mini,
		                     detarage_max := Conf_basc_add_seuil_maxi,
		                     Poids_simulateur := Poids_simu_Add[3],
		                     conf_correction := Conf_Add_Ana_Offset,
		                     conf_pas := Conf_Admix_Add_Step,
		                     Poids =&gt; Pds_Add[3],
		                     Amperemetre =&gt; Amp_Add[3],
		                     DEF_depassement_Max =&gt; Surcharge_Add[3],
		                     DEF_depassement_Min =&gt; Detarage_Add[3]);
	ELSE
		Pds_Add[3] := 0.0;
		Amp_Add[3] := 0.0;
		Surcharge_Add[3] := FALSE;
		Detarage_Add[3] := FALSE;
	END_IF;
	IF (voie_basc_Add_Weight4 &lt;&gt; 0) THEN
		(* Bascule ADD, Voie #4 Analogique *)
		LEC_ANA_Add_Weight4 (Mesure_Ana := AI_Add_Value[4],
		                     Simulation_en_cours := Mode_Simulation,
		                     W1 := W1_add_Weight4,
		                     W2 := W2_add_Weight4,
		                     P1 := P1_add_Weight4,
		                     P2 := P2_add_Weight4,
		                     detarage_min := Conf_basc_add_seuil_mini,
		                     detarage_max := Conf_basc_add_seuil_maxi,
		                     Poids_simulateur := Poids_simu_Add[4],
		                     conf_correction := Conf_Add_Ana_Offset,
		                     conf_pas := Conf_Admix_Add_Step,
		                     Poids =&gt; Pds_Add[4],
		                     Amperemetre =&gt; Amp_Add[4],
		                     DEF_depassement_Max =&gt; Surcharge_Add[4],
		                     DEF_depassement_Min =&gt; Detarage_Add[4]);
	ELSE
		Pds_Add[4] := 0.0;
		Amp_Add[4] := 0.0;
		Surcharge_Add[4] := FALSE;
		Detarage_Add[4] := FALSE;
	END_IF;
	(* Agrégation des 4 voies *)
	IF (conf_basc_add_pesage_individuel) THEN
		Poids_real_Add := Pds_Add[1] + Pds_Add[2] + Pds_Add[3] + Pds_Add[4];
	ELSE
		Poids_real_Add := Pds_Add[1];
	END_IF;
	Poids_instantane_Add := REAL_TO_DINT(Poids_real_Add);
END_IF;

(*********************** TT_GRANULAT ****************************)
IF (Conf_techno_TT_gra = 3)
AND (voie_basc_TT_gra &lt;&gt; 0) THEN
	(* TT GRA Analogique *)
	LEC_ANA_TT_gra (Mesure_Ana := AI_Value_Agg_WH,
	                Simulation_en_cours := Mode_Simulation,
	                W1 := W1_TT_gra,
	                W2 := W2_TT_gra,
	                P1 := P1_TT_gra,
	                P2 := P2_TT_gra,
	                detarage_min := Conf_TT_granulat_seuil_mini,
	                detarage_max := Conf_TT_granulat_seuil_maxi,
	                Poids_simulateur := Poids_simu_TT_Gra,
	                conf_correction := Conf_Agg_WH_Ana_Offset,
	                conf_pas := Conf_Agg_WH_Ana_Step,
	                Poids =&gt; Poids_real_TT_Gra,
	                Amperemetre =&gt; Amp_TT_Gra,
	                DEF_depassement_Max =&gt; Surcharge_TT_granulat,
	                DEF_depassement_Min =&gt; Detarage_TT_granulat);
	Poids_instantane_TT_Gra := REAL_TO_INT (Poids_real_TT_Gra);
END_IF;

(*********************** TT_CIMENT ****************************)
IF (Conf_techno_TT_cim = 3)
AND (voie_basc_TT_cim &lt;&gt; 0) THEN
	(* TT CIM Analogique *)
	LEC_ANA_TT_cim (Mesure_Ana := AI_Value_Cem_WH,
	                Simulation_en_cours := Mode_Simulation,
	                W1 := 0.0,
	                W2 := 0.0,
	                P1 := 0,
	                P2 := 0,
	                detarage_min := Conf_TT_cim_seuil_mini,
	                detarage_max := Conf_TT_cim_seuil_maxi,
	                Poids_simulateur := Poids_simu_TT_Cim,
	                conf_correction := Conf_Cem_WH_Ana_Offset,
	                conf_pas := Conf_Cem_WH_Ana_Step,
	                Poids =&gt; Poids_real_TT_Cim,
	                Amperemetre =&gt; Amp_TT_Cim,
	                DEF_depassement_Max =&gt; Surcharge_TT_cim,
	                DEF_depassement_Min =&gt; Detarage_TT_cim);
	Poids_instantane_TT_Cim := REAL_TO_INT (Poids_real_TT_Cim);
END_IF;



(*********************** ADJUVANT *****************************)
IF (Conf_techno_basc_adj = 3)
AND (voie_basc_Adj_Weight1 &lt;&gt; 0)
AND (NOT Simuler_dosage_Adj_pese) THEN
	(* Bascule ADJ Analogique *)

	(*-------------------- MISE EN FORME DONNEES BASCULE  ---------------------*)
	(*les statuts*)
	AI_Admix_Array_Status[1] := AI_Admix_Status_1;
	AI_Admix_Array_Status[2] := AI_Admix_Status_2;
	AI_Admix_Array_Status[3] := AI_Admix_Status_3;
	AI_Admix_Array_Status[4] := AI_Admix_Status_4;
	AI_Admix_Array_Status[5] := AI_Admix_Status_5;

	(*les poids*)
	AI_Admix_Array_Value[1] := AI_Adj_Weight_1_Value;
	AI_Admix_Array_Value[2] := AI_Adj_Weight_2_Value;
	AI_Admix_Array_Value[3] := AI_Adj_Weight_3_Value;
	AI_Admix_Array_Value[4] := AI_Adj_Weight_4_Value;
	AI_Admix_Array_Value[5] := AI_Adj_Weight_5_Value;

	(* Les corrections *)
	(* Modif MD 16/01/09 P700 : supression du parapemtre d'ofset 
	   "correction" sur chaque bascule *)

	(* Calibration bascule 1*)
	AI_Admix_Array_W1[1] := W1_adj_Weight1;
	AI_Admix_Array_W2[1] := W2_adj_Weight1;
	AI_Admix_Array_P1[1] := P1_adj_Weight1;
	AI_Admix_Array_P2[1] := P2_adj_Weight1;
	(* Calibration bascule 2*)
	AI_Admix_Array_W1[2] := W1_adj_Weight2;
	AI_Admix_Array_W2[2] := W2_adj_Weight2;
	AI_Admix_Array_P1[2] := P1_adj_Weight2;
	AI_Admix_Array_P2[2] := P2_adj_Weight2;
	(* Calibration bascule 3*)
	AI_Admix_Array_W1[3] := W1_adj_Weight3;
	AI_Admix_Array_W2[3] := W2_adj_Weight3;
	AI_Admix_Array_P1[3] := P1_adj_Weight3;
	AI_Admix_Array_P2[3] := P2_adj_Weight3;
	(* Calibration bascule 4*)
	AI_Admix_Array_W1[4] := W1_adj_Weight4;
	AI_Admix_Array_W2[4] := W2_adj_Weight4;
	AI_Admix_Array_P1[4] := P1_adj_Weight4;
	AI_Admix_Array_P2[4] := P2_adj_Weight4;
	(* Calibration bascule 5*)
	AI_Admix_Array_W1[5] := W1_adj_Weight5;
	AI_Admix_Array_W2[5] := W2_adj_Weight5;
	AI_Admix_Array_P1[5] := P1_adj_Weight5;
	AI_Admix_Array_P2[5] := P2_adj_Weight5;

	(*--------------------  FIN MISE EN FORME DONNEES BASCULE  ---------------------*)

	LEC_ANA_Adj (Tab_Mesure := AI_Admix_Array_Value,
		W1 := AI_Admix_Array_W1,
		W2 := AI_Admix_Array_W2,
		Simulation_en_cours := Mode_Simulation,
		Detarage_min := Conf_adjuvant_basc_seuil_mini,
		Tab_Statut := AI_Admix_Array_Status,
		Detarage_max := Conf_adjuvant_basc_seuil_maxi,
		Poids_simulateur := Poids_simu_Adj,
		conf_correction := Conf_Admix_Ana_Offset,
		P1 := AI_Admix_Array_P1,
		P2 := AI_Admix_Array_P2,
		Poids_real =&gt; Poids_real_Adj,
		Tab_Ampermetre =&gt; Amp_Adj,
		DEF_depassement_Max =&gt; Surcharge_Adj,
		DEF_depassement_Min =&gt; Detarage_Adj,
		BCMix_Pds_ADJ =&gt; BCMix_Pds_Adj);
	Poids_instantane_Adj := REAL_TO_INT (Poids_real_Adj);
END_IF;

(******************************************************************************
				Lecture Humidite
******************************************************************************)

Lec_ANA_Humidite (Mesure_Ana := AI_Value_Humidity,
                  Val1 := Val1_Humi_gra,
                  Val2 := Val2_Humi_gra,
                  P1 := P1_Humi_gra,
                  P2 := P2_Humi_gra,
                  Humidite =&gt; Humidite_Instantanee_Gra);
</STSource>
	</program>
	<program>
		<identProgram name="140_Activ_sections_Divers" type="section" task="MAST"></identProgram>
		<ILSource>
(* Initialisation des variables locales de la section *)
LD Activ_sections_Divers_DEM_INIT
ST Activ_sections_Div_INIT_EN_COURS
JMPCN Init_Activ_sections_Divers__Fin
Init_Activ_sections_Divers:

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	LD TRUE
	R Activ_sections_Divers_DEM_INIT (* L'init de la section a bien été prise en compte. *)
Init_Activ_sections_Divers__Fin:

  
(* Arrêt production *)
	(* Etat intermédiaire ajouté par R.C. 15/01/2013 P859 *)
LD Info_arret_cycle
OR Mode_AU (* Modif R.C. 10/02/2010 *)
OR Alarme_Controle_Tension
ST Arret_prod

(* Arrêt de production ou Manuel logiciel *)
LD Manu_logiciel
OR Arret_prod
ST Arret_prod_ou_Manu_logiciel



(* Activation de la gestion CCR (cartes de comptage rapide) *)
LD Conf_ppe_nb_ppes
GT 0
ST Gestion_CCRs_ACTIVE
  
(* Activation du suivi de consommation (=cumuls) pour les produits pesés *)
LD bit_presence_config  
ST Cumul_pesee_ACTIVE 

(* Activation du rafraichissement des STORs *)
LD TRUE 
ST Restitution_sorties_ACTIVE

(* Activation de l'acquisition des poids et valeurs numériques *)
(* Ajout R.C. 11/01/2010 *)
(* Toutes les sections de lecture sont activées par défaut *)
(* (Elles pourront être désactivées globalement en cas de passage en *)
(*  mode simulation, ou être désactivées/activées individuellement *)
(*  au cas par cas). *)
LD TRUE
ST Lecture_Arpege_TCP_ACTIVE (* Bascules Arpege TCP*)
ST Lecture_Mesomatic_ACTIVE (* Bascule Mesomatic *)
ST Lecture_Bin_BCD_ACTIVE (* Bascules sur carte TOR *)
ST Lecture_Analogique_ACTIVE (* Bascules sur carte ANALOGIQUE *)

(* Activation du pesage automatique *)
LDN Arret_prod_ou_Manu_logiciel
(*AND Conf_granulat1_pres_balance*)(* Info inexistante *)
AND (Conf_granulat1_nb_tremies
	GT 0
)
ST Dosage_Gra1_ACTIVE

LDN Arret_prod_ou_Manu_logiciel
AND Conf_granulat2_pres_balance
AND (Conf_granulat2_nb_tremies
	GT 0
)
ST Dosage_Gra2_ACTIVE

LDN Arret_prod_ou_Manu_logiciel
(*AND (Conf_cim1_pres_balance
	OR Conf_cim2_pres_balance
)*)(* Infos inexistantes *)
AND (Conf_cim1_nb_silos
	ADD Conf_cim2_nb_silos
	GT 0
)
ST Dosage_Cim_ACTIVE (* On ne fait pas le détail entre Cim1 et Cim2 *)

LDN Arret_prod_ou_Manu_logiciel
(*
(*AND (Conf_eau1_pres_balance
	OR Conf_eau2_pres_balance
)*)(* Infos inexistantes *)
AND (Conf_eau1_nb_cuves
	ADD Conf_eau2_nb_cuves
	GT 0
)
*)(* On désactive les conditions, car parfois on utilise la section "Dosage eau" même *)
(* lorsqu'il n'y a pas de ligne de dosage pour l'eau (Cas de la configuration dry "D1"). *)
ST Dosage_Eau_ACTIVE (* On ne fait pas le détail entre Eau1 et Eau2 *)

LDN Arret_prod_ou_Manu_logiciel
AND Conf_adjuvant_basc_pres_bascule
AND (Conf_adj1_nb_cuves
	GT 0
)
ST Dosage_Adj_ACTIVE

LDN Arret_prod_ou_Manu_logiciel
AND Conf_anhydrite_pres_bascule
AND (Conf_anhydrite_nb_silos
	ADD Conf_anhydrite_nb_tremies
	GT 0
)
ST Dosage_Anh_ACTIVE

LD Conf_anhydrite_pres_bascule
ST Sorties_Anh_ACTIVE (* Il s'agit de la seule section de sortie pesage soumise à une condition d'activation. Note R.C. 09/09/2011 : Je ne sais pas pourquoi. *)

LDN Arret_prod_ou_Manu_logiciel
AND conf_basc_add_pres_bascule
AND (Conf_basc_add_nb_organes
	GT 0
)
ST Dosage_Add_ACTIVE

LDN Arret_prod_ou_Manu_logiciel
AND (Conf_ppe_nb_ppes
	GT 0
)
ST Dosage_Ppe_ACTIVE

(* Activation du stockage intermediaire *)
LDN Arret_prod_ou_Manu_logiciel
AND (Conf_skip_transfert
	OR Conf_TT_granulat
)
ST Stockage_inter_Gra_ACTIVE

LDN Arret_prod_ou_Manu_logiciel
AND (Conf_bonbonne_cim
	OR Conf_TT_Cim
)
ST Stockage_inter_Cim_ACTIVE

LDN Arret_prod_ou_Manu_logiciel
AND (Conf_tampons_ppe_presence[1]
	OR Conf_tampons_ppe_presence[2]
	OR Conf_tampons_ppe_presence[3]
	OR Conf_tampons_ppe_presence[4]
	OR Conf_tampons_ppe_presence[5]
	OR Conf_tampons_ppe_presence[6]
	OR Conf_tampons_ppe_presence[7]
	OR Conf_tampons_ppe_presence[8]
	OR Conf_tampons_ppe_presence[9]
	OR Conf_tampons_ppe_presence[10]
	OR Conf_tampons_ppe_presence[11]
	OR Conf_tampons_ppe_presence[12]
	OR Conf_tampons_ppe_presence[13]
	OR Conf_tampons_ppe_presence[14]
	OR Conf_tampons_ppe_presence[15]
	OR Conf_tampons_ppe_presence[16]
	OR Conf_tampons_ppe_presence[17]
	OR Conf_tampons_ppe_presence[18]
	OR Conf_tampons_ppe_presence[19]
	OR Conf_tampons_ppe_presence[20]
)
ST Stockage_inter_Ppe_ACTIVE

LDN Arret_prod_ou_Manu_logiciel
AND Conf_bonbonne_colorant
ST Stockage_inter_Color_ACTIVE

(* Activation des sections malaxeur *)
LDN Arret_prod_ou_Manu_logiciel
AND Conf_malaxeur1_present
ST Malaxeur1_ACTIVE

LDN Arret_prod_ou_Manu_logiciel
AND Conf_malaxeur2_present
ST Malaxeur2_ACTIVE

(* Activation de la gestion des gâchées *)
LD Arret_prod_ou_Manu_logiciel
STN Gestion_Gachees_ACTIVE
(* Activation de la gestion d'introduction/vidange *)
LD Arret_prod_ou_Manu_logiciel
STN Pret_pour_Intro_ACTIVE
STN Intro_Gra_ACTIVE
STN Intro_autres_produits_ACTIVE
  
(* Activation du contrôle des discordances *)
LDN Arret_prod (* Modif R.C. 15/01/2013 P859 *)
AND (Info_Plant_In_Auto 
	OR Conf_Manu_Station_Discordance
)
ST Discordances_ACTIVE





(* Centrale totalement en auto *)
LD Info_Plant_In_Auto
ANDN Manu_logiciel
ST auto_pupitre_et_logiciel
 

(* Centrale en auto, Sans arrêt de production *)
LD Info_Plant_In_Auto
ANDN Arret_prod
ST Auto_pupitre_sans_Arret_prod

  
 (*top seconde*)
 CAL top_seconde (INTERVAL := t#1s0ms)
 LD top_seconde.Q
 ST top_sec
  
 (*top fuite*)
 CAL top_fuite (INTERVAL := Conf_ppe_duree_base_temps_fuite)
 LD top_fuite.Q
 ST top_detection_fuite
  
 (*top 100 ms*)
 CAL top_100ms (INTERVAL := t#100ms)
 LD top_100ms.Q
 ST top_100_ms
  
 (*Détection de l'envoi de la configuration par BC-Mix*)
 (* Ajout R.C. 29/07/2011 P852 *)
 LD Conf_mise_a_jour_configuration
 ST Pulse_conf_mise_a_jour_config (* &lt;- Bit à utiliser pour le DEBUG pour que l'API participe à l'écriture de la configuration. (Utile en debug quand la version de BC-Mix n'écrit pas encore les informations de conf nécessaires à une évolution) *)
 LD Pulse_conf_mise_a_jour_config			(* Il sera à 1 pendant un cycle, avant le cycle où "bit_envoi_config" sera mis à 1. *)
 FE (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
 ST bit_envoi_config (* &lt;- Bit à utiliser par l'API pour savoir que la configuration vient de changer. Il est à 1 sur un cycle API complet. *)
 LD TRUE
 R Conf_mise_a_jour_configuration (* Ce bit est mis à 1 par BC-Mix, et mis à 0 directement par l'API. *)

 (*Mémorisation de la fin du transfert en cas de fin de cycle pendant un arrêt cycle*)
 CAL fm_transfert_termine (CLK := Info_transfert_cim_termine)
  
 LD fm_transfert_termine.Q
 S memo_transfert_termine
 R Cde_autorisation_trans_cim
	  
 (*Bit pour l'introduction des granulat lorsque la centrale contient un tapis de transfert et un skip de transfert*)
 ld Conf_tapis_transfert
 and Conf_skip_transfert
 st Conf_avec_tapis_et_skip
  
 (*Gestion de la boite noire*)
 
(*Dévalidation de la boite noire après un dosage afin de laisser à l'application
le temps de lire la bascule pour la consommation des stocks*)
(*La boite noire est également dévalidée lorsque 2 produits différents sont dosés en même temps*)
ld BP_dosage_Gra_1
or BP_dosage_Gra_2
or BP_dosage_Gra_3
or BP_dosage_Gra_4
or BP_dosage_Gra_5
or BP_dosage_Gra_6
or BP_dosage_Gra_7
or BP_dosage_Gra_8
or BP_dosage_Gra_9
or BP_dosage_Gra_10
or BP_dosage_Gra_11
or BP_dosage_Gra_12
or BP_dosage_Gra_13
or BP_dosage_Gra_14
st Dosage_manu_pupitre_Gra
 
ld BP_dosage_Cim_1
or BP_dosage_Cim_2
or BP_dosage_Cim_3
or BP_dosage_Cim_4
or BP_dosage_Cim_5
or BP_dosage_Cim_6
st Dosage_manu_pupitre_Cim
 
ld BP_dosage_Eau_1
or BP_dosage_Eau_2
or BP_dosage_Eau_3
or BP_dosage_Eau_4
st Dosage_manu_pupitre_Eau
 
ld BP_dosage_Adj_1
or BP_dosage_Adj_2
or BP_dosage_Adj_3
or BP_dosage_Adj_4
or BP_dosage_Adj_5
or BP_dosage_Adj_6
or BP_dosage_Adj_7
or BP_dosage_Adj_8
or BP_dosage_Adj_9
or BP_dosage_Adj_10
or BP_dosage_Adj_11
or BP_dosage_Adj_12
or BP_dosage_Adj_13
or BP_dosage_Adj_14
or BP_dosage_Adj_15
or BP_dosage_Adj_16
or BP_dosage_Adj_17
or BP_dosage_Adj_18
or BP_dosage_Adj_19
or BP_dosage_Adj_20
st Dosage_manu_pupitre_Adj

LD BP_dosage_Anh
ST Dosage_manu_pupitre_Anh
 
LD BP_dosage_Add_1
OR BP_dosage_Add_2
OR BP_dosage_Add_3
OR BP_dosage_Add_4
ST Dosage_manu_pupitre_Add
 
CAL FD_manu_2_Gra (CLK := Dosage_manu_pupitre_Gra)
CAL FD_manu_2_Cim (CLK := Dosage_manu_pupitre_Cim)
CAL FD_manu_2_Eau (CLK := Dosage_manu_pupitre_Eau)
CAL FD_manu_2_Adj (CLK := Dosage_manu_pupitre_Adj)
CAL FD_manu_2_Anh (CLK := Dosage_manu_pupitre_Anh)
CAL FD_manu_2_Add (CLK := Dosage_manu_pupitre_Add)
 
LD FD_manu_2_Gra.Q
or FD_manu_2_Cim.Q
or FD_manu_2_Eau.Q
or FD_manu_2_Adj.Q
or FD_manu_2_Anh.Q
OR FD_manu_2_Add.Q
st TP_boite_noire.IN
 
CAL TP_boite_noire (PT := Conf_tps_deval_boite_noire)
ld  TP_boite_noire.Q
st deval_bn

ldn Info_Plant_In_Auto
andn deval_bn
andn	( true
	  and	( Dosage_manu_pupitre_Gra
		  and 	(	Dosage_manu_pupitre_Cim
		  		or Dosage_manu_pupitre_Eau
				or Dosage_manu_pupitre_Adj
				OR Dosage_manu_pupitre_Anh
				OR Dosage_manu_pupitre_Add
			)
		)
	  or	( Dosage_manu_pupitre_Cim
		  and	( Dosage_manu_pupitre_Eau
			  or Dosage_manu_pupitre_Adj
			  OR Dosage_manu_pupitre_Anh
			  OR Dosage_manu_pupitre_Add
			)
		)
	  or	( Dosage_manu_pupitre_Eau
		  and	( Dosage_manu_pupitre_Adj
			  OR Dosage_manu_pupitre_Anh
			  OR Dosage_manu_pupitre_Add
			)
		)
	  or	( Dosage_manu_pupitre_Adj
		  and	( Dosage_manu_pupitre_Anh
			  OR Dosage_manu_pupitre_Add
			)
		)
	)
or Info_Plant_In_Auto
st Cde_validation_boite_noire
  
 (* SKIP : changement de section (de etat_equipement vers ici) le 07/06/2004 site : Lavor.*)
 (* la section etat_equipement est disable en manu logiciel dc pas de desente skip *)
  
 (*Mémorisation du fin de course skip bas pour ne pas
 commander la descente si celui-ci est passer en dessous
 du fin de course a cause d'un mauvais fonctionnement du frein*)
  
 ld Info_skip_bas
 andn Cde_montee_skip
 andn Info_skip_en_montee
 S memo_skip_bas
  
 (* or Info_skip_en_descente *) (* Ligne retiree R.C. 11/09/2003 : mettait *)
 (* memo_skip_bas à 0 trop vite et donc la tempo câble mou ne *)
 (* se terminait jamais : Réf FAE LBS 321 *)
  
 ld Cde_montee_skip
 or Info_skip_en_montee
 or Info_skip_attente
 or Info_skip_haut
 r memo_skip_bas
  
 (* Mémorisation du fin de course skip haut pour ne plus
 re-commander la montée en cas de perte soudaine de l'info
 "skip haut" -- pour la sécurité des techniciens de
 maintenance si l'info du capteur est perdue --
 Modif R.C. 26/05/2003 suite à FAE 164 *)
  
 LD Info_skip_haut
 S memo_skip_haut
  
 LD Cde_descente_skip
 OR Info_skip_bas
 OR (Info_skip_attente
	AND conf_skip_detect_pos_inter_haut (* Correction R.C. 16/10/2012 #0001841 : Cette variable est reçue à FALSE lorsque les capteurs "haut" et "attente" peuvent être vus actifs simultanément *)
 	)
 R memo_skip_haut
  
  
 (*Cable skip peseur mou*)
(* 20/01/2009 Cable_skip_mou :
   Est a 1 sur Memo Bas Temporisé OU sur Info Cable Mou temporisé.
   Les 2 temporisations sont différentes*)

ld Conf_granulat1_skip
and memo_skip_bas
st TON_skip_mou.IN
CAL TON_skip_mou (PT := Conf_skip_TON_ETOR_cable_mou)
  
 ld TON_skip_mou.Q
or Info_Cable_skip_mou (*modif roumaine*)
 st Cable_skip_mou


(* Skip peseur arrêté et stabilisé *)
(* Ajout R.C. 29/10/2012 P858 #0001851 *)

LDN cde_descente_skip 
ANDN cde_montee_skip
ST TON_skip_peseur_stabilise.IN

LD Conf_skip_tps_reponse
ADD Conf_granulat1_tps_max_stab
ST TON_skip_peseur_stabilise.PT
CAL TON_skip_peseur_stabilise

LD TON_skip_peseur_stabilise.Q
AND Conf_granulat1_skip
ST Skip_peseur_stabilise


(* Skip Grande vitesse *)
(* Modif Jérémie BOUVET "Inde" 15/02/2010 *)
(* Refonte R.C. 18/01/2011 P803 *)

	CAL FM_Info_skip_grde_vit_haut (CLK := Info_skip_grde_vit_haut)
	CAL FM_Info_skip_grde_vit_bas (CLK := Info_skip_grde_vit_bas)

	(* Zone grande vitesse *)
	(* Le skip entre en zone Grande vitesse : *)
	LD FALSE
	OR (FM_Info_skip_grde_vit_bas.Q (* Utilisation d'un front par sécurité en cas de défaillance du capteur (s'il reste continuellement à ON) *)
		AND Info_skip_en_montee
	)
	OR (FM_Info_skip_grde_vit_haut.Q (* Utilisation d'un front par sécurité en cas de défaillance du capteur (s'il reste continuellement à ON) *)
		AND Info_skip_en_descente
	)
	S Zone_skip_Gde_vitesse

	(* Le skip n'est plus dans la zone Grande vitesse : *)
	LD Info_skip_tres_haut
	OR Info_skip_haut
	OR (Info_skip_attente
		AND Conf_skip_pres_cap_grde_vit_haut (* Il ne faut pas prendre en compte *)
			(* le capteur d'attente si le capteur GV haut n'est pas présent, *)
			(* car le capteur d'attente substitue le capteur GV haut dans ce cas. *)
	)
	OR (Info_skip_grde_vit_haut
		AND Info_skip_en_montee
	)
	OR (Info_skip_grde_vit_bas
		AND Info_skip_en_descente
	)
	OR Info_skip_bas
	OR Info_skip_tres_bas
	R Zone_skip_Gde_vitesse (* RESET prioritaire sur le SET par sécurité *)

	(* Grande vitesse permise *)
	LD Info_Plant_In_Auto
	ANDN Arret_prod_ou_Manu_logiciel
	ANDN Init_API_en_cours (* On peut utiliser "Init_API_en_cours" car cette section n'est pas soumise à une condition d'activation *)
		(* On se permet de ne pas utiliser "Activ_sections_Div_INIT_EN_COURS", car il ne s'agit pas d'une *)
		(* initialisation d'une variable locale à la section, mais à tout le programme (cas exceptionnel). *)
	AND (Conf_granulat1_skip
		OR Conf_skip_transfert
	)
	ANDN Defaut_skip (* défaut entrainant l'arret immédiat du skip *)
	ANDN skip_defaut_ext_capt_grde_vit (* Ce défaut doit arrêter la GV, sans bloquer le skip *)
(*
	AND (Info_skip_en_descente
		OR Info_skip_en_montee
	) (* On n'autorise plus la GV si le skip s'est immobilisé *)
*)(* Note R.C. 19/01/2011 : Pas implémenté car ne devrait pas être utile *)
	ST Skip_gde_vitesse_permise (* Les conditions sont réunies pour permettre la GV *)
	NOT
	R Verif_temps_skip_gv_Active (* Désactiver la vérification du temps pour l'alarme *)
		(* "temps grande vitesse" lorsque la grande vitesse n'est pas permise. *)
		(* Note : On fait la désactivation ici et non pas en section "550_Discordances" *)
		(* car cette section est soumise à certaines conditions d'activation qui *)
		(* peuvent être génantes. *)
		(* Par exemple : Lorsqu'on passe en manuel logiciel, on doit désactiver la *)
		(* vérification du temps, et cela n'est pas possible dans la section *)
		(* "550_Discordances" qui est désactivée. *)

	(* Sortie Grande Vitesse *)
	CAL FM_Zone_skip_Gde_vitesse (CLK := Zone_skip_Gde_vitesse)
	LD FM_Zone_skip_Gde_vitesse.Q
	AND (FALSE
		OR (Conf_skip_gde_vit_montee (* GV activée en montée *)
			AND Info_skip_en_montee
			AND Cde_montee_skip (* Utilisé par sécurité, si Info_skip_en_montee est mal câblé *)
		)
		OR (Conf_skip_gde_vit_desc (* GV activée en descente *)
			AND Info_skip_en_descente
			AND Cde_descente_skip (* Utilisé par sécurité, si Info_skip_en_descente est mal câblé *)
		)
	)
	AND Skip_gde_vitesse_permise
	S Cde_skip_gde_vitesse (* Activation de la grande vitesse si les conditions *)
		(* sont réunies au moment où le skip entre dans la zone GV. *)
	LDN Zone_skip_Gde_vitesse
	ORN Skip_gde_vitesse_permise
	R Cde_skip_gde_vitesse (* Désactivation de la grande vitesse *)




(* Activation des sections de communication *)
(* Ajout R.C. 01/07/2010 suite à un bug constaté *)
(* à répétition sur site lors de l'envoi de la config *)

LD Bit_presence_config
ANDN Init_API_en_cours (* On peut utiliser "Init_API_en_cours" car cette section n'est pas soumise à une condition d'activation *)
	(* On se permet de ne pas utiliser "Activ_sections_Div_INIT_EN_COURS", car il ne s'agit pas d'une *)
	(* initialisation d'une variable locale à la section, mais à tout le programme (cas exceptionnel). *)
ST Prerequis_comm

(* HMS Profibus *)
LD Conf_Comm_HMS_Profibus_Active
ST Gestion_HMS_Profibus_ACTIVE

LD Conf_Comm_HMS_Profibus_Active
AND Prerequis_comm
AND (Conf_HMS_Profibus_IP1
	ADD Conf_HMS_Profibus_IP2
	ADD Conf_HMS_Profibus_IP3
	ADD Conf_HMS_Profibus_IP4
	GT 0 (* L'adresse IP doit être différente de la valeur initialisée par défaut "0.0.0.0" *)
)
ST Comm_HMS_possible

CAL TON_Comm_HMS_possible(IN := Comm_HMS_possible, PT := t#1s)
LD TON_Comm_HMS_possible.Q
ST Com_ETH_HMS_Profibus_ACTIVE

(* Arpege TCP *)
LD Conf_Comm_Arpege_TCP_Active
AND Prerequis_comm
AND (Conf_Arpege_IP1
	ADD Conf_Arpege_IP2
	ADD Conf_Arpege_IP3
	ADD Conf_Arpege_IP4
	GT 0 (* L'adresse IP doit être différente de la valeur initialisée par défaut "0.0.0.0" *)
)
ST Comm_Arpege_possible

CAL TON_Comm_Arpege_possible(IN := Comm_Arpege_possible, PT := t#1s)
LD TON_Comm_Arpege_possible.Q
ST Com_ETH_Arpege_TCP_ACTIVE



(* Gestion de la correction gâchée sur gâchée *)
(* Ajout R.C. 04/10/2010 *)
LD Conf_CGG_activee
ANDN Init_API_en_cours (* désactiver la CGG en cas d'init *)
	(* On peut utiliser "Init_API_en_cours" car cette section n'est pas soumise à une condition d'activation *)
	(* On se permet de ne pas utiliser "Activ_sections_Div_INIT_EN_COURS", car il ne s'agit pas d'une *)
	(* initialisation d'une variable locale à la section, mais à tout le programme (cas exceptionnel). *)
AND Info_Plant_In_Auto (* désactiver la CGG en manuel pupitre *)
ST CGG_activee
JMPC Reset_cumuls_CGG__fin
Reset_cumuls_CGG:
(* Les cumuls sont mis à zéro ici, mais cela n'est pas absolument indispensable *)
LD 0
ST ma0
Reset_cumuls_CGG_gra:
	LD ma0
	ADD 1
	ST ma0
	LD 0
	ST cumuls_pesees.Cumuls_pesees_Gra[ma0].cumul_consignes_sans_correct_g_g
	ST cumuls_pesees.Cumuls_pesees_Gra[ma0].cumul_poids_reellement_peses
	LD ma0
	LT 14
	JMPC Reset_cumuls_CGG_gra
LD 0
ST ma0
Reset_cumuls_CGG_cim:
	LD ma0
	ADD 1
	ST ma0
	LD 0
	ST cumuls_pesees.Cumuls_pesees_Cim[ma0].cumul_consignes_sans_correct_g_g
	ST cumuls_pesees.Cumuls_pesees_Cim[ma0].cumul_poids_reellement_peses
	LD ma0
	LT 7
	JMPC Reset_cumuls_CGG_cim
LD 0
ST ma0
Reset_cumuls_CGG_eau:
	LD ma0
	ADD 1
	ST ma0
	LD 0
	ST cumuls_pesees.Cumuls_pesees_Eau[ma0].cumul_consignes_sans_correct_g_g
	ST cumuls_pesees.Cumuls_pesees_Eau[ma0].cumul_poids_reellement_peses
	LD ma0
	LT 4
	JMPC Reset_cumuls_CGG_eau
LD 0
ST ma0
Reset_cumuls_CGG_adj:
	LD ma0
	ADD 1
	ST ma0
	LD 0
	ST cumuls_pesees.Cumuls_pesees_Adj[ma0].cumul_consignes_sans_correct_g_g
	ST cumuls_pesees.Cumuls_pesees_Adj[ma0].cumul_poids_reellement_peses
	LD ma0
	LT 20
	JMPC Reset_cumuls_CGG_adj
Reset_cumuls_CGG_anh:
	LD 0
	ST cumuls_pesees.Cumuls_pesees_Anh[1].cumul_consignes_sans_correct_g_g
	ST cumuls_pesees.Cumuls_pesees_Anh[1].cumul_poids_reellement_peses
LD 0
ST ma0
Reset_cumuls_CGG_add:
	LD ma0
	ADD 1
	ST ma0
	LD 0
	ST cumuls_pesees.Cumuls_pesees_Add[ma0].cumul_consignes_sans_correct_g_g
	ST cumuls_pesees.Cumuls_pesees_Add[ma0].cumul_poids_reellement_peses
	LD ma0
	LT 4
	JMPC Reset_cumuls_CGG_add
Reset_cumuls_CGG__fin:



(* Determination des destinations des pompes. *)
(* à partir des destinations des cuves. *)
(* Ajout R.C. 29/07/2011 P852 *)
(* Les tableaux contenant la destination des pompes aurait pu être déterminé par BC-Mix *)
(* (cela aurait nécessité de donner une adresse à ces tableaux). *)
LD bit_envoi_config
JMPCN Determination_dest_ppes__fin
	(* Destination des pompes associées aux cuves à adjuvant *)
	(* Init (Adj et Eau) *)
	LD 0
	ST idx_ppe
	Init_dest_ppes:
		LD idx_ppe
		ADD 1
		ST idx_ppe
		GT 20 (* On utilise "20" au lieu du nombre de pompes pour bien tout initialiser *)
		JMPC Init_dest_ppes__fin
			LD 0 (* 0 par défaut *)
			ST Conf_Adj_origine_pompes[idx_ppe]
			ST Conf_Eau_origine_pompes[idx_ppe]
			JMP Init_dest_ppes
		Init_dest_ppes__fin:
	(* Détermination des destinations (Adj) *)
	(* Note : *)
	(* Il existe un certain nombre ("Conf_adj1_nb_cuves") de cuves à adjuvant *)
	(* qui peuvent être pesées (dans la bascule Adj) ou comptées. Les cuves *)
	(* pesées et comptées peuvent être mélangées. *)
	LD 0
	ST Idx_cuve
	Determination_dest_ppes_adj:
		LD Idx_cuve
		ADD 1
		ST Idx_cuve
		GT Conf_adj1_nb_cuves
		JMPC Determination_dest_ppes_adj__fin
			LD Conf_Adj_dest_cuves[Idx_cuve]
			NE 0 (* Num. Pompe &lt;&gt; 0 *)
			JMPCN Determination_dest_ppes_adj_2
				(* Cuve Adj -&gt; Pompe *)
				(* Enregistrer le numéro de cuve à eau correspondant à la pompe *)
				LD Idx_cuve
				ST Conf_Adj_origine_pompes[Conf_Adj_dest_cuves[Idx_cuve]]
			Determination_dest_ppes_adj_2:
			JMP Determination_dest_ppes_adj
		Determination_dest_ppes_adj__fin:
	(* Détermination des destinations (Eau) *)
	(* Note : *)
	(* Les cuves à eau sont toujours dans cet ordre : *)
	(* - Un certain nombre ("Conf_eau1_nb_cuves") de cuves à eau pesées dans la bascule Eau1 *)
	(* - Puis un certain nombre ("Conf_eau2_nb_cuves") de cuves à eau pesées dans la bascule Eau2 *)
	(* - Puis un certain nombre (non transmi par BC-Mix) de cuves à eau comptées  *)
	LD Conf_eau1_nb_cuves
	ADD Conf_eau2_nb_cuves
	ST Idx_cuve
	Determination_dest_ppes_eau:
		LD Idx_cuve
		ADD 1
		ST Idx_cuve
		GT 4
		JMPC Determination_dest_ppes_eau__fin
			LD Conf_Eau_dest_cuves[Idx_cuve]
			NE 0 (* Num. Pompe &lt;&gt; 0 *)
			JMPCN Determination_dest_ppes_eau_2
				(* Cuve Eau -&gt; Pompe *)
				(* Enregistrer le numéro de cuve à eau correspondant à la pompe *)
				LD Idx_cuve
				ST Conf_Eau_origine_pompes[Conf_Eau_dest_cuves[Idx_cuve]]
			Determination_dest_ppes_eau_2:
			JMP Determination_dest_ppes_eau
		Determination_dest_ppes_eau__fin:
Determination_dest_ppes__fin :



(* Regroupement des consignes "BP_dosage_adj[*]" et "BP_dosage_eau*" par pompe *)
(* dans le tableau "BP_dosage_ppe[*]". *)
(* Modification R.C. 08/08/2011 P852 *)
(* - Initialisation à FALSE par défaut de "BP_dosage_ppe[*]" *)
LD 0
ST idx_ppe
Init_BP_dosage_ppe:
	LD idx_ppe
	ADD 1
	ST idx_ppe
	GT 20 (* On utilise "20" au lieu du nombre de pompes pour bien tout initialiser *)
	JMPC Init_BP_dosage_ppe__fin
		LD 0 (* 0 par défaut *)
		ST BP_dosage_Ppe[idx_ppe]
		JMP Init_BP_dosage_ppe
	Init_BP_dosage_ppe__fin:
(* - Recopie des "BP_dosage_eau_*" dans un tableau, pour permettre de faire une boucle *)
LD BP_dosage_Eau_1
ST BP_dosage_Eau[1]
LD BP_dosage_Eau_2
ST BP_dosage_Eau[2]
LD BP_dosage_Eau_3
ST BP_dosage_Eau[3]
LD BP_dosage_Eau_4
ST BP_dosage_Eau[4]
(* - Recopie des "BP_dosage_adjuvant_*" dans un tableau *)
(* Ce tableau est également utilisé pour les suivis consommation et la validation boite noire *)
LD BP_dosage_Adj_1
ST BP_dosage_Adj[1]
LD BP_dosage_Adj_2
ST BP_dosage_Adj[2]
LD BP_dosage_Adj_3
ST BP_dosage_Adj[3]
LD BP_dosage_Adj_4
ST BP_dosage_Adj[4]
LD BP_dosage_Adj_5
ST BP_dosage_Adj[5]
LD BP_dosage_Adj_6
ST BP_dosage_Adj[6]
LD BP_dosage_Adj_7
ST BP_dosage_Adj[7]
LD BP_dosage_Adj_8
ST BP_dosage_Adj[8]
LD BP_dosage_Adj_9
ST BP_dosage_Adj[9]
LD BP_dosage_Adj_10
ST BP_dosage_Adj[10]
LD BP_dosage_Adj_11
ST BP_dosage_Adj[11]
LD BP_dosage_Adj_12
ST BP_dosage_Adj[12]
LD BP_dosage_Adj_13
ST BP_dosage_Adj[13]
LD BP_dosage_Adj_14
ST BP_dosage_Adj[14]
LD BP_dosage_Adj_15
ST BP_dosage_Adj[15]
LD BP_dosage_Adj_16
ST BP_dosage_Adj[16]
LD BP_dosage_Adj_17
ST BP_dosage_Adj[17]
LD BP_dosage_Adj_18
ST BP_dosage_Adj[18]
LD BP_dosage_Adj_19
ST BP_dosage_Adj[19]
LD BP_dosage_Adj_20
ST BP_dosage_Adj[20]
(* - Passages à TRUE dans "BP_dosage_ppe[*]" suivant les BP des cuves correspondantes *)
LD 0
ST idx_ppe
BP_dosage_ppe_1:
	LD idx_ppe
	ADD 1
	ST idx_ppe
	GT Conf_ppe_nb_ppes
	JMPC BP_dosage_ppe__fin
		(* Adjuvant *)
		LD Conf_Adj_origine_pompes[idx_ppe]
		NE 0 (* Num. Pompe &lt;&gt; 0 *)
		JMPCN BP_dosage_ppe_2
			LD BP_dosage_Adj[Conf_Adj_origine_pompes[idx_ppe]]
			ST BP_dosage_Ppe[idx_ppe]
			JMP BP_dosage_ppe_1
		BP_dosage_ppe_2:
		(* Eau *)
		LD Conf_Eau_origine_pompes[idx_ppe]
		NE 0 (* Num. Pompe &lt;&gt; 0 *)
		JMPCN BP_dosage_ppe_3
			LD BP_dosage_Eau[Conf_Eau_origine_pompes[idx_ppe]]
			ST BP_dosage_Ppe[idx_ppe]
		BP_dosage_ppe_3:
		JMP BP_dosage_ppe_1
	BP_dosage_ppe__fin:

(* Recopie des lignes de poids de la bascule additionnelle *)
(* de : Pds_Add[] (en REAL, tableau interne à l'API) *)
(* vers : BCMix_Pds_Add[] (en INT, utilisé par BC-Mix) *)
LD 0
ST Idx_org
Recopie_Lignes_poids_Add_1:
	LD Idx_org
	ADD 1
	ST Idx_org
	GT Conf_basc_add_nb_organes
	JMPC Recopie_Lignes_poids_Add__fin
		LD Pds_Add[Idx_org]
		REAL_TO_INT
		ST BCMix_Pds_Add[Idx_org]
		JMP Recopie_Lignes_poids_Add_1
	Recopie_Lignes_poids_Add__fin:

(* Diagnostique système : *)
(* Détermination des Min, Max, et Moyenne du temps de cycle de la tâche MAST *)
(* Les min/max et moyenne sont mémorisés 3 secondes. *)
(* et ils sont disponibles en affichant : *)
(*   - Analyse_glissante_MastCycleTime.Min *)
(*   - Analyse_glissante_MastCycleTime.Max *)
(*   - Analyse_glissante_MastCycleTime.Avg *)
CAL Analyse_glissante_MastCycleTime (In := %SW30,
	Period := t#3s,
	Reset := Init_From_API)


(* Batterie de sauvegarde API faible *)
LD %S68
ST Etat_bat_processeur
</ILSource>
	</program>
	<program>
		<identProgram name="145_Mode_Simulation" type="section" task="MAST"></identProgram>
		<STSource>(* Initialisation des variables locales de la section *)
IF Mode_Simulation_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Mode_Simulation_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


IF (Mode_Simu &lt;&gt; 0) THEN
	(* Le simulateur active le mode simulation par la variable "Mode_Simu" *)
	(* Modif R.C. 19/11/2010 P801 *)
	Mode_Simulation := TRUE;
ELSE
	Mode_Simulation := FALSE;
END_IF;
IF (Mode_Simu = 1)
OR (Mode_Simu = 2) THEN
	Entrees_Simulees := TRUE;
ELSE
	Entrees_Simulees := FALSE;
END_IF;
IF (Mode_Simu = 1) THEN
	CCR_Simulees := TRUE;
ELSE
	CCR_Simulees := FALSE;
END_IF;




(* DESACTIVATION DE CERTAINES FONCTIONS EN MODE SIMULATION *)

(* Désactivation de l'acquisition des entrées *)
Acquisition_entrees_ACTIVE := NOT Entrees_Simulees OR Init_From_BCMix;
(* Note : En mode simulation, on active la section "acquisition_entrées" lors *)
(* d'un init pour bien mettre à jour les variables qui y sont écrites *)
Prepa_Acquisition_ACTIVE := Acquisition_entrees_ACTIVE;

IF Mode_Simulation THEN
	(* Forcages à FALSE en contradiction avec la configuration envoyée ou avec *)
	(* ce qui est défini dans la section préliminaires, pour éviter certains *)
	(* problèmes de mauvaise configuration lors de la simulation *)
	(* Demande par téléphone de Jérémie BOUVET du 02/11/2009 *)
	(* Pupitres *)
	Conf_Profibus_Manu_Station 		:= FALSE;
	Conf_DI_Manu_Station 		:= FALSE;
	(* Bascules Mesomatic/Profibus *)
(*	Conf_Comm_HMS_Profibus_Active	:= FALSE; *)(* Mis en commentaire par R.C. 01/02/2010 car écrit par BC-Mix maintenant *)
	Lecture_Mesomatic_ACTIVE	:= FALSE;
	(* Bascules Arpège/TCP *)
(*	Conf_Comm_Arpege_TCP_Active	:= FALSE; *)(* Mis en commentaire par R.C. 01/02/2010 car écrit par BC-Mix maintenant *)
	Lecture_Arpege_TCP_ACTIVE	:= FALSE;
	(* Bascules BCD ou binaires *)
(*	Lecture_BCD_ACTIVE		:= FALSE; *)
	(* Bascules Analogiques *)
(*	Lecture_Analogique_ACTIVE	:= FALSE; *)
END_IF;




(* SIMULATION PAR L'API DE FONCTIONS NON GEREES PAR LE SIMULATEUR *)

IF Entrees_Simulees THEN

	(* Simulation bonbonne à colorants *)
	TON_SIMUL_XV2_Ouvert(IN := Cde_Ouv_XV2, PT := Simu_Colorant_Tps_Reponse_XV2, Q =&gt; Info_XV2_ouvert);
 	TON_SIMUL_XV2_Ferme(IN := NOT Cde_Ouv_XV2, PT := Simu_Colorant_Tps_Reponse_XV2, Q =&gt; Info_XV2_ferme);
	TON_SIMUL_PSL1_MA1(IN := Cde_Ouv_XV3 AND Reserv_Exped_non_vide, PT := Simu_Colorant_Tps_avant_Ma1_PSL1);
 	TON_SIMUL_PSL1_MA0(IN := Cde_Ouv_XV3 AND Reserv_Exped_non_vide, PT := Simu_Colorant_Tps_avant_Ma0_PSL1);
	IF (Simu_Colorant_Tps_avant_Ma1_PSL1 &gt; t#0s) THEN
		Info_pressostat_actif := TON_SIMUL_PSL1_MA1.Q AND NOT TON_SIMUL_PSL1_MA0.Q;
	END_IF;

END_IF;




(* Ajout R.C. 11/09/2009 : Correction d'un problème en mode simulation *)
(* lorsqu'on fait un init et qu'il n'y a pas de chaine granulat2, *)
(* "conf_granulat2_val_actif_1" passe à 0 et empeche le départ du skip de transfert *)
IF Mode_Simulation
AND NOT Conf_granulat2_pres_balance
AND NOT Conf_granulat2_tapis THEN
	conf_granulat2_val_actif_1 := 1;
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="150_Initialisations" type="section" task="MAST"></identProgram>
		<STSource>(* Initialisation des variables locales de la section *)
IF Initialisations_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Initialisations_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(*Initialisation*)
Init_From_API := %S1 OR %S0 OR %S13 OR Init_sur_AU; (* Ajout R.C. 15/07/2009, car cette variable n'était jamais écrite et il n'y avait pas prise en compte partout d'un init API *)
	(* Ajout Init_sur_AU R.C. 09/02/2010 *)
fm_centrale_auto(CLK := Info_Plant_In_Auto); (* Modif R.C. 15/07/2009, déplacé depuis la section "140_Validation_sections_divers" *)
fm_init_from_BCMix (CLK := init_from_BCMix); (*Ajout R.C. 30/06/2010 sur site : cause bagottement des relais pendant l'init *)

Demande_Init_API := (fm_init_from_BCMix.Q OR Init_From_API OR fm_centrale_auto.Q);


(* Determiner si l'API est stable (pas dans des phases d'init) *)
(*
TON_API_stable(IN := NOT Demande_Init, PT := t#1s);
API_stable := TON_API_stable.Q;
*)(* Désactivé car inutilisé *)

IF Demande_Init_API
AND NOT Init_API_Terminee
THEN
	Init_API_en_cours := 1;
END_IF;

(* BC-Mix met Init_From_BCMiX à Zéro tout seul. Il devrait aussi remetre Init_Terminée
	à Zéro en guise de validation de l'action fait par l'API.
	Dans 'attente de cette fonction on remet ce bit à Zéro à la fin de l'init*)
IF Init_API_Terminee THEN
	Init_API_Terminee := 0;
	Init_API_en_cours := 0; (* Ajout R.C. 15/07/2009, car cette variable n'était pas mise à zéro dans le cas d'un init API *)
(*	Init_From_BCMiX := 0;*)
END_IF;


IF Init_API_en_cours THEN

	(* Init des tables de gâchée *)
	FOR ma0:=1 TO 4 DO
		FOR ma0_2:=1 TO 650 DO
			TG_IN_intarr[ma0][ma0_2] := 0;
		END_FOR;
		FOR ma0_2:=1 TO 450 DO
			TG_OUT_intarr[ma0][ma0_2] := 0;
		END_FOR;
		(* par mesure de précaution (dans le cas où *)
		(* la structure de la TG serait modifiée à l'avenir) : *)
		TG_IN[ma0].Numero_gachee 	:= 0;
		TG_IN[ma0].CR_Code_fin 		:= 0;
	END_FOR;

	(* Init des mots utilisés par l'API, exceptés : *)
	(*  - ceux de la configuration *)
	(*  - les entrées analogiques *)
	(*  - les informations des bascules *)

	(* ...Mots divers *)
	Numero_de_version_reserve		:= 0;
	temps_malax1				:= 0;
	temps_malax2				:= 0;
	Densite_MES				:= 0;

	IF Init_From_API
	OR fm_init_from_BCMix.Q
	THEN
		Mode_Simu			:= 0; (* Mode production par défaut au lancement de l'API *)
		(* Le simulateur écrira une valeur différente de zéro pour activer le mode simulation *)
		(* Modif R.C. 19/11/2010 P801 *)
		(* On ne passe pas "Mode_Simu" à 0 lors d'un passage de manu à auto, car *)
		(* cela entraine des resets à répétition à cause de l'écriture à FALSE puis *)
		(* TRUE de "Info_Plant_In_Auto". *)
	END_IF;

	(* ...Infos de diagnostic *)
	Debug_MotStatus1_Word			:= 0;
	Debug_MotStatus2_Word			:= 0;
	Debug_MotStatus3_Word			:= 0;
	Debug_MotStatus4_Word			:= 0;
	Debug_MotStatus5_Word			:= 0;
	Debug_MotStatus6_Word			:= 0;
	Debug_MotStatus7_Word			:= 0;

	(* ...Indexes de gâchée et de produit *)
	index_sortie_buffer			:= 1;
	index_entree_buffer			:= 1;
(*
	Gachee_en_cours_granulat1		:= 1;
	Gachee_en_cours_granulat2		:= 1;
	NG_Cim1					:= 1;
	NG_Cim2					:= 1;
	NG_Eau1					:= 1;
	NG_Eau2					:= 1;
	Gachee_en_cours_adjuvant		:= 1;
	Gachee_en_cours_anhydrite		:= 1;
	NG_Add					:= 1;
	gachee_en_cours_mal1			:= 1;
	gachee_en_cours_mal2			:= 1;
*)
(* =&gt; Desactivé car pose des problèmes difficiles à résoudre; et cela n'était pas *)
(* fait dans l'ancienne gestion du RESET *)

	suite_index_transfert_G := 1; (* Ajout R.C 25/02/2010 *)

(*
	Numero_produit_Gra1			:= 1;
	Numero_produit_Gra2			:= 1;
	Numero_produit_Cim1			:= 1;
	Numero_produit_Cim2			:= 1;
	Numero_produit_Eau1			:= 1;
	Numero_produit_Eau2			:= 1;
	Numero_produit_Adj			:= 1;
	Numero_produit_Anh			:= 1;
	Numero_produit_Add			:= 1;
*)
(* =&gt; Remplacé par les lignes suivantes (qui reprennent le fonctionnement de l'ancienne gestion *)
(* du RESET) car la mise à 1 pose problème. *)
	Numero_produit_Gra1			:= 0;
	Numero_produit_Gra2			:= 0;
	Numero_produit_Cim1			:= 0;
	Numero_produit_Cim2			:= 0;
	Numero_produit_Eau1			:= 0;
	Numero_produit_Eau2			:= 0;
	Numero_produit_Adj			:= 0;
	Numero_produit_Anh			:= 0;
	Numero_produit_Add			:= 0;

	(* Ajout R.C. 23/02/2011 en P804 *)
	Numero_produit_Gra1_aux1		:= 0;
	Numero_produit_Gra2_aux1		:= 0;
	Numero_produit_Cim1_aux1		:= 0;
	Numero_produit_Cim2_aux1		:= 0;
	Numero_produit_Gra1_aux2		:= 0;
	Numero_produit_Gra2_aux2		:= 0;
	Numero_produit_Cim1_aux2		:= 0;
	Numero_produit_Cim2_aux2		:= 0;

	(* Ajout R.C. 03/05/2010 en P800 *)
	NP_Gra1					:= 1;
	NP_Gra2					:= 1;
	NP_Cim1					:= 1;
	NP_Cim2					:= 1;
	NP_Eau1					:= 1;
	NP_Eau2					:= 1;
	NP_Adj					:= 1;
	NP_Anh					:= 1;
	NP_Add					:= 1;

	(* ...Poids demandés et poids déjà pesés *)
	Poids_demande_Gra1			:= 0;
	Poids_demande_Gra2			:= 0;
	Poids_demande_Cim1			:= 0;
	Poids_demande_Cim2			:= 0;
	Poids_demande_Eau1			:= 0;
	Poids_demande_Eau2			:= 0;
	Poids_demande_Adj			:= 0;
	Poids_demande_Anh			:= 0;
	Poids_demande_Add			:= 0;
	FOR ma0:=1 TO 20 DO
		Poids_demande_Ppe[ma0]		:= 0;
		Consigne_pour_CCR[ma0]		:= 0;
	END_FOR;
	Dos_dif_Poids_demande			:= 0; (* Non adressé *)
	Poids_deja_pese_Gra1			:= 0;
	Poids_deja_pese_Gra2			:= 0;
	Poids_deja_pese_Cim1			:= 0;
	Poids_deja_pese_Cim2			:= 0;
	Poids_deja_pese_Eau1			:= 0;
	Poids_deja_pese_Eau2			:= 0;
	Poids_deja_pese_Adj			:= 0;
	Poids_deja_pese_Anh			:= 0;
	Poids_deja_pese_Add			:= 0;
	Memo_Poids_deja_pese_add		:= 0;(* Ajout ASM Jan/2014 P864 *)
	Poids_basc_add_decomptage		:= 0;(* Ajout ASM Jan/2014 P864 *)
	Poids_deja_pese_Add_Cum			:= 0;(* Ajout ASM Jan/2014 P864 *)
	FOR ma0:=1 TO 4 DO			     (* Ajout ASM Jan/2014 P864 *)
		Poids_deja_pese_add_decomptage[ma0]	:= 0;
	END_FOR;
	FOR ma0:=1 TO 20 DO
		Compteur_ppe[ma0] 		:= 0;
		Compteur_ppe_fuites[ma0] 	:= 0;
		memo_fuite_pompe[ma0]		:= 0;
	END_FOR;
	Poids_pesee_ppe_eau1			:= 0;

	FOR ma0:=1 TO 20 DO
		temps_dosage_ppe[ma0] 		:= 0;
	END_FOR;
	temps_dosage_eau			:= 0;


	(* ...Remplacements produit *)
	Produit_remplacement_Gra1		:= 0;
	Produit_remplacement_Gra2		:= 0;
	Produit_remplacement_Cim1		:= 0;
	Produit_remplacement_Cim2		:= 0;
	Produit_remplacement_Eau1		:= 0;
	Produit_remplacement_Eau2		:= 0;
	Produit_remplacement_Adj		:= 0;
	Produit_remplacement_Add		:= 0;

	(* ...Erreurs de jetée *)
	Erreur_jetee_Gra1			:= 0;
	Erreur_jetee_Gra2			:= 0;
	Erreur_jetee_Cim1			:= 0;
	Erreur_jetee_Cim2			:= 0;
	Erreur_jetee_Eau1			:= 0;
	Erreur_jetee_Eau2			:= 0;
	Erreur_jetee_Adj			:= 0;
	Erreur_jetee_Add			:= 0;

	(* ...Poids calculés par l'API *)
	Poids_real_Gra1				:= 0.0;
	Poids_real_Gra2				:= 0.0;
	Poids_real_Cim1				:= 0.0;
	Poids_real_Cim2				:= 0.0;
	Poids_real_Eau1				:= 0.0;
	Poids_real_Eau2				:= 0.0;
	Poids_real_Adj				:= 0.0;
	Poids_real_Adj2				:= 0.0;
	Poids_real_Anh				:= 0.0;
	Poids_real_Add				:= 0.0;
	Poids_real_TT_Gra			:= 0.0;
	Poids_real_TT_Cim			:= 0.0;
	Poids_real_Gra3				:= 0.0;
	Poids_real_Gra4				:= 0.0;
	Poids_instantane_Gra1			:= 0;
	Poids_instantane_Gra2			:= 0;
	Poids_instantane_Cim1			:= 0;
	Poids_instantane_Cim2			:= 0;
	Poids_instantane_Eau1			:= 0;
	Poids_instantane_Eau2			:= 0;
	Poids_instantane_Adj			:= 0;
	Poids_instantane_Anh			:= 0;
	Poids_instantane_Add			:= 0;
	Poids_instantane_TT_Gra			:= 0;
	Poids_instantane_TT_Cim			:= 0;


	(* ...Manuel pupitre *)
	(* Numéro de l'organe de stockage autorisé à se doser dans chaque bascule *)
	(* Ajout R.C. 21/01/2013 P859 : Interlocks pupitre (#0001039) *)
	(* On n'autorise qu'un produit à la fois. *)
	(* On attend que le produit dosé précédent ait été comptabilisé (suivi *)
	(* consommation) avant d'autoriser un nouveau dosage, ou une vidange de *)
	(* la bascule. *)
	Numero_manu_pup_Gra1			:= 0;
	Numero_manu_pup_Gra2			:= 0;
	Numero_manu_pup_Cim1			:= 0;
	Numero_manu_pup_Cim2			:= 0;
	Numero_manu_pup_Eau1			:= 0;
	Numero_manu_pup_Eau2			:= 0;
	Numero_manu_pup_Adj			:= 0;
	Numero_manu_pup_Anh			:= 0;
	Numero_manu_pup_Add			:= 0;


	(* ...Manuel logiciel *)
	Manu_Tps_dosage_Gra			:= t#1s;
	Manu_Tps_dosage_Cim			:= t#1s;
	Manu_Tps_dosage_Eau			:= t#1s;
	Manu_Tps_dosage_Adj			:= t#1s;
	Manu_Tps_dosage_Anh			:= t#1s;
	Manu_Tps_dosage_Add			:= t#1s;
	Manu_Tps_ouv_trappe			:= t#1s;
	Manu_Tps_ferm_trappe			:= t#1s;
	Numero_manu_Gra				:= 0;
	Numero_manu_Cim				:= 0;
	Numero_manu_Eau				:= 0;
	Numero_manu_Eau_secondaire		:= 0;
	Numero_manu_Adj				:= 0;
	Numero_manu_Add				:= 0;
	FOR ma0:=1 TO 20 DO
		Consigne_ManuLog_PPE[ma0]	:= 0;
		Cde_BCMix_PPE[ma0]		:= FALSE;
		cde_manu_ppe_en_cours[ma0]	:= FALSE;
	END_FOR;


	(* ...Acquisition - Comptage produits pompés *)
	mot_entree1_ccr1			:= 0;
	mot_entree2_ccr1			:= 0;
	mot_entree3_ccr1			:= 0;
	mot_entree1_ccr2			:= 0;
	mot_entree2_ccr2			:= 0;
	mot_entree3_ccr2			:= 0;
	mot_entree1_ccr3			:= 0;
	mot_entree2_ccr3			:= 0;
	mot_entree3_ccr3			:= 0;
	mot_entree1_ccr4			:= 0;
	mot_entree2_ccr4			:= 0;
	mot_entree3_ccr4			:= 0;
	consigne_ppe1				:= 0;
	consigne_ppe2				:= 0;
	consigne_ppe3				:= 0;
	consigne_ppe4				:= 0;
	consigne_ppe5				:= 0;
	consigne_ppe6				:= 0;
	consigne_ppe7				:= 0;
	consigne_ppe8				:= 0;
	consigne_ppe9				:= 0;
	consigne_ppe10				:= 0;
	consigne_ppe11				:= 0;
	consigne_ppe12				:= 0;
	consigne_ppe13				:= 0;
	consigne_ppe14				:= 0;
	consigne_ppe15				:= 0;
	consigne_ppe16				:= 0;
	consigne_ppe17				:= 0;
	consigne_ppe18				:= 0;
	consigne_ppe19				:= 0;
	consigne_ppe20				:= 0;
	FOR ma0:=1 TO 20 DO
		debit_ppe[ma0] 			:= 0;
(*		BCMix_Arret_ppe[ma0]		:= 1;*)(* Désactivé car n'était pas fait initialement, et présente un risque *)
	END_FOR;
	FOR ma0:=1 TO 5 DO
		BCMix_Pds_Adj[ma0] 		:= 0;
	END_FOR;
	FOR ma0:=1 TO 4 DO
		Pds_Add[ma0]			:= 0.0;
		BCMix_Pds_Add[ma0] 		:= 0;
	END_FOR;

	(* ...Acquisition - Arpege TCP *)
	FOR ma0:=1 TO 12 DO
		IDE500_info_voie[ma0].Etat	:= 0;
		IDE500_info_voie[ma0].Pds1	:= 0;
		IDE500_info_voie[ma0].Pds2	:= 0;
	END_FOR;

(*
(* Désactivé R.C. 26/10/2010 : cause : pose problème car reboote la X-Gateway HMS *)
(* et cette initialisation n'est pas nécessaire (le programme fonctionnait sans dans les versions P600) *) 
	(* ...Aquisition - HMS Profibus *)
	FOR ma0:=1 TO 100 DO
		Valeurs_recu_TR1[ma0]		:= 0;
	END_FOR;
	FOR ma0:=1 TO 25 DO
		Valeurs_envoi_TR1[ma0]		:= 0;
	END_FOR;
*)


	(* ...Alarmes *)
	FOR ma0:=1 TO 20 DO
		Ppe_bloquee[ma0] 		:= FALSE;
		Def_tol_neg_ppe[ma0] 		:= FALSE;
		Def_tol_pos_ppe[ma0] 		:= FALSE;
		fuite_ppe[ma0] 			:= FALSE;
		sous_debit_ppe[ma0] 		:= FALSE;
		sur_debit_ppe[ma0] 		:= FALSE;
		Temps_max_ppe[ma0] 		:= FALSE;
	END_FOR;

	(* ...Init interne des sections *)
	(* Ajout R.C. 12/04/2012 P857 *)
	(* Demander à chaque section de faire son initialisation interne *)
	(* Cela permet d'être sûr que chaque section soit bien *)
	(* initialisée, même les sections qui sont désactivées lors *)
	(* du cycle pendant lequel "Init_API_en_cours" est à TRUE. *)
	(* On associe une "_DEM_INIT" à chaque section. *)
	Preliminaires_DEM_INIT			:= TRUE;
	Com_ETH_HMS_Profibus_DEM_INIT		:= TRUE;
	Com_ETH_Arpege_TCP_DEM_INIT		:= TRUE;
	Gestion_HMS_Profibus_DEM_INIT		:= TRUE;
	Prepa_Acquisition_DEM_INIT		:= TRUE;
	Acquisition_entrees_DEM_INIT		:= TRUE;
	Lecture_Arpege_TCP_DEM_INIT		:= TRUE;
	Lecture_Bin_BCD_DEM_INIT		:= TRUE;
	Lecture_Mesomatic_DEM_INIT		:= TRUE;
	Lecture_Analogique_DEM_INIT		:= TRUE;
	Activ_sections_Divers_DEM_INIT		:= TRUE;
	Mode_Simulation_DEM_INIT		:= TRUE;
	Initialisations_DEM_INIT		:= TRUE;
	RAZ_Alarmes_DEM_INIT			:= TRUE;
	Arrets_Urgence_DEM_INIT			:= TRUE;
	Etat_Equipements_ST_DEM_INIT		:= TRUE;
	Etat_Equipements_DEM_INIT		:= TRUE;
	Gestion_Gachees_DEM_INIT		:= TRUE;
	Dosage_Gra1_DEM_INIT			:= TRUE;
	Dosage_Gra2_DEM_INIT			:= TRUE;
	Sorties_Gra_DEM_INIT			:= TRUE;
	Dosage_Cim_DEM_INIT			:= TRUE;
	Sorties_Cim_DEM_INIT			:= TRUE;
	Dosage_Eau_DEM_INIT			:= TRUE;
	Sorties_Eau_DEM_INIT			:= TRUE;
	Dosage_Adj_DEM_INIT			:= TRUE;
	Sorties_Adj_DEM_INIT			:= TRUE;
	Dosage_Add_DEM_INIT			:= TRUE;
	Sorties_Add_DEM_INIT			:= TRUE;
	Dosage_Ppe_DEM_INIT			:= TRUE;
	Adressage_CCRs_DEM_INIT			:= TRUE;
	Gestion_CCRs_DEM_INIT			:= TRUE;
	Dosage_Anh_DEM_INIT			:= TRUE;
	Sorties_Anh_DEM_INIT			:= TRUE;
	Remplacement_produits_DEM_INIT		:= TRUE;
	Gestion_Glace_DEM_INIT			:= TRUE;
	Stockage_inter_Gra_DEM_INIT		:= TRUE;
	Stockage_inter_Cim_DEM_INIT		:= TRUE;
	Stockage_inter_Ppe_DEM_INIT		:= TRUE;
	Stockage_inter_Color_DEM_INIT		:= TRUE;
	Pret_pour_Intro_DEM_INIT		:= TRUE;
	Mesure_QdC_bascules_DEM_INIT		:= TRUE;
	Sequence_Intro_Vidange_DEM_INIT		:= TRUE;
	Intro_Gra_DEM_INIT			:= TRUE;
	Intro_autres_produits_DEM_INIT		:= TRUE;
	Rampe_Eau_Aspi_DEM_INIT			:= TRUE;
	Malaxeur1_DEM_INIT			:= TRUE;
	Malaxeur2_DEM_INIT			:= TRUE;
	Trappes_malaxeurs_DEM_INIT		:= TRUE;
	Commandes_pupitre_DEM_INIT		:= TRUE;
	Cumul_pesee_DEM_INIT			:= TRUE;
	Commandes_DEM_INIT			:= TRUE;
	Bypass_Anh_DEM_INIT			:= TRUE;
	Discordances_DEM_INIT			:= TRUE;
	Simulation_par_API_DEM_INIT		:= TRUE;
	Restitution_sorties_DEM_INIT		:= TRUE;
	Restitution_sorties_ST_DEM_INIT		:= TRUE;
	Gestion_Humidite_DEM_INIT		:= TRUE;
	Cumul_ppe_DEM_INIT			:= TRUE; (* Ajout GCH 05/2014 P864 *)
	Calib_Check_DEM_INIT			:= TRUE; (* XX/12/2014 - P865 - artf1517141 *)

	(* ...Mise à zéro ou a un des bits nécessaire au bon fonctionnement *)
	(* du programme*)
	declaration_malaxeur_1_vide		:= TRUE;
	declaration_malaxeur_2_vide		:= TRUE;
	skip_transfert_vide			:= TRUE;
	tremie_tampon_granulat_vide		:= TRUE;
	TT_Gra_devrait_etre_vide		:= TRUE;
	Dire_transfert_Gra_termine		:= FALSE;

	Position_inter_skip_par_tempo		:= FALSE;
	Intro_dif_en_cours_Mal1			:= FALSE;
	Intro_dif_en_cours_Mal2			:= FALSE;
	Intro_en_cours				:= FALSE;
	Camion_OK				:= FALSE; (* Ajout R.C. 02/03/2012 P857 *)
	Camion_OK_Dosages_OK			:= FALSE; (* Ajout R.C. 02/03/2012 P857 *)
	En_attente_du_debut_intro_gra		:= FALSE;
	transfert_granulat_OK			:= FALSE;
	Transfert_Adj_Termine			:= FALSE; (* Ajout R.C. 28/12/2012 P859 *)
	Transf_ds_bonbonne_termine		:= FALSE; (* Ajout R.C. 04/01/2013 P859 *)
	depart_skip_attente			:= FALSE;
	bit_ouverture_premier_comp		:= FALSE;
	bit_ouverture_deuxieme_comp		:= FALSE;
	anticipation_montee_skip		:= FALSE;
	Bit_validation_trappe1_malax1		:= FALSE;
	Bit_validation_trappe1_malax2		:= FALSE;
	Bit_validation_trappe2_malax1		:= FALSE;
	Bit_validation_trappe2_malax2		:= FALSE;
	Bit_validation_camion_mal1		:= FALSE;
	Bit_validation_camion_mal2		:= FALSE;
	Bit_validation_camion_s_seche		:= FALSE;
	Vidange_granulat_dans_skip		:= FALSE;
	Vidange_skip_dans_TT			:= FALSE;
	Skip_pret_pour_vidange_dans_TT		:= FALSE;
	bonbonne_prete_pour_transfert		:= FALSE;
	Vidange_Cim_dans_bonbonne		:= FALSE;
	Transfert_bonbonne_dans_TT		:= FALSE;
	TT_cim_vide				:= TRUE; (* Correction R.C. 29/10/2010, était initialisé par erreur à FALSE depuis P600 *)
	Bonbonne_cim_vide			:= TRUE; (* Correction R.C. 29/10/2010, était initialisé par erreur à FALSE depuis P600 *)
	Cde_autorisation_trans_cim		:= FALSE;
	Cde_bascule_Cim1_vide___old		:= TRUE; (* Correction R.C. 01/09/2010, était initialisé par erreur à FALSE *)
	anticipation_skip_TT			:= FALSE;
	Basc_add_vide				:= FALSE;
	Defaut_Intro				:= FALSE;
	Poids_transfere_OK			:= FALSE;
	Malax_1_t1_ouvert_sortie_seche		:= FALSE;
	Malax_2_t1_ouvert_sortie_seche		:= FALSE;
	Malax_1_t2_ouvert_sortie_seche		:= FALSE;
	Malax_2_t2_ouvert_sortie_seche		:= FALSE;
	Vidange_en_cours_Gra1			:= FALSE;
	Vidange_terminee_Gra1			:= FALSE;
	Vidange_en_cours_Gra2			:= FALSE;
	Vidange_terminee_Gra2			:= FALSE;
	debut_intro_tapis_transfert		:= FALSE;
	pause_temps_malaxage			:= FALSE;
	pause_temps_malaxage_2			:= FALSE;
	memo_skip_attente			:= FALSE;
	Transfert_bonbonne_en_cours		:= FALSE;
	Vid_Gra_En_Cours			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement *)
	Vid_Gra_Terminee			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement pour problèmes de non introduction *)
	Vid_Cim1_En_Cours			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement *)
	Vid_Cim1_Terminee			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement pour problèmes de non introduction *)
	Vid_Cim2_En_Cours			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement *)
	Vid_Cim2_Terminee			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement pour problèmes de non introduction *)
	Vid_Eau1_En_Cours			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement *)
	Vid_Eau1_Terminee			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement pour problèmes de non introduction *)
	Vid_Eau2_En_Cours			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement *)
	Vid_Eau2_Terminee			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement pour problèmes de non introduction *)
	Vid_Adj_En_Cours			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement *)
	Vid_Adj_Terminee			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement pour problèmes de non introduction *)
	Vid_Adj_C2_En_Cours			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement *)
	Vid_Adj_C2_Terminee			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement pour problèmes de non introduction *)
	Vid_Anh_En_Cours			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement *)
	Vid_Anh_Terminee			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement pour problèmes de non introduction *)
	Vid_Add_En_Cours			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement *)
	Vid_Add_Terminee			:= FALSE; (* Ajout R.C. 14/03/2012 P857 Préventivement pour problèmes de non introduction *)
	Intro_Eau1_Terminee			:= FALSE; (* Ajout R.C. 10/08/2012 P858 *)
	Intro_Adj_terminee			:= FALSE; (* Ajout R.C. 28/12/2012 P859 *)
	Attente_fin_vidange_Eau1		:= FALSE; (* Ajout R.C. 06/09/2012 P858 *)

	Sequence_dry_init_en_cours		:= FALSE; (* Ajout R.C. 05/03/2012 P857 *)
	Sequence_dry_init_fait			:= FALSE; (* Ajout R.C. 05/03/2012 P857 *)
	Sequence_dry_en_cours			:= FALSE;
	Sequence_dry_termine			:= FALSE;
	Intro_Add_terminee			:= FALSE; (* Ajout ASM Déc/2013 P864 *)
	Intro_Gra_terminee			:= FALSE; (* Ajout ASM Déc/2013 P864 *)
	Intro_Anh_terminee			:= FALSE; (* Ajout ASM Déc/2013 P864 *)

(*	Bypass_vers_malaxeur1			:= FALSE;*)
(*	Bypass_vers_malaxeur2			:= FALSE;*)
(* Le bypass doit toujours être commandé d'un coté ou de l'autre, on met en commentaire les RAZs *)
(* Modif. M.D. 12/08/2003 pour Vendargues*)

	Dosage_ppe_en_cours_Section300		:= FALSE;
	Dosage_ppe_en_cours_Section392		:= FALSE;
	FOR ma0:=1 TO 20 DO
		BP_dosage_Adj[ma0] 			:= FALSE;
		Dem_vidange_tampon_ppe[ma0]		:= FALSE;
		Dosages_ppe_en_cours[ma0]		:= FALSE;
		Dosages_ppe_en_cours_Section300[ma0]	:= FALSE;
		Dosages_ppe_en_cours_Section392[ma0]	:= FALSE;
		Dosages_ppe_termine_Section300[ma0]	:= FALSE;
		Dosages_ppe_termine_Section392[ma0]	:= FALSE;
		Vid_Tampon_ppe_terminee[Idx_Ppe]	:= FALSE;
		NP_Compteurs_ppe[ma0]			:= 0; (* Pompe par section 300 *)
		Num_index_dos_diff_ppe[ma0]		:= 0; (* Pompe par section 392 *)
	END_FOR;

	FOR ma0:=1 TO 72 DO
		Cdes_dosage[ma0] 			:= FALSE;
	END_FOR;

	Alarme_reset_API := TRUE; (* On lève un bit d'alarme qui permettra à BC-Mix de bien voir que l'API a subi un RESET *)
	Init_API_Terminee := TRUE;
	FOR ma0:=1 TO 20 DO
		Product_Replacement[ma0]:=0;
	END_FOR;
END_IF;

  
(*Signalisation du passage en manuel durant une gachée en cours*)
IF Manu_logiciel THEN
	IF (TG_IN[1].Numero_gachee &lt;&gt; 0) THEN
		TG_OUT[1].CR_Etat_Gachee := TG_OUT[1].CR_Etat_Gachee OR 16#8000;
	END_IF;
	IF (TG_IN[2].Numero_gachee &lt;&gt; 0) THEN
		TG_OUT[2].CR_Etat_Gachee := TG_OUT[2].CR_Etat_Gachee OR 16#8000;
	END_IF;
	IF (TG_IN[3].Numero_gachee &lt;&gt; 0) THEN
		TG_OUT[3].CR_Etat_Gachee := TG_OUT[3].CR_Etat_Gachee OR 16#8000;
	END_IF;
	IF (TG_IN[4].Numero_gachee &lt;&gt; 0) THEN
		TG_OUT[4].CR_Etat_Gachee := TG_OUT[4].CR_Etat_Gachee OR 16#8000;
	END_IF;
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="152_RAZ_Alarmes" type="section" task="MAST"></identProgram>
		<STSource>(* Initialisation des variables locales de la section *)
IF RAZ_Alarmes_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	RAZ_Alarmes_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(* RAZ des alarmes par ETOR *)
(* pour permettre de pouvoir produire sans BC-Mix avec un pupitre. *)

RAZ_Alarmes := Pup_Cde_RAZ_alarmes OR (Info_RAZ_Alarmes AND Acquisition_entrees_ACTIVE);

TON_1_RAZ_Alarmes(IN := RAZ_Alarmes, PT := t#2000ms);
(* La tempo incite le centraliste à ne pas prendre l'habitude *)
(* d'appuyer systématiquement sur le bouton et à analyser d'avantage *)
(* la cause du problème. Elle permet également de ne pas prendre en *)
(* compte un appui par erreur sur le mauvais bouton. *)

TON_2_RAZ_Alarmes(IN := RAZ_Alarmes, PT := t#15s);
(* Cette tempo "longue" est prévue pour ne pas reprendre *)
(* la production en cas d'arrêt d'urgence comme on le ferait pour *)
(* un autre défaut (par exemple "Alarme_Controle_Tension"). *)
(* Cela permet au centraliste de prendre conscience du problème. *)


Pulse_TON_1_RAZ_Alarme_Q := TON_1_RAZ_Alarmes.Q;
IF RE(Pulse_TON_1_RAZ_Alarme_Q) THEN (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
(* Le front évite que l'on puisse maintenir le RAZ *)

	Alarme_Aspi 				:= FALSE;
	Alarme_capot1_ouvert_Add		:= FALSE;
	Alarme_capot2_ouvert_Add		:= FALSE;(* ASM Jan 2014 -P864 : artf 1347731 : Additional balance  *)    
	Alarme_capot3_ouvert_Add		:= FALSE;(* ASM Jan 2014 -P864 : artf 1347731 : Additional balance  *)    
	Alarme_capot4_ouvert_Add		:= FALSE;(* ASM Jan 2014 -P864 : artf 1347731 : Additional balance  *)
	Alarme_Cde_BCMix_Refusee 		:= FALSE;
	Alarme_coffret_non_pret 		:= FALSE;
	Alarme_Com_API_ModbusTCP_1 		:= FALSE;
	Alarme_Com_HMS_Profibus 		:= FALSE;
	Alarme_Com_HMS_Profibus_Adj 		:= FALSE;
	Alarme_Com_HMS_Profibus_Cim1 		:= FALSE;
	Alarme_Com_HMS_Profibus_Eau1		:= FALSE;
	Alarme_Com_HMS_Profibus_Gra1 		:= FALSE;
	Alarme_Com_HMS_Profibus_Pupitre 	:= FALSE;
	Alarme_Controle_Tension 		:= FALSE;
	Alarme_detare_Add			:= FALSE;
	Alarme_detare_Adj 			:= FALSE;
	Alarme_detare_Anh 			:= FALSE;
	Alarme_detare_Cim1			:= FALSE;
	Alarme_detare_cim2 			:= FALSE;
	Alarme_detare_Eau1 			:= FALSE;
	Alarme_detare_eau2 			:= FALSE;
	Alarme_detare_Gra1 			:= FALSE;
	Alarme_detare_Gra2 			:= FALSE;
	Alarme_detare_TT_cim	 		:= FALSE;
	Alarme_detare_TT_granulat 		:= FALSE;
	Alarme_discordance_Malaxeur1 		:= FALSE;
	Alarme_etat_Arret_urgence 		:= FALSE;
	Alarme_Glace 				:= FALSE;
	Alarme_IDE500_Add			:= FALSE;
	Alarme_IDE500_Adj 			:= FALSE;
	Alarme_IDE500_Adj2 			:= FALSE;
	Alarme_IDE500_Anh 			:= FALSE;
	Alarme_IDE500_Cim1 			:= FALSE;
	Alarme_IDE500_Cim2 			:= FALSE;
	Alarme_IDE500_Eau1 			:= FALSE;
	Alarme_IDE500_Eau2 			:= FALSE;
	Alarme_IDE500_Gra1 			:= FALSE;
	Alarme_IDE500_Gra2 			:= FALSE;
	Alarme_IDE500_Gra3 			:= FALSE;
	Alarme_IDE500_Gra4 			:= FALSE;
	Alarme_IDE500_TT_cim	 		:= FALSE;
	Alarme_IDE500_TT_granulat 		:= FALSE;
	alarme_malaxeur1_arrete 		:= FALSE;
	alarme_malaxeur2_arrete 		:= FALSE;
	Alarme_Niveau_haut_ADJ_Comp1 		:= FALSE;
	Alarme_Niveau_haut_ADJ_Comp10 		:= FALSE;
	Alarme_Niveau_haut_ADJ_Comp2 		:= FALSE;
	Alarme_Niveau_haut_ADJ_Comp3 		:= FALSE;
	Alarme_Niveau_haut_ADJ_Comp4 		:= FALSE;
	Alarme_Niveau_haut_ADJ_Comp5 		:= FALSE;
	Alarme_Niveau_haut_ADJ_Comp6 		:= FALSE;
	Alarme_Niveau_haut_ADJ_Comp7 		:= FALSE;
	Alarme_Niveau_haut_ADJ_Comp8 		:= FALSE;
	Alarme_Niveau_haut_ADJ_Comp9 		:= FALSE;
	Alarme_poids_max_Add 			:= FALSE;
	Alarme_poids_max_Adj 			:= FALSE;
	Alarme_poids_max_Anh 			:= FALSE;
	Alarme_poids_max_Cim1 			:= FALSE;
	Alarme_poids_max_Cim2 			:= FALSE;
	Alarme_poids_max_Eau1 			:= FALSE;
	Alarme_poids_max_eau2	 		:= FALSE;
	Alarme_poids_max_Gra1 			:= FALSE;
	Alarme_poids_max_Gra2 			:= FALSE;
	Alarme_poids_max_TT_cim 		:= FALSE;
	Alarme_poids_max_TT_granulat 		:= FALSE;
	Alarme_Pression_PPE_Graisse1 		:= FALSE;
	Alarme_prot_mot_compr 			:= FALSE;
	Alarme_prot_mot_Dos_ADJ 		:= FALSE;
	Alarme_prot_mot_malax1 			:= FALSE;
	Alarme_prot_mot_PPE_gen_EAU 		:= FALSE;
	Alarme_prot_mot_Skip 			:= FALSE;
	Alarme_prot_mot_vib_Cim 		:= FALSE;
	Alarme_prot_mot_vib_Gra1 		:= FALSE;
	Alarme_prot_mot_Vid_ADJ_PPE 		:= FALSE;
	Alarme_prot_mot_vid_PPE_EAU 		:= FALSE;
	Alarme_prot_mot_vis_cim 		:= FALSE;
	Alarme_prot_PPE_Graisse1 		:= FALSE;
	Alarme_prot_tapis_pes_Gra 		:= FALSE;
	Alarme_prot_Thermique_malax1 		:= FALSE;
	Alarme_prot_thermique_Skip 		:= FALSE;
	Alarme_PSL1_too_long 			:= FALSE;
	Alarme_RAMPE 				:= FALSE;
	Alarme_Reserv_Exped_Plein 		:= FALSE;
	Alarme_reset_API 			:= FALSE;
	Alarme_satur_inf_Add 			:= FALSE;
	Alarme_satur_inf_Adj 			:= FALSE;
	Alarme_satur_inf_Anh 			:= FALSE;
	Alarme_satur_inf_Cim1 			:= FALSE;
	Alarme_satur_inf_Cim2 			:= FALSE;
	Alarme_satur_inf_Eau1 			:= FALSE;
	Alarme_satur_inf_Eau2 			:= FALSE;
	Alarme_satur_inf_Gra1 			:= FALSE;
	Alarme_satur_inf_Gra2 			:= FALSE;
	Alarme_satur_inf_TT_cim 		:= FALSE;
	Alarme_satur_inf_TT_granulat 		:= FALSE;
	Alarme_satur_sup_Add 			:= FALSE;
	Alarme_satur_sup_Adj 			:= FALSE;
	Alarme_satur_sup_Anh 			:= FALSE;
	Alarme_satur_sup_Cim1 			:= FALSE;
	Alarme_satur_sup_Cim2 			:= FALSE;
	Alarme_satur_sup_Eau1 			:= FALSE;
	Alarme_satur_sup_Eau2 			:= FALSE;
	Alarme_satur_sup_Gra1 			:= FALSE;
	Alarme_satur_sup_Gra2 			:= FALSE;
	Alarme_satur_sup_TT_cim 		:= FALSE;
	Alarme_satur_sup_TT_granulat 		:= FALSE;
	Alarme_vidange_Add 			:= FALSE;
	Alarme_vidange_Adj 			:= FALSE;
	Alarme_vidange_Anh 			:= FALSE;
	Alarme_vidange_Cim1 			:= FALSE;
	Alarme_vidange_Cim2	 		:= FALSE;
	Alarme_vidange_Comp_Adj 		:= FALSE;
	Alarme_vidange_Eau1 			:= FALSE;
	Alarme_vidange_Eau2 			:= FALSE;
	Alarme_vidange_Gra1 			:= FALSE;
	Alarme_vidange_Gra2 			:= FALSE;
	Alarme_vidange_Mal1 			:= FALSE;
	Alarme_vidange_Mal2 			:= FALSE;
	Alarme_vidange_tampons_ppe		:= FALSE;
	Alarme_vidange_TT_cim	 		:= FALSE;
	Alarme_vidange_TT_granulat 		:= FALSE;
	Basc_instable_Add			:= FALSE;
	Basc_instable_Adj 			:= FALSE;
	Basc_instable_Anh 			:= FALSE;
	Basc_instable_Cim1 			:= FALSE;
	Basc_instable_cim2	 		:= FALSE;
	Basc_instable_Eau1 			:= FALSE;
	Basc_instable_eau2 			:= FALSE;
	Basc_instable_Gra1 			:= FALSE;
	Basc_instable_Gra2 			:= FALSE;
	Bonbonne_cim_non_prete	 		:= FALSE;
	Debug_BoolAlarme1 			:= FALSE;
	Debug_BoolAlarme2 			:= FALSE;
	Defaut_positionnement_bypass 		:= FALSE;
	Defaut_sequence_Add 			:= FALSE;
	Defaut_sequence_Anh 			:= FALSE;
	Defaut_sequence_Cim1 			:= FALSE;
	Defaut_sequence_Cim2 			:= FALSE;
	Defaut_sequence_Gra1 			:= FALSE;
	Defaut_sequence_Gra2 			:= FALSE;
	Defaut_vidange_TT_cim	 		:= FALSE;
	Defaut_vidange_TT_granulat 		:= FALSE;
	Depas_puissance_max_malaxeur1 		:= FALSE;
	Depas_puissance_max_malaxeur2 		:= FALSE;
	Depassement_tolerance_Add 		:= FALSE;
	Depassement_tolerance_Adj 		:= FALSE;
	Depassement_tolerance_Anh 		:= FALSE;
	Depassement_tolerance_Cim1 		:= FALSE;
	Depassement_tolerance_cim2 		:= FALSE;
	Depassement_tolerance_Eau1 		:= FALSE;
	Depassement_tolerance_eau2 		:= FALSE;
	Depassement_tolerance_Gra1 		:= FALSE;
	Depassement_tolerance_Gra2 		:= FALSE;
	Discordance_vidange_basc_add		:= FALSE;
	Discordance_vidange_adjuvant 		:= FALSE;
	Discordance_vidange_anhydrite 		:= FALSE;
	Discordance_vidange_cim1 		:= FALSE;
	Discordance_vidange_cim2 		:= FALSE;
	Discordance_vidange_comp_adj 		:= FALSE;
	Discordance_vidange_eau1 		:= FALSE;
	Discordance_vidange_eau2 		:= FALSE;
	Discordance_vidange_granulat1 		:= FALSE;
	Discordance_vidange_granulat2 		:= FALSE;
	Discordance_vidange_TT_cim 		:= FALSE;
	Discordance_vidange_TT_granulat 	:= FALSE;
	Etat_bat_processeur 			:= FALSE;
	indisponibilite_MES 			:= FALSE;
	msg_mal1_non_vide_vid_auto 		:= FALSE;
	msg_mal2_non_vide_vid_auto 		:= FALSE;
	Perte_info_position_skip 		:= FALSE;
	Perte_position_skip 			:= FALSE;
	Pesee_bloquee_Add			:= FALSE;
	Pesee_bloquee_Adj 			:= FALSE;
	Pesee_bloquee_Anh 			:= FALSE;
	Pesee_bloquee_Cim1 			:= FALSE;
	Pesee_bloquee_cim2	 		:= FALSE;
	Pesee_bloquee_Eau1 			:= FALSE;
	Pesee_bloquee_eau2 			:= FALSE;
	Pesee_bloquee_Gra1			:= FALSE;
	Pesee_bloquee_Gra2 			:= FALSE;
	Pesee_incomplete_Add 			:= FALSE;
	Pesee_incomplete_Adj 			:= FALSE;
	Pesee_incomplete_Anh 			:= FALSE;
	Pesee_incomplete_Cim1	 		:= FALSE;
	Pesee_incomplete_Cim2 			:= FALSE;
	Pesee_incomplete_Eau1 			:= FALSE;
	Pesee_incomplete_Eau2 			:= FALSE;
	Pesee_incomplete_Gra1			:= FALSE;
	Pesee_incomplete_Gra2 			:= FALSE;
	Poids_sup_seuil_vide_Add 		:= FALSE;
	Poids_sup_seuil_vide_Adj 		:= FALSE;
	Poids_sup_seuil_vide_Anh 		:= FALSE;
	Poids_sup_seuil_vide_Cim1 		:= FALSE;
	Poids_sup_seuil_vide_Cim2 		:= FALSE;
	Poids_sup_seuil_vide_Eau1 		:= FALSE;
	Poids_sup_seuil_vide_Eau2 		:= FALSE;
	Poids_sup_seuil_vide_Gra1		:= FALSE;
	Poids_sup_seuil_vide_Gra2 		:= FALSE;
	Poids_sup_seuil_vide_TT_cim 		:= FALSE;
	Poids_sup_seuil_vide_TT_gra 		:= FALSE;
	Puissance_sup_seuil_vide_Mal1 		:= FALSE;
	Puissance_sup_seuil_vide_Mal2 		:= FALSE;
	Skip_bloque 				:= FALSE;
	skip_defaut_ext_capt_grde_vit 		:= FALSE;
	skip_defaut_externe_grde_vit 		:= FALSE;
	skip_defaut_temps_grde_vit 		:= FALSE;
	Skip_non_vide 				:= FALSE;
	Tapis_peseur1_vitesse_rotation 		:= FALSE;
	Tapis_peseur2_vitesse_rotation 		:= FALSE;
	Tapis_transfert_bloque 			:= FALSE;
	Tapis_transfert_vitesse_rotation 	:= FALSE;
	Temps_max_transfert_cim 		:= FALSE;
	Tol_inf_Add 				:= FALSE;
	Tol_inf_Adj 				:= FALSE;
	Tol_inf_Anh 				:= FALSE;
	Tol_inf_Cim1 				:= FALSE;
	Tol_inf_Cim2 				:= FALSE;
	Tol_inf_Eau1 				:= FALSE;
	Tol_inf_Eau2 				:= FALSE;
	Tol_inf_Gra1				:= FALSE;
	Tol_inf_Gra2 				:= FALSE;
	Transfert_cim_non_termine 		:= FALSE;
	Trappe1_malaxeur1_bloquee 		:= FALSE;
	Trappe1_malaxeur2_bloquee 		:= FALSE;
	Trappe2_malaxeur1_bloquee 		:= FALSE;
	Trappe2_malaxeur2_bloquee 		:= FALSE;
	TT_cim_instable 			:= FALSE;
	TT_granulat_instable 			:= FALSE;
	Vidange_bloquee_Add 			:= FALSE;
	Vidange_bloquee_Anh 			:= FALSE;
	Vidange_bloquee_Cim1 			:= FALSE;
	Vidange_bloquee_Cim2			:= FALSE;
	Vidange_bloquee_Eau1 			:= FALSE;
	Vidange_bloquee_Eau2 			:= FALSE;
	Vidange_bloquee_Gra1 			:= FALSE;
	Vidange_bloquee_Gra2 			:= FALSE;

	FOR Index_E := 1 TO 20 DO
		Ppe_bloquee[Index_E]		:= FALSE;
		Def_tol_neg_ppe[Index_E]	:= FALSE;
		Def_tol_pos_ppe[Index_E]	:= FALSE;
		fuite_ppe[Index_E]		:= FALSE;
		sous_debit_ppe[Index_E]		:= FALSE;
		sur_debit_ppe[Index_E]		:= FALSE;
		Temps_max_ppe[Index_E]		:= FALSE;
	END_FOR;

END_IF;


Pulse_TON_2_RAZ_Alarme_Q := TON_2_RAZ_Alarmes.Q;
IF RE(Pulse_TON_2_RAZ_Alarme_Q) THEN (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
(* Il faudra faire un reset plus long pour ces alarmes *)
	Alarme_arret_urgence_adjuvant		:= FALSE;
	Alarme_arret_urgence_aux1		:= FALSE;
	Alarme_arret_urgence_aux2		:= FALSE;
	Alarme_arret_urgence_granulat1		:= FALSE;
	Alarme_arret_urgence_granulat2		:= FALSE;
	Alarme_arret_urgence_malaxeur		:= FALSE;
	Alarme_arret_urgence_pupitre		:= FALSE;
	Alarme_arret_urgence_silo		:= FALSE;
	Alarme_arret_urgence_skip		:= FALSE;
	Alarme_arret_urgence_transfert		:= FALSE;
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="155_Arrets_Urgence" type="section" task="MAST"></identProgram>
		<STSource>(* Développé par R.C. 05/02/2010 *)
(* sur la base de la spécification LAF014C1-DSL19-1.02 *)

(* La section est codée sur un modèle Etape-Transition *)




(* Traitement préliminaire *)
(*-------------------------*)
(* Init *)

Etape_155_Designee		:= FALSE; (* Permettra de savoir que l'activité *)
	(* d'une étape a changé, afin de ne faire évoluer qu'une étape à la fois *)



(* Traitement séquentiel *)
(*-----------------------*)
(* - Scrutation des Etapes *)


(* Etape initiale : 030_Etat_AU *)
IF Arrets_Urgence_DEM_INIT THEN

	(* Initialiser les variables locales de la section *)
	Etape_155_010_Prod 		:= 0;
	Etape_155_030_Etat_AU 		:= 1;
	Etape_155_050_Reprise_Prod 	:= 0;
	Etape_155_Designee		:= TRUE;

	(* Reset de la demande d'init *)
	Arrets_Urgence_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;

(* 010_Prod -&gt; 030_Etat_AU *)
IF (NOT Etape_155_Designee)
AND Etape_155_010_Prod THEN
	IF Info_etat_arret_urgence THEN
		(* Note : Pour passer en mode AU, on ne doit pas regarder l'état des *)
		(* entrées BPAU, car ces entrées sont immédiates, contrairement *)
		(* à l'entrée "état AU" qui est prévue pour n'être activée que *)
		(* quand le process est dans un état permettant de passer les *)
		(* sorties API à 0 en toute sécurité. *)
		Etape_155_010_Prod 		:= 0;
		Etape_155_030_Etat_AU 		:= 1;
		Etape_155_Designee		:= TRUE;
	END_IF;
END_IF;

(* 030_Etat_AU -&gt; 050_Reprise_Prod *)
IF (NOT Etape_155_Designee)
AND Etape_155_030_Etat_AU THEN
	IF (NOT Info_etat_arret_urgence)
	AND (NOT Alarme_etat_arret_urgence)
	AND (NOT Info_arret_urgence_granulat1)
	AND (NOT Alarme_arret_urgence_granulat1)
	AND (NOT Info_arret_urgence_granulat2)
	AND (NOT Alarme_arret_urgence_granulat2)
	AND (NOT Info_arret_urgence_transfert)
	AND (NOT Alarme_arret_urgence_transfert)
	AND (NOT Info_arret_urgence_skip)
	AND (NOT Alarme_arret_urgence_skip)
	AND (NOT Info_arret_urgence_malaxeur)
	AND (NOT Alarme_arret_urgence_malaxeur)
	AND (NOT Info_arret_urgence_silo)
	AND (NOT Alarme_arret_urgence_silo)
	AND (NOT Info_arret_urgence_adjuvant)
	AND (NOT Alarme_arret_urgence_adjuvant)
	AND (NOT Info_arret_urgence_pupitre)
	AND (NOT Alarme_arret_urgence_pupitre)
	AND (NOT Info_arret_urgence_aux1)
	AND (NOT Alarme_arret_urgence_aux1)
	AND (NOT Info_arret_urgence_aux2)
	AND (NOT Alarme_arret_urgence_aux2)
	AND (bit_presence_config) THEN
		Etape_155_030_Etat_AU 		:= 0;
		Etape_155_050_Reprise_Prod	:= 1;
		Etape_155_Designee		:= TRUE;
	END_IF;
END_IF;

(* 050_Reprise_Prod -&gt; 010_Prod *)
IF (NOT Etape_155_Designee)
AND Etape_155_050_Reprise_Prod THEN
	IF (TRUE) THEN
		Etape_155_050_Reprise_Prod 	:= 0;
		Etape_155_010_Prod		:= 1;
		Etape_155_Designee		:= TRUE;
	END_IF;
END_IF;
   



(* Traitement postérieur *)
(*-----------------------*)
(* - Actions *)


(* Mode AU *)
IF Etape_155_030_Etat_AU THEN
	Mode_AU		:= TRUE; (* SET *)
END_IF;

IF Etape_155_050_Reprise_Prod THEN
	Mode_AU		:= FALSE; (* RESET *)
END_IF;

(* Init API en cas d'AU *)
Pulse_Etape_155_030_Etat_AU := Etape_155_030_Etat_AU;
Init_sur_AU := RE(Pulse_Etape_155_030_Etat_AU); (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)

(* Sortie d'acquittement *)
TP_AU_Acquittes (IN := Etape_155_050_Reprise_Prod,
                 PT := t#1s); 
AU_Acquittes := TP_AU_Acquittes.Q;
</STSource>
	</program>
	<program>
		<identProgram name="160_Etat_Equipements_ST" type="section" task="MAST"></identProgram>
		<STSource>(* Initialisation des variables locales de la section *)
IF Etat_Equipements_ST_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Etat_Equipements_ST_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;



(* ETATS ET ALARMES DES BASCULES *)

(*** GRANULAT 1 ***)

TON_cable_mou (IN := Cable_skip_mou,
		PT := Conf_granulat1_tps_stabilisation);

IF Surcharge_Gra1
AND (NOT Conf_granulat1_Skip
	OR (Conf_granulat1_Skip AND TON_cable_mou.Q))
THEN
	Alarme_poids_max_Gra1 := TRUE;
END_IF;
IF Detarage_Gra1
AND (NOT Conf_granulat1_Skip
	OR (Conf_granulat1_Skip AND TON_cable_mou.Q))
THEN
	Alarme_detare_Gra1 := TRUE;
END_IF;
IF Saturation_inf_Gra1 THEN
	Alarme_satur_inf_Gra1 := TRUE;
END_IF;
IF Saturation_sup_Gra1 THEN
	Alarme_satur_sup_Gra1 := TRUE;
END_IF;
IF NOT Seuil_vide_atteint_Gra1
AND Info_balance_Gra1_fermee
AND auto_pupitre_et_logiciel
AND (TG_OUT[index_sortie_buffer].CR_Etat_Basc_Gra1 = 0)
THEN
	Poids_sup_seuil_vide_Gra1 := TRUE;
END_IF;



(*** GRANULAT 2 ***)

IF Surcharge_Gra2 THEN
	Alarme_poids_max_Gra2 := TRUE;
END_IF;
IF Detarage_Gra2 THEN
	Alarme_detare_Gra2 := TRUE;
END_IF;
IF Saturation_inf_Gra2 THEN
	Alarme_satur_inf_Gra2 := TRUE;
END_IF;
IF Saturation_sup_Gra2 THEN
	Alarme_satur_sup_Gra2 := TRUE;
END_IF;
IF NOT Seuil_vide_atteint_Gra2
AND Info_balance_Gra2_fermee
AND auto_pupitre_et_logiciel
AND (TG_OUT[index_sortie_buffer].CR_Etat_Basc_Gra2 = 0)
THEN
	Poids_sup_seuil_vide_Gra2 := TRUE;
END_IF;



(*** CIMENT 1 ***)

IF Surcharge_Cim1 THEN
	Alarme_poids_max_Cim1 := TRUE;
END_IF;
IF Detarage_Cim1 THEN
	Alarme_detare_Cim1 := TRUE;
END_IF;
IF Saturation_inf_Cim1 THEN
	Alarme_satur_inf_Cim1 := TRUE;
END_IF;
IF Saturation_sup_Cim1 THEN
	Alarme_satur_sup_Cim1 := TRUE;
END_IF;
IF NOT Seuil_vide_atteint_Cim1
AND Info_balance_Cim1_fermee
AND auto_pupitre_et_logiciel
AND (TG_OUT[index_sortie_buffer].CR_Etat_Basc_Cim1 = 0)
THEN
	Poids_sup_seuil_vide_Cim1 := TRUE;
END_IF;



(*** CIMENT 2 ***)

IF Surcharge_Cim2 THEN
	Alarme_poids_max_Cim2 := TRUE;
END_IF;
IF Detarage_Cim2 THEN
	Alarme_detare_Cim2 := TRUE;
END_IF;
IF Saturation_inf_Cim2 THEN
	Alarme_satur_inf_Cim2 := TRUE;
END_IF;
IF Saturation_sup_Cim2 THEN
	Alarme_satur_sup_Cim2 := TRUE;
END_IF;
IF NOT Seuil_vide_atteint_Cim2
AND Info_balance_Cim2_fermee
AND auto_pupitre_et_logiciel
AND (TG_OUT[index_sortie_buffer].CR_Etat_Basc_Cim2 = 0)
THEN
	Poids_sup_seuil_vide_Cim2 := TRUE;
END_IF;



(*** EAU 1 ***)

IF Surcharge_Eau1 THEN
	Alarme_poids_max_Eau1 := TRUE;
END_IF;
IF Detarage_Eau1 THEN
	Alarme_detare_Eau1 := TRUE;
END_IF;
IF Saturation_inf_Eau1 THEN
	Alarme_satur_inf_Eau1 := TRUE;
END_IF;
IF Saturation_sup_Eau1 THEN
	Alarme_satur_sup_Eau1 := TRUE;
END_IF;
IF NOT Seuil_vide_atteint_Eau1
AND Info_balance_eau1_fermee
AND auto_pupitre_et_logiciel
AND (TG_OUT[index_sortie_buffer].CR_Etat_Basc_Eau1 = 0)
THEN
	Poids_sup_seuil_vide_Eau1 := TRUE;
END_IF;



(*** EAU 2 ***)

IF Surcharge_Eau2 THEN
	Alarme_poids_max_Eau2 := TRUE;
END_IF;
IF Detarage_Eau2 THEN
	Alarme_detare_Eau2 := TRUE;
END_IF;
IF Saturation_inf_Eau2 THEN
	Alarme_satur_inf_Eau2 := TRUE;
END_IF;
IF Saturation_sup_Eau2 THEN
	Alarme_satur_sup_Eau2 := TRUE;
END_IF;
IF NOT Seuil_vide_atteint_Eau2
AND Info_balance_Eau2_fermee
AND auto_pupitre_et_logiciel
AND (TG_OUT[index_sortie_buffer].CR_Etat_Basc_Eau2 = 0)
THEN
	Poids_sup_seuil_vide_Eau2 := TRUE;
END_IF;



(*** ADJUVANT ***)

IF Surcharge_Adj THEN
	Alarme_poids_max_Adj := TRUE;
END_IF;
IF Detarage_Adj THEN
	Alarme_detare_Adj := TRUE;
END_IF;
IF Saturation_inf_Adj_Weight1
OR Saturation_inf_Adj_Weight2
OR Saturation_inf_Adj_Weight3
OR Saturation_inf_Adj_Weight4
OR Saturation_inf_Adj_Weight5 THEN
	Alarme_satur_inf_Adj := TRUE;
END_IF;
IF Saturation_sup_Adj_Weight1
OR Saturation_sup_Adj_Weight2
OR Saturation_sup_Adj_Weight3
OR Saturation_sup_Adj_Weight4
OR Saturation_sup_Adj_Weight5 THEN
	Alarme_satur_sup_Adj := TRUE;
END_IF;
IF NOT Seuil_vide_atteint_Adj
AND Info_balance_Adj_fermee
AND auto_pupitre_et_logiciel
AND (TG_OUT[index_sortie_buffer].CR_Etat_Basc_Adj = 0)
THEN
	Poids_sup_seuil_vide_Adj := TRUE;
END_IF;



(*** ANHYDRITE ***)

IF Surcharge_Anh THEN
	Alarme_poids_max_Anh := TRUE;
END_IF;
IF Detarage_Anh THEN
	Alarme_detare_Anh := TRUE;
END_IF;
IF Saturation_inf_Anh THEN
	Alarme_satur_inf_Anh := TRUE;
END_IF;
IF Saturation_sup_Anh THEN
	Alarme_satur_sup_Anh := TRUE;
END_IF;
IF NOT Seuil_vide_atteint_Anh
AND Info_balance_Anh_fermee
AND auto_pupitre_et_logiciel
AND (TG_OUT[index_sortie_buffer].CR_Etat_Basc_Anh = 0)
THEN
	Poids_sup_seuil_vide_Anh := TRUE;
END_IF;

(*** ADDITIONNELLE ***)
(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
(* Animation poids bascule en mode décomptage *)
IF conf_basc_add_mode_decomptage AND NOT Info_balance_Add_fermee AND Cde_vidange_bascule_Add AND NOT bit_decrement_vid_basc_add
	and Poids_basc_add_decomptage &gt; 0 THEN
		bit_decrement_vid_basc_add := TRUE;
		palier_vid_basc_add_dec := Poids_basc_add_decomptage / udint_to_int(time_to_udint (Conf_basc_add_tps_vidange)/1000);
		IF palier_vid_basc_add_dec = 0 THEN
		palier_vid_basc_add_dec := 1;
		END_IF;
END_IF;

IF conf_basc_add_mode_decomptage AND NOT Info_balance_Add_fermee AND Cde_vidange_bascule_Add THEN
		IF top_sec AND ((Poids_basc_add_decomptage - palier_vid_basc_add_dec) &gt;= 0) THEN
			Poids_basc_add_decomptage := (Poids_basc_add_decomptage - palier_vid_basc_add_dec);
		ELSE
			IF(Poids_basc_add_decomptage - palier_vid_basc_add_dec) &lt; 0 THEN
				Poids_basc_add_decomptage := 0;
			END_IF;
		END_IF;

		IF Basc_Add_vide OR Seuil_vide_atteint_Add THEN
			Poids_basc_add_decomptage := 0;
		END_IF;
ELSE
	bit_decrement_vid_basc_add := FALSE;
END_IF;

(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
TON_ctrl_vide_basc_add (IN := info_ctrl_vide_basc_add,
    PT := Conf_basc_add_tps_filt_ctrl_vide);
TOF_ctrl_vide_basc_add (IN := Info_ctrl_vide_basc_add,
                        PT := Conf_basc_add_tps_filt_ctrl_vide);

Info_ctrl_vide_basc_add_filt := TON_ctrl_vide_basc_add.Q OR (Info_ctrl_vide_basc_add_filt AND TOF_ctrl_vide_basc_add.Q);

IF conf_basc_add_mode_decomptage THEN
	IF Poids_basc_add_decomptage &gt; Conf_Basc_Add_seuil_maxi THEN
		Alarme_poids_max_Add := TRUE;
	END_IF;
	TON_detarage_Add (	IN := Poids_basc_add_decomptage &lt; Conf_Basc_Add_seuil_mini,
				PT := t#5s,
	  			Q =&gt; Alarme_detare_Add);
ELSE
	IF Surcharge_Add[1]
	OR Surcharge_Add[2]
	OR Surcharge_Add[3]
	OR Surcharge_Add[4] THEN
		Alarme_poids_max_Add := TRUE;
	END_IF;
	IF Detarage_Add[1]
	OR Detarage_Add[2]
	OR Detarage_Add[3]
	OR Detarage_Add[4] THEN
		Alarme_detare_Add := TRUE;
	END_IF;
END_IF;

IF Saturation_inf_Add[1]
OR Saturation_inf_Add[2]
OR Saturation_inf_Add[3]
OR Saturation_inf_Add[4] THEN
	Alarme_satur_inf_Add := TRUE;
END_IF;
IF Saturation_sup_Add[1]
OR Saturation_sup_Add[2]
OR Saturation_sup_Add[3]
OR Saturation_sup_Add[4] THEN
	Alarme_satur_sup_Add := TRUE;
END_IF;
IF Seuil_vide_add_dispo	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
AND (NOT Seuil_vide_atteint_Add
	OR Memo_compartiment_Add_non_vide[1]
	OR Memo_compartiment_Add_non_vide[2]
	OR Memo_compartiment_Add_non_vide[3]
	OR Memo_compartiment_Add_non_vide[4]
)
AND Info_balance_Add_fermee
AND auto_pupitre_et_logiciel
AND (TG_OUT[index_sortie_buffer].CR_Etat_Basc_Add = 0)
THEN
	Poids_sup_seuil_vide_Add := TRUE;
END_IF;

(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
IF Info_capot1_ouvert_stock_add
THEN
	Alarme_capot1_ouvert_Add := TRUE;
END_IF; 
IF Info_capot2_ouvert_stock_add
THEN
	Alarme_capot2_ouvert_Add := TRUE;
END_IF; 
IF Info_capot3_ouvert_stock_add
THEN
	Alarme_capot3_ouvert_Add := TRUE;
END_IF; 
IF Info_capot4_ouvert_stock_add
THEN
	Alarme_capot4_ouvert_Add := TRUE;
END_IF; 
Alarme_capot_ouvert_stock_add[1]:= Alarme_capot1_ouvert_Add;
Alarme_capot_ouvert_stock_add[2]:= Alarme_capot2_ouvert_Add;
Alarme_capot_ouvert_stock_add[3]:= Alarme_capot3_ouvert_Add;
Alarme_capot_ouvert_stock_add[4]:= Alarme_capot4_ouvert_Add;

(*** TT GRANULAT ***)

IF Surcharge_TT_granulat THEN
	Alarme_poids_max_TT_Granulat := TRUE;
END_IF;
IF Detarage_TT_granulat THEN
	Alarme_detare_TT_granulat := TRUE;
END_IF;
IF Saturation_inf_TT_granulat THEN
	Alarme_satur_inf_TT_granulat := TRUE;
END_IF;
IF Saturation_sup_TT_granulat THEN
	Alarme_satur_sup_TT_granulat := TRUE;
END_IF;
(* Poids_sup_seuil_vide_TT_gra : voir en section "170_Etat_équipements" *)



(*** TT CIMENT ***)

IF Surcharge_TT_cim THEN
	Alarme_poids_max_TT_cim := TRUE;
END_IF;
IF Detarage_TT_cim THEN
	Alarme_detare_TT_cim := TRUE;
END_IF;
IF Saturation_inf_TT_cim THEN
	Alarme_satur_inf_TT_cim := TRUE;
END_IF;
IF Saturation_sup_TT_cim THEN
	Alarme_satur_sup_TT_cim := TRUE;
END_IF;
IF bonbonne_prete_pour_transfert
AND malaxeur_1_vide
AND NOT bit_valide_TT_cim
AND NOT Transfert_bonbonne_dans_TT
AND NOT Transfert_C_terminee
AND Conf_TT_Cim
THEN
	Poids_sup_seuil_vide_TT_cim := TRUE;
END_IF;



(* Modif M.D. 10/09/2008 : Détection de centrale en production *)
(* Si les codes debut et fin de gachée d'une table est différent de 0
   on peut considérer la centrale comme étant en production *)
Centrale_en_production := 
	(TG_IN[1].Numero_gachee		&lt;&gt; 0)
	OR (TG_IN[1].CR_code_fin	&lt;&gt; 0)
	OR (TG_IN[2].Numero_gachee	&lt;&gt; 0)
	OR (TG_IN[2].CR_code_fin	&lt;&gt; 0)
	OR (TG_IN[3].Numero_gachee	&lt;&gt; 0)
	OR (TG_IN[3].CR_code_fin	&lt;&gt; 0)
	OR (TG_IN[4].Numero_gachee	&lt;&gt; 0)
	OR (TG_IN[4].CR_code_fin	&lt;&gt; 0);

IF NOT Dosage_Adj_ACTIVE THEN
	NG_Adj := NG_Eau1 ;
END_IF;
IF NOT Dosage_Adj_ACTIVE
AND NOT Dosage_Eau_ACTIVE
AND (NG_Intro &lt;&gt; 0) (* Modification R.C. 20/11/2009, le numéro de gachée adjuvant était réinitialisé lors du passage en manu logiciel *)
THEN
	NG_Adj := NG_Intro ;
END_IF;



(* Modif M.D. 20/01/2009 : Marche/Arret automatique malaxeur *)
(* Marche/Arret défini avec Jérémie BOUVET sur identification de TG (dit: "type Inde") *)

(* Presence ou non de tables de gachee *)
TG1_vide := (TG_IN[1].Numero_gachee = 0);
TG2_vide := (TG_IN[2].Numero_gachee = 0);
TG3_vide := (TG_IN[3].Numero_gachee = 0);
TG4_vide := (TG_IN[4].Numero_gachee = 0);

TG1_nouvelle :=	FE(TG1_vide);
TG2_nouvelle :=	FE(TG2_vide);
TG3_nouvelle :=	FE(TG3_vide);
TG4_nouvelle :=	FE(TG4_vide);

(* Marche malaxeur 1 *)
Auto_marche_mal1 := 
	Conf_Mixer1_Auto_Start
	AND NOT Info_malaxeur1_en_marche
	AND Info_Plant_In_Auto
	AND (
		TG1_nouvelle AND TG_IN[1].mot_destination.1
		OR TG2_nouvelle AND TG_IN[2].mot_destination.1
		OR TG3_nouvelle AND TG_IN[3].mot_destination.1
		OR TG4_nouvelle AND TG_IN[4].mot_destination.1
		OR Auto_marche_mal1);

(* Marche malaxeur 2 *)
Auto_marche_mal2 := 
	Conf_Mixer2_Auto_Start
	AND NOT Info_malaxeur2_en_marche
	AND Info_Plant_In_Auto
	AND (
		TG1_nouvelle AND TG_IN[1].mot_destination.2
		OR TG2_nouvelle AND TG_IN[2].mot_destination.2
		OR TG3_nouvelle AND TG_IN[3].mot_destination.2
		OR TG4_nouvelle AND TG_IN[4].mot_destination.2
		OR Auto_marche_mal2);

Conf_inhib_arret_auto_mals := (Conf_tps_av_arret_mals &lt;= t#0s);

(* Arret Malaxeur 1*)
TON_ARRET_MAL1_IN (IN := Info_malaxeur1_en_marche
			AND Info_Plant_In_Auto
			AND NOT manu_logiciel (* Modif Jérémie BOUVET "Inde" 15/02/2010 *)(* Arret Malaxeurs *)
			AND Conf_Mixer1_Auto_Stop
			AND TG1_vide
			AND TG2_vide
			AND TG3_vide
			AND TG4_vide
			AND NOT Conf_inhib_arret_auto_mals
			AND NOT Conf_Mixer_RO_Stop,
		PT := Conf_tps_av_arret_mals,
		Q =&gt; Auto_arret_mal1_IN);

(* Arret Malaxeur 2*)
TON_ARRET_MAL2_IN (IN := Info_malaxeur2_en_marche
			AND Info_Plant_In_Auto
			AND NOT manu_logiciel (* Modif Jérémie BOUVET "Inde" 15/02/2010 *)(* Arret Malaxeurs *)
			AND Conf_Mixer2_Auto_Stop
			AND TG1_vide
			AND TG2_vide
			AND TG3_vide
			AND TG4_vide
			AND NOT Conf_inhib_arret_auto_mals
			AND NOT Conf_Mixer_RO_Stop,
		PT := Conf_tps_av_arret_mals,
		Q =&gt; Auto_arret_mal2_IN);
(* FIN Modif M.D. 20/01/2009 : Marche/Arret automatique malaxeur *)



(* Utilisation du front descendant pour activation klaxon avec un pulse *)
(* Modif M.D. 21/01/2009 : Gestion du klaxon *)
FD_VAL_CAM_A (CLK := Bit_validation_trappe1_malax1);
PULSE_KLAXON_A (IN := FD_VAL_CAM_A.Q,
	PT := Conf_klaxon_tps_marche,
	Q =&gt; cde_klaxon_trappe1_mal1);
FD_VAL_CAM_B (CLK := Bit_validation_trappe2_malax1);
PULSE_KLAXON_B (IN := FD_VAL_CAM_B.Q,
	PT := Conf_klaxon_tps_marche,
	Q =&gt; cde_klaxon_trappe2_mal1);
FD_VAL_CAM_C (CLK := Bit_validation_trappe1_malax2);
PULSE_KLAXON_C (IN := FD_VAL_CAM_C.Q,
	PT := Conf_klaxon_tps_marche,
	Q =&gt; cde_klaxon_trappe1_mal2);
FD_VAL_CAM_D (CLK := Bit_validation_trappe2_malax2);
PULSE_KLAXON_D (IN := FD_VAL_CAM_D.Q,
	PT := Conf_klaxon_tps_marche,
	Q =&gt; cde_klaxon_trappe2_mal2);
(* XX/11/2013 - P864 - artf1159237 - Horn activation for dry batch process*)
FD_VAL_CAM_E (CLK := Bit_validation_camion_s_seche);
PULSE_KLAXON_E (IN := FD_VAL_CAM_E.Q,
	PT := Conf_klaxon_tps_marche,
	Q =&gt; cde_klaxon_dry);
(* FIN Modif M.D. 21/01/2009 : Gestion du klaxon *)
</STSource>
	</program>
	<program>
		<identProgram name="170_Etat_Equipements" type="section" task="MAST"></identProgram>
		<ILSource>
(* Initialisation des variables locales de la section *)
LD Etat_Equipements_DEM_INIT
JMPCN Init_Etat_Equipements__Fin
Init_Etat_Equipements:

	(* Initialisation "Transfert des colorants terminé" *)
	LD TRUE
	S Etape_386_2xx_Init_a_faire

	(* Reset de la demande d'init *)
	LD TRUE
	R Etat_Equipements_DEM_INIT (* L'init de la section a bien été prise en compte. *)
Init_Etat_Equipements__Fin:



(* Info bascule "Granulat 1" libre *)

LD Poids_instantane_Gra1
LE Conf_Gra1_seuil_vide
ST TON_seuil_vide_Gra1.IN
  
CAL TON_seuil_vide_Gra1 (PT := Conf_granulat1_tps_stabilisation)
  
LD TON_seuil_vide_Gra1.Q
ST Seuil_vide_atteint_Gra1
  
LD TRUE
AND (	TRUE
	AND (
		LDN Ordre_intro_Gra1
		ANDN (	Conf_skip_transfert
			OR Conf_TT_granulat
		)
	)
	OR (
		LDN transfert_granulat_OK
		ANDN Vidange_granulat_dans_skip (* Modif R.C. 10/12/2009 bug #733, cas *)
			(* du skip de transfert + TT non pris en compte par la *)
			(* variable transfert_granulat_OK, qui n'est affectée que si *)
			(* il y a un skip de transfert OU (exclusif) une TT *)
		AND (	Conf_skip_transfert
			OR Conf_TT_granulat
		)
	)
	OR (	Conf_tapis_transfert
		AND fin_intro_tapis_transfert
	)
)
AND (	TRUE
	AND (	Seuils_vides_atteints_Gra1
		AND Conf_granulat1_skip (* Skip peseur *)
		AND Cable_skip_mou
		AND Skip_peseur_stabilise (* Ajout R.C. 29/10/2012 P858 #0001851 : On attend que le *)
			(* skip soit bien arrêté et stabilisé avant de déterminer le poids avant *)
			(* dosage et de commencer les dosages. *)
		AND memo_skip_bas (* Roumanie *)
	)
	OR (	Seuils_vides_atteints_Gra1
		AND Info_balance_Gra1_fermee
		ANDN Vidange_bloquee_Gra1
		ANDN Conf_granulat1_skip
	)
)
ST Etat_balance_Gra1

LD Etat_balance_Gra1
AND (	Etat_balance_Eau1
	OR (	Conf_Eau_dest_basc[1]
		NE 1
	)
)
AND (	Etat_balance_Eau2
	OR (	Conf_Eau_dest_basc[2]
		NE 1
	)
)
AND (	Etat_balance_Add	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	OR (	Conf_basc_add_dest
		NE 5
	)
)
ST Etat_balance_Gra1_et_glace



(* Info bascule "Granulat 2" libre *)

LD Poids_instantane_Gra2
LE Conf_Gra2_seuil_vide
ST TON_seuil_vide_Gra2.IN

CAL TON_seuil_vide_Gra2 (PT := Conf_granulat2_tps_stabilisation)

LD TON_seuil_vide_Gra2.Q
ST Seuil_vide_atteint_Gra2

LDN Conf_granulat2_pres_balance
OR (	TRUE
	AND (	TRUE
		AND (
			LDN Ordre_intro_Gra2
			ANDN (	Conf_skip_transfert
				OR Conf_TT_granulat
			)
		)
		OR (
			LDN transfert_granulat_OK
			ANDN Vidange_granulat_dans_skip (* Modif R.C. 10/12/2009 bug #733, cas *)
				(* du skip de transfert + TT non pris en compte par la *)
				(* variable transfert_granulat_OK, qui n'est affectée que si *)
				(* il y a un skip de transfert OU (exclusif) une TT *)
			AND (	Conf_skip_transfert
				OR Conf_TT_granulat
			)
		)
		OR (	Conf_tapis_transfert
			AND fin_intro_tapis_transfert
		)
	)
	AND (	Seuils_vides_atteints_Gra2
		AND Info_balance_Gra2_fermee
		ANDN Vidange_bloquee_Gra2
		AND (	Conf_granulat2_bascule
			OR Conf_granulat2_tapis
		)
	)
)
ST Etat_balance_Gra2

LD Etat_balance_Gra2
AND (	Etat_balance_Eau1
	OR (	Conf_Eau_dest_basc[1]
		NE 2
	)
)
AND (	Etat_balance_Eau2
	OR (	Conf_Eau_dest_basc[2]
		NE 2
	)
)
AND (	Etat_balance_Add	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	OR (	Conf_basc_add_dest
		NE 6
	)
)
ST Etat_balance_Gra2_et_glace



(* Info bascule "Ciment 1" libre *)

LD Poids_instantane_Cim1
LE Conf_Cim1_seuil_vide
ST TON_seuil_vide_Cim1.IN
  
CAL TON_seuil_vide_Cim1 (PT := Conf_cim1_tps_stabilisation)
  
LD TON_seuil_vide_Cim1.Q
ST Seuil_vide_atteint_Cim1
AND Info_balance_Cim1_fermee
AND (	TRUE
	AND (	Conf_bonbonne_cim
		ANDN Vidange_Cim_dans_bonbonne
	)
	OR (
		LDN Introduction_Cim1_encours
		ANDN Conf_bonbonne_cim
	)
)
ST Etat_balance_Cim1

LDN Seuil_vide_atteint_Cim1
AND TRUE (* Modif M.D. 19/12/2007 Lavaur : Problème sur la commande LDN x, R y !!!!*)
R Cde_bascule_Cim1_vide___old
  
LDN auto_pupitre_et_logiciel (* Modif R.C. 02/09/2011 pour le cas du mode manuel pupitre *)
(*LD Manu_logiciel*)
AND Seuil_vide_atteint_Cim1
S Cde_bascule_Cim1_vide___old

(* Simplification R.C. 02/09/2011, suite à demande d'Adrien HELYE à Mirabeau *)
LD Seuil_vide_atteint_Cim1
ST Cde_bascule_Cim1_vide (* Bascule ciment vide. Sortie API utilisée pour le système de transfert ciment. *)



(* Info bascule "Ciment 2" libre *)

LD Poids_instantane_Cim2
LE Conf_Cim2_seuil_vide
ST TON_seuil_vide_Cim2.IN

CAL TON_seuil_vide_Cim2 (PT := Conf_cim2_tps_stabilisation)

LD TON_seuil_vide_Cim2.Q
ST Seuil_vide_atteint_Cim2
AND Info_balance_Cim2_fermee
ANDN Introduction_Cim2_encours
ST Etat_balance_Cim2



(* Info bascule "Eau 1" libre *)

LD Poids_instantane_Eau1
LE Conf_eau1_seuil_vide
ST TON_seuil_vide_Eau1.IN
  
CAL TON_seuil_vide_Eau1 (PT := Conf_eau1_tps_stabilisation)
  
LD TON_seuil_vide_Eau1.Q
ST Seuil_vide_atteint_Eau1
AND Info_balance_eau1_fermee
ANDN Introduction_Eau1_encours
ANDN Lancer_transfert_Glace_Eau1 (* Ajout R.C. 19/04/2012 On attend que le transfert de *)
	(* la glace soit fini pour permettre le dosage de la prochaine gâchée dans la bascule. *)
ANDN Attente_fin_vidange_Eau1 (* Ajout R.C. 06/09/2012 Vidange en plusieurs fois : On attend *)
	(* que toutes les phases de vidange soient terminées pour permettre le dosage *)
	(* de la gâchée suivante. *)
ST Etat_balance_Eau1

LD Etat_balance_Eau1
AND (	Etat_balance_Gra1
	OR (	Conf_Eau_dest_basc[1]
		NE 1
	)
)
AND (	Etat_balance_Gra2
	OR (	Conf_Eau_dest_basc[1]
		NE 2
	)
)
ST Etat_balance_Eau1_et_son_TP



(* Info bascule "Eau 2" libre *)

LD Poids_instantane_Eau2
LE Conf_Eau2_seuil_vide
ST TON_seuil_vide_Eau2.IN

CAL TON_seuil_vide_Eau2 (PT := Conf_eau2_tps_stabilisation)

LD TON_seuil_vide_Eau2.Q
ST Seuil_vide_atteint_Eau2
AND Info_balance_Eau2_fermee
ANDN Introduction_Eau2_encours
ANDN Lancer_transfert_Glace_Eau2 (* Ajout R.C. 19/04/2012 On attend que le transfert de *)
	(* la glace soit fini pour permettre le dosage de la prochaine gâchée dans la bascule. *)
ST Etat_balance_Eau2

LD Etat_balance_Eau2
AND (	Etat_balance_Gra1
	OR (	Conf_Eau_dest_basc[2]
		NE 1
	)
)
AND (	Etat_balance_Gra2
	OR (	Conf_Eau_dest_basc[2]
		NE 2
	)
)
ST Etat_balance_Eau2_et_son_TP



(* Info bascule "Adjuvant" libre *)

LD Poids_instantane_Adj
LE Conf_Adj_Seuil_vide
ST TON_seuil_vide_Adj.IN

CAL TON_seuil_vide_Adj (PT := Conf_adjuvant_basc_tps_stab)

LD TON_seuil_vide_Adj.Q
ST Seuil_vide_atteint_Adj

LDN Conf_adjuvant_basc_pres_bascule
ANDN Introduction_Adj_encours
ANDN Introduction_Comp_Adj_encours
OR (	Seuil_vide_atteint_Adj
	AND Info_balance_Adj_fermee
	AND (	TRUE
		AND (	Info_balance_Adj_Comp_ferme
			AND Conf_adjuvant_basc_compartimente
		)
		ORN Conf_adjuvant_basc_compartimente
	)
)
ST Etat_balance_Adj



(* Info bascule "Anhydrite" libre *)

LD Poids_instantane_Anh
LE Conf_Anh_seuil_vide
ST TON_seuil_vide_Anh.IN

CAL TON_seuil_vide_Anh (PT := Conf_anhydrite_tps_stabilisation)

LD TON_seuil_vide_Anh.Q
ST Seuil_vide_atteint_Anh

LDN Conf_anhydrite_pres_bascule
OR (	Info_balance_Anh_fermee
	AND Seuil_vide_atteint_Anh
	ANDN Introduction_Anh_encours
)
ST Etat_balance_Anh

(* Info bascule "Additionnelle" libre *)
(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
LD Conf_basc_add_ctrl_vide
OR ( TRUE
	ANDN conf_basc_add_mode_decomptage
	ANDN Conf_basc_add_ctrl_vide
)
ST Seuil_vide_add_dispo	(* Vérification "seuil_vide_atteint_add" disponible *)

LD conf_basc_add_mode_decomptage
AND Info_Plant_In_Auto
AND Manu_logiciel
ANDN Conf_basc_add_ctrl_vide
AND (Poids_basc_add_decomptage
LE (Conf_Basc_Add_seuil_vide
)
)
S Basc_add_vide

LD conf_basc_add_mode_decomptage
AND Info_Plant_In_Auto
AND Manu_logiciel
ANDN Conf_basc_add_ctrl_vide
AND (Poids_basc_add_decomptage
GT (Conf_Basc_Add_seuil_vide
)
)
R Basc_add_vide

(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
LD Seuil_vide_add_dispo
AND (TRUE
	AND ( conf_basc_add_mode_decomptage (* Mode décomptage &amp; ctrl_vide présentsur la bascule *)
	AND Info_ctrl_vide_basc_add_filt 
	)
	OR ( TRUE
		ANDN conf_basc_add_mode_decomptage (* Mode comptage &amp; /ou pas ctrl_vide présent sur la bascule *)
		AND ( TRUE
			ANDN Conf_basc_add_ctrl_vide
			OR (Conf_basc_add_ctrl_vide
			AND Info_ctrl_vide_basc_add_filt
			)
		)
		AND (Poids_instantane_Add
			LE (Conf_Basc_Add_seuil_vide
		INT_TO_DINT
			)
		)
	)
)
ST TON_seuil_vide_Add.IN

CAL TON_seuil_vide_Add (PT := Conf_basc_add_tps_stabilisation)

LD TON_seuil_vide_Add.Q 
OR Basc_add_vide (* Mode décomptage &amp; pas de ctrl_vide présent sur la bascule *)
ST Seuil_vide_atteint_Add

LDN conf_basc_add_pres_bascule
OR (	Info_balance_Add_fermee
	AND Seuil_vide_atteint_Add
	ANDN Introduction_Add_encours
	ANDN Lancer_transfert_ADD_gra (* ASM Nov 2013 -P864 : Additional balance transfert conditions *)
	ANDN Lancer_transfert_Add_Eau1 
	ANDN Lancer_transfert_Add_skip
	ANDN Lancer_transfert_Add_tapis_tr
)
OR (	Info_balance_Add_fermee
	AND Seuil_vide_atteint_Add
	AND Conf_tapis_transfert
	AND fin_intro_tapis_transfert
	AND(	Conf_basc_add_dest
		EQ 7
	)
)
ST Etat_balance_Add
  
(* ASM Nov 2013 -P864 : Additional balance transfert conditions *)
LD Etat_balance_Add
AND (	Etat_balance_Gra1
	OR (	Conf_basc_add_dest
		NE 5
	)
)
AND (	Etat_balance_Gra2
	OR (	Conf_basc_add_dest
		NE 6
	)
)
ST Etat_balance_Add_et_son_TP

(* Info Malaxeur 1 vide *)

LD valeur_instantanee_wattmetre1
LE Conf_malaxeur1_seuil_vide
ST TON_seuil_vide_Mal1.IN

CAL TON_seuil_vide_Mal1 (PT := Conf_malaxeur1_tps_stab_watt)

LD TON_seuil_vide_Mal1.Q
AND conf_mal1_presence_wattmetre
ST Seuil_vide_atteint_Mal1

LD declaration_malaxeur_1_vide
AND (	TRUE
	AND (	Seuil_vide_atteint_Mal1
		ANDN Intro_en_cours
	)
	ORN conf_mal1_presence_wattmetre
)
ST malaxeur_1_vide



(* Déclaration du seuil vide malaxeur 1 pour la séquence d'ouverture de trappe *)

LD TRUE
AND (	fin_malaxeur1_ouvert
	ANDN conf_mal1_presence_wattmetre
)
OR (	Seuil_vide_atteint_Mal1
	AND conf_mal1_presence_wattmetre
)
OR (
	LDN conf_mal1_presence_wattmetre
	ANDN Info_Gate_Mode_Auto
	AND trappe_mal1_ouverte
)
OR (	Vidange_en_cours_Mal1
	AND Vid_Mal1_OK
)
ST Vid_Mal1_OK



(* Info Malaxeur 2 vide *)

LD valeur_instantanee_wattmetre2
LE Conf_malaxeur2_seuil_vide
ST TON_seuil_vide_Mal2.IN

CAL TON_seuil_vide_Mal2 (PT := Conf_malaxeur2_tps_stab_watt)

LD TON_seuil_vide_Mal2.Q
AND conf_mal2_presence_wattmetre
ST Seuil_vide_atteint_Mal2

LD declaration_malaxeur_2_vide
AND (	TRUE
	AND (	Seuil_vide_atteint_Mal2
		ANDN Intro_en_cours
	)
	ORN conf_mal2_presence_wattmetre
)
ST malaxeur_2_vide



(* Déclaration du seuil vide malaxeur 2 pour la séquence d'ouverture de trappe *)

LD TRUE
AND (	fin_malaxeur2_ouvert
	ANDN conf_mal2_presence_wattmetre
)
OR (	Seuil_vide_atteint_Mal2
	AND conf_mal2_presence_wattmetre
)
OR (
	LDN conf_mal2_presence_wattmetre
	ANDN Info_Gate_Mode_Auto
	AND trappe_mal2_ouverte
)
OR (	Vidange_en_cours_Mal2
	AND Vid_Mal2_OK
)
ST Vid_Mal2_OK



(* Bit début d'introduction dans le malaxeur *)

LD TRUE
AND (	Attente_debut_introduction
	ANDN debut_intro_tapis_transfert
)
OR (	Info_tapis_transfert_en_marche
	AND (
		LDN Info_balance_Gra1_fermee
		OR (
			LDN Info_balance_Gra2_fermee
			AND Conf_granulat2_pres_balance
		)
		OR (
			LDN Info_balance_Add_fermee (* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
			AND ( Conf_basc_add_dest
				EQ 7
				)
		)
	)
) 
ST Attente_debut_introduction

LD Attente_debut_introduction
ST TON_debut_intro.IN
CAL TON_debut_intro (PT := Conf_tap_trans_tps_vidange)

LD TON_debut_intro.Q
S debut_intro_tapis_transfert



(* Déclaration skip de transfert prêt à être rempli *)

LD Conf_skip_transfert
AND skip_transfert_vide
AND Info_skip_bas
ST bit_valide_skip



(* Trémie tampon granulat vide *)

LD Poids_instantane_TT_Gra
LE Conf_TT_Gra_seuil_vide
ST TON_seuil_vide_TT_granulat.IN

CAL TON_seuil_vide_TT_granulat (PT := Conf_TT_granulat_tps_stab)

LD TON_seuil_vide_TT_granulat.Q
ST Seuil_vide_atteint_TT_Gra



(* Déclaration tremie tampon granulat vide *)

LD TRUE
AND (	FALSE
	OR (	tremie_tampon_granulat_vide
		ANDN Conf_TT_Gra_pesee
	)
	OR (	Seuil_vide_atteint_TT_Gra
          	AND Conf_TT_Gra_pesee
        )
)
AND (	Info_TT_Gra_ctrl_vide_filtr
      	ORN Conf_TT_Gra_ctrl_vide      
)
ST TT_Gra_vide



(* Controle de non-vide *)

LD Poids_instantane_TT_Gra
GT Conf_TT_Gra_seuil_vide
ST TON_Poids_sup_seuil_vide_TT_Gra.IN
CAL TON_Poids_sup_seuil_vide_TT_Gra (PT := Conf_TT_granulat_tps_stab)

LDN Info_TT_Gra_ctrl_vide
ST TON_TT_gra_ctrl_non_vide.IN
CAL TON_TT_gra_ctrl_non_vide(PT := Conf_TT_Gra_tps_filtre_ctrl_vide)

LD FALSE
OR (	Conf_TT_Gra_pesee
	AND TON_Poids_sup_seuil_vide_TT_Gra.Q (* On n'utilise pas "Seuil_vide_atteint_TT_Gra" *)
		(* car cette variable retarde l'état "vide atteint" et ne filtre pas les *)
		(* pics de mesure au dela du seuil vide *)
)
OR (	Conf_TT_Gra_ctrl_vide      
	AND TON_TT_gra_ctrl_non_vide.Q (* On n'utilise pas "Info_TT_Gra_ctrl_vide_filtr", car *)
		(* celui-ci retarde l'état "vide atteint" *)
)
ST TT_Gra_non_vide (* Ce flag est développé pour l'alarme "poids_sup_seuil_vide_TT_gra". *)
	(* On ne pouvait pas réutiliser le flag "TT_Gra_vide" car ce dernier *)
	(* pouvait repasser à FALSE trop vite avant que la TT soit rééllement remplie, *)
	(* et pouvait repasser à TRUE trop tard après que la TT soit rééllement vidée. *)



(* Alarme trémie tampon non vide *)

(* 1- on détermine si la TT granulat devrait être vide *)
CAL fm_memo_skip_haut (CLK := memo_skip_haut)
LD FALSE
OR (	Conf_skip_transfert (* skip de transfert dans TT*)
	AND fm_memo_skip_haut.Q
)
OR (	TRUE
	ANDN Conf_skip_transfert
	AND Conf_tapis_transfert (* tapis de transfert dans TT *)
	AND Cde_marche_tapis_transfert
)
OR (	TRUE
	ANDN Conf_skip_transfert
	ANDN Conf_tapis_transfert
	AND(	FALSE
		OR (	Conf_granulat1_skip (* skip peseur dans TT *)
			AND fm_memo_skip_haut.Q
		)
		OR (	TRUE
			ANDN Conf_granulat1_skip (* tapis ou bascule dans TT*)
			AND Cde_vidange_bascule_Gra1
		)
		OR (	Conf_granulat2_pres_balance (* Conf_granulat2_bascule ou Conf_granulat2_tapis *)
			AND Cde_vidange_bascule_Gra2
		)
	)
)
ST Vidange_dans_TT_gra
JMPCN TT_Gra_devrait_etre_vide_1
	LD TRUE
	R TT_Gra_devrait_etre_vide (* La TT devrait ne plus être vide dans un instant *)
TT_Gra_devrait_etre_vide_1:

CAL FD_vidange_TT_gra (CLK := Cde_vidange_TT_gra)
LDN Conf_TT_granulat
OR FD_vidange_TT_gra.Q
JMPCN TT_Gra_devrait_etre_vide_2
	LD TRUE
	S TT_Gra_devrait_etre_vide (* La TT devrait être vide dès à présent *)
TT_Gra_devrait_etre_vide_2:

(* 2- si la TT gra n'est pas vide alors qu'elle devrait l'être, alors on lève l'alarme *)
LD Conf_TT_granulat
AND TT_Gra_non_vide (* On ne peut pas utiliser "TT_Gra_vide" car ce flag peut déclarer *)
	(* que la trémie tampon n'est plus vide trop vite (notamment dans le cas d'un skip) *)
	(* et cette variable temporise l'apparition de l'état "vide". *)
AND TT_Gra_devrait_etre_vide
AND Info_TT_Gra_fermee
ANDN Info_TT_Gra_ouverte
S Poids_sup_seuil_vide_TT_gra



(* Déclaration tremie tampon granulat prête à être remplie *)

LD Conf_TT_granulat
AND Info_TT_Gra_fermee
ANDN Info_TT_Gra_ouverte
AND TT_Gra_vide (* Nécessaire dans le cas d'une TT non pesée sans controle de vide *)
(*ANDN TT_Gra_non_vide*)
ANDN Poids_sup_seuil_vide_TT_gra (* Modif R.C. 18/11/2010 P801 : on bloque le transfert *)
	(* dans la TT si on a l'alarme *)
ST bit_valide_TT



(* Trémie tampon ciment vide *)

LD Poids_instantane_TT_Cim
LE Conf_TT_Cim_seuil_vide
ST TON_seuil_vide_TT_ciment.IN

CAL TON_seuil_vide_TT_ciment (PT := Conf_TT_cim_tps_stab)

LD TON_seuil_vide_TT_ciment.Q
ST Seuil_vide_atteint_TT_Cim



(* Déclaration tremie tampon ciment prête à être remplie *)

LD Conf_TT_Cim
AND Info_TT_Cim_fermee
ANDN Info_TT_Cim_ouverte
AND (	TRUE
	AND (	TT_cim_vide
		ANDN Conf_TT_Cim_pesee
	)
	OR (	Seuil_vide_atteint_TT_Cim
		AND Conf_TT_Cim_pesee
	)
)
ST bit_valide_TT_cim



(* Temporisations pour la bonbonne à colorants *)

(* - Temporisation de l'état "clapet XV2 fermé" avant d'autoriser une mise en pression *)
LD Info_XV2_ferme
ANDN Info_XV2_ouvert
ST TON_XV2_Ferme.IN
CAL TON_XV2_Ferme(PT := Conf_Color_XV2_Wait_After_Close)(* 2s typiquement *)

(* - Chronométrage du temps de mise en pression *)
LD Cde_Ouv_XV3
AND Info_Machine_Colorant_OK
ST TON_Ouv_XV3.IN
CAL TON_Ouv_XV3(PT := t#999s)

(* - Attente avec le pressostat PSL1 désactivé pour déclarer la fin du *)
(* transfert des colorants (voir ci-dessous) *)
LDN Info_pressostat_actif
AND Cde_Ouv_XV3 (* On ne doit valider la fin du transfert que si la bonbonne a été mise sous pression *)
	(* On a ajouté cette condition, car la bonbonne pouvait être considérée vide si en *)
	(* mode manuel logiciel, on arrêtait la mise sous pression dès qu'on était à l'étape *)
	(* "Etape_386_220_Detect_Fin_Transf2" *)
	(* Note R.C. 08/01/2013 : il aurait été préférable de pauser la temporisation si on *)
	(* n'a pas "Cde_Ouv_XV3" (au lieu de l'arrêter). *)
AND Info_Machine_Colorant_OK
ST TON_Attente_fin_tranfert_color.IN
CAL TON_Attente_fin_tranfert_color(PT := Conf_Color_Wait_End_Transf)(* 20s typiquement *)



(* Transfert des colorants terminé *)
(* On utilise la méthode rappelée dans la note techique LAF022-NT40 *)
(* (Grafcet à 3 étapes) *)
(* Le booléen "Etape_386_230_Fin_Transf_Detecte" est activé quand on *)
(* détecte que le transfert des colorants est terminé. *)
LD Conf_bonbonne_colorant
JMPCN Verif_transf_color_termine__fin
Verif_transf_color_termine :
	(* - Init *)
	LD FALSE
	ST Etape_386_2xx_Designee
	(* - Traitement séquentiel (Changement des états) *)
	(* (Toutes étapes) -&gt; 210_Detect_Fin_Transf1*)
	LD Etape_386_2xx_Init_a_faire
	JMPCN Passage_Etape_386_xxx_210__fin
	Passage_Etape_386_xxx_210:
		LD TRUE
		S Etape_386_210_Detect_Fin_Transf1
		R Etape_386_220_Detect_Fin_Transf2
		R Etape_386_230_Fin_Transf_Detecte
		ST Etape_386_2xx_Designee
		R Etape_386_2xx_Init_a_faire
	Passage_Etape_386_xxx_210__fin:
	(* 210_Detect_Fin_Transf1 -&gt; 220_Detect_Fin_Transf2 *)
	(* ou *)
	(* 210_Detect_Fin_Transf1 -&gt; 230_Fin_Transf_Detecte *)
	LDN Etape_386_2xx_Designee
	AND Etape_386_210_Detect_Fin_Transf1
	JMPCN Verif_Etape_386_210__fin
	Verif_Etape_386_210:
		LD Info_pressostat_actif
		AND (
			LD TON_Ouv_XV3.ET
			GE Conf_Color_Valid_Time_PSL1(* 10s typiquement *)
		)
		JMPCN Passage_Etape_386_210_220__fin
		Passage_Etape_386_210_220:
			LD TRUE
			R Etape_386_210_Detect_Fin_Transf1
			S Etape_386_220_Detect_Fin_Transf2
			ST Etape_386_2xx_Designee
		JMP Verif_Etape_386_210__fin
		Passage_Etape_386_210_220__fin:
		LD TON_Ouv_XV3.ET
		GE Conf_Color_Tranf_Time_200g (* Cas des quantités dosées faibles (&lt;200g) : *)
			(* le pressostat PSL1 n'a pas le temps de passer le seuil. *)
			(* Si on ne détecte toujours pas un déclenchement du pressostat *)
			(* au bout de 30s, on considère que le transfert est terminé. *)
		JMPCN Passage_Etape_386_210_230__fin
		Passage_Etape_386_210_230:
			LD TRUE
			R Etape_386_210_Detect_Fin_Transf1
			S Etape_386_230_Fin_Transf_Detecte
			ST Etape_386_2xx_Designee
		Passage_Etape_386_210_230__fin:
	Verif_Etape_386_210__fin:
	(* 220_Detect_Fin_Transf2 -&gt; 230_Fin_Transf_Detecte *)
	LDN Etape_386_2xx_Designee
	AND Etape_386_220_Detect_Fin_Transf2
	JMPCN Verif_Etape_386_220__fin
	Verif_Etape_386_220:
		LD TON_Attente_fin_tranfert_color.Q (* Pressostat PSL1 retombé pendant 20s, après l'avoir vu à 1 *)
		JMPCN Passage_Etape_386_220_230__fin
		Passage_Etape_386_220_230:
			LD TRUE
			R Etape_386_220_Detect_Fin_Transf2
			S Etape_386_230_Fin_Transf_Detecte
			ST Etape_386_2xx_Designee
		Passage_Etape_386_220_230__fin:
	Verif_Etape_386_220__fin:
	(* 230_Fin_Transf_Detecte -&gt; 210_Detect_Fin_Transf1 *)
	LDN Etape_386_2xx_Designee
	AND Etape_386_230_Fin_Transf_Detecte
	JMPCN Verif_Etape_386_230__fin
	Verif_Etape_386_230:
		LD Info_XV2_ouvert
		ORN Info_XV2_ferme
		JMPCN Passage_Etape_386_230_210__fin
		Passage_Etape_386_230_210:
			LD TRUE
			R Etape_386_230_Fin_Transf_Detecte
			S Etape_386_210_Detect_Fin_Transf1
			ST Etape_386_2xx_Designee
		Passage_Etape_386_230_210__fin:
	Verif_Etape_386_230__fin:
Verif_transf_color_termine__fin:



(* Bonbonne à colorants vide *)
(* Deux statuts permettent de représenter l'état vide de la bonbonne à colorants : *)
(* - "Reserv_Exped_non_vide" est à TRUE lorsque la bonbonne n'est pas complétement vide *)
(* - "Etat_Reserv_Exped" est à TRUE lorsque la bonbonne contient la totalité de *)
(*	la poudre (colorants) dosée. *)
LD Conf_bonbonne_colorant
JMPCN MaJ_statuts_bonb_colorant__fin
MaJ_statuts_bonb_colorant:
	(* - Statut "Non vide" *)
	LD Cde_vidange_bascule_Adj
	ORN Info_balance_Adj_fermee
	OR (	Etape_386_030_Autoris_Vidange
		AND Etape_386_0xx_Designee
	)(* sur activation de l'étape 030_Autoris_Vidange *)
	JMPCN MaJ_statuts_bonb_colorant_1__fin
	MaJ_statuts_bonb_colorant_1:
		LD TRUE
		S Reserv_Exped_non_vide (* =&gt; Non vide *)
	MaJ_statuts_bonb_colorant_1__fin:
	(* - Statut "Pleine" *)
	LD Seuil_vide_atteint_Adj
	ST Pulse_Seuil_vide_atteint_Adj
	LD Pulse_Seuil_vide_atteint_Adj
	RE (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
	AND Reserv_Exped_non_vide
	OR (	Etape_386_050_Vidange_Terminee
		AND Etape_386_0xx_Designee
	)(* sur activation de l'étape 050_Vidange_Terminee *)
	JMPCN MaJ_statuts_bonb_colorant_2__fin
	MaJ_statuts_bonb_colorant_2:
		LD TRUE
		S Etat_reserv_exped  (* =&gt; Contient toute la poudre dosée *)
	MaJ_statuts_bonb_colorant_2__fin:
	(* - Perte du statut "pleine" *)
	LD Etape_386_220_Detect_Fin_Transf2 (* Après avoir vu le pressostat PSL1 actif... *)
	ANDN Info_pressostat_actif (* ...on perd le pressostat *)
	JMPCN MaJ_statuts_bonb_colorant_3__fin
	MaJ_statuts_bonb_colorant_3:
		LD TRUE
		R Etat_reserv_exped  (* =&gt; Dans ce cas, on peut représenter sur le synoptique que *)
			(* la bonbonne n'est plus pleine *)
	MaJ_statuts_bonb_colorant_3__fin:
	(* - Statut "Vide" *)
	LD Etape_386_230_Fin_Transf_Detecte
	JMPCN MaJ_statuts_bonb_colorant_4__fin
	MaJ_statuts_bonb_colorant_4:
		LD TRUE
		R Reserv_Exped_non_vide (* =&gt; Vide *)
		R Etat_reserv_exped (* =&gt; Ne contient pas toute la poudre dosée *)
	MaJ_statuts_bonb_colorant_4__fin:
MaJ_statuts_bonb_colorant__fin:



(* Alarme "Bonbonne colorant : Coffret non prêt" *)
LD Conf_Bonbonne_Colorant
JMPCN Alarme_coffret_non_pret__fin
Alarme_coffret_non_pret:
	(* Discordances des capteurs XV2 *)
	(* - 1 : Pas de perte d'une position initiale suffisamment rapidement, malgré la commande *)
	LD Cde_Ouv_XV2
	AND Info_XV2_ferme
	ST TON_dis_XV2_1a.IN
	CAL TON_dis_XV2_1a(PT := Conf_Color_XV2_Response_Time)(* 2s typiquement *)
	LDN Cde_Ouv_XV2 
	AND Info_XV2_ouvert
	ST TON_dis_XV2_1b.IN
	CAL TON_dis_XV2_1b(PT := Conf_Color_XV2_Response_Time)(* 2s typiquement *)
	LD TON_dis_XV2_1a.Q
	OR TON_dis_XV2_1b.Q
	ST Discordance_colorants_XV2_1
	(* - 2 : Pas de détection d'une position finale suffisamment rapidement, malgré la commande *)
	LD Cde_Ouv_XV2
	ANDN Info_XV2_ouvert
	ST TON_dis_XV2_2a.IN
	CAL TON_dis_XV2_2a(PT := Conf_Color_XV2_Open_Close_Time)(* 5s typiquement *)
	LDN Cde_Ouv_XV2
	ANDN Info_XV2_ferme
	ST TON_dis_XV2_2b.IN
	CAL TON_dis_XV2_2b(PT := Conf_Color_XV2_Open_Close_Time)(* 5s typiquement *)
	LD TON_dis_XV2_2a.Q
	OR TON_dis_XV2_2b.Q
	ST Discordance_colorants_XV2_2
	(* - 3 : Activation simultanée des 2 capteurs *)
	LD Info_XV2_ferme
	AND Info_XV2_ouvert
	ST Discordance_colorants_XV2_3

	(* Alarme Coffret non prêt *)
	LD FALSE
	OR (	TRUE
		ANDN Info_Machine_Colorant_OK
		AND (	Attente_Autoris_Vidange_Colorant
			OR Etape_386_030_Autoris_Vidange
			OR Etape_386_040_Vidange_En_Cours
			OR Etape_386_050_Vidange_Terminee
			OR Etape_386_060_Autoris_Ferm_Clap
			OR Etape_386_070_Autoris_Transfert
			OR Etape_386_080_Transfert_En_Cours
			OR BCMIX_Ouv_EV3 (* (manuel logiciel) *)
		)
	) (* Entrée "Machine colorant OK" à FALSE alors qu'on a besoin que la machine *)
		(* soit disponible. *)
	OR (	Info_pressostat_actif
		AND Etape_386_020_Att_Cond_Initiales
		AND Stockage_inter_Color_ACTIVE
	) (* Le pressostat est activé, alors qu'on s'attend à ce qu'il ne le soit *)
		(* pas pour débuter le cycle automatique *)
	OR (	Discordance_colorants_XV2_1
		OR Discordance_colorants_XV2_2
		OR Discordance_colorants_XV2_3
	) (* Un discordance est détectée sur les capteurs "XV2 ouvert" / "XV2 fermé" *)
	S Alarme_coffret_non_pret
Alarme_coffret_non_pret__fin:



(* Alarme "Bonbonne colorant : Pressostat bloqué" *)
(* Le pressostat PSL1 reste actif trop longtemps, ce qui signifie qu'il y a *)
(* un colmatage des poudres, ou un défaut du capteur. *)
CAL TON_Alarme_PSL1(IN := Info_pressostat_actif, PT := Conf_Colo_PSL1_Too_Long)(* 120s typiquement *)
LD TON_Alarme_PSL1.Q
S Alarme_PSL1_too_long



(* Tampons-pompes fermés *)

LDN Cde_vidange_tampon_ppe[1]
ST TON_Ferm_tampon_ppe1.IN
CAL TON_Ferm_tampon_ppe1(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[1])
LDN Cde_vidange_tampon_ppe[2]
ST TON_Ferm_tampon_ppe2.IN
CAL TON_Ferm_tampon_ppe2(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[2])
LDN Cde_vidange_tampon_ppe[3]
ST TON_Ferm_tampon_ppe3.IN
CAL TON_Ferm_tampon_ppe3(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[3])
LDN Cde_vidange_tampon_ppe[4]
ST TON_Ferm_tampon_ppe4.IN
CAL TON_Ferm_tampon_ppe4(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[4])
LDN Cde_vidange_tampon_ppe[5]
ST TON_Ferm_tampon_ppe5.IN
CAL TON_Ferm_tampon_ppe5(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[5])
LDN Cde_vidange_tampon_ppe[6]
ST TON_Ferm_tampon_ppe6.IN
CAL TON_Ferm_tampon_ppe6(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[6])
LDN Cde_vidange_tampon_ppe[7]
ST TON_Ferm_tampon_ppe7.IN
CAL TON_Ferm_tampon_ppe7(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[7])
LDN Cde_vidange_tampon_ppe[8]
ST TON_Ferm_tampon_ppe8.IN
CAL TON_Ferm_tampon_ppe8(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[8])
LDN Cde_vidange_tampon_ppe[9]
ST TON_Ferm_tampon_ppe9.IN
CAL TON_Ferm_tampon_ppe9(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[9])
LDN Cde_vidange_tampon_ppe[10]
ST TON_Ferm_tampon_ppe10.IN
CAL TON_Ferm_tampon_ppe10(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[10])
LDN Cde_vidange_tampon_ppe[11]
ST TON_Ferm_tampon_ppe11.IN
CAL TON_Ferm_tampon_ppe11(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[11])
LDN Cde_vidange_tampon_ppe[12]
ST TON_Ferm_tampon_ppe12.IN
CAL TON_Ferm_tampon_ppe12(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[12])
LDN Cde_vidange_tampon_ppe[13]
ST TON_Ferm_tampon_ppe13.IN
CAL TON_Ferm_tampon_ppe13(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[13])
LDN Cde_vidange_tampon_ppe[14]
ST TON_Ferm_tampon_ppe14.IN
CAL TON_Ferm_tampon_ppe14(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[14])
LDN Cde_vidange_tampon_ppe[15]
ST TON_Ferm_tampon_ppe15.IN
CAL TON_Ferm_tampon_ppe15(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[15])
LDN Cde_vidange_tampon_ppe[16]
ST TON_Ferm_tampon_ppe16.IN
CAL TON_Ferm_tampon_ppe16(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[16])
LDN Cde_vidange_tampon_ppe[17]
ST TON_Ferm_tampon_ppe17.IN
CAL TON_Ferm_tampon_ppe17(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[17])
LDN Cde_vidange_tampon_ppe[18]
ST TON_Ferm_tampon_ppe18.IN
CAL TON_Ferm_tampon_ppe18(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[18])
LDN Cde_vidange_tampon_ppe[19]
ST TON_Ferm_tampon_ppe19.IN
CAL TON_Ferm_tampon_ppe19(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[19])
LDN Cde_vidange_tampon_ppe[20]
ST TON_Ferm_tampon_ppe20.IN
CAL TON_Ferm_tampon_ppe20(PT := Conf_Hopper_Tank_Response_Time, Q =&gt; Tampon_ppe_ferme[20])
	



(* Mettre à zéro les commandes de dosage *)
(* Modif R.C. 09/07/03 pour corriger le *)
(* problème de relais collé *)

LD 1
ST index_fermeture_organes_dosage

boucle_maz_cdes_dosage:
	LD TRUE
	STN Cdes_dosage[index_fermeture_organes_dosage]

	LD index_fermeture_organes_dosage
	ADD 1
	ST index_fermeture_organes_dosage
	LE 72
JMPC boucle_maz_cdes_dosage

LD TRUE
STN Cde_dosage_Anh
(* FIN Mettre à zéro les commandes de dosage *)



(*
(* ROUMANIE : Défaut Vis à ciment *)
(* Une seule entré pour toutes les vis, l'alarme n'est pas bloquante *)
CAL TON_CLAPET1 (IN := Info_Clapet_ferm_Vis_Cim1, PT := T#5s)
(*
LD TON_CLAPET1.Q 
S Alarme_Clapet_ferme_Vis_Ciment1
*)
CAL TON_CLAPET2 (IN := Info_Clapet_ferm_Vis_Cim2, PT := T#5s)
(*
LD TON_CLAPET2.Q 
S Alarme_Clapet_ferme_Vis_Ciment2
*)
CAL TON_CLAPET3 (IN := Info_Clapet_ferm_Vis_Cim3, PT := T#5s)
(*
LD TON_CLAPET3.Q 
S Alarme_Clapet_ferme_Vis_Ciment3
*)
CAL TON_CLAPET4 (IN := Info_Clapet_ferm_Vis_Cim4, PT := T#5s)
(*
LD TON_CLAPET4.Q 
S Alarme_Clapet_ferme_Vis_Ciment4
*)
*)



(* AUTRES PROTECTIONS *)

CAL TON_Ctrl_volt (IN := Info_Tension_NOK, PT := Conf_Voltage_Control_TON)
LD TON_Ctrl_volt.Q
S Alarme_Controle_Tension

LD Info_skip_defaut_ext_grde_vit
S skip_defaut_externe_grde_vit (* Ajout R.C. 19/01/2011 P803 *)

LD Info_skip_defaut_ext_capt_GV
S skip_defaut_ext_capt_grde_vit (* Ajout R.C. 19/01/2011 P803 *)

(*
LD Info_prot_therm_skip
S Alarme_prot_thermique_Skip
*)
LD info_prot_mot_skip
S Alarme_prot_mot_Skip

LD Info_prot_mot_compresseur
S Alarme_prot_mot_compr

LD Info_prot_mot_vib_Gra1
S Alarme_prot_mot_vib_Gra1

LD Info_prot_mot_vib_Cim
S Alarme_prot_mot_vib_Cim		

LD Info_prot_mot_vis_cim
S Alarme_prot_mot_vis_cim

LD Info_prot_mot_Vis_Cendre
S Alarme_prot_mot_Vis_Cendre (* Non utilisé : A Créer sur BC-Mix *)

LD Info_prot_mot_malax1
S Alarme_prot_mot_malax1

LD Info_prot_Thermique_malax1
S Alarme_prot_Thermique_malax1

LD Info_prot_mot_Dos_ADJ
S Alarme_prot_mot_Dos_ADJ  		

LD Info_prot_mot_Vid_ADJ_PPE
S Alarme_prot_mot_Vid_ADJ_PPE

LD Info_prot_mot_Vid_EAU_PPE
S Alarme_prot_mot_vid_PPE_EAU

LD Info_bac1_adj_plein
S Alarme_Niveau_haut_ADJ_Comp1

LD Info_bac2_adj_plein
S Alarme_Niveau_haut_ADJ_Comp2

LD Alarme_Niveau_haut_ADJ_Comp1
ST Tble_Alarme_Niv_haut_ADJ_Comp[1]
LD Alarme_Niveau_haut_ADJ_Comp2
ST Tble_Alarme_Niv_haut_ADJ_Comp[2]
LD Alarme_Niveau_haut_ADJ_Comp3
ST Tble_Alarme_Niv_haut_ADJ_Comp[3]
LD Alarme_Niveau_haut_ADJ_Comp4
ST Tble_Alarme_Niv_haut_ADJ_Comp[4]
LD Alarme_Niveau_haut_ADJ_Comp5
ST Tble_Alarme_Niv_haut_ADJ_Comp[5]
LD Alarme_Niveau_haut_ADJ_Comp6
ST Tble_Alarme_Niv_haut_ADJ_Comp[6]
LD Alarme_Niveau_haut_ADJ_Comp7
ST Tble_Alarme_Niv_haut_ADJ_Comp[7]
LD Alarme_Niveau_haut_ADJ_Comp8
ST Tble_Alarme_Niv_haut_ADJ_Comp[8]
LD Alarme_Niveau_haut_ADJ_Comp9
ST Tble_Alarme_Niv_haut_ADJ_Comp[9]
LD Alarme_Niveau_haut_ADJ_Comp10
ST Tble_Alarme_Niv_haut_ADJ_Comp[10]

LD Info_prot_PPE_Graisse1
S Alarme_prot_PPE_Graisse1		

LD Info_prot_tapis_pes_Gra
S Alarme_prot_tapis_pes_Gra		

LD Info_arret_urgence_granulat1
S Alarme_arret_urgence_granulat1	

LD Info_arret_urgence_granulat2
S Alarme_arret_urgence_granulat2

LD Info_arret_urgence_transfert
S Alarme_arret_urgence_transfert

LD Info_arret_urgence_skip
S Alarme_arret_urgence_skip

LD Info_arret_urgence_malaxeur
S Alarme_arret_urgence_malaxeur

LD Info_arret_urgence_silo
S Alarme_arret_urgence_silo

LD Info_arret_urgence_adjuvant
S Alarme_arret_urgence_adjuvant

LD Info_arret_urgence_pupitre
OR Pup_Cde_Arret_Urgence
OR Pup_Cde_Arret_Urgence_PTOR
S Alarme_arret_urgence_pupitre

LD Info_arret_urgence_aux1
S Alarme_arret_urgence_aux1

LD Info_arret_urgence_aux2
S Alarme_arret_urgence_aux2

LD Info_prot_mot_PPE_gen_EAU
S Alarme_prot_mot_PPE_gen_EAU 		

CAL TON_PRESSION_PPE_GRAISSE1 (IN := Info_Pression_PPE_Graisse1, PT := t#15s)
LD TON_PRESSION_PPE_GRAISSE1.Q
S Alarme_Pression_PPE_Graisse1

LD Info_Alarme_Glace (* Ajout R.C. 18/10/2009 *)
S Alarme_Glace
</ILSource>
	</program>
	<program>
		<identProgram name="180_Gestion_Gachees" type="section" task="MAST"></identProgram>
		<STSource>(********************************************************************************)
(*      PRINCIPE D'ÉCHANGE DES DONNÉES DE GÂCHÉE ENTRE BC-MIX ET L'API :	*)
(********************************************************************************)
(* 										*)
(* I/ Les tables de gâchée (TG) :						*)
(* ------------------------------						*)
(* 										*)
(* Les données des gâchées sont stockées dans des structures "TG_IN[x]" et	*)
(* "TG_OUT[x]".									*)
(* "TG_IN" contient les données	de gachée de BC-Mix à destination de l'API.	*)
(* "TG_OUT" contient le compte rendu de gachée, de l'API à destination		*)
(* de BC-Mix.									*)
(* 										*)
(* "TG_OUT[1]" est associé à "TG_IN[1]".					*)
(* "TG_OUT[2]" est associé à "TG_IN[2]".					*)
(* "TG_OUT[3]" est associé à "TG_IN[3]".					*)
(* "TG_OUT[4]" est associé à "TG_IN[4]".					*)
(* 										*)
(* Les gachées tournent indéfiniment, cela permet da garder l'ordre		*)
(* chronologique.								*)
(* Ainsi, la gestion de granulat (par exemple) est implicite : x=1,2,3,4,1,2...	*)
(* 										*)
(* /!\ lorsque tous les éléments de la TG sont vides, l’API peut repartir de	*)
(* l’élément « 1 », et non du suivant.						*)
(* 										*)
(* 										*)
(* II/ Les pointeurs de gâchée :						*)
(* -----------------------------						*)
(* 										*)
(* Les variables "index_entree_buffer" et "index_sortie_buffer" jouent		*)
(* le rôle de pointeurs.							*)
(* 										*)
(* "index_entree_buffer" permet de savoir quel est le prochain			*)
(* élément de la TG qui sera disponible pour y mettre des informations.		*)
(* Attention: dans le cas où tous les éléments sont utilisés, ce pointeur	*)
(* pointera sur un élément qui ne sera pas encore disponible; BC-Mix doit	*)
(* attendre que cet élément soit disponible pour y écrire des données.		*)
(* 										*)
(* "index_sortie_buffer" peut permettre* à BC-Mix de savoir quel est l'élément 	*)
(* de la TG qui contiendra les données de la prochaine gâchée qui se terminera.	*)
(* Dans le cas où tous les éléments sont vides, ce pointeur pointera vers	*)
(* un élément vide.								*)
(* 										*)
(* "index_sortie_buffer" sera égal à "index_entrée_buffer" lorsque les tables	*)
(* de gâchée seront toutes vides; et également lorsqu'elles seront toutes	*)
(* remplies.									*)
(* 										*)
(*  * : Note 24/06/2010 : BC-Mix utilise actuellement une alternative pour ce 	*)
(* fonctionnement : Il scrute la totalité des structures et analyse leurs 	*)
(* contenus pour savoir quelles sont les gâchées sur lesquelles pointer.	*)
(* 										*)
(* 										*)
(* III/ Principe de base :							*)
(* -----------------------							*)
(* 										*)
(* - BC-Mix remplit* la table de gâchée "TG_IN[x]" en mettant une valeur	*)
(* incrémentale dans "TG_IN[x].Numero_gachée" (1, 2, 3, 4, 5, 6, 7, ...)	*)
(* puis une fois la structure remplie, il met exactement la même valeur		*)
(* dans "TG_IN[x].CR_code_fin" pour confirmer que toutes les informations	*)
(* sont présentes.								*)
(*   * : BC-Mix doit vérifier que l'élément est bien disponible avant de le	*)
(*   remplir. Pour cela il vérifie que les "Numero_gachée" et "CR_code_fin"	*)
(*   sont bien à "0".								*)
(* 										*)
(* - L'API traite les données dès qu'il voit un "Numero_gachée" différent de	*)
(* "0" et le "CR_code_fin" égal au "Numero_gachée".				*)
(* En cours et en fin de traitement, l'API remplit le compte rendu de		*)
(* gachée dans la structure "TG_OUT".						*)
(* En fin de gachée, il met un "1" dans un bit "gachée terminée" dans		*)
(* "TG_OUT[x].CR_Etat_Gachee".							*)
(* 										*)
(* - Lorsque BC-Mix voit ce bit "gachée terminée" à "1", il récupère les	*)
(* informations dont il a besoin du compte rendu de				*)
(* gâchée (structure "TG_OUT"); puis met "1" dans "TG_IN[x].CR_Valid_BcMix"	*)
(* pour indiquer que les emplacements "TG_OUT[x]" et "TG_IN[x]" peuvent		*)
(* être initialisés.								*)
(* 										*)
(* - L'API initialise donc ces emplacements. Il passe notamment à "0"		*)
(* l'élément "TG_IN[x].Numero_gachee"; ce qui permettra à BC-Mix de remplir	*)
(* la table de gâchée avec les données d'une autre gâchée.			*)
(* 										*)
(* 										*)
(* IV/ Gestion des pointeurs de gâchée :					*)
(* -------------------------------------					*)
(* 										*)
(* Pour éviter des problèmes liés à une possible mauvaise synchronisation	*)
(* entre BC-Mix et l'API :							*)
(* - L'API sera le seul à pouvoir contrôler le pointeur "index_entree_buffer".	*)
(*   Lorsque l'API voit que BC-Mix lui a envoyé des données de gâchée dans	*)
(*   l'élément pointé par "index_entree_buffer", l'API incrémente ce pointeur.	*)
(*   Pour éviter des problèmes potentiels, BC-Mix doit faire en sorte que les	*)
(*   données d'une autre gâchée ne seront envoyées qu'une fois que l'API a	*)
(*   bien eu le temps d'incrémenter le pointeur.				*)
(* 										*)
(*   Le pointeur "index_entree_buffer" sera également écrit par l'API dans	*)
(*   le cas d'un reset. Cela semble bien fonctionner actuellement, car		*)
(*   l'IHM de BC-Mix a pour conséquence de ne pas pouvoir lancer la		*)
(*   production trop tôt après le reset (il faut savoir que l'ordre du		*)
(*   reset n'est pas instantané : c'est une impulsion de 1 seconde)		*)
(* 										*)
(* - L'API sera le seul à pouvoir contrôler le pointeur "index_sortie_buffer".	*)
(*   Ce pointeur sera incrémenté lorsque l'API aura eu confirmation que 	*)
(*   BC-Mix a bien récupéré les données ("CR_Valid_BcMix" à "1") et que		*)
(*   l'API a bien réinitialisé l'élément correspondant.				*)
(* 										*)
(* 										*)
(********************************************************************************)

(* Initialisation des variables locales de la section *)
IF Gestion_Gachees_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Gestion_Gachees_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(* Reset automatique des pointeurs de gâchée *)
(* Note 24/06/2010 : L'utilité de cette réinitialisation est incertaine. *)

(* Determination du flag "TG_Vides", ce qui permettra de *)
(* réinitialiser "index_entree_buffer" et "index_sortie_buffer" à "1" *)
(* lorsqu'on voit un front montant sur ce flag *) 
IF  (TG_IN[1].Numero_gachee = 0)
AND (TG_IN[1].CR_Code_fin = 0)
AND (TG_IN[2].Numero_gachee = 0)
AND (TG_IN[2].CR_Code_fin = 0)
AND (TG_IN[3].Numero_gachee = 0)
AND (TG_IN[3].CR_Code_fin = 0)
AND (TG_IN[4].Numero_gachee = 0)
AND (TG_IN[4].CR_Code_fin = 0)
THEN
	TG_Vides := TRUE;
ELSE
	TG_Vides := FALSE;
END_IF; 

Pulse_TG_Vides := TG_Vides;
Init_Numeros_Gachee := RE(Pulse_TG_Vides); (* Modif R.C. 06/09/2010 *) (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
IF Init_Numeros_Gachee THEN

	(* Initialisation automatique des pointeurs de gâchée *)
	index_entree_buffer := 1;
	index_sortie_buffer := 1;

	(* Impact sur certaines sections qui seront à initialiser *)
	Dosage_Gra1_DEM_INIT := TRUE; (* Ajout R.C. 06/09/2010 - Problème de non départ du dosage *)
		(* après une première gâchée, quand les index de gâchée *)
		(* sont réinitialisés à 1.  *)
	Dosage_Gra2_DEM_INIT := TRUE; (* Ajout R.C. 06/09/2010 *)
	Dosage_Cim_DEM_INIT := TRUE; (* Ajout R.C. 06/09/2010 *)
	Dosage_Eau_DEM_INIT := TRUE; (* Ajout R.C. 06/09/2010 *)
	Dosage_Adj_DEM_INIT := TRUE; (* Ajout R.C. 06/09/2010 *)
	Dosage_Add_DEM_INIT := TRUE; (* Ajout R.C. 06/09/2010 *)
	Dosage_Ppe_DEM_INIT := TRUE; (* Ajout R.C. 06/09/2010 *)
	Dosage_Anh_DEM_INIT := TRUE; (* Ajout R.C. 06/09/2010 *)
	Stockage_inter_Gra_DEM_INIT := TRUE; (* Ajout R.C. 30/08/2010 car sinon l'index *)
		(* "suite_index_transfert_G" est décalé lorsque les pointeurs de gâchées *)
		(* sont initialisés à 1 quand les TG sont vides. *)


END_IF;


(**************************************************************)
(*                      GACHEE ENTRANTE                       *)
(**************************************************************)

Element_TG_Vide := (TG_IN[index_entree_buffer].Numero_gachee =0);
Element_TG_Valide := NOT Element_TG_Vide
	AND (TG_IN[index_entree_buffer].CR_code_fin = TG_IN[index_entree_buffer].Numero_gachee);
Pulse_Element_TG_Valide := Element_TG_Valide; 
IF RE(Pulse_Element_TG_Valide) THEN (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
(* Au moment où l'élément pointé est rempli : *)

	(* Modif R.C. 06/09/2010 - P800 *)
	(* REINIT DU COMPTE RENDU DE GACHEE *)
	(* Avant, on récupérait les données de gâchées dans une table de gâchée entrante. *)
	(* En même temps, on écrasait le compte rendu de gâchée par un compte rendu vierge *)
	(* contenu dans la zone entrante. *)
	(* Comme en P800 nous supprimons la zone entrante, nous devons reproduire ce *)
	(* fonctionnement. *)
	(* Note R.C. 30/08/2010 : si on réinitialise le compte rendu avant que la TG soit mise *)
	(* à jour avec de nouvelles données, alors les anciennes sections de dosage lancent *)
	(* le dosage avec les consignes précédentes. *)

	(* Correction particulière : Quand la table de gâchée est vide, le programme API *)
	(* met "2" dans CR_Etat_Basc_Granulat1. Cela entraine le passage à "1" du bit *)
	(* "dosage terminé granulat1". *)
	(* =&gt; On met donc ces informations à 0. *)
	TG_OUT[index_entree_buffer].CR_Etat_Gachee := 0;
	TG_OUT[index_entree_buffer].CR_Etat_Basc_Gra1 := 0;
	TG_OUT[index_entree_buffer].CR_Etat_Basc_Gra2 := 0;
	TG_OUT[index_entree_buffer].CR_Etat_Basc_Cim1 := 0;
	TG_OUT[index_entree_buffer].CR_Etat_Basc_Cim2 := 0;
	TG_OUT[index_entree_buffer].CR_Etat_Basc_Eau1 := 0;
	TG_OUT[index_entree_buffer].CR_Etat_Basc_Eau2 := 0;
	TG_OUT[index_entree_buffer].CR_Etat_Basc_Adj := 0;
	TG_OUT[index_entree_buffer].CR_Etat_TTGra := 0;
	TG_OUT[index_entree_buffer].CR_Etat_Basc_Anh := 0;
	TG_OUT[index_entree_buffer].CR_Etat_Basc_Add := 0;

	(* Mettre à zéro le compte rendu *)
	FOR ma0_2:=1 TO 450 DO
		TG_OUT_intarr[index_entree_buffer][ma0_2] := 0;
	END_FOR;

	Wip := TRUE; (* Work In Progress *)
	(* Quickfix #0001871 (temporaire, en attendant une correction définitive sur BC-Mix *)
	(* Ajout R.C. 07/07/2011 P852 - BC-Mix 4.1.4. *)
	(* BC-Mix devrait ne pas nous envoyer de demande d'introduction pour les adjuvants *)
	(* quand la bascule à adjuvant est à destination de la bascule à eau. *)
	Debug_Controle2 := TRUE;
	IF Debug_Controle2 THEN
		zz_X:=1;
		WHILE (zz_X &lt;= 12) DO
			IF ((Conf_adjuvant_comp1_vers_eau1)
				AND (TG_IN[index_entree_buffer].Vidange_dry[zz_X].Code_Prod = 6))
			OR ((Conf_adjuvant_comp2_vers_eau1)
				AND (TG_IN[index_entree_buffer].Vidange_dry[zz_X].Code_Prod = 7)) THEN
				(* Supprimer cette demande d'introduction, en décalant les suivantes. *)
				FOR zz_X2 := zz_X TO 11 DO
					TG_IN[index_entree_buffer].Vidange_dry[zz_X2]
						:= TG_IN[index_entree_buffer].Vidange_dry[zz_X2 + 1];
				END_FOR;
				TG_IN[index_entree_buffer].Vidange_dry[12].Code_Prod := 0;
				TG_IN[index_entree_buffer].Vidange_dry[12].Qte := 0;
				TG_IN[index_entree_buffer].Vidange_dry[12].Code_synchro := 0;
				(*zz_X := zz_X + 1;*) (* On n'incrémente pas le pointeur pour traiter le premier des éléments qu'on vient de décaller. *)
			ELSE
				zz_X := zz_X + 1;
			END_IF;
		END_WHILE;
	END_IF;

	(* On incrémente le pointeur "index_entree_buffer". *)
	IF (index_entree_buffer &lt; 4) THEN
		index_entree_buffer := index_entree_buffer + 1;
	ELSE
		index_entree_buffer := 1;
	END_IF;

END_IF;


(**************************************************************)
(*                      GACHEE SORTANTE                       *)
(**************************************************************)

(* Extraction du bit "gachée terminée" *)
mot_travail1 := TG_OUT[index_sortie_buffer].CR_Etat_Gachee;
gachee_terminee := GET_BIT(IN := mot_travail1, NO := 12);
(* XX/12/2015 - P868C - ARTF1268357 *)
Index_Gachee_Terminee := index_sortie_buffer;


(* Réinitialiser l'emplacement de la table de gâchée si la *)
(* gâchée est terminée *)
IF (TG_IN[index_sortie_buffer].CR_Valid_BcMix = 1)
AND gachee_terminee THEN

	(* Mise à 0 de la table de gachée et du compte rendu *)
	FOR ma0_2:=1 TO 650 DO
		TG_IN_intarr[index_sortie_buffer][ma0_2] := 0;
	END_FOR;
	FOR ma0_2:=1 TO 450 DO
		TG_OUT_intarr[index_sortie_buffer][ma0_2] := 0;
	END_FOR;

	(* Par mesure de précaution (dans le cas où *)
	(* la structure de la TG serait modifiée à l'avenir) : *)
	TG_IN[index_sortie_buffer].Numero_gachee := 0;
	TG_IN[index_sortie_buffer].CR_Code_Fin := 0;
	TG_IN[index_sortie_buffer].CR_Valid_BcMix := 0;

	(* Incrément pointeur de sortie *)
	IF (index_sortie_buffer &lt; 4) THEN
		index_sortie_buffer := index_sortie_buffer + 1;
	ELSE
		index_sortie_buffer := 1;
	END_IF;

END_IF;



(**************************************************************)



(* Initialisation particulière des emplacements de la TG *)

(* On initialise les poids visés à 16#FFFF ce qui signifie que la valeur n'a pas été calculée. *)
FOR ma0:=1 TO 4 DO
	IF (TG_OUT[ma0].CR_Etat_Basc_Gra1 = 0) THEN
		FOR ma0_2:=1 TO 5 DO
			TG_OUT[ma0].CR_basc_Gra1[ma0_2].Poids_vise := 16#FFFF;
		END_FOR;
	END_IF;
	IF (TG_OUT[ma0].CR_Etat_Basc_Gra2 = 0) THEN
		FOR ma0_2:=1 TO 5 DO
			TG_OUT[ma0].CR_basc_Gra2[ma0_2].Poids_vise := 16#FFFF;
		END_FOR;
	END_IF;
	IF (TG_OUT[ma0].CR_Etat_Basc_Cim1 = 0) THEN
		FOR ma0_2:=1 TO 4 DO
			TG_OUT[ma0].CR_basc_Cim1[ma0_2].Poids_vise := 16#FFFF;
		END_FOR;
	END_IF;
	IF (TG_OUT[ma0].CR_Etat_Basc_Cim2 = 0) THEN
		FOR ma0_2:=1 TO 4 DO
			TG_OUT[ma0].CR_basc_Cim2[ma0_2].Poids_vise := 16#FFFF;
		END_FOR;
	END_IF;
	IF (TG_OUT[ma0].CR_Etat_Basc_Eau1 = 0) THEN
		FOR ma0_2:=1 TO 6 DO
			TG_OUT[ma0].CR_basc_Eau1[ma0_2].Poids_vise := 16#FFFF;
		END_FOR;
	END_IF;
	IF (TG_OUT[ma0].CR_Etat_Basc_Eau2 = 0) THEN
		FOR ma0_2:=1 TO 6 DO
			TG_OUT[ma0].CR_basc_Eau2[ma0_2].Poids_vise := 16#FFFF;
		END_FOR;
	END_IF;
	IF (TG_OUT[ma0].CR_Etat_Basc_Adj = 0) THEN
		FOR ma0_2:=1 TO 4 DO
			TG_OUT[ma0].CR_basc_Adj[ma0_2].Poids_vise := 16#FFFF;
		END_FOR;
	END_IF;
	IF (TG_OUT[ma0].CR_Etat_Basc_Anh = 0) THEN
		FOR ma0_2:=1 TO 2 DO
			TG_OUT[ma0].CR_basc_Anh[ma0_2].Poids_vise := 16#FFFF;
		END_FOR;
	END_IF;
	IF (TG_OUT[ma0].CR_Etat_Basc_Add = 0) THEN
		FOR ma0_2:=1 TO 4 DO
			TG_OUT[ma0].CR_basc_Add[ma0_2].Poids_vise := 16#FFFF;
		END_FOR;
	END_IF;
	IF (TG_OUT[ma0].CR_Etat_TTGra = 0) THEN
		FOR ma0_2:=1 TO 4 DO
			TG_OUT[ma0].CR_basc_TTGra[ma0_2].Poids_vise := 16#FFFF;
		END_FOR;
	END_IF;
END_FOR;
</STSource>
	</program>
	<program>
		<identProgram name="185_Gestion_Humidite" type="section" task="MAST"></identProgram>
		<STSource>(*******************************************************************************************************************
********************************************************************************************************************
	Gestion de l'humidite : Cette section permet de:
	- Configurer les differents parametre de l'humidite (Conf TRE, Seuil, Voies ANA, Calibration).
	- Gerrer le type d'humidite utilise (manu, auto ou auto TRE).
	- Affectation des consignes de correction humidite
	- Calcul des ecarts a corriger sur les eaux.
	- Activation du dosage de l'eau une fois que tous les produits GRA avec humidite en TRE sont peses. 
********************************************************************************************************************
********************************************************************************************************************)

(* Initialisation des variables locales de la section *)
IF Gestion_Humidite_DEM_INIT THEN

	FOR inc1:=1 to 4 DO
		FOR inc2:=1 to 16 DO
			Ecart_CHU_Gra[inc1][inc2]:=0;
			Ecart_CHU_Eau_Prod[inc1][inc2]:=0;
			WaterCorrectionDone[inc1][inc2]:=0;
			Prod_Gra_A_Doser[inc1][inc2]:= 0;
			Poids_Gra_A_Doser[inc1][inc2]:= 0;
		END_FOR;
		Ecart_CHU_Total_Eau[inc1]:=0;
		Ecart_CHU_Total_Eau_PH3[inc1]:=0;
		INIT_Depart_Eau_Avec_CHU[inc1] := FALSE;
		Reste_Ecart_Eau_deja_Ecrit[inc1]:= FALSE;
		Top_Depart_Eau_Avec_CHU[inc1] := FALSE;
	END_FOR;

	FOR inc1:=1 to 16 DO
		Humidite_Utilisee_Gra[inc1]:=0.0;
		Prod_Eau_A_Doser[inc1]:=0;
		Poids_Eau_A_Doser[inc1]:=0;
		MoistureUsed[inc1]:=0;
	END_FOR;

	(* Reset de la demande d'init *)
	Gestion_Humidite_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;

NG_CHU := NG_Gra1; (* XX/12/2015 - P868C - ARTF1268357 *)

(*Configuration of the correction threshold*)
Conf_Seuil_Correc_Humidite_Gra[1]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[2]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[3]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[4]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[5]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[6]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[7]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[8]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[9]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[10]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[11]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[12]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[13]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[14]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[15]	:= 80;
Conf_Seuil_Correc_Humidite_Gra[16]	:= 80;
(**)

Conf_Dosage_Eau_Retarde := TRUE; (*A activer pour retarder l'eau*)

(* XX/12/2015 - P868C - ARTF1268357 *)
Pulse_Agg1_Dosage_Started := (TG_OUT[NG_CHU].CR_Etat_Basc_Gra1 AND 16#0001) = 1;
Pulse_Agg2_Dosage_Started := (TG_OUT[NG_CHU].CR_Etat_Basc_Gra2 AND 16#0001) = 1;

(*On identifie si on utilise l'humidite en auto temps reel ou manu*)
FOR inc2:=1 to 16 DO (*Nb_produit_Gra*)
	IF Conf_Humidite_Gra_Manu[inc2] THEN
		Humidite_Gra[inc2] := Humidite_Manuelle_Gra[inc2];
	ELSE 
		IF Conf_Humidite_Gra_TRE[inc2] THEN
			Humidite_Gra[inc2] := Humidite_Instantanee_Gra[inc2];
		END_IF;	
	END_IF;
END_FOR;

(*On identifie si on utilise l'humidite en auto sans temps reel ni manu*)
(*Lorsque le dosage de la ligne Gra1 commence on copie les humidités des trémies en auto*)
(*ces humidités au départ du dosage seront utilisées pour le calcul CHU*)
IF RE(Pulse_Agg1_Dosage_Started) THEN
	FOR inc2:=1 to Conf_granulat1_nb_tremies DO (*Nb_produit_Gra1*)
		IF NOT Conf_Humidite_Gra_Manu[inc2] AND NOT Conf_Humidite_Gra_TRE[inc2] THEN
			Humidite_Gra[inc2] := Humidite_Instantanee_Gra[inc2];
		END_IF;	
	END_FOR;
END_IF;

(*On identifie si on utilise l'humidite en auto sans temps reel ni manu*)
(*Lorsque le dosage de la ligne Gra2 commence on copie les humidités des trémies en auto*)
(*ces humidités au départ du dosage seront utilisées pour le calcul CHU*)
IF RE(Pulse_Agg2_Dosage_Started) THEN
	FOR inc2:=Conf_granulat1_nb_tremies + 1 to Conf_granulat1_nb_tremies + Conf_granulat2_nb_tremies DO (*Nb_produit_Gra2*)
		IF NOT Conf_Humidite_Gra_Manu[inc2] AND NOT Conf_Humidite_Gra_TRE[inc2] THEN
			Humidite_Gra[inc2] := Humidite_Instantanee_Gra[inc2];
		END_IF;	
	END_FOR;
END_IF;
(**)

(*Affectation des blocs de correction utilise par le bloc fonction PESA*)
Correction_humidite_gra1.Active_Correction 	:= Conf_Humidite_Gra_TRE[Numero_produit_Gra1]; (*Param lecture humidite en TRE*)
Correction_humidite_gra1.Humidite		:= Humidite_Gra[Numero_produit_Gra1];(*Valeur de l'humidite*)
Correction_humidite_gra1.Seuil_Correction	:= Conf_Seuil_Correc_Humidite_Gra[Numero_produit_Gra1]; (*Seuil correction. Doit etre un parametre dans section preliminaire*)

Correction_humidite_gra2.Active_Correction 	:= Conf_Humidite_Gra_TRE[Numero_produit_Gra2]; (*Param lecture humidite en TRE*)
Correction_humidite_gra2.Humidite		:= Humidite_Gra[Numero_produit_Gra2];(*Valeur de l'humidite*)
Correction_humidite_gra2.Seuil_Correction	:= Conf_Seuil_Correc_Humidite_Gra[Numero_produit_Gra2]; (*Seuil correction. Doit etre un parametre dans section preliminaire*)

Correction_Humidite_Eau1.Active_Correction	:= 1;
Correction_humidite_Eau1.Seuil_Correction	:= 100;
Correction_humidite_Eau1.Correction_Eau		:= Ecart_CHU_Eau_Prod[NG_Eau1][NP_Eau1_A_Doser];
Correction_humidite_Eau1.Dosage_Eau		:= Depart_Dosage_Eau1;


Correction_Humidite_Eau2.Active_Correction	:= 1;
Correction_humidite_Eau2.Seuil_Correction	:= 100;
Correction_humidite_Eau2.Correction_Eau		:= Ecart_CHU_Eau_Prod[NG_Eau2][NP_Eau2_A_Doser];
Correction_humidite_Eau2.Dosage_Eau		:= Depart_Dosage_Eau2;
(**)


(**************************Calculs des ecarts pour le dosage des eaux******************************************)

FOR inc3 :=1 to 16 DO
   	IF Cde_dosage_generale_Gra1 THEN
	(*Identification des produits a doser dans la gachee en cours et on recupere la consigne pour chaque granulats*)
		IF 	TG_IN[NG_CHU].Basc_Gra1[inc3].Numero_Produit &lt;&gt; 0
		THEN
			Prod_Gra_A_Doser[NG_CHU][WORD_TO_INT(TG_IN[NG_CHU].Basc_Gra1[inc3].Numero_Produit AND 16#000F)]:= 1;
			Poids_Gra_A_Doser[NG_CHU][WORD_TO_INT(TG_IN[NG_CHU].Basc_Gra1[inc3].Numero_Produit AND 16#000F)]:= TG_IN[NG_CHU].Basc_Gra1[inc3].Poids_Demande;
		END_IF;
		IF 	TG_IN[NG_CHU].Basc_Gra2[inc3].Numero_Produit &lt;&gt; 0
		THEN
			Prod_Gra_A_Doser[NG_CHU][WORD_TO_INT(TG_IN[NG_CHU].Basc_Gra2[inc3].Numero_Produit AND 16#000F)]:= 1;
			Poids_Gra_A_Doser[NG_CHU][WORD_TO_INT(TG_IN[NG_CHU].Basc_Gra2[inc3].Numero_Produit AND 16#000F)]:= TG_IN[NG_CHU].Basc_Gra2[inc3].Poids_Demande;
		END_IF;
   	END_IF;
   	IF Cde_dosage_generale_Gra2 THEN
	(*Identification des produits a doser dans la gachee en cours et on recupere la consigne pour chaque granulats*)
		IF 	TG_IN[NG_GRA2].Basc_Gra1[inc3].Numero_Produit &lt;&gt; 0
		THEN
			Prod_Gra_A_Doser[NG_GRA2][WORD_TO_INT(TG_IN[NG_GRA2].Basc_Gra1[inc3].Numero_Produit AND 16#000F)]:= 1;
			Poids_Gra_A_Doser[NG_GRA2][WORD_TO_INT(TG_IN[NG_GRA2].Basc_Gra1[inc3].Numero_Produit AND 16#000F)]:= TG_IN[NG_GRA2].Basc_Gra1[inc3].Poids_Demande;
		END_IF;
		IF 	TG_IN[NG_Gra2].Basc_Gra2[inc3].Numero_Produit &lt;&gt; 0
		THEN
			Prod_Gra_A_Doser[NG_GRA2][WORD_TO_INT(TG_IN[NG_Gra2].Basc_Gra2[inc3].Numero_Produit AND 16#000F)]:= 1;
			Poids_Gra_A_Doser[NG_GRA2][WORD_TO_INT(TG_IN[NG_Gra2].Basc_Gra2[inc3].Numero_Produit AND 16#000F)]:= TG_IN[NG_Gra2].Basc_Gra2[inc3].Poids_Demande;
		END_IF;
   	END_IF;
	IF  Faire_vidange_Gra1 THEN
		FOR inc4 :=1 to 16 DO
			IF Poids_Gra_A_Doser[NG_CHU][inc4] &lt;&gt; 0 THEN	
				Product_Replacement[inc4]:=0;
				Poids_Gra_A_Doser[NG_CHU][inc4]:=0;
			END_IF;
		END_FOR;
		IF TG_IN[NG_CHU].Basc_Gra1[inc3].Numero_Produit &lt;&gt; 0 THEN
			Prod_Gra_A_Doser[NG_CHU][WORD_TO_INT(TG_IN[NG_CHU].Basc_Gra1[inc3].Numero_Produit AND 16#000F)]:= 0;
			Humidite_Utilisee_Gra[WORD_TO_INT(TG_IN[NG_CHU].Basc_Gra1[inc3].Numero_Produit AND 16#000F)]:=0.0;(* Add NY 07/10/13 : Correction Salwa plant. Value was not reset, and used in the next batch as correction value*)
			Ecart_CHU_Gra[NG_CHU][WORD_TO_INT(TG_IN[NG_CHU].Basc_Gra1[inc3].Numero_Produit AND 16#000F)]:=0;
			MoistureUsed[WORD_TO_INT(TG_IN[NG_CHU].Basc_Gra1[inc3].Numero_Produit AND 16#000F)]:=False;
			Reste_Ecart_Eau_deja_Ecrit[NG_CHU]:=False;
			Calc_Ecart_CHU_Eau:=False;
		END_IF;	
		IF TG_IN[NG_GRA2].Basc_Gra1[inc3].Numero_Produit &lt;&gt; 0 THEN
			Prod_Gra_A_Doser[NG_GRA2][WORD_TO_INT(TG_IN[NG_GRA2].Basc_Gra1[inc3].Numero_Produit AND 16#000F)]:= 0;
			Humidite_Utilisee_Gra[WORD_TO_INT(TG_IN[NG_GRA2].Basc_Gra1[inc3].Numero_Produit AND 16#000F)]:=0.0;(* Add NY 07/10/13 : Correction Salwa plant. Value was not reset, and used in the next batch as correction value*)
			Ecart_CHU_Gra[NG_CHU][WORD_TO_INT(TG_IN[NG_GRA2].Basc_Gra1[inc3].Numero_Produit AND 16#000F)]:=0;
			MoistureUsed[WORD_TO_INT(TG_IN[NG_GRA2].Basc_Gra1[inc3].Numero_Produit AND 16#000F)]:=False;
			Reste_Ecart_Eau_deja_Ecrit[NG_GRA2]:=False;
			Calc_Ecart_CHU_Eau:=False;
		END_IF;
	END_IF;
	IF  Faire_vidange_Gra2 THEN
		FOR inc4 :=1 to 16 DO
			IF Poids_Gra_A_Doser[NG_GRA2][inc4] &lt;&gt; 0 THEN	
				Product_Replacement[inc4]:=0;
				Poids_Gra_A_Doser[NG_GRA2][inc4]:=0;
			END_IF;
		END_FOR;
		IF TG_IN[NG_CHU].Basc_Gra2[inc3].Numero_Produit &lt;&gt; 0 THEN
			Prod_Gra_A_Doser[NG_CHU][WORD_TO_INT(TG_IN[NG_CHU].Basc_Gra2[inc3].Numero_Produit AND 16#000F)]:= 0;
			Humidite_Utilisee_Gra[WORD_TO_INT(TG_IN[NG_CHU].Basc_Gra2[inc3].Numero_Produit AND 16#000F)]:=0.0;(* Add NY 07/10/13 : Correction Salwa plant. Value was not reset, and used in the next batch as correction value*)
			Ecart_CHU_Gra[NG_CHU][WORD_TO_INT(TG_IN[NG_CHU].Basc_Gra2[inc3].Numero_Produit AND 16#000F)]:=0;
			MoistureUsed[WORD_TO_INT(TG_IN[NG_CHU].Basc_Gra2[inc3].Numero_Produit AND 16#000F)]:=False;
			Reste_Ecart_Eau_deja_Ecrit[NG_CHU]:=False;
			Calc_Ecart_CHU_Eau_Gra2:=False;
		END_IF;
		IF TG_IN[NG_GRA2].Basc_Gra2[inc3].Numero_Produit &lt;&gt; 0 THEN
			Prod_Gra_A_Doser[NG_GRA2][WORD_TO_INT(TG_IN[NG_GRA2].Basc_Gra2[inc3].Numero_Produit AND 16#000F)]:= 0;
			Humidite_Utilisee_Gra[WORD_TO_INT(TG_IN[NG_GRA2].Basc_Gra2[inc3].Numero_Produit AND 16#000F)]:=0.0;(* Add NY 07/10/13 : Correction Salwa plant. Value was not reset, and used in the next batch as correction value*)
			Ecart_CHU_Gra[NG_GRA2][WORD_TO_INT(TG_IN[NG_GRA2].Basc_Gra2[inc3].Numero_Produit AND 16#000F)]:=0;
			MoistureUsed[WORD_TO_INT(TG_IN[NG_GRA2].Basc_Gra2[inc3].Numero_Produit AND 16#000F)]:=False;
			Reste_Ecart_Eau_deja_Ecrit[NG_GRA2]:=False;
			Calc_Ecart_CHU_Eau_Gra2:=False;
		END_IF;
	END_IF;

	(*Calcul de l'ecart a corriger pour les produits n'utilisant pas la correction en TRE (humidite=0 ou manu ou auto sans TRE)*)
	IF 	((Prod_Gra_A_Doser[NG_CHU][inc3] AND Product_Replacement[inc3]&lt;&gt;1) OR Product_Replacement[inc3]=2) AND (NOT Conf_Humidite_Gra_TRE[inc3] OR Conf_Humidite_Gra_Manu[Inc3])
	AND NOT MoistureUsed[inc3]
	THEN
		Ecart_CHU_Gra[NG_CHU][inc3] := REAL_TO_INT((INT_TO_REAL(Poids_Gra_A_Doser[NG_CHU][inc3])*(Humidite_Gra[Inc3])/(100.0-Humidite_Gra[Inc3]))); (*Modif ALE 04/07/2016 : Modification du calcule d'humidité*)
	ELSE IF Product_Replacement[inc3]&lt;&gt;1 AND NOT MoistureUsed[inc3] THEN
		Ecart_CHU_Gra[NG_CHU][inc3] := REAL_TO_INT((INT_TO_REAL(Poids_Gra_A_Doser[NG_CHU][inc3])*(Humidite_Utilisee_Gra[Inc3])/(100.0-Humidite_Utilisee_Gra[Inc3]))); (*Modif ALE 04/07/2016 : Modification du calcule d'humidité*)
		END_IF;
	END_IF;
	
	IF NG_CHU &lt;&gt; NG_GRA2 THEN
		IF 	((Prod_Gra_A_Doser[NG_GRA2][inc3] AND Product_Replacement[inc3]&lt;&gt;1) OR Product_Replacement[inc3]=2) AND (NOT Conf_Humidite_Gra_TRE[inc3] OR Conf_Humidite_Gra_Manu[Inc3])
		AND NOT MoistureUsed[inc3]
		THEN
			Ecart_CHU_Gra[NG_GRA2][inc3] := REAL_TO_INT((INT_TO_REAL(Poids_Gra_A_Doser[NG_GRA2][inc3])*(Humidite_Gra[Inc3])/(100.0-Humidite_Gra[Inc3]))); (*Modif ALE 04/07/2016 : Modification du calcule d'humidité*)
		ELSE IF Product_Replacement[inc3]&lt;&gt;1 AND NOT MoistureUsed[inc3] THEN
			Ecart_CHU_Gra[NG_GRA2][inc3] := REAL_TO_INT((INT_TO_REAL(Poids_Gra_A_Doser[NG_GRA2][inc3])*(Humidite_Utilisee_Gra[Inc3])/(100.0-Humidite_Utilisee_Gra[Inc3]))); (*Modif ALE 04/07/2016 : Modification du calcule d'humidité*)
			END_IF;
		END_IF;
	END_IF;

	IF Ecart_CHU_Gra[NG_CHU][inc3] &lt;&gt; 0 OR Ecart_CHU_Gra[NG_GRA2][inc3] &lt;&gt; 0 
	THEN
		MoistureUsed[inc3] := True;
	END_IF;

(*ALE PLA 30/08/2016 Modification of algorithm BEGIN *)
(* When the humidity was very small, there was no correction and the process was blocked *)
	Val_humidite_gra_calc[NG_CHU][inc3]:= -1.0;
	IF (Prod_Gra_A_Doser[NG_CHU][inc3] AND Product_Replacement[inc3]&lt;&gt;1) OR Product_Replacement[inc3]=2 THEN(*Rajout NY 13/08/13 : Pb sur le depart dosage eau. 
		Pour eviter cela on copie seulement les humiditees des produits utilisee dans la fab *)
		(*CASE not TRE (Manu or Auto)*)
		IF  (Humidite_Gra[inc3]&gt;0.0) AND (NOT Conf_Humidite_Gra_TRE[inc3] OR (Conf_Humidite_Gra_TRE[inc3] AND Conf_Humidite_Gra_Manu[inc3]))
		AND (Ecart_CHU_Gra[NG_CHU][inc3] &gt; 0)(*Rajout ALE 04/07/2016 lorsque l'humidité était inf à 1% l'eau ne se lançait pas*)
		THEN
			(* Validation of the CHU correction *)
			Val_humidite_gra_calc[NG_CHU][inc3]:= Humidite_Gra[inc3];
		END_IF;
		(* CASE TRE And not Manu *)
		IF (Conf_Humidite_Gra_TRE[inc3] AND NOT Conf_Humidite_Gra_Manu[Inc3])
		THEN
			IF (Humidite_Utilisee_Gra[Inc3] &lt;&gt; 0.0 OR (Humidite_Gra[Inc3] = 0.0 AND Humidite_Utilisee_Gra[Inc3] = 0.0))
			THEN
				IF Ecart_CHU_Gra[NG_CHU][inc3] &gt; 0 THEN (*Rajout ALE 04/07/2016 lorsque l'humidité était inf à 1% l'eau ne se lançait pas*)
					(* Validation of the CHU correction *)
					Val_humidite_gra_calc[NG_CHU][inc3]:= Humidite_Utilisee_Gra[inc3];
				END_IF;	
			ELSE 
			 	(* waiting for the end of 80% of the dosage *)
				Val_humidite_gra_calc[NG_CHU][inc3]:= -2.0;
			END_IF;
		END_IF;
	END_IF;
	IF NG_CHU&lt;&gt;NG_GRA2 THEN
		Val_humidite_gra_calc[NG_GRA2][inc3]:= -1.0;
		IF (Prod_Gra_A_Doser[NG_GRA2][inc3] AND Product_Replacement[inc3]&lt;&gt;1) OR Product_Replacement[inc3]=2 THEN(*Rajout NY 13/08/13 : Pb sur le depart dosage eau. 
			Pour eviter cela on copie seulement les humiditees des produits utilisee dans la fab *)
			(*CASE not TRE (Manu or Auto)*)
			IF  (Humidite_Gra[inc3]&gt;0.0) AND (NOT Conf_Humidite_Gra_TRE[inc3] OR (Conf_Humidite_Gra_TRE[inc3] AND Conf_Humidite_Gra_Manu[inc3]))
			AND (Ecart_CHU_Gra[NG_GRA2][inc3] &gt; 0)(*Rajout ALE 04/07/2016 lorsque l'humidité était inf à 1% l'eau ne se lançait pas*)
			THEN
				(* Validation of the CHU correction *)
				Val_humidite_gra_calc[NG_GRA2][inc3]:= Humidite_Gra[inc3];
			END_IF;
			(* CASE TRE And not Manu *)
			IF (Conf_Humidite_Gra_TRE[inc3] AND NOT Conf_Humidite_Gra_Manu[Inc3])
			THEN
				IF (Humidite_Utilisee_Gra[Inc3] &lt;&gt; 0.0 OR (Humidite_Gra[Inc3] = 0.0 AND Humidite_Utilisee_Gra[Inc3] = 0.0))
				THEN
					IF Ecart_CHU_Gra[NG_GRA2][inc3] &gt; 0 THEN (*Rajout ALE 04/07/2016 lorsque l'humidité était inf à 1% l'eau ne se lançait pas*)
						(* Validation of the CHU correction *)
						Val_humidite_gra_calc[NG_GRA2][inc3]:= Humidite_Utilisee_Gra[inc3];
					END_IF;	
				ELSE 
				 	(* waiting for the end of 80% of the dosage *)
					Val_humidite_gra_calc[NG_GRA2][inc3]:= -2.0;
				END_IF;
			END_IF;
		END_IF;
	END_IF;
(* ALE PLA 30/08/2016 Modification of algorithm END *)
END_FOR;


FOR inc4 :=1 TO 16 DO
	Prod_Eau_A_Doser[inc4]:= 0;
	Poids_Eau_A_Doser[inc4]:= 0;
END_FOR;



FOR inc4 := 1 TO 4 DO
	FOR inc5 :=1 TO 6 DO
		IF TG_IN[inc4].Basc_Eau1[inc5].Numero_Produit &lt;&gt; 0 
		THEN 	Prod_Eau_A_Doser[WORD_TO_INT(TG_IN[inc4].Basc_Eau1[inc5].Numero_Produit AND 16#000F)]:= 1;
			Poids_Eau_A_Doser[WORD_TO_INT(TG_IN[inc4].Basc_Eau1[inc5].Numero_Produit AND 16#000F)]:= REAL_TO_INT(INT_TO_REAL(TG_IN[inc4].Basc_Eau1[inc5].Poids_Demande) * Conf_multipl_Eau1);	(* XX/12/2014 - P865 *)
		END_IF;
		IF TG_IN[inc4].Basc_Eau2[inc5].Numero_Produit &lt;&gt; 0
		THEN	Prod_Eau_A_Doser[WORD_TO_INT(TG_IN[inc4].Basc_Eau2[inc5].Numero_Produit AND 16#000F)]:= 1;
			Poids_Eau_A_Doser[WORD_TO_INT(TG_IN[inc4].Basc_Eau2[inc5].Numero_Produit AND 16#000F)]:= REAL_TO_INT(INT_TO_REAL(TG_IN[inc4].Basc_Eau2[inc5].Poids_Demande) * Conf_multipl_Eau2);	(* XX/12/2014 - P865 *)
		END_IF;
	END_FOR;
END_FOR;

(*Autorisation du dosage de l'eau si tous les produits GRA avec humidite(!=0) ont une consigne recalcule(Ecart)*)
TON_Calc_Depart_eau (IN:=(Conf_Dosage_Eau_Retarde AND (Cde_dosage_generale_Gra1 OR Cde_dosage_generale_Gra2)), PT:= t#500ms);
Calc_Depart_eau := TON_Calc_Depart_eau.Q;
IF Calc_Depart_eau
THEN
	IF 16-OCCUR_ARREAL(Val_humidite_gra_calc[NG_CHU],-1.0) = 16-OCCUR_ARINT(Ecart_CHU_Gra[NG_CHU],0) AND cde_dosage_generale_Gra1
	THEN
		INIT_Depart_Eau_Avec_CHU[NG_CHU] := TRUE;
	END_IF;
	IF 16-OCCUR_ARREAL(Val_humidite_gra_calc[NG_GRA2],-1.0) = 16-OCCUR_ARINT(Ecart_CHU_Gra[NG_GRA2],0) AND Cde_dosage_generale_Gra2 
	THEN
		INIT_Depart_Eau_Avec_CHU[NG_GRA2] := TRUE;
	END_IF;
ELSE 
	IF(TG_IN[NG_Intro].Numero_gachee &lt;&gt;0 AND TG_IN[NG_Intro].Numero_gachee = TG_IN[NG_Intro].CR_Code_Fin)
	THEN
		IF (TG_IN[NG_Intro].basc_gra1[1].Numero_produit = 0) AND (TG_IN[NG_Intro].basc_gra2[1].Numero_produit = 0)
		THEN
			INIT_Depart_Eau_Avec_CHU[NG_Intro] := TRUE;
		END_IF;
	END_IF;
END_IF;

TON_Calc_Ecart (IN := (INIT_Depart_Eau_Avec_CHU[NG_CHU] AND NOT Reste_Ecart_Eau_deja_Ecrit[NG_CHU]) (*AND Ecart_CHU_Total_Eau[Index_Gachee_Terminee]=0*), PT := t#1s);
Calc_Ecart_CHU_Eau := TON_Calc_Ecart.Q;

TON_Calc_Ecart_Gra2 (IN := (INIT_Depart_Eau_Avec_CHU[NG_GRA2] AND NOT Reste_Ecart_Eau_deja_Ecrit[NG_GRA2]) AND NG_GRA2 &lt;&gt; NG_CHU (*AND Ecart_CHU_Total_Eau[Index_Gachee_Terminee]=0*), PT := t#1s);
Calc_Ecart_CHU_Eau_Gra2 := TON_Calc_Ecart_Gra2.Q;

(*ALE - 12/09/2018 - When there is no AGGREGATE, we unblock water*)
IF (TG_IN[NG_CHU].basc_gra1[1].Numero_produit = 0) AND (TG_IN[NG_CHU].basc_gra2[1].Numero_produit = 0)
AND (TG_IN[NG_CHU].basc_Eau1[1].Numero_produit &lt;&gt; 0) AND (TG_IN[NG_CHU].basc_eau2[1].Numero_produit &lt;&gt; 0)
AND 16-OCCUR_ARREAL(Val_humidite_gra_calc[NG_CHU],-1.0) = 16-OCCUR_ARINT(Ecart_CHU_Gra[NG_CHU],0) 
AND TG_IN[NG_CHU].Numero_gachee &lt;&gt;0 AND TG_IN[NG_CHU].Numero_gachee = TG_IN[NG_CHU].CR_Code_Fin THEN
	Top_Depart_Eau_Avec_CHU[NG_CHU] := TRUE;
END_IF;	

IF RE(Calc_Ecart_CHU_Eau)  
THEN
	Ecart_CHU_Total_Eau[NG_CHU] := 0;
	(*Calcul de l'ecart a corriger sur la consigne de l'eau*)
	FOR inc6 :=1 TO 16 DO
		IF (inc6 &lt;= Conf_granulat1_nb_tremies) THEN
			Ecart_CHU_Total_Eau[NG_CHU] := Ecart_CHU_Total_Eau[NG_CHU] + REAL_TO_INT(INT_TO_REAL(Ecart_CHU_Gra[NG_CHU][inc6]) * Conf_multipl_Granulat1);
		ELSE
			IF (inc6 &gt; Conf_granulat1_nb_tremies) AND (inc6 &lt;= Conf_granulat1_nb_tremies + Conf_granulat2_nb_tremies) THEN
				Ecart_CHU_Total_Eau[NG_CHU] := Ecart_CHU_Total_Eau[NG_CHU] + REAL_TO_INT(INT_TO_REAL(Ecart_CHU_Gra[NG_CHU][inc6]) * Conf_multipl_Granulat2);
			END_IF;
		END_IF;
	END_FOR; 
	Reste_Ecart_Eau_CHU[NG_CHU]:= Ecart_CHU_Total_Eau[NG_CHU];
	Reste_Ecart_Eau_deja_Ecrit[NG_CHU]:= TRUE;
	Top_Depart_Eau_Avec_CHU[NG_CHU] := TRUE;
END_IF;
IF RE(Calc_Ecart_CHU_Eau_Gra2)  
THEN
	Ecart_CHU_Total_Eau[NG_GRA2] := 0;
	(*Calcul de l'ecart a corriger sur la consigne de l'eau*)
	FOR inc6 :=1 TO 16 DO
		IF (inc6 &lt;= Conf_granulat1_nb_tremies) THEN
			Ecart_CHU_Total_Eau[NG_GRA2] := Ecart_CHU_Total_Eau[NG_GRA2] + REAL_TO_INT(INT_TO_REAL(Ecart_CHU_Gra[NG_GRA2][inc6]) * Conf_multipl_Granulat1);
		ELSE
			IF (inc6 &gt; Conf_granulat1_nb_tremies) AND (inc6 &lt;= Conf_granulat1_nb_tremies + Conf_granulat2_nb_tremies) THEN
				Ecart_CHU_Total_Eau[NG_GRA2] := Ecart_CHU_Total_Eau[NG_GRA2] + REAL_TO_INT(INT_TO_REAL(Ecart_CHU_Gra[NG_GRA2][inc6]) * Conf_multipl_Granulat2);
			END_IF;
		END_IF;
	END_FOR; 
	Reste_Ecart_Eau_CHU[NG_GRA2]:= Ecart_CHU_Total_Eau[NG_GRA2];
	Reste_Ecart_Eau_deja_Ecrit[NG_GRA2]:= TRUE;
	Top_Depart_Eau_Avec_CHU[NG_GRA2] := TRUE;
END_IF;
(*Repartition des ecarts sur les eaux*)
IF Reste_Ecart_Eau_CHU[NG_CHU]&gt;0 THEN
	FOR inc7:=1 to 8 DO
		IF TG_IN[NG_CHU].WaterCorrectionOrder[inc7] &lt;&gt; 0 AND NOT WaterCorrectionDone[NG_CHU][TG_IN[NG_CHU].WaterCorrectionOrder[inc7]] AND Prod_Eau_A_Doser[TG_IN[NG_CHU].WaterCorrectionOrder[inc7]] THEN
			IF (Poids_Eau_A_Doser[TG_IN[NG_CHU].WaterCorrectionOrder[inc7]]&gt;= Reste_Ecart_Eau_CHU[NG_CHU]) THEN
				IF (TG_IN[NG_CHU].WaterCorrectionOrder[inc7] &lt;= Conf_Eau1_nb_cuves) THEN
					Ecart_CHU_Eau_Prod[NG_CHU][TG_IN[NG_CHU].WaterCorrectionOrder[inc7]] := REAL_TO_INT(INT_TO_REAL(Reste_Ecart_Eau_CHU[NG_CHU]) / Conf_multipl_Eau1);
				ELSE
					IF (TG_IN[NG_CHU].WaterCorrectionOrder[inc7] &gt; Conf_Eau1_nb_cuves) AND (TG_IN[NG_CHU].WaterCorrectionOrder[inc7] &lt;= Conf_Eau1_nb_cuves + Conf_Eau2_nb_cuves) THEN
						Ecart_CHU_Eau_Prod[NG_CHU][TG_IN[NG_CHU].WaterCorrectionOrder[inc7]] := REAL_TO_INT(INT_TO_REAL(Reste_Ecart_Eau_CHU[NG_CHU]) / Conf_multipl_Eau2);
					END_IF;
				END_IF;
				Reste_Ecart_Eau_CHU[NG_CHU]:= 0;
			ELSE
				IF (TG_IN[NG_CHU].WaterCorrectionOrder[inc7] &lt;= Conf_Eau1_nb_cuves) THEN
					Ecart_CHU_Eau_Prod[NG_CHU][TG_IN[NG_CHU].WaterCorrectionOrder[inc7]] := REAL_TO_INT(INT_TO_REAL(Poids_Eau_A_Doser[TG_IN[NG_CHU].WaterCorrectionOrder[inc7]]) / Conf_multipl_Eau1);
					Reste_Ecart_Eau_CHU[NG_CHU]:= Reste_Ecart_Eau_CHU[NG_CHU] - Poids_Eau_A_Doser[TG_IN[NG_CHU].WaterCorrectionOrder[inc7]];
				ELSE
					IF (TG_IN[NG_CHU].WaterCorrectionOrder[inc7] &gt; Conf_Eau1_nb_cuves) AND (TG_IN[NG_CHU].WaterCorrectionOrder[inc7] &lt;= Conf_Eau1_nb_cuves + Conf_Eau2_nb_cuves) THEN
						Ecart_CHU_Eau_Prod[NG_CHU][TG_IN[NG_CHU].WaterCorrectionOrder[inc7]] := REAL_TO_INT(INT_TO_REAL(Poids_Eau_A_Doser[TG_IN[NG_CHU].WaterCorrectionOrder[inc7]]) / Conf_multipl_Eau2);
						Reste_Ecart_Eau_CHU[NG_CHU]:= Reste_Ecart_Eau_CHU[NG_CHU] - Poids_Eau_A_Doser[TG_IN[NG_CHU].WaterCorrectionOrder[inc7]];
					END_IF;
				END_IF;
			END_IF;
		END_IF;
	WaterCorrectionDone[NG_CHU][TG_IN[NG_CHU].WaterCorrectionOrder[inc7]]:=True;
	END_FOR;
	Reste_Ecart_Eau_CHU[NG_CHU]:= 0;
	FOR inc7:=1 to 16 DO
		WaterCorrectionDone[NG_CHU][inc7]:=0;
	END_FOR;
END_IF;
IF Reste_Ecart_Eau_CHU[NG_GRA2]&gt;0 AND NG_GRA2 &lt;&gt; NG_CHU THEN
	FOR inc7:=1 to 8 DO
		IF TG_IN[NG_GRA2].WaterCorrectionOrder[inc7] &lt;&gt; 0 AND NOT WaterCorrectionDone[NG_GRA2][TG_IN[NG_GRA2].WaterCorrectionOrder[inc7]] AND Prod_Eau_A_Doser[TG_IN[NG_GRA2].WaterCorrectionOrder[inc7]] THEN
			IF (Poids_Eau_A_Doser[TG_IN[NG_GRA2].WaterCorrectionOrder[inc7]]&gt;= Reste_Ecart_Eau_CHU[NG_GRA2]) THEN
				IF (TG_IN[NG_GRA2].WaterCorrectionOrder[inc7] &lt;= Conf_Eau1_nb_cuves) THEN
					Ecart_CHU_Eau_Prod[NG_GRA2][TG_IN[NG_GRA2].WaterCorrectionOrder[inc7]] := REAL_TO_INT(INT_TO_REAL(Reste_Ecart_Eau_CHU[NG_GRA2]) / Conf_multipl_Eau1);
				ELSE
					IF (TG_IN[NG_GRA2].WaterCorrectionOrder[inc7] &gt; Conf_Eau1_nb_cuves) AND (TG_IN[NG_GRA2].WaterCorrectionOrder[inc7] &lt;= Conf_Eau1_nb_cuves + Conf_Eau2_nb_cuves) THEN
						Ecart_CHU_Eau_Prod[NG_GRA2][TG_IN[NG_GRA2].WaterCorrectionOrder[inc7]] := REAL_TO_INT(INT_TO_REAL(Reste_Ecart_Eau_CHU[NG_GRA2]) / Conf_multipl_Eau2);
					END_IF;
				END_IF;
				Reste_Ecart_Eau_CHU[NG_GRA2]:= 0;
			ELSE
				IF (TG_IN[NG_GRA2].WaterCorrectionOrder[inc7] &lt;= Conf_Eau1_nb_cuves) THEN
					Ecart_CHU_Eau_Prod[NG_GRA2][TG_IN[NG_GRA2].WaterCorrectionOrder[inc7]] := REAL_TO_INT(INT_TO_REAL(Poids_Eau_A_Doser[TG_IN[NG_GRA2].WaterCorrectionOrder[inc7]]) / Conf_multipl_Eau1);
					Reste_Ecart_Eau_CHU[NG_GRA2]:= Reste_Ecart_Eau_CHU[NG_GRA2] - Poids_Eau_A_Doser[TG_IN[NG_GRA2].WaterCorrectionOrder[inc7]];
				ELSE
					IF (TG_IN[NG_GRA2].WaterCorrectionOrder[inc7] &gt; Conf_Eau1_nb_cuves) AND (TG_IN[NG_GRA2].WaterCorrectionOrder[inc7] &lt;= Conf_Eau1_nb_cuves + Conf_Eau2_nb_cuves) THEN
						Ecart_CHU_Eau_Prod[NG_GRA2][TG_IN[NG_GRA2].WaterCorrectionOrder[inc7]] := REAL_TO_INT(INT_TO_REAL(Poids_Eau_A_Doser[TG_IN[NG_GRA2].WaterCorrectionOrder[inc7]]) / Conf_multipl_Eau2);
						Reste_Ecart_Eau_CHU[NG_GRA2]:= Reste_Ecart_Eau_CHU[NG_GRA2] - Poids_Eau_A_Doser[TG_IN[NG_GRA2].WaterCorrectionOrder[inc7]];
					END_IF;
				END_IF;
			END_IF;
		END_IF;
	WaterCorrectionDone[NG_GRA2][TG_IN[NG_GRA2].WaterCorrectionOrder[inc7]]:=True;
	END_FOR;
	Reste_Ecart_Eau_CHU[NG_GRA2]:= 0;
	FOR inc7:=1 to 16 DO
		WaterCorrectionDone[NG_GRA2][inc7]:=0;
	END_FOR;
END_IF;
(**)

(*RAZ*)
RAZ_CHU_EAU := Gachee_terminee;

(* XX/12/2015 - P868C - ARTF1268357 *)                
IF RE(RAZ_CHU_EAU)
THEN 
	FOR inc1:=1 to 16 DO
		IF Ecart_CHU_Gra[Index_Gachee_Terminee][inc1] &lt;&gt; 0 THEN
			MoistureUsed[inc1] := False;
		END_IF;		
		IF Poids_Gra_A_Doser[Index_Gachee_Terminee][inc1] &lt;&gt; 0 THEN	
			Product_Replacement[inc1]:=0;
		END_IF;	
		Ecart_CHU_Gra[Index_Gachee_Terminee][inc1]:=0;
		Ecart_CHU_Eau_Prod[Index_Gachee_Terminee][inc1]:=0;
		Ecart_CHU_Total_Eau[Index_Gachee_Terminee]:=0;
		Ecart_CHU_Total_Eau_PH3[Index_Gachee_Terminee]:=0;
		INIT_Depart_Eau_Avec_CHU[Index_Gachee_Terminee] := FALSE;
		Reste_Ecart_Eau_deja_Ecrit[Index_Gachee_Terminee]:= FALSE;
		Top_Depart_Eau_Avec_CHU[Index_Gachee_Terminee] := FALSE;
		WaterCorrectionDone[Index_Gachee_Terminee][inc1]:=0;
	END_FOR;
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="190_Dosage_Gra1" type="section" task="MAST"></identProgram>
		<ILSource>(*******************************************************************************************************************)
 (*                                              Recherche gachée granulat1                                                        *)
 (*******************************************************************************************************************)


(* Initialisation des variables locales de la section *)
LD Dosage_Gra1_DEM_INIT
ST Dosage_Gra1_INIT_EN_COURS
JMPCN Fin_init_NG_gra1

	(* Modif R.C. 06/12/2011 P808/P856 : Modification des conditions *)
	(* déclenchant cette initialisation. Suite à un problème quand on *)
	(* était sur une n-ième gâchée dont le premier produit ne faisait *)
	(* pas dépasser le seuil vide. *)
	LD index_sortie_buffer
	ST suite_index_sortie_g1
	ST NG_Gra1
	LD 1 (* Changement de numéro de gâchée =&gt; On initialise le NP à 1 *)
	ST NP_gra1 (* (Ajout R.C. 08/07/2011 P806) *)
	LD 0
	ST Poids_demande_gra1 (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
	ST Numeros_produits_granulat1 (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
	ST Numero_produit_gra1 (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
	ST Numero_produit_gra1_aux1 (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
	ST Numero_produit_gra1_aux2 (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
	ST Poids_deja_pese_gra1 (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
	
	(* Reset de la demande d'init *)
	LD TRUE
	R Dosage_Gra1_DEM_INIT (* L'init de la section a bien été prise en compte. *)
	R Dosage_auto_Gra1
Fin_init_NG_gra1:

LD Pesee_suivante_Gra1
jmpc initialisation_type_pesee_g1

(*Pesée granulat 1 si balances libres*)
ld Etat_balance_Gra1_et_glace
jmpcn fin_dosage_granulat1

recherche_index_g1 :
  
(*Recherche index pesée granulat*)
ld suite_index_sortie_g1
(*Sauvegarde gachee en cours*)
st NG_Gra1
  
(*Chargement mot état granulat 1*)
LD TG_OUT[NG_Gra1].CR_Etat_Basc_Gra1
EQ 2
ST Pesee_terminee_Gra1
LD TG_OUT[NG_Gra1].CR_Etat_Basc_Gra1
EQ 1 (*Pesée en cours granulat 1*)
jmpc fin_dosage_granulat1
  
(*Si pesée terminée pour cette gachée recherche de la gachée suivante*)
ldn Pesee_terminee_Gra1
jmpc recherche_tremie_granulat1

LD 1
ST NP_Gra1

LD FALSE
ST Dosage_auto_Gra1
  
ld suite_index_sortie_g1
add 1
st suite_index_sortie_g1
LE 4
jmpc suite_granulat1
ld 1
st suite_index_sortie_g1
  
suite_granulat1 :
  
 	ld suite_index_sortie_g1
 	eq index_entree_buffer
 	jmpc fin_dosage_granulat1
jmp recherche_index_g1	
(*******************************************************************************************************************)
(*                                   Test présence du produit dans la gâchée                                                      *)
(*******************************************************************************************************************)
  
recherche_tremie_granulat1 :
(*LD TG_IN[Gachee_en_cours_granulat1].Basc_Gra1[NP_gra1].Numero_Produit*)
CAL LEC_Basc_gra1_1(NP_Gra1	:= NP_Gra1,
		PARAM_SELECT	:= 1, (* 1 = Numero_Produit *)
		Basc_gra1	:= TG_IN[NG_Gra1].Basc_Gra1,
		Basc_gra2	:= TG_IN[NG_Gra1].Basc_Gra2) 	
LD LEC_Basc_gra1_1.PARAM_VAL
EQ 16#0000
JMPC fin_dosage_gachee_en_cours_G1
JMP Dire_en_cours_g1
  
(*******************************************************************************************************************)
(*                                  Configuration et consignes de dosage                                                          *)
(*******************************************************************************************************************)
  
Dire_en_cours_g1 :
  
(* Dire en cours *)
LD 1
ST TG_OUT[NG_Gra1].CR_Etat_Basc_Gra1
  
(*Dire presence produit*)
LD TG_OUT[NG_Gra1].CR_Etat_Presence_Produit
or 16#0001
ST TG_OUT[NG_Gra1].CR_Etat_Presence_Produit

  
(* Tester dans la table des gachées si la plage mémoire "Balance 2 granulat" *)
(* est utilisée en tant qu'extension de la plage "Balance 1 granulat" *)
(* Modif R.C. 22/10/2009 pour Algérie *)
ld true
and (Conf_granulat2_nb_tremies
eq 0
)
and (TG_IN[suite_index_sortie_g1].Basc_gra2[1].Numero_produit
ne 0
)
ST Plage_etendue_Gra1

initialisation_type_pesee_g1 :

 	(* NP limite atteint ? *)
 	LDN Plage_etendue_Gra1
 	AND( NP_gra1
 		GT 5
 	)
 	OR ( NP_gra1
 		GT 10 (* Extension à 10 produits granulats *)
 			(* si BC-Mix utilise la structure granulat2 *)
 			(* alors que la configuration de la centrale ne *)
 			(* contient pas de chaine "granulat2" *)
 	)
 	JMPCN Rech_num_prod_gra1
 		(* NP limite atteint -&gt; On arrête de parcourir la table *)
 		LD 0
 		ST Numeros_produits_granulat1
		ST Numero_produit_gra1
 		ST Numero_produit_gra1_aux1
 		ST Numero_produit_gra1_aux2
 	JMP Fin_rech_num_prod_gra1
 	Rech_num_prod_gra1:
 		(* Récupération du numéro d'organe de stockage surlequel doser *)
 		(*LD TG_IN[Gachee_en_cours_granulat1].Basc_Gra1[NP_gra1].Numero_Produit*)
		CAL LEC_Basc_gra1_1(NP_Gra1	:= NP_Gra1,
				PARAM_SELECT	:= 1, (* 1 = Numero_Produit *)
				Basc_gra1	:= TG_IN[NG_Gra1].Basc_Gra1,
				Basc_gra2	:= TG_IN[NG_Gra1].Basc_Gra2) 	
		LD LEC_Basc_gra1_1.PARAM_VAL
		ST Numeros_produits_granulat1
		(* Récupération des numéros des trémies auxiliaires dans le cas *)
		(* d'un dosage simultané sur plusieurs trémies. *)
		CAL Decomp_num_prod(Numeros_organes := Numeros_produits_granulat1)
		LD Decomp_num_prod.Num_organe_principal
		ST Numero_produit_Gra1
		LD Decomp_num_prod.Num_organe_aux1
		ST Numero_produit_Gra1_aux1
		LD Decomp_num_prod.Num_organe_aux2
		ST Numero_produit_Gra1_aux2
 	Fin_rech_num_prod_gra1:

	(* On enregistre le numéro de produit initial (avant éventuel remplacement de produit). *)
	LD Numero_produit_Gra1
	ST Numero_produit_Gra1_initial
 	eq 0
 	jmpc fin_dosage_gachee_en_cours_G1
  
 	
 	(*Copie produit, pesée et numéro trémie dans compte-rendu*)
 	(*LD TG_IN[Gachee_en_cours_granulat1].Basc_Gra1[NP_gra1].Numero_Produit*)
 	(*ST TG_OUT[Gachee_en_cours_granulat1].CR_basc_Gra1[NP_gra1].Numero_prod*)
	CAL ECR_CR_Basc_gra1_1(NP_Gra1	:= NP_Gra1,
			PARAM_SELECT	:= 1, (* 1 = Numero_prod *)
			PARAM_VAL	:= Numero_produit_Gra1,
			CR_Basc_gra1	:= TG_OUT[NG_Gra1].CR_basc_Gra1,
			CR_Basc_gra2	:= TG_OUT[NG_Gra1].CR_basc_Gra2)
	 	
 	(*Recherche poids demandé*)
 	(*LD TG_IN[Gachee_en_cours_granulat1].Basc_Gra1[NP_gra1].Poids_demande*)
	CAL LEC_Basc_gra1_1(NP_Gra1	:= NP_Gra1,
			PARAM_SELECT	:= 2, (* 2 = Poids_demande *)
			Basc_gra1	:= TG_IN[NG_Gra1].Basc_Gra1,
			Basc_gra2	:= TG_IN[NG_Gra1].Basc_Gra2) 	
	LD LEC_Basc_gra1_1.PARAM_VAL
	st Poids_demande_Gra1
  
	(*Recherche erreur de jetée*)
 	(*LD TG_IN[Gachee_en_cours_granulat1].Basc_Gra1[NP_gra1].Erreur_jettee*)
	CAL LEC_Basc_gra1_1(NP_Gra1	:= NP_Gra1,
			PARAM_SELECT	:= 3, (* 3 = Erreur_jetee *)
			Basc_gra1	:= TG_IN[NG_Gra1].Basc_Gra1,
			Basc_gra2	:= TG_IN[NG_Gra1].Basc_Gra2) 	
	LD LEC_Basc_gra1_1.PARAM_VAL
 	st Erreur_jetee_Gra1
 
 	(*Recherche limite de correction*)
	CAL LEC_Basc_gra1_1(NP_Gra1	:= NP_Gra1,
			PARAM_SELECT	:= 4, (* 4 = Limite_correction *)
			Basc_gra1	:= TG_IN[NG_Gra1].Basc_Gra1,
			Basc_gra2	:= TG_IN[NG_Gra1].Basc_Gra2) 	
	LD LEC_Basc_gra1_1.PARAM_VAL
 	ST Limite_correction_Gra1

 	(* Mise à jour du poids de référence *)
 	Ld Poids_instantane_Gra1
 	st Poids_de_reference_Gra1

 	(* Mémorisation du seuil de passage à la sortie '2' *)
	LD TG_IN[NG_Gra1].Seuil_passage_sortie_2_Gra1
 	ST Memo_Seuil_passage_sortie_2_Gra1

 	LD TRUE
	R Poids_vise_deja_ecrit_Gra1 (* init *)
	R Humidite_deja_ecrit_Gra1 (* init *)

	(* Init de la CGG quand la CGG n'est pas activée et *)
	(* aussi quand c'est la 1ère gâchée de la fabrication *)
	LDN CGG_activee
	OR (TG_IN[NG_Gra1].Proprietes_gachee
		AND 16#0002 (* 1ère gâchée de la fabrication *)
		GT 0
	)
	AND (NP_Gra1
		EQ 1 (* 1er produit de la gâchée *)
	)
	JMPCN init_corr_g_g_gra1__fin
	init_corr_g_g_gra1:
		(* on active la CGG en début de fabrication *)
		LD CGG_activee
		ST CGG_activee_Gra1 
		(* init des cumuls *)
		LD 0
		ST ma0
		init_corr_g_g_gra1__boucle:
		LD ma0
		ADD 1
		ST ma0
		LD ma0
		GT Conf_granulat1_nb_tremies
		JMPC init_corr_g_g_gra1__fin
		LD 0
		ST cumuls_pesees.Cumuls_pesees_Gra[ma0].cumul_consignes_sans_correct_g_g
		ST cumuls_pesees.Cumuls_pesees_Gra[ma0].cumul_poids_reellement_peses
		JMP init_corr_g_g_gra1__boucle
	init_corr_g_g_gra1__fin:
  

 	(* Récupération des options de dosage *)

	(* Obligation d'atteindre la consigne *)
	CAL LEC_Basc_gra1_1(NP_Gra1	:= NP_Gra1,
			PARAM_SELECT	:= 5, (* 5 = Options_dosage *)
			Basc_gra1	:= TG_IN[NG_Gra1].Basc_Gra1,
			Basc_gra2	:= TG_IN[NG_Gra1].Basc_Gra2) 	
	LD LEC_Basc_gra1_1.PARAM_VAL
 	AND 16#0001
	GT 0
 	ST Flags_pesage_Gra1.obligation_atteindre_consigne

	(* Correction gachée sur gachée activée *)
 	LD CGG_activee_Gra1
 	ST Flags_pesage_Gra1.CGG_ON

	(* Dernière gachée *)
 	LD TG_IN[NG_Gra1].Proprietes_gachee
 	AND 16#0001
 	NE 0
 	ST Flags_pesage_Gra1.Derniere_gachee

	(* Première gachée *)
 	LD TG_IN[NG_Gra1].Proprietes_gachee
 	AND 16#0002
 	NE 0
 	ST Flags_pesage_Gra1.Premiere_gachee

(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	(* Mode décomptage :non disponible *)
	LD FALSE
	ST Flags_pesage_Gra1.mode_decomptage

(* XX/09/2015 - P868A - artf1598100 *)
	CAL Weighing_Tolerances (IDFB_Conf_Process_Tol := TG_IN[NG_Gra1].Conf_Agg_Process_Tol[Numero_produit_Gra1],
	                         IDFB_Conf_Process_Tol_Default := Conf_Agg_Process_Tol_Default[Numero_produit_Gra1],
	                         IDFB_Batch_Properties := TG_IN[NG_Gra1].Proprietes_gachee,
	                         ODFB_Conf_Process_Tol_Used =&gt; Conf_Agg1_Tol_Used)

 	jmp fin_dosage_granulat1
 		
 fin_dosage_gachee_en_cours_G1 :
  
 (* Dire terminé (Fin de la gaché)*)
 ld 2
 ST TG_OUT[NG_Gra1].CR_Etat_Basc_Gra1
  
 LD TG_OUT[NG_Gra1].CR_Etat_Gachee
 or 16#0001
 ST TG_OUT[NG_Gra1].CR_Etat_Gachee
  
(*Anticipation montée skip avant la fin de tous les dosages*)
 ld conf_skip_avant_fin_dosages
 and Conf_granulat1_skip
 andn Conf_TT_granulat
 AND (TG_OUT[NG_Gra1].CR_basc_Gra1[1].Numero_prod
 NE 0
 )
 s anticipation_montee_skip
  
 ld true 
 r Pesee_suivante_Gra1
  
 ld 0
 st Poids_deja_pese_Gra1
 st Poids_demande_Gra1
 st Erreur_jetee_Gra1
 ST Limite_correction_Gra1 (* inutile ? *)
 st Poids_de_reference_Gra1
 st Numero_produit_Gra1
 ST Numero_produit_Gra1_aux1
 ST Numero_produit_Gra1_aux2
 ST Numero_produit_Gra1_initial (* inutile ? *)

  
 fin_dosage_granulat1 :
 (*Bloc fonction du pesage*)
 ld Dosage_Gra1_INIT_EN_COURS
 OR (TG_OUT[NG_Gra1].CR_Etat_Basc_Gra1
 EQ 1
 ) 
 JMPC Par_DFB_pesage_Gra1

 Pas_par_DFB_pesage_Gra1 :
 	LD FALSE (* Ajout R.C. 07/12/2011 P808/P856, préventivement contre les dosages infinis (tel que le bug #0001367) *)
 	ST Cde_dosage_generale_Gra1 
 	JMP fin_granulat1

 Par_DFB_pesage_Gra1 :
 LD Ajustement_auto_granulat[Numero_produit_Gra1]
 ST Flags_pesage_Gra1.AJU_AUTO
 LD sens_pesage_fin_granulat1
 ST Flags_pesage_Gra1.SENS_PV

 LD Conf_granulat_TON_pesage_fin[Numero_produit_Gra1]
 ST TON_TOFF_PV_Gra1.TON
 LD Conf_granulat_TOFF_pesage_fin[Numero_produit_Gra1]
 ST TON_TOFF_PV_Gra1.TOFF
 LD Conf_granulat_TON_vibreur[Numero_produit_Gra1]
 ST TON_TOFF_VIB_Gra1.TON
 LD Conf_granulat_TOFF_vibreur[Numero_produit_Gra1]
 ST TON_TOFF_VIB_Gra1.TOFF
 LD Conf_granulat_TON_ajustement[Numero_produit_Gra1]
 ST TON_TOFF_AJU_Gra1.TON
 LD Conf_granulat_TOFF_ajustement[Numero_produit_Gra1]
 ST TON_TOFF_AJU_Gra1.TOFF

 CAL PESA_Gra1 (POIDS_I := Poids_instantane_Gra1,
                     POIDS_D := Poids_demande_Gra1,
                     POIDS_R := Poids_de_reference_Gra1,
                     ERR_JETE := Erreur_jetee_Gra1,
                     TOLERANC := Conf_Agg1_Tol_Used, (* XX/09/2015 - P868A - artf1598100 *)
                     SEUIL_PV := Conf_granulat_pesage_fin[Numero_produit_Gra1],
                     TON_TOFF_PV := TON_TOFF_PV_Gra1,
                     TON_TOFF_VIB := TON_TOFF_VIB_Gra1,
                     SEUIL_DOS_SIMULT := Conf_granulat_seuil_dos_simult[Numero_produit_Gra1],
                     NB_VIB := Conf_granulat_nb_vibreur[Numero_produit_Gra1],
                     TON_TOFF_AJU := TON_TOFF_AJU_Gra1,
                     TPS_apres_coulant := Conf_granulat_tps_apres_coulant[Numero_produit_Gra1],
                     S_TALUT := Conf_granulat_seuil_antitalutage[Numero_produit_Gra1],
                     TPS_ecoulement := Conf_granulat_tps_ecoulement[Numero_produit_Gra1],
                     LIM_CORR := Limite_correction_Gra1,
                     LIM_SDOS := Conf_granulat_limite_sous_dosage[Numero_produit_Gra1_initial],
                     DEFAUT := Defaut_Gra1,
                     INIT := Dosage_Gra1_INIT_EN_COURS,
                     T_STAB := Conf_granulat1_tps_stabilisation,
                     T_M_STAB := Conf_granulat1_tps_max_stab,
                     EC_STAB := Conf_granulat1_ecart_stabilite,
                     T_M_PESA := Conf_granulat1_tps_max_pesage,
                     T_TALUT := Conf_granulat1_tps_antitalutage,
                     Cde_Arret_dosage := BC_Mix_arret_dosage_tremie[Numero_produit_Gra1],
                     CUMULS := Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Gra1_initial],
                     Flags_pesage := Flags_pesage_Gra1,
                     PORTEE := Conf_granulat1_seuil_maxi,
		     Correction_Humidite := Correction_humidite_gra1)
		     
                       
 LD PESA_Gra1.poids_p
 ST Poids_deja_pese_Gra1
 LD PESA_Gra1.cde_dosa
 ST Cde_dosage_generale_Gra1
 S Dosage_auto_Gra1
 LD PESA_Gra1.cde_pv
 ST Petite_vitesse_Gra1
 LD PESA_Gra1.cde_vib
 ST Vibreur_tremies_Gra1
 LD PESA_Gra1.cde_talu
 ST Cde_anti_talutage_G1
 LD PESA_Gra1.cde_dos_simult
 AND (Petite_vitesse_Gra1 (* Interdire le dosage simultané si on est *)
 	XOR sens_pesage_fin_granulat1 (* en dosage fin *)
 )
 ST Dosage_simultane_Gra1
 LD PESA_Gra1.Pds_bloq
 S  Pesee_bloquee_Gra1
 LD PESA_Gra1.Tmax_pes
 S  Pesee_incomplete_Gra1
 LD PESA_Gra1.Instable
 S  Basc_instable_Gra1
 LD PESA_Gra1.Ajust
 S  Tol_inf_Gra1
 LD PESA_Gra1.Dep_tol
 S  Depassement_tolerance_Gra1
 LD PESA_Gra1.pesee_ok
 ANDN Alarme_satur_inf_Gra1 (* Ajout R.C. 10/02/2011 P803 pour ne pas valider la pesée *)
 ANDN Alarme_satur_sup_Gra1 (*      si la mesure de poids est saturée, mais dans la tolérance. *)
 ST Pesee_suivante_Gra1
 R  BC_Mix_arret_dosage_tremie[Numero_produit_Gra1]

 (* XX/09/2015 - P868A - artf1598100 *)
 (* Calcul de l'écart de pesée devient l'écart entre le poids pesé *)
 (* et le poids visé (avec toutes les corrections) *)
 (* L'écart de pesée ne prend plus en compte l'écart des gachées précedentes que l'on soit en CGG ou non *)
 (* (utilisé pour déterminer un éventuel dépassement de tolérance.) *)
 LD PESA_Gra1.ECART_P
 ST Ecart_pesee_Gra1
 INT_TO_DINT
 MUL 10000 (* Taux en pour dix-millièmes *)
 DIV (PESA_Gra1.POIDS_V
 	INT_TO_DINT
 )
 DINT_TO_INT
 ST Ecart_pesee_en_taux_Gra1

 (*Ecrire l'humidite utilisee dans le compte rendu de gachee*) 
 LD PESA_GRA1.Humudite_utilisee
 GE 0.0
 JMPC Ecrire_Humidite_Utilisee
 LD Humidite_deja_ecrit_Gra1
 JMPC passer_ecriture_Humidite_gra1
 
 Ecrire_Humidite_Utilisee:

	 LD PESA_GRA1.Humudite_utilisee
	 ST TG_OUT[NG_Gra1].CR_Humidite_Gra1[NP_Gra1]
	 LD PESA_GRA1.Humudite_utilisee(*Copie de l'humidite en variable interne*)
	 ST Humidite_Utilisee_Gra[Numero_produit_Gra1] 
	 LD TRUE
	 S Humidite_deja_ecrit_Gra1

passer_ecriture_Humidite_gra1: 

 (* Ecrire le poids visé dans le compte rendu de gâchée*)
 LD PESA_GRA1.pesee_ok (*Ajout NY*)
 JMPC Ecrire_poids_vise_gra1(*Ajout NY*)
 LD Poids_vise_deja_ecrit_Gra1
 OR Dosage_Gra1_INIT_EN_COURS
 ORN PESA_GRA1.pesee_ok (*Ajout NY*)
 JMPC passer_ecriture_poids_vise_gra1
 (*Ajout N.Y. Gestion de l'humidite*)

 Ecrire_poids_vise_gra1:

 	CAL ECR_CR_Basc_gra1_1(NP_Gra1	:= NP_Gra1,
 		PARAM_SELECT	:= 4, (* 4 = Poids_vise *)
 		PARAM_VAL	:= PESA_Gra1.POIDS_V,
 		CR_Basc_gra1	:= TG_OUT[NG_Gra1].CR_basc_Gra1,
 		CR_Basc_gra2	:= TG_OUT[NG_Gra1].CR_basc_Gra2)
 	LD TRUE
	S Poids_vise_deja_ecrit_Gra1
 passer_ecriture_poids_vise_gra1:
  
 (*Ecriture de la queue de chute dans le compte-rendu*)
 LD PESA_Gra1.stab_ok
 jmpcn suite_cr_g1
  
   ld Poids_instantane_Gra1
   sub PESA_Gra1.poids_c
   ST Erreur_jetee_mesuree_Gra1
   CAL ECR_CR_Basc_gra1_1(NP_Gra1	:= NP_Gra1,
   		PARAM_SELECT	:= 2, (* 2 = Erreur_Jetee *)
   		PARAM_VAL	:= Erreur_jetee_mesuree_Gra1,
   		CR_Basc_gra1	:= TG_OUT[NG_Gra1].CR_basc_Gra1,
   		CR_Basc_gra2	:= TG_OUT[NG_Gra1].CR_basc_Gra2)
  
 suite_cr_g1:
  
 (*Ecriture du poids pesée dans le compte-rendu*)
  
 ld Pesee_suivante_Gra1
 jmpcn fin_granulat1
  
 	ld Poids_instantane_Gra1
 	sub Poids_de_reference_Gra1
	(*ST TG_OUT[Gachee_en_cours_granulat1].CR_basc_Gra1[NP_gra1].Poids_reel_pese*)
	ST Poids_reel_pese_Gra1
	INT_TO_DINT
	ADD Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Gra1_initial].cumul_poids_reellement_peses
	ST Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Gra1_initial].cumul_poids_reellement_peses
	CAL ECR_CR_Basc_gra1_1(NP_Gra1	:= NP_Gra1,
			PARAM_SELECT	:= 3, (* 3 = Poids_reel_pese *)
			PARAM_VAL	:= Poids_reel_pese_Gra1,
			CR_Basc_gra1	:= TG_OUT[NG_Gra1].CR_basc_Gra1,
			CR_Basc_gra2	:= TG_OUT[NG_Gra1].CR_basc_Gra2)

	LD Poids_demande_Gra1
	ADD Ecart_CHU_Gra[NG_Gra1][Numero_produit_Gra1]
	ST Poids_demande_Gra1_CHU
	LD Poids_demande_Gra1_CHU
	INT_TO_DINT
	ADD Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Gra1_initial].cumul_consignes_sans_correct_g_g
	ST Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Gra1_initial].cumul_consignes_sans_correct_g_g
  
 	(* Pointer sur produit suivant *)
 	LD NP_Gra1
 	ADD 1
 	ST NP_Gra1
	LD FALSE
   	ST Dosage_auto_Gra1
 fin_granulat1:
 (* defaut pesée *)
 ld Pesee_bloquee_Gra1
(* or Alarme_poids_max_granulat1*)(* On ne bloque plus la validation de la pesée *)
	(* en cas de dépassement de la portée paramétrée pour la bascule. *)
	(* Décision de Patrick HUGON le 01/12/2010, dans le cadre de la *)
	(* correction gachée sur gachée (qui est susceptible de faire viser *)
	(* un poids cible égal à la portée de la bascule pour compenser *)
	(* des sous-dosages). *)
 or Alarme_detare_Gra1
 or Basc_instable_Gra1
 or Depassement_tolerance_Gra1
 or Tol_inf_Gra1
 or Pesee_incomplete_Gra1
 or (
 ldn Info_balance_Gra1_fermee
 andn Conf_granulat1_skip
 )
 OR Alarme_satur_inf_Gra1
 OR Alarme_satur_sup_Gra1
 st Defaut_Gra1
</ILSource>
	</program>
	<program>
		<identProgram name="200_Dosage_Gra2" type="section" task="MAST"></identProgram>
		<ILSource>(*******************************************************************************************************************)
 (*                                              Recherche gachée granulat1                                                        *)
 (*******************************************************************************************************************)

 (* Initialisation des variables locales de la section *)
 LD Dosage_Gra2_DEM_INIT
 ST Dosage_Gra2_INIT_EN_COURS
 JMPCN Fin_init_NG_gra2
 	
	(* Modif R.C. 06/12/2011 P808/P856 : Modification des conditions *)
 	(* déclenchant cette initialisation. Suite à un problème quand on *)
 	(* était sur une n-ième gâchée dont le premier produit ne faisait *)
 	(* pas dépasser le seuil vide. *)
 	LD index_sortie_buffer
 	ST suite_index_sortie_g2
 	ST NG_Gra2
 	LD 1 (* Changement de numéro de gâchée =&gt; On initialise le NP à 1 *)
 	ST NP_gra2 (* (Ajout R.C. 08/07/2011 P806) *)
 	LD 0
 	ST Poids_demande_gra2 (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
 	ST Numeros_produits_granulat2 (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
 	ST Numero_produit_gra2 (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
 	ST Numero_produit_gra2_aux1 (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
 	ST Numero_produit_gra2_aux2 (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
 	ST Poids_deja_pese_gra2 (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)

	(* Reset de la demande d'init *)
	LD TRUE
	R Dosage_Gra2_DEM_INIT (* L'init de la section a bien été prise en compte. *)
	R Dosage_auto_Gra2

 Fin_init_NG_gra2:

 LD Pesee_suivante_Gra2
 jmpc initialisation_type_pesee_g2
  
 (*Pesée granulat 2 si balances libres*)
 ld Etat_balance_Gra2_et_glace
 jmpcn fin_dosage_granulat2 
  
 recherche_index_g2 :
  
 ld suite_index_sortie_g2
 (*Sauvegarde gachee en cours*)
 st NG_Gra2
  
  
  
 (*Chargement mot état granulat 2*)
 LD TG_OUT[NG_Gra2].CR_Etat_Basc_Gra2
 EQ 2
 ST Pesee_terminee_Gra2
 LD TG_OUT[NG_Gra2].CR_Etat_Basc_Gra2
 EQ 1 (*Pesée en cours granulat 2*)
 jmpc fin_dosage_granulat2
  
 (*Si pesée terminée pour cette gachée recherche de la gachée suivante*)
 ldn Pesee_terminee_Gra2
 jmpc recherche_tremie_granulat2

 LD 1
 ST NP_Gra2
  
LD FALSE
ST Dosage_auto_Gra2

 ld suite_index_sortie_g2
 add 1
 st suite_index_sortie_g2
 LE 4
 jmpc suite_granulat2
 ld 1
 st suite_index_sortie_g2
  
 suite_granulat2 :
  
 	ld suite_index_sortie_g2
 	eq index_entree_buffer
 	jmpc fin_dosage_granulat2
 jmp recherche_index_g2
 (*******************************************************************************************************************)
 (*                                   Test présence du produit dans la gâchée                                                      *)
 (*******************************************************************************************************************)
  
 recherche_tremie_granulat2 :
 LD TG_IN[NG_Gra2].Basc_Gra2[NP_Gra2].Numero_Produit
 EQ 16#0000
 JMPC fin_dosage_gachee_en_cours_G2
 JMP Dire_en_cours_g2
  
 (*******************************************************************************************************************)
 (*                                  Configuration et consignes de dosage                                                          *)
 (*******************************************************************************************************************)
  
 Dire_en_cours_g2 :
  
 (* Dire en cours *)
 LD 1
 ST TG_OUT[NG_Gra2].CR_Etat_Basc_Gra2
  
 (*Dire presence produit*)
 LD TG_OUT[NG_Gra2].CR_Etat_Presence_Produit
 or 16#0002
 ST TG_OUT[NG_Gra2].CR_Etat_Presence_Produit
  
 initialisation_type_pesee_g2 :
  
 	
 	(* NP limite atteint ? *)
 	LD NP_gra2
 	GT 5
 	JMPCN Rech_num_prod_gra2
 		(* NP limite atteint -&gt; On arrête de parcourir la table *)
 		LD 0
 		ST Numeros_produits_granulat2
		ST Numero_produit_gra2
 		ST Numero_produit_gra2_aux1
 		ST Numero_produit_gra2_aux2
 	JMP Fin_rech_num_prod_gra2
 	Rech_num_prod_gra2:
 		(* Récupération du numéro d'organe de stockage surlequel doser *)
		LD TG_IN[NG_Gra2].Basc_Gra2[NP_Gra2].Numero_Produit
		WORD_TO_INT
	 	ST Numeros_produits_granulat2
	 	(* Récupération des numéros des trémies auxiliaires dans le cas *)
	 	(* d'un dosage simultané sur plusieurs trémies. *)
	 	CAL Decomp_num_prod(Numeros_organes := Numeros_produits_granulat2)
	 	LD Decomp_num_prod.Num_organe_principal
	 	ST Numero_produit_Gra2
	 	LD Decomp_num_prod.Num_organe_aux1
	 	ST Numero_produit_Gra2_aux1
	 	LD Decomp_num_prod.Num_organe_aux2
	 	ST Numero_produit_Gra2_aux2
 	Fin_rech_num_prod_gra2:

	(* On enregistre le numéro de produit initial (avant éventuel remplacement de produit). *)
	LD Numero_produit_Gra2
	ST Numero_produit_Gra2_initial
 	eq 0
 	jmpc fin_dosage_gachee_en_cours_G2
 	
 	(*Copie produit, pesée et numéro trémie dans compte-rendu*)
 	LD TG_IN[NG_Gra2].Basc_Gra2[NP_Gra2].Numero_Produit
 	ST TG_OUT[NG_Gra2].CR_basc_Gra2[NP_Gra2].Numero_prod
 	
 	(*Recherche poids demandé*)
	LD TG_IN[NG_Gra2].Basc_Gra2[NP_Gra2].Poids_demande
 	st Poids_demande_Gra2
  
 	(*Recherche erreur de jetée*)
 	LD TG_IN[NG_Gra2].Basc_Gra2[NP_Gra2].Erreur_jettee
	st Erreur_jetee_Gra2
  
 	(*Recherche limite de correction*)
	LD TG_IN[NG_Gra2].Basc_Gra2[NP_Gra2].Limite_correction
 	ST Limite_correction_Gra2
  
 	Ld Poids_instantane_Gra2
 	st Poids_de_reference_Gra2

 	LD TRUE
	R Poids_vise_deja_ecrit_Gra2 (* init *)
  
	(* Init de la CGG quand la CGG n'est pas activée et *)
	(* aussi quand c'est la 1ère gâchée de la fabrication *)
	LDN CGG_activee
	OR (TG_IN[NG_Gra2].Proprietes_gachee
		AND 16#0002 (* 1ère gâchée de la fabrication *)
		GT 0
	)
	AND (NP_Gra2
		EQ 1 (* 1er produit de la gâchée *)
	)
	JMPCN init_corr_g_g_gra2__fin
	init_corr_g_g_gra2:
		(* on active la CGG en début de fabrication *)
		LD CGG_activee
		ST CGG_activee_Gra2 
		(* init des cumuls *)
		LD Conf_granulat1_nb_tremies
		ST ma0
		init_corr_g_g_gra2__boucle:
		LD ma0
		ADD 1
		ST ma0
		LD ma0
		GT (Conf_granulat1_nb_tremies
		ADD Conf_granulat2_nb_tremies
		)
		JMPC init_corr_g_g_gra2__fin
		LD 0
		ST cumuls_pesees.Cumuls_pesees_Gra[ma0].cumul_consignes_sans_correct_g_g
		ST cumuls_pesees.Cumuls_pesees_Gra[ma0].cumul_poids_reellement_peses
		JMP init_corr_g_g_gra2__boucle
	init_corr_g_g_gra2__fin:


 	(* Récupération des options de dosage *)

	(* Obligation d'atteindre la consigne *)
 	LD TG_IN[NG_Gra2].Basc_Gra2[NP_Gra2].Options_dosage
 	AND 16#0001
	GT 0
 	ST Flags_pesage_Gra2.obligation_atteindre_consigne

	(* Correction gachée sur gachée activée *)
 	LD CGG_activee_Gra2
 	ST Flags_pesage_Gra2.CGG_ON

	(* Dernière gachée *)
 	LD TG_IN[NG_Gra2].Proprietes_gachee
 	AND 16#0001
 	NE 0
 	ST Flags_pesage_Gra2.Derniere_gachee

	(* Première gachée *)
 	LD TG_IN[NG_Gra2].Proprietes_gachee
 	AND 16#0002
 	NE 0
 	ST Flags_pesage_Gra2.Premiere_gachee
	
(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	(* Mode décomptage :non disponible *)
	LD FALSE
	ST Flags_pesage_Gra2.mode_decomptage

(* XX/09/2015 - P868A - artf1598100 *)
 	CAL Weighing_Tolerances (IDFB_Conf_Process_Tol := TG_IN[NG_Gra2].Conf_Agg_Process_Tol[Numero_produit_Gra2],
 	                         IDFB_Conf_Process_Tol_Default := Conf_Agg_Process_Tol_Default[Numero_produit_Gra2],
 	                         IDFB_Batch_Properties := TG_IN[NG_Gra2].Proprietes_gachee,
 	                         ODFB_Conf_Process_Tol_Used =&gt; Conf_Agg2_Tol_Used)

 	jmp fin_dosage_granulat2
 		
 fin_dosage_gachee_en_cours_G2 :
  
 (* Dire terminé *)
 ld 2
 ST TG_OUT[NG_Gra2].CR_Etat_Basc_Gra2
 
 LD TG_OUT[NG_Gra2].CR_Etat_Gachee
 or 16#0002
 ST TG_OUT[NG_Gra2].CR_Etat_Gachee
  
 ld true 
 r Pesee_suivante_Gra2
  
 ld 0
 st Poids_demande_Gra2
 st Erreur_jetee_Gra2
 ST Limite_correction_Gra2 (* inutile ? *)
 st Poids_de_reference_Gra2
 st Numero_produit_Gra2
 ST Numero_produit_Gra2_aux1
 ST Numero_produit_Gra2_aux2
 st Poids_deja_pese_Gra2
 ST Numero_produit_Gra2_initial (* inutile ? *)
  

 fin_dosage_granulat2 :
 (*Bloc fonction du pesage*)
 LD Dosage_Gra2_INIT_EN_COURS
 OR (TG_OUT[NG_Gra2].CR_Etat_Basc_Gra2
 EQ 1
 )
 JMPC Par_DFB_pesage_Gra2

 Pas_par_DFB_pesage_Gra2 :
 	LD FALSE (* Ajout R.C. 07/12/2011 P808/P856, préventivement contre les dosages infinis (tel que le bug #0001367) *)
 	ST Cde_dosage_generale_Gra2 
 	JMP fin_granulat2

 Par_DFB_pesage_Gra2 :
 LD Ajustement_auto_granulat[Numero_produit_Gra2]
 ST Flags_pesage_Gra2.AJU_AUTO
 LD sens_pesage_fin_granulat2
 ST Flags_pesage_Gra2.SENS_PV

 LD Conf_granulat_TON_pesage_fin[Numero_produit_Gra2]
 ST TON_TOFF_PV_Gra2.TON
 LD Conf_granulat_TOFF_pesage_fin[Numero_produit_Gra2]
 ST TON_TOFF_PV_Gra2.TOFF
 LD Conf_granulat_TON_vibreur[Numero_produit_Gra2]
 ST TON_TOFF_VIB_Gra2.TON
 LD Conf_granulat_TOFF_vibreur[Numero_produit_Gra2]
 ST TON_TOFF_VIB_Gra2.TOFF
 LD Conf_granulat_TON_ajustement[Numero_produit_Gra2]
 ST TON_TOFF_AJU_Gra2.TON
 LD Conf_granulat_TOFF_ajustement[Numero_produit_Gra2]
 ST TON_TOFF_AJU_Gra2.TOFF
  
 CAL PESA_Gra2 (POIDS_I := Poids_instantane_Gra2,
                     POIDS_D := Poids_demande_Gra2,
                     POIDS_R := Poids_de_reference_Gra2,
                     ERR_JETE := Erreur_jetee_Gra2,
                     TOLERANC := Conf_Agg2_Tol_Used, (* XX/09/2015 - P868A - artf1598100 *)
                     SEUIL_PV := Conf_granulat_pesage_fin[Numero_produit_Gra2],
                     TON_TOFF_PV := TON_TOFF_PV_Gra2,
                     SEUIL_DOS_SIMULT := Conf_granulat_seuil_dos_simult[Numero_produit_Gra2],
                     TON_TOFF_VIB := TON_TOFF_VIB_Gra2,
                     NB_VIB := Conf_granulat_nb_vibreur[Numero_produit_Gra2],
                     TON_TOFF_AJU := TON_TOFF_AJU_Gra2,
                     TPS_apres_coulant := Conf_granulat_tps_apres_coulant[Numero_produit_Gra2],
                     S_TALUT := Conf_granulat_seuil_antitalutage[Numero_produit_Gra2],
                     TPS_ecoulement := Conf_granulat_tps_ecoulement[Numero_produit_Gra2],
                     LIM_CORR := Limite_correction_Gra2,
                     LIM_SDOS := Conf_granulat_limite_sous_dosage[Numero_produit_Gra2_initial],
                     DEFAUT := Defaut_Gra2,
                     INIT := Dosage_Gra2_INIT_EN_COURS,
                     T_STAB := Conf_granulat2_tps_stabilisation,
                     T_M_STAB := Conf_granulat2_tps_max_stab,
                     EC_STAB := Conf_granulat2_ecart_stabilite,
                     T_M_PESA := Conf_granulat2_tps_max_pesage,
                     T_TALUT := Conf_granulat2_tps_antitalutage,
                     CUMULS := Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Gra2_initial],
                     Flags_pesage := Flags_pesage_Gra2,
                     PORTEE := Conf_granulat2_seuil_maxi,
		     Correction_Humidite := Correction_Humidite_Gra2)
  
                       
 LD PESA_Gra2.poids_p
 ST Poids_deja_pese_Gra2
 LD PESA_Gra2.cde_dosa
 ST Cde_dosage_generale_Gra2
 S Dosage_auto_Gra2
 LD PESA_Gra2.cde_pv
 ST Petite_vitesse_Gra2
 LD PESA_Gra2.cde_vib
 ST Vibreur_tremies_Gra2
 LD PESA_Gra2.cde_talu
 ST Cde_anti_talutage_G2
 LD PESA_Gra2.cde_dos_simult
 AND (Petite_vitesse_Gra2 (* Interdire le dosage simultané si on est *)
 	XOR sens_pesage_fin_granulat2 (* en dosage fin *)
 )
 ST Dosage_simultane_Gra2
 LD PESA_Gra2.Pds_bloq
 S  Pesee_bloquee_Gra2
 LD PESA_Gra2.Tmax_pes
 S  Pesee_incomplete_Gra2
 LD PESA_Gra2.Instable
 S  Basc_instable_Gra2
 LD PESA_Gra2.Ajust
 S  Tol_inf_Gra2
 LD PESA_Gra2.Dep_tol
 S  Depassement_tolerance_Gra2
 LD PESA_Gra2.pesee_ok
 ANDN Alarme_satur_inf_Gra2 (* Ajout R.C. 10/02/2011 P803 pour ne pas valider la pesée *)
 ANDN Alarme_satur_sup_Gra2 (*      si la mesure de poids est saturée, mais dans la tolérance. *)
 ST Pesee_suivante_Gra2

 (* XX/09/2015 - P868A - artf1598100 *)
 (* Calcul de l'écart de pesée devient l'écart entre le poids pesé *)
 (* et le poids visé (avec toutes les corrections) *)
 (* L'écart de pesée ne prend plus en compte l'écart des gachées précedentes que l'on soit en CGG ou non *)
 (* (utilisé pour déterminer un éventuel dépassement de tolérance.) *)
 LD PESA_Gra2.ECART_P
 ST Ecart_pesee_Gra2
 INT_TO_DINT
 MUL 10000 (* Taux en pour dix-millièmes *)
 DIV (PESA_Gra2.POIDS_V
 	INT_TO_DINT
 )
 DINT_TO_INT
 ST Ecart_pesee_en_taux_Gra2

(*Ecrire l'humidite utilisee dans le compte rendu de gachee*) 
 LD PESA_GRA2.Humudite_utilisee
 GE 0.0
 JMPC Ecrire_Humidite_Utilisee2
 LD Humidite_deja_ecrit_Gra2
 JMPC passer_ecriture_Humidite_gra2
 
 Ecrire_Humidite_Utilisee2:

	 LD PESA_GRA2.Humudite_utilisee
	 ST TG_OUT[NG_Gra2].CR_Humidite_Gra2[NP_Gra2]
	 LD PESA_GRA2.Humudite_utilisee(*Copie de l'humidite en variable interne*)
	 ST Humidite_Utilisee_Gra[Numero_produit_Gra2]

	 LD TRUE
	 S Humidite_deja_ecrit_Gra2

passer_ecriture_Humidite_gra2:

(* Ecrire le poids visé dans le compte rendu de gâchée*)
 LD PESA_GRA2.pesee_ok (*Ajout NY*)
 JMPC Ecrire_poids_vise_gra2(*Ajout NY*)
 LD Poids_vise_deja_ecrit_Gra2
 OR Dosage_Gra2_INIT_EN_COURS
 ORN PESA_GRA2.pesee_ok (*Ajout NY*)
 JMPC passer_ecriture_poids_vise_gra2

Ecrire_poids_vise_gra2 :
 	LD PESA_Gra2.POIDS_V
	ST TG_OUT[NG_Gra2].CR_basc_Gra2[NP_Gra2].Poids_vise
 	LD TRUE
	S Poids_vise_deja_ecrit_Gra2
 passer_ecriture_poids_vise_gra2:
  
 (*Ecriture de la queue de chute dans le compte-rendu*)
 LD PESA_Gra2.stab_ok
 jmpcn suite_cr_g2
  
 ld Poids_instantane_Gra2
 sub PESA_Gra2.poids_c
 ST TG_OUT[NG_Gra2].CR_basc_Gra2[NP_Gra2].Erreur_jettee
  
 suite_cr_g2:
  
 (*Ecriture du poids pesée dans le compte-rendu*)
 ld Pesee_suivante_Gra2
 jmpcn fin_granulat2
  
 	ld Poids_instantane_Gra2
 	sub Poids_de_reference_Gra2
	ST TG_OUT[NG_Gra2].CR_basc_Gra2[NP_Gra2].Poids_reel_pese
	INT_TO_DINT
	ADD Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Gra2_initial].cumul_poids_reellement_peses
	ST Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Gra2_initial].cumul_poids_reellement_peses

	LD Poids_demande_Gra2
	ADD Ecart_CHU_Gra[NG_Gra2][Numero_produit_Gra2](*AJOUT NY Gestion humidite*)
	ST Poids_demande_Gra2_CHU (*AJOUT NY Gestion humidite*)
	LD Poids_demande_Gra2_CHU (*AJOUT NY Gestion humidite*)
	INT_TO_DINT
	ADD Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Gra2_initial].cumul_consignes_sans_correct_g_g
	ST Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Gra2_initial].cumul_consignes_sans_correct_g_g

	(* Pointer sur produit suivant *)
	LD NP_Gra2
	ADD 1
	ST NP_Gra2
	LD FALSE
   	ST Dosage_auto_Gra2
  	
 fin_granulat2:
 (*Défaut de pesée*)
 ld Pesee_bloquee_Gra2
(* or Alarme_poids_max_granulat2*)(* On ne bloque plus la validation de la pesée *)
	(* en cas de dépassement de la portée paramétrée pour la bascule. *)
	(* Décision de Patrick HUGON le 01/12/2010, dans le cadre de la *)
	(* correction gachée sur gachée (qui est susceptible de faire viser *)
	(* un poids cible égal à la portée de la bascule pour compenser *)
	(* des sous-dosages). *)
 or Alarme_detare_Gra2
 or Basc_instable_Gra2
 or Depassement_tolerance_Gra2
 or Tol_inf_Gra2
 or Pesee_incomplete_Gra2
 orn Info_balance_Gra2_fermee
 OR Alarme_satur_inf_Gra2
 OR Alarme_satur_sup_Gra2
 st Defaut_Gra2
</ILSource>
	</program>
	<program>
		<identProgram name="210_Sorties_Gra" type="section" task="MAST"></identProgram>
		<ILSource>(* Initialisation des variables locales de la section *)
LD Sorties_Gra_DEM_INIT
JMPCN Init_Sorties_Gra__Fin
Init_Sorties_Gra:

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	LD TRUE
	R Sorties_Gra_DEM_INIT (* L'init de la section a bien été prise en compte. *)
Init_Sorties_Gra__Fin:


ldn manu_logiciel
 jmpc fin_manu_granulat
  
 (*manuel logiciel granulat*)
  
 ld Manu_cde_dosage_granulat
 and Manu_temporise
 st TON_manu_Gra.IN
  
 CAL TON_manu_Gra (PT := Manu_Tps_dosage_Gra)
  
 ld Auto_pupitre_sans_Arret_prod
 andn Alarme_poids_max_Gra1
 andn Alarme_detare_Gra1
 and	(	
 	ldn Conf_granulat2_pres_balance
 	or	(
		ld Conf_granulat2_pres_balance
		andn Alarme_poids_max_Gra2
 		andn Alarme_detare_Gra2
 	    	)
 	)
 and manu_logiciel
 and (1
 and (Manu_cde_dosage_granulat
 andn Manu_temporise
 )
 or (Manu_cde_dosage_granulat
 and Manu_temporise
 andn TON_manu_Gra.Q
 )
 )
ANDN Alarme_Com_HMS_Profibus_Gra1
ANDN Alarme_Com_HMS_Profibus
ANDN Alarme_Com_API_ModbusTCP_1
ANDN Alarme_IDE500_Gra1
st Cde_dosage_Gra[Numero_manu_Gra]
jmpc fin_manu_granulat
  
 ld true
 r Manu_cde_dosage_granulat
  
 fin_manu_granulat:
  
 CAL FD_manu_1_Gra (CLK :=Manu_cde_dosage_granulat)
 LD FD_manu_1_Gra.Q
 jmpcn fin_manu2_granulat
  
 ld 0
 st Numero_manu_Gra
  
 fin_manu2_granulat :
  
 (*Commande granulat vers bascule 1*)
  
 ld Numero_produit_Gra1
 eq 0
 jmpc suite_cde_granulat
  
 ldn Vidange_Gra1
 and (Cde_dosage_generale_Gra1
 and Auto_pupitre_sans_Arret_prod
 andn manu_logiciel
 )
 ST Bit_cde_dos_Gra1

 LD Alarme_poids_max_Gra1
 OR Alarme_detare_Gra1
 OR Discordance_vidange_granulat1
 OR Alarme_Com_HMS_Profibus_Gra1
 OR Alarme_Com_HMS_Profibus
 OR Alarme_Com_API_ModbusTCP_1
 OR Alarme_IDE500_Gra1
 ST Alarme_bloquante_dosage_Gra1

 (* Commande Trémie Granulat 1 principale *)
 LD Bit_cde_dos_Gra1
 OR (Manu_cde_dosage_granulat
 	AND manu_logiciel
 	AND (Numero_manu_Gra
 		EQ Numero_produit_Gra1
 	)
 )
 ANDN Alarme_bloquante_dosage_Gra1
 ST Cde_dosage_Gra[Numero_produit_Gra1]


 (* Commande Trémie Granulat 1 auxiliaire 1 *)
 LD Numero_produit_Gra1_aux1
 EQ 0
 JMPC pas_granulat1_aux1
 LD Numero_produit_Gra1_aux1
 EQ Numero_produit_Gra1
 JMPC pas_granulat1_aux1 (* Le dosage ne se terminera pas si la commande de *)
 	(* dosage de la trémie principale est sur-écrite à FALSE. *)
 	LD Bit_cde_dos_Gra1
 	OR (Manu_cde_dosage_granulat
 		AND manu_logiciel
 		AND (Numero_manu_Gra
 			EQ Numero_produit_Gra1_aux1
 		)
 	)
 	AND Dosage_simultane_Gra1
 	ANDN Alarme_bloquante_dosage_Gra1
 	ST Cde_dosage_Gra[Numero_produit_Gra1_aux1]
 pas_granulat1_aux1:

 (* Commande Trémie Granulat 1 auxiliaire 2 *)
 LD Numero_produit_Gra1_aux2
 EQ 0
 JMPC pas_granulat1_aux2
 LD Numero_produit_Gra1_aux2
 EQ Numero_produit_Gra1
 JMPC pas_granulat1_aux2 (* Le dosage ne se terminera pas si la commande de *)
 	(* dosage de la trémie principale est sur-écrite à FALSE. *)
 	LD Bit_cde_dos_Gra1
 	OR (Manu_cde_dosage_granulat
 		AND manu_logiciel
 		AND (Numero_manu_Gra
 			EQ Numero_produit_Gra1_aux2
 		)
 	)
 	AND Dosage_simultane_Gra1
 	ANDN Alarme_bloquante_dosage_Gra1
 	ST Cde_dosage_Gra[Numero_produit_Gra1_aux2]
 pas_granulat1_aux2:
    
  
 suite_cde_granulat:
  


 (*Commande granulat vers bascule 2*)
  
 ld Numero_produit_Gra2
 eq 0
 jmpc suite2_cde_granulat
  
 ldn Vidange_Gra2
 and (Cde_dosage_generale_Gra2
 and Auto_pupitre_sans_Arret_prod
 andn manu_logiciel
 )
 ST Bit_cde_dos_Gra2

 LD Alarme_poids_max_Gra2
 OR Alarme_detare_Gra2
 OR Discordance_vidange_granulat2 
(* OR Alarme_Com_HMS_Profibus_Gra2*)(* Non implémentée *)
 OR Alarme_Com_HMS_Profibus
 OR Alarme_Com_API_ModbusTCP_1
 OR Alarme_IDE500_Gra2
 ST Alarme_bloquante_dosage_Gra2

 (* Commande Trémie Granulat 2 principale *)
 LD Bit_cde_dos_Gra2
 OR (Manu_cde_dosage_granulat
 	AND manu_logiciel
 	AND (Numero_manu_Gra
 		EQ Numero_produit_Gra2
 	)
 )
 ANDN Alarme_bloquante_dosage_Gra2
 ST Cde_dosage_Gra[Numero_produit_Gra2]

 (* Commande Trémie Granulat 2 auxiliaire 1 *)
 LD Numero_produit_Gra2_aux1
 EQ 0
 JMPC pas_granulat2_aux1
 LD Numero_produit_Gra2_aux1
 EQ Numero_produit_Gra2
 JMPC pas_granulat2_aux1 (* Le dosage ne se terminera pas si la commande de *)
 	(* dosage de la trémie principale est sur-écrite à FALSE. *)
 	LD Bit_cde_dos_Gra2
 	OR (Manu_cde_dosage_granulat
 		AND manu_logiciel
 		AND (Numero_manu_Gra
 			EQ Numero_produit_Gra2_aux1
 		)
 	)
 	AND Dosage_simultane_Gra2
 	ANDN Alarme_bloquante_dosage_Gra2
 	ST Cde_dosage_Gra[Numero_produit_Gra2_aux1]
 pas_granulat2_aux1:

 (* Commande Trémie Granulat 2 auxiliaire 2 *)
 LD Numero_produit_Gra2_aux2
 EQ 0
 JMPC pas_granulat2_aux2
 LD Numero_produit_Gra2_aux2
 EQ Numero_produit_Gra2
 JMPC pas_granulat2_aux2 (* Le dosage ne se terminera pas si la commande de *)
 	(* dosage de la trémie principale est sur-écrite à FALSE. *)
 	LD Bit_cde_dos_Gra2
 	OR (Manu_cde_dosage_granulat
 		AND manu_logiciel
 		AND (Numero_manu_Gra
 			EQ Numero_produit_Gra2_aux2
 		)
 	)
 	AND Dosage_simultane_Gra2
 	ANDN Alarme_bloquante_dosage_Gra2
 	ST Cde_dosage_Gra[Numero_produit_Gra2_aux2]
 pas_granulat2_aux2:


  
 suite2_cde_granulat:
  


 (*Commande granulat vers bascule anhydrite*)
  
 ld Numero_produit_Anh
 eq 0
 orn Type_produit_anhydrite
 jmpc fin_cde_granulat
  
 ldn Vidange_Anh
 andn Alarme_poids_max_Anh
 andn Alarme_detare_Anh
 andn Discordance_vidange_anhydrite
 and (Cde_dosage_generale_Anh
 and Type_produit_anhydrite
 and Auto_pupitre_sans_Arret_prod
 andn manu_logiciel
 )
 or (Manu_cde_dosage_granulat
 and manu_logiciel
 and (Numero_manu_Gra
 eq Numero_produit_Anh
 )
 )
ANDN Alarme_Com_HMS_Profibus_Gra1
ANDN Alarme_Com_HMS_Profibus
ANDN Alarme_Com_API_ModbusTCP_1
ANDN Alarme_IDE500_Gra1
st Cde_dosage_Gra[Numero_produit_Anh]
  
 fin_cde_granulat :
</ILSource>
	</program>
	<program>
		<identProgram name="221_Dosage_Cim" type="section" task="MAST"></identProgram>
		<STSource>(* ON ne dispose que d'une seule gestion d'introduction.
les bascules ciment doivent donc utiliser le même numéro de gachée.
Donc, l'incrémentation du numéro de gachée doit être fait en synchronisant
l'état de la pesée de bascule  *)





(* ************************************************************* *)
(*                  INITIALISATION                               *)
(* ************************************************************* *)

(* Initialisation des variables locales de la section *)
Dosage_Cim_INIT_EN_COURS := Dosage_Cim_DEM_INIT;
IF Dosage_Cim_DEM_INIT THEN

	(* INIT CIM1 *)
	NG_Cim1 			:= index_sortie_buffer;
	Depart_Dosage_Cim1 		:= FALSE; (* Autorise l'init produit *)
	NP_Cim1 			:= 1; (* Premier produit *)
	Gachee_Suivante_Cim1 		:= FALSE;
	Prod_Suivant_Cim1		:= FALSE;
	Depart_verif_Cim1		:= FALSE;
	Gachee_EC_Cim1			:= FALSE;
	Premier_Prod_Cim1		:= TRUE;
		(* "Premier_Prod_Cim1" est mis à TRUE a chaque changement de gachee. *)
		(* Il est remis à FALSE lors de la fin de chaque dosage de ciment. Ce bit, *)
		(* propre à Cim1, permet de savoir quel est le Premier produit dosé pour *)
		(* cette bascule. Chaque bascule peut ainsi travailler sur la même table *)
		(* de dosage. *)
	Poids_demande_Cim1		:= 0;
	Numero_produit_Cim1		:= 0; (* Ajout R.C. 09/07/2009 *)
	Numero_produit_Cim1_aux1	:= 0; (* Ajout R.C. 23/02/2011 *)
	Numero_produit_Cim1_aux2	:= 0; (* Ajout R.C. 23/02/2011 *)
	Poids_deja_pese_Cim1		:= 0; (* Ajout R.C. 09/07/2009 *)

	(* INIT CIM2 *)
	NG_Cim2				:= index_sortie_buffer; (* Ajout R.C. 09/07/2009 *)
	Depart_Dosage_Cim2 		:= FALSE; (* Autorise l'init produit *)
	NP_Cim2 			:= 1; (* Premier produit *)
	Gachee_Suivante_Cim2 		:= FALSE;
	Prod_Suivant_Cim2		:= FALSE;
	Depart_verif_Cim2		:= FALSE;
	Gachee_EC_Cim2			:= FALSE;
	Premier_Prod_Cim2		:= TRUE;
	Poids_demande_Cim2		:= 0;
	Numero_produit_Cim2		:= 0; (* Ajout R.C. 09/07/2009 *)
	Numero_produit_Cim2_aux1	:= 0; (* Ajout R.C. 23/02/2011 *)
	Numero_produit_Cim2_aux2	:= 0; (* Ajout R.C. 23/02/2011 *)
	Poids_deja_pese_Cim2		:= 0; (* Ajout R.C. 09/07/2009 *)

	(* Reset de la demande d'init *)
	Dosage_Cim_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
	Dosage_auto_Cim1 := False;
	Dosage_auto_Cim2 := False;
END_IF;



(* ************************************************************* *)
(*                  GESTION DU PARCOURS DE LA TABLE              *)
(* ************************************************************* *)

(* CIMENT1 *)
(* Verification du contenu globale de la table *)
TG_Cim1_Valide := TG_IN[NG_Cim1].Numero_gachee &lt;&gt;0
		    AND TG_IN[NG_Cim1].Numero_gachee = TG_IN[NG_Cim1].CR_Code_Fin;
(* Récupération des numéros de silos à doser *)
Numeros_produits_cim1 := WORD_TO_INT(TG_IN[NG_Cim1].Basc_Cim1[NP_Cim1].Numero_produit);
Decomp_num_prod(Numeros_organes		:= Numeros_produits_cim1,
		Num_organe_principal	=&gt; NP_Cim1_A_Doser,
		Num_organe_aux1		=&gt; NP_Cim1_Aux1_A_Doser,
		Num_organe_aux2		=&gt; NP_Cim1_Aux2_A_Doser);
(* Tests presence produit dans la gachee*)
Pres_prod_Cim1 := NP_Cim1_A_Doser &lt;&gt; 0
                    AND (NP_Cim1_A_Doser&lt;=Conf_cim1_nb_silos); 
(* Test produit a doser *)
IF NOT Depart_Dosage_Cim1	(* Init dosage non fait *)
   AND TG_Cim1_Valide		(* Gachee valide  *)
   AND ((TG_OUT[NG_Cim1].CR_Etat_Basc_Cim1 = 0)	(* Gachee pas commencée *)(* Ajout R.C. 15/06/2011 P851 - car on risque de bloquer si on pointe sur une gâchée déjà traitée (si toutes les TG sont pleines). *)
	OR (NP_Cim1&gt;1))				(* (on ne vérifie cela qu'au premier produit) *)
   THEN
   IF Pres_prod_Cim1		(* Presence produit ds gachee *)
      THEN
         (* Emplacement produit non vide *)
         TG_OUT[NG_Cim1].CR_Etat_Presence_Produit := TG_OUT[NG_Cim1].CR_Etat_Presence_Produit OR 16#0004;
         NP_initial_Cim1_A_Doser := NP_Cim1_A_Doser;
         PD_Cim1_A_Doser := TG_IN[NG_Cim1].Basc_Cim1[NP_Cim1].Poids_demande;
         EJ_Cim1_A_Doser := TG_IN[NG_Cim1].Basc_Cim1[NP_Cim1].Erreur_jettee;
         LC_Cim1_A_Doser := TG_IN[NG_Cim1].Basc_Cim1[NP_Cim1].Limite_correction;
         (* Dire Gachee en cours *)
         Gachee_EC_Cim1			:= TRUE;
         Depart_verif_Cim1		:= TRUE;	(* lance la vérification bascule *)
      ELSE
         (* Emplacement produit vide *)
	 Prod_Suivant_Cim1		:= TRUE;
	 Premier_Prod_Cim1		:= FALSE; (* Ajout R.C. 06/12/2011 P808/P856 : La mise *)
	 	(* à TRUE de Prod_Suivant_Cim1 doit s'accompagner d'une mise à FALSE *)
		(* systématique de Premier_Prod_Cim1. *)
   END_IF;
END_IF;
(* Gestion des alarmes sur la bascule juste avant lancement dosage *)
IF Depart_verif_Cim1 
   THEN
   (* ...??? Possibilité d'intégrer des choses ici ???.... *)
   IF NOT Premier_Prod_Cim1
      OR (Premier_Prod_Cim1 AND Etat_balance_Cim1)
      THEN
      Depart_Dosage_Cim1 	:= TRUE;	(* Lancement dosage *)
      Depart_verif_Cim1		:= FALSE;	(* RAZ controle bascule *)
      IF (TG_OUT[NG_Cim1].CR_Etat_Basc_Cim1 = 0) THEN (* Modif R.C. 06/12/2011 P808/P856 : On ajoute *)
      		(* cette condition préventivement pour ne pas risquer un passage de "2" (pesée terminée) *)
		(* à "1" (pesée en cours). *)
         TG_OUT[NG_Cim1].CR_Etat_Basc_Cim1 := 1;	(* Dire Pesee en cours *)
      END_IF;
   END_IF;
END_IF;
(* Recherche du produit suivant suivant (Fin de gaché si fin de table)*)
IF Prod_Suivant_Cim1 
   THEN
   Prod_Suivant_Cim1  := FALSE;
   IF NP_Cim1 &lt;4 			(* 4 = fin de table *)
      THEN 
      	 NP_Cim1 := NP_Cim1+1;	(* Produit suivant *)
	 Dosage_auto_Cim1 := False;
      ELSE
         (* CAS NP_Cim1&gt;4 =&gt; FIN DE TABLE DE DOSAGE = FIN GACHEE CIM1 *)
         (* Dire Gachee Terminee pour le bascule*)
         Gachee_EC_Cim1  		:= FALSE;
         TG_OUT[NG_Cim1].CR_Etat_Basc_Cim1 := 2;
	 (* RAZ donnee de dosage *)
         Poids_demande_Cim1		:= 0;
         Erreur_jetee_Cim1		:= 0;
         Limite_correction_Cim1		:= 0; (* inutile ? *)
         Poids_de_reference_Cim1	:= 0;
         Poids_deja_pese_Cim1		:= 0;
         Numero_produit_Cim1		:= 0;
         Numero_produit_Cim1_aux1	:= 0;
         Numero_produit_Cim1_aux2	:= 0;
         Numero_produit_Cim1_initial	:= 0; (* inutile ? *)
	 (* Gachee suivante *)
	 Gachee_Suivante_Cim1 		:= TRUE;	
   END_IF;
   Depart_Dosage_Cim1 			:= FALSE; 	(* Autorise l'init produit *)
END_IF;


(* CIMENT2 *)
(* Verification du contenu globale de la table *)
TG_Cim2_Valide := TG_IN[NG_Cim2].Numero_gachee &lt;&gt;0
		    AND TG_IN[NG_Cim2].Numero_gachee = TG_IN[NG_Cim2].CR_Code_Fin;
(* Récupération des numéros de silos à doser *)
Numeros_produits_cim2 := WORD_TO_INT(TG_IN[NG_Cim2].Basc_Cim2[NP_Cim2].Numero_produit);
Decomp_num_prod(Numeros_organes		:= Numeros_produits_cim2,
		Num_organe_principal	=&gt; NP_Cim2_A_Doser,
		Num_organe_aux1		=&gt; NP_Cim2_Aux1_A_Doser,
		Num_organe_aux2		=&gt; NP_Cim2_Aux2_A_Doser);
(* Tests presence produit dans la gachee*)
Pres_prod_Cim2 := NP_Cim2_A_Doser &lt;&gt; 0
                    AND (NP_Cim2_A_Doser&gt;Conf_cim1_nb_silos)
		    AND (NP_Cim2_A_Doser&lt;=Conf_cim1_nb_silos+Conf_cim2_nb_silos);

(* Test produit a doser *)
IF NOT Depart_Dosage_Cim2	(* Init dosage non fait *)
   AND TG_Cim2_Valide		(* Gachee valide  *)
   AND ((TG_OUT[NG_Cim2].CR_Etat_Basc_Cim2 = 0)	(* Gachee pas commencée *)(* Ajout R.C. 15/06/2011 P851 - car on risque de bloquer si on pointe sur une gâchée déjà traitée (si toutes les TG sont pleines). *)
	OR (NP_Cim2&gt;1))				(* (on ne vérifie cela qu'au premier produit) *)
   THEN
   IF Pres_prod_Cim2		(* Presence produit ds gachee *)
      THEN
         (* Emplacement produit non vide *)
         TG_OUT[NG_Cim2].CR_Etat_Presence_Produit := TG_OUT[NG_Cim2].CR_Etat_Presence_Produit OR 16#0040;
         NP_initial_Cim2_A_Doser := NP_Cim2_A_Doser;
         PD_Cim2_A_Doser := TG_IN[NG_Cim2].Basc_Cim2[NP_Cim2].Poids_demande;
         EJ_Cim2_A_Doser := TG_IN[NG_Cim2].Basc_Cim2[NP_Cim2].Erreur_jettee;
         LC_Cim2_A_Doser := TG_IN[NG_Cim2].Basc_Cim2[NP_Cim2].Limite_correction;
         (* Dire Gachee en cours *)
         Gachee_EC_Cim2			:= TRUE;
         Depart_verif_Cim2		:= TRUE;	(* lance la vérification bascule *)
      ELSE
         (* Emplacement produit vide *)
	 Prod_Suivant_Cim2		:= TRUE;
	 Premier_Prod_Cim2		:= FALSE; (* Ajout R.C. 06/12/2011 P808/P856 : La mise *)
	 	(* à TRUE de Prod_Suivant_Cim2 doit s'accompagner d'une mise à FALSE *)
		(* systématique de Premier_Prod_Cim2. *)
   END_IF;
END_IF;
(* Gestion des alarmes sur la bascule juste avant lancement dosage *)
IF Depart_verif_Cim2 
   THEN
   (* ...??? Possibilité d'intégrer des choses ici ???.... *)
   IF NOT Premier_Prod_Cim2
      OR (Premier_Prod_Cim2 AND Etat_balance_Cim2(* Etat_balance_Ciment2 *))
      THEN
      Depart_Dosage_Cim2 	:= TRUE;	(* Lancement dosage *)
      Depart_verif_Cim2		:= FALSE;	(* RAZ controle bascule *)
      IF (TG_OUT[NG_Cim2].CR_Etat_Basc_Cim2 = 0) THEN (* Modif R.C. 06/12/2011 P808/P856 : On ajoute *)
      		(* cette condition préventivement pour ne pas risquer un passage de "2" (pesée terminée) *)
		(* à "1" (pesée en cours). *)
         TG_OUT[NG_Cim2].CR_Etat_Basc_Cim2 := 1;(* Dire Pesee en cours *)
      END_IF;
   END_IF;
END_IF;
(* Recherche du produit suivant (Fin de gaché si fin de table)*)
IF Prod_Suivant_Cim2 
   THEN
   Prod_Suivant_Cim2  := FALSE;
   IF NP_Cim2 &lt;4 			(* 4 = fin de table *)
      THEN 
      	 NP_Cim2 := NP_Cim2+1;	(* Produit suivant *)
    	Dosage_auto_Cim2 := False;
      ELSE
         (* CAS NP_Cim2&gt;4 =&gt; FIN DE TABLE DE DOSAGE = FIN GACHEE CIM1 *)
         (* Dire Gachee Terminee pour la bascule *)
         Gachee_EC_Cim2  		:= FALSE;
         TG_OUT[NG_Cim2].CR_Etat_Basc_Cim2 := 2;
	 (* RAZ donnee de dosage *)
         Poids_demande_Cim2		:= 0;
         Erreur_jetee_Cim2		:= 0;
         Limite_correction_Cim2		:= 0; (* inutile ? *)
         Poids_de_reference_Cim2	:= 0;
         Poids_deja_pese_Cim2		:= 0;
         Numero_produit_Cim2		:= 0;
         Numero_produit_Cim2_aux1	:= 0;
         Numero_produit_Cim2_aux2	:= 0;
         Numero_produit_Cim2_initial	:= 0; (* inutile ? *)
	 (* Gachee suivante *)
	 Gachee_Suivante_Cim2 		:= TRUE;	
   END_IF;
   Depart_Dosage_Cim2 			:= FALSE; 	(* Autorise l'init produit *)
END_IF;
(* ************************************************************* *)
(*                           TABLE SUIVANTE                      *)
(* ************************************************************* *)
(* CIMENT 1 *)
(* Incrementation pointeur de gachee vers la gachee suivante *)
IF     Gachee_Suivante_Cim1
   AND NOT Depart_Dosage_Cim1
   AND NOT Gachee_EC_Cim1
   THEN
   (* DIRE GACHE CIMENT 1 TERMINEE "MOT ETAT GACHEE" *)
   TG_OUT[NG_Cim1].CR_Etat_Gachee 	:= TG_OUT[NG_Cim1].CR_Etat_Gachee or 16#0008;
   (* INITIALISATION DONNEE *)
   Gachee_Suivante_Cim1 		:= FALSE;	(* RAZ incrémentation *)
   Premier_Prod_Cim1			:= TRUE;	
   Depart_verif_Cim1			:= FALSE; (* Ajout R.C. 06/12/2011 P808/P856, préventivement *)
   Prod_Suivant_Cim1			:= FALSE; (* Ajout R.C. 06/12/2011 P808/P856, préventivement *)
(*   Depart_Dosage_Cim1	 		:= FALSE;*)(* Inutile, car requis pour arriver ici *)
(*   Gachee_EC_Cim1			:= FALSE;*)(* Inutile, car requis pour arriver ici *)
   NP_Cim1 	    			:= 1;		(* Init premier produit *)
   (* INCREMENTATION GACHEE *)
   NG_Cim1 	     			:= NG_Cim1+1;	(* Gachee suivante *)
   IF NG_Cim1 &gt; 4
      THEN NG_Cim1 := 1;
   END_IF;
END_IF;

(* CIMENT 2 *)
(* Incrementation pointeur de gachee vers la gachee suivante *)
IF     Gachee_Suivante_Cim2
   AND NOT Depart_Dosage_Cim2
   AND NOT Gachee_EC_Cim2
   THEN
   (* DIRE GACHE CIMENT 2 TERMINEE "MOT ETAT GACHEE" *)(* Ajout Cim2 R.C. 09/07/2009*)
   TG_OUT[NG_Cim2].CR_Etat_Gachee 	:= TG_OUT[NG_Cim2].CR_Etat_Gachee or 16#2000;
   (* INITIALISATION DONNEE *)
   Gachee_Suivante_Cim2 		:= FALSE;	(* RAZ incrémentation *)
   Premier_Prod_Cim2			:= TRUE;	
   Depart_verif_Cim2			:= FALSE; (* Ajout R.C. 06/12/2011 P808/P856, préventivement *)
   Prod_Suivant_Cim2			:= FALSE; (* Ajout R.C. 06/12/2011 P808/P856, préventivement *)
(*   Depart_Dosage_Cim2		 	:= FALSE;*)(* Inutile, car requis pour arriver ici *)
(*   Gachee_EC_Cim2			:= FALSE;*)(* Inutile, car requis pour arriver ici *)
   NP_Cim2 	    			:= 1;		(* Init premier produit *)
   (* INCREMENTATION GACHEE *)
   NG_Cim2 	     			:= NG_Cim2+1;	(* Gachee suivante *)
   IF NG_Cim2 &gt; 4
      THEN NG_Cim2 := 1;
   END_IF;
END_IF;


(* ************************************************** *)
(*                GESTION DU DOSAGE   CIMENT1         *)  
(* ************************************************** *)

FM_DOS_Cim1 (CLK := Depart_Dosage_Cim1);
IF FM_DOS_Cim1.Q
   THEN
   Numero_produit_Cim1 			:= NP_Cim1_A_Doser;
   Numero_produit_Cim1_aux1		:= NP_Cim1_Aux1_A_Doser;
   Numero_produit_Cim1_aux2		:= NP_Cim1_Aux2_A_Doser;
   Numero_produit_Cim1_initial		:= NP_initial_Cim1_A_Doser;
   Poids_demande_Cim1	 		:= PD_Cim1_A_Doser;
   Erreur_jetee_Cim1   			:= EJ_Cim1_A_Doser;
   Limite_correction_Cim1		:= LC_Cim1_A_Doser;
   Poids_de_reference_Cim1 		:= Poids_instantane_Cim1;
   (*Copie produit, pesée et numéro silo dans compte-rendu*)
   TG_OUT[NG_Cim1].CR_basc_Cim1[NP_Cim1].Numero_prod :=
   	TG_IN[NG_Cim1].Basc_Cim1[NP_Cim1].Numero_produit;
   (* Initialisation de la correction gachée sur gachée *)
   Poids_vise_deja_ecrit_Cim1	:= FALSE;
   (* Init de la CGG quand la CGG n'est pas activée et *)
   (* aussi quand c'est la 1ère gâchée de la fabrication *)
   IF (NOT CGG_activee)
   OR ((TG_IN[NG_Cim1].Proprietes_gachee AND 16#0002) &gt; 0) (* 1ère gâchée de la fabrication *)
   AND (NP_Cim1 = 1) (* 1er produit de la gâchée *)
   THEN	
      (* on active la CGG en début de fabrication *)
      CGG_activee_Cim1 := CGG_activee;
      (* init des cumuls *)
      FOR ma0:=1 TO Conf_cim1_nb_silos BY 1 DO
         cumuls_pesees.Cumuls_pesees_Cim[ma0].cumul_consignes_sans_correct_g_g := 0;
         cumuls_pesees.Cumuls_pesees_Cim[ma0].cumul_poids_reellement_peses := 0;
      END_FOR;
   END_IF;

   (* Récupération des options de dosage *)
   (* Obligation d'atteindre la consigne *)
   Flags_pesage_Cim1.obligation_atteindre_consigne := ((TG_IN[NG_Cim1].Basc_Cim1[NP_Cim1].Options_dosage AND 16#0001) &gt; 0);
   (* Correction gachée sur gachée activée *)
   Flags_pesage_Cim1.CGG_ON := CGG_activee_Cim1;
   (* Dernière gachée *)
   Flags_pesage_Cim1.Derniere_gachee := ((TG_IN[NG_Cim1].Proprietes_gachee AND 16#0001) &gt; 0);
   (* Première gachée *)
   Flags_pesage_Cim1.Premiere_gachee := ((TG_IN[NG_Cim1].Proprietes_gachee AND 16#0002) &gt; 0);
   (* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
   Flags_pesage_Cim1.mode_decomptage := FALSE;

   (* XX/09/2015 - P868A - artf1598100 *)
   Weighing_Tolerances (IDFB_Conf_Process_Tol := TG_IN[NG_Cim1].Conf_Cem_Process_Tol[Numero_produit_Cim1],
                        IDFB_Conf_Process_Tol_Default := Conf_Cem_Process_Tol_Default[Numero_produit_Cim1],
                        IDFB_Batch_Properties := TG_IN[NG_Cim1].Proprietes_gachee,
                        ODFB_Conf_Process_Tol_Used =&gt; Conf_Cem1_Tol_Used); 
END_IF;   

(*Défaut de pesée*)
Defaut_Cim1 := Pesee_bloquee_Cim1
 		(*or Alarme_poids_max_cim1*)(* On ne bloque plus la validation de la pesée *)
 			(* en cas de dépassement de la portée paramétrée pour la bascule. *)
 			(* Décision de Patrick HUGON le 01/12/2010, dans le cadre de la *)
 			(* correction gachée sur gachée (qui est susceptible de faire viser *)
 			(* un poids cible égal à la portée de la bascule pour compenser *)
 			(* des sous-dosages). *)
 		or Alarme_detare_Cim1
		or Basc_instable_Cim1
		or Depassement_tolerance_Cim1
		or Tol_inf_Cim1
 		or Pesee_incomplete_Cim1
 		or not Info_balance_Cim1_fermee
 		OR Alarme_satur_inf_Cim1
 		OR Alarme_satur_sup_Cim1;
   		
 (*Bloc fonction du pesage*)
IF Dosage_Cim_INIT_EN_COURS
   OR (TG_OUT[NG_Cim1].CR_Etat_Basc_Cim1 = 1
       AND Depart_Dosage_Cim1 )
   THEN

   Flags_pesage_Cim1.AJU_AUTO := Ajustement_auto_cim[Numero_produit_Cim1];
   Flags_pesage_Cim1.SENS_PV := sens_pesage_fin_cim1;
   TON_TOFF_PV_Cim1.TON := Conf_cim_TON_pesage_fin[Numero_produit_Cim1];
   TON_TOFF_PV_Cim1.TOFF := Conf_cim_TOFF_pesage_fin[Numero_produit_Cim1];
   TON_TOFF_VIB_Cim1.TON := Conf_cim_TON_vibreur[Numero_produit_Cim1];
   TON_TOFF_VIB_Cim1.TOFF := Conf_cim_TOFF_vibreur[Numero_produit_Cim1];
   TON_TOFF_AJU_Cim1.TON := Conf_cim_TON_ajustement[Numero_produit_Cim1];
   TON_TOFF_AJU_Cim1.TOFF := Conf_cim_TOFF_ajustement[Numero_produit_Cim1];
   
   PESA_Cim1 (POIDS_I := Poids_instantane_Cim1,
                POIDS_D := Poids_demande_Cim1,
                POIDS_R := Poids_de_reference_Cim1,
                ERR_JETE := Erreur_jetee_Cim1,
                TOLERANC := Conf_Cem1_Tol_Used, (* XX/09/2015 - P868A - artf1598100 *)
                SEUIL_PV := Conf_cim1_pesage_fin[Numero_produit_Cim1],
                TON_TOFF_PV := TON_TOFF_PV_Cim1,
                SEUIL_DOS_SIMULT := Conf_cim1_seuil_dos_simult[Numero_produit_Cim1],
                TON_TOFF_VIB := TON_TOFF_VIB_Cim1,
                NB_VIB := Conf_cim_nb_vibreur[Numero_produit_Cim1],
                TON_TOFF_AJU := TON_TOFF_AJU_Cim1,
                TPS_apres_coulant := Conf_cim_tps_apres_coulant[Numero_produit_Cim1],
                TPS_ecoulement := Conf_cim_tps_ecoulement[Numero_produit_Cim1],
                LIM_CORR := Limite_correction_Cim1,
                LIM_SDOS := Conf_cim1_limite_sous_dosage[Numero_produit_Cim1_initial],
                DEFAUT := Defaut_Cim1,
                INIT := Dosage_Cim_INIT_EN_COURS,
                T_STAB := Conf_cim1_tps_stabilisation,
                T_M_STAB := Conf_cim1_tps_max_stab,
                EC_STAB := Conf_cim1_ecart_stabilite,
                T_M_PESA := Conf_cim1_tps_max_pesage,
                CUMULS := Cumuls_pesees.Cumuls_pesees_Cim[Numero_produit_Cim1_initial],
                Flags_pesage := Flags_pesage_Cim1,
                PORTEE := Conf_cim1_seuil_maxi,
		Correction_Humidite := Correction_Humidite_Autres);
  
    Poids_deja_pese_Cim1 := PESA_Cim1.poids_p;
    Cde_dosage_generale_Cim1 := PESA_Cim1.cde_dosa;
    IF Cde_dosage_generale_Cim1 THEN
    	Dosage_auto_Cim1 := True;
	END_IF;
    Petite_vitesse_Cim1 := PESA_Cim1.cde_pv;
    Vibreur_silos_Cim1 := PESA_Cim1.cde_vib;
    Dosage_simultane_Cim1 := PESA_Cim1.cde_dos_simult
    	AND (Petite_vitesse_Cim1 (* Interdire le dosage simultané si on est *)
	 	XOR sens_pesage_fin_cim1); (* en dosage fin *)
 
    IF PESA_Cim1.Pds_bloq
       THEN
       Pesee_bloquee_Cim1 := TRUE;  
    END_IF;
    IF PESA_Cim1.Tmax_pes
       THEN
       Pesee_incomplete_Cim1 := TRUE;
    END_IF;
    IF PESA_Cim1.Instable
       THEN 
       Basc_instable_Cim1 := TRUE;
    END_IF;
    IF PESA_Cim1.Ajust
       THEN
       Tol_inf_Cim1 := TRUE;
    END_IF;
    IF PESA_Cim1.Dep_tol
       THEN
       Depassement_tolerance_Cim1 := TRUE;
    END_IF;
    Pesee_suivante_Cim1 := PESA_Cim1.pesee_ok
    	AND NOT Alarme_satur_inf_Cim1  (* Ajout R.C. 10/02/2011 P803 pour ne pas valider la pesée *)
	AND NOT Alarme_satur_sup_Cim1; (*      si la mesure de poids est saturée, mais dans la tolérance. *)

    (* XX/09/2015 - P868A - artf1598100 *)
    (* Calcul de l'écart de pesée devient l'écart entre le poids pesé *)
    (* et le poids visé (avec toutes les corrections) *)
    (* L'écart de pesée ne prend plus en compte l'écart des gachées précedentes que l'on soit en CGG ou non *)
    (* (utilisé pour déterminer un éventuel dépassement de tolérance.) *)
    Ecart_pesee_Cim1 := PESA_Cim1.ECART_P;
    Ecart_pesee_en_taux_Cim1 := DINT_TO_INT(
    	INT_TO_DINT(PESA_Cim1.ECART_P)
	* 10000 (* Taux en pour dix-millièmes *)
	/ INT_TO_DINT(PESA_Cim1.POIDS_V)
    );

    (* Ecrire le poids visé dans le compte rendu de gâchée*)
    IF NOT Poids_vise_deja_ecrit_Cim1
    AND NOT Dosage_Cim_INIT_EN_COURS THEN
       TG_OUT[NG_Cim1].CR_basc_Cim1[NP_Cim1].Poids_vise :=
       	            PESA_Cim1.POIDS_V;
       Poids_vise_deja_ecrit_Cim1 := TRUE;
    END_IF;

    (*Ecriture de la queue de chute dans le compte-rendu*)
    IF PESA_Cim1.stab_ok
       THEN 
       TG_OUT[NG_Cim1].CR_basc_Cim1[NP_Cim1].erreur_jettee :=
       	            Poids_instantane_Cim1 - PESA_Cim1.poids_c;	
    END_IF;
  
   (*Ecriture du poids pesée dans le compte-rendu*)
   FM_FIN_DOS_Cim1 (CLK := Pesee_suivante_Cim1); 
   IF FM_FIN_DOS_Cim1.Q
      THEN
      TG_OUT[NG_Cim1].CR_basc_Cim1[NP_Cim1].Poids_reel_pese :=
                   Poids_instantane_Cim1 - Poids_de_reference_Cim1;

      (* Mise à jour des cumuls pour la correction gachée sur gachée *)
      Cumuls_pesees.Cumuls_pesees_Cim[Numero_produit_Cim1_initial].cumul_poids_reellement_peses :=
         Cumuls_pesees.Cumuls_pesees_Cim[Numero_produit_Cim1_initial].cumul_poids_reellement_peses
	 + INT_TO_DINT(Poids_instantane_Cim1 - Poids_de_reference_Cim1);
      Cumuls_pesees.Cumuls_pesees_Cim[Numero_produit_Cim1_initial].cumul_consignes_sans_correct_g_g :=
         Cumuls_pesees.Cumuls_pesees_Cim[Numero_produit_Cim1_initial].cumul_consignes_sans_correct_g_g
	 + INT_TO_DINT(Poids_demande_Cim1);

      Prod_Suivant_Cim1 		:= TRUE;
      Premier_Prod_Cim1			:= FALSE;	(* Premier dosage termine *)
   END_IF;
ELSE
    Cde_dosage_generale_cim1 := FALSE; (* Ajout R.C. 06/12/2011 P808/P856, préventivement contre les dosages infinis (tel que le bug #0001367) *)
END_IF;

 
(* ************************************************** *)
(*                GESTION DU DOSAGE   CIMENT2         *)  
(* ************************************************** *)
  
FM_DOS_Cim2 (CLK := Depart_Dosage_Cim2);
IF FM_DOS_Cim2.Q
   THEN
   Numero_produit_Cim2 			:= NP_Cim2_A_Doser;
   Numero_produit_Cim2_aux1		:= NP_Cim2_Aux1_A_Doser;
   Numero_produit_Cim2_aux2		:= NP_Cim2_Aux2_A_Doser;
   Numero_produit_Cim2_initial		:= NP_initial_Cim2_A_Doser;
   Poids_demande_Cim2	 		:= PD_Cim2_A_Doser;
   Erreur_jetee_Cim2   			:= EJ_Cim2_A_Doser;
   Limite_correction_Cim2		:= LC_Cim2_A_Doser;
   Poids_de_reference_Cim2 		:= Poids_instantane_Cim2;
   (*Copie produit, pesée et numéro silo dans compte-rendu*)
   TG_OUT[NG_Cim2].CR_basc_Cim2[NP_Cim2].Numero_prod :=
   	TG_IN[NG_Cim2].Basc_Cim2[NP_Cim2].Numero_produit;
   (* Initialisation de la correction gachée sur gachée *)
   Poids_vise_deja_ecrit_Cim2	:= FALSE;
   (* Init de la CGG quand la CGG n'est pas activée et *)
   (* aussi quand c'est la 1ère gâchée de la fabrication *)
   IF (NOT CGG_activee)
   OR ((TG_IN[NG_Cim2].Proprietes_gachee AND 16#0002) &gt; 0) (* 1ère gâchée de la fabrication *)
   AND (NP_Cim2 = 1) (* 1er produit de la gâchée *)
   THEN	
      (* on active la CGG en début de fabrication *)
      CGG_activee_Cim2 := CGG_activee;
      (* init des cumuls *)
      FOR ma0:=(Conf_cim1_nb_silos + 1) TO (Conf_cim1_nb_silos + Conf_cim2_nb_silos) BY 1 DO
         cumuls_pesees.Cumuls_pesees_Cim[ma0].cumul_consignes_sans_correct_g_g := 0;
         cumuls_pesees.Cumuls_pesees_Cim[ma0].cumul_poids_reellement_peses := 0;
      END_FOR;
   END_IF;

   (* Récupération des options de dosage *)
   (* Obligation d'atteindre la consigne *)
   Flags_pesage_Cim2.obligation_atteindre_consigne := ((TG_IN[NG_Cim2].Basc_Cim2[NP_Cim2].Options_dosage AND 16#0001) &gt; 0);
   (* Correction gachée sur gachée activée *)
   Flags_pesage_Cim2.CGG_ON := CGG_activee_Cim2;
   (* Dernière gachée *)
   Flags_pesage_Cim2.Derniere_gachee := ((TG_IN[NG_Cim2].Proprietes_gachee AND 16#0001) &gt; 0);
   (* Première gachée *)
   Flags_pesage_Cim2.Premiere_gachee := ((TG_IN[NG_Cim2].Proprietes_gachee AND 16#0002) &gt; 0);
   (* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
   Flags_pesage_Cim2.mode_decomptage := FALSE;

   (* XX/09/2015 - P868A - artf1598100 *)
   Weighing_Tolerances (IDFB_Conf_Process_Tol := TG_IN[NG_Cim2].Conf_Cem_Process_Tol[Numero_produit_Cim2],
                        IDFB_Conf_Process_Tol_Default := Conf_Cem_Process_Tol_Default[Numero_produit_Cim2],
                        IDFB_Batch_Properties := TG_IN[NG_Cim2].Proprietes_gachee,
                        ODFB_Conf_Process_Tol_Used =&gt; Conf_Cem2_Tol_Used);
END_IF;   

(*Défaut de pesée*)
Defaut_Cim2 := Pesee_bloquee_Cim2
 		(*or Alarme_poids_max_Cim2*)(* On ne bloque plus la validation de la pesée *)
 			(* en cas de dépassement de la portée paramétrée pour la bascule. *)
 			(* Décision de Patrick HUGON le 01/12/2010, dans le cadre de la *)
 			(* correction gachée sur gachée (qui est susceptible de faire viser *)
 			(* un poids cible égal à la portée de la bascule pour compenser *)
 			(* des sous-dosages). *)
 		or Alarme_detare_Cim2
		or Basc_instable_Cim2
		or Depassement_tolerance_Cim2
		or Tol_inf_Cim2
 		or Pesee_incomplete_Cim2
 		or not Info_balance_Cim2_fermee
 		OR Alarme_satur_inf_Cim2
 		OR Alarme_satur_sup_Cim2;
   		
 (*Bloc fonction du pesage*)
IF Dosage_Cim_INIT_EN_COURS
   OR (TG_OUT[NG_Cim2].CR_Etat_Basc_Cim2 = 1
       AND Depart_Dosage_Cim2 )
   THEN

    Flags_pesage_Cim2.AJU_AUTO := Ajustement_auto_cim[Numero_produit_Cim2];
    Flags_pesage_Cim2.SENS_PV := sens_pesage_fin_cim2;
    TON_TOFF_PV_Cim2.TON := Conf_cim_TON_pesage_fin[Numero_produit_Cim2];
    TON_TOFF_PV_Cim2.TOFF := Conf_cim_TOFF_pesage_fin[Numero_produit_Cim2];
    TON_TOFF_VIB_Cim2.TON := Conf_cim_TON_vibreur[Numero_produit_Cim2];
    TON_TOFF_VIB_Cim2.TOFF := Conf_cim_TOFF_vibreur[Numero_produit_Cim2];
    TON_TOFF_AJU_Cim2.TON := Conf_cim_TON_ajustement[Numero_produit_Cim2];
    TON_TOFF_AJU_Cim2.TOFF := Conf_cim_TOFF_ajustement[Numero_produit_Cim2];
    
    PESA_Cim2 (POIDS_I := Poids_instantane_Cim2,
                  POIDS_D := Poids_demande_Cim2,
                  POIDS_R := Poids_de_reference_Cim2,
                  ERR_JETE := Erreur_jetee_Cim2,
                  TOLERANC := Conf_Cem2_Tol_Used, (* XX/09/2015 - P868A - artf1598100 *)
                  SEUIL_PV := Conf_cim1_pesage_fin[Numero_produit_Cim2],
                  TON_TOFF_PV := TON_TOFF_PV_Cim2,
                  SEUIL_DOS_SIMULT := Conf_cim1_seuil_dos_simult[Numero_produit_Cim2],
                  TON_TOFF_VIB := TON_TOFF_VIB_Cim2,
                  NB_VIB := Conf_cim_nb_vibreur[Numero_produit_Cim2],
                  TON_TOFF_AJU := TON_TOFF_AJU_Cim2,
                  TPS_apres_coulant := Conf_cim_tps_apres_coulant[Numero_produit_Cim2],
                  TPS_ecoulement := Conf_cim_tps_ecoulement[Numero_produit_Cim2],
                  LIM_CORR := Limite_correction_Cim2,
                  LIM_SDOS := Conf_cim1_limite_sous_dosage[Numero_produit_Cim2_initial],
                  DEFAUT := Defaut_Cim2,
                  INIT := Dosage_Cim_INIT_EN_COURS,
                  T_STAB := Conf_cim2_tps_stabilisation,
                  T_M_STAB := Conf_cim2_tps_max_stab,
                  EC_STAB := Conf_cim2_ecart_stabilite,
                  T_M_PESA := Conf_cim2_tps_max_pesage,
                  CUMULS := Cumuls_pesees.Cumuls_pesees_Cim[Numero_produit_Cim2_initial],
                  Flags_pesage := Flags_pesage_Cim2,
                  PORTEE := Conf_cim2_seuil_maxi,
		  Correction_Humidite := Correction_Humidite_Autres);
  
 
    Poids_deja_pese_Cim2 := PESA_Cim2.poids_p;
    Cde_dosage_generale_Cim2 := PESA_Cim2.cde_dosa;
    IF Cde_dosage_generale_Cim2 THEN
    	Dosage_auto_Cim2 := True;
	END_IF;
    Petite_vitesse_Cim2:= PESA_Cim2.cde_pv;
    Vibreur_silos_Cim2:= PESA_Cim2.cde_vib;
    Dosage_simultane_Cim2 := PESA_Cim2.cde_dos_simult
    	AND (Petite_vitesse_Cim2 (* Interdire le dosage simultané si on est *)
	 	XOR sens_pesage_fin_cim2); (* en dosage fin *)

    IF PESA_Cim2.Pds_bloq
       THEN
       (* Pesee_bloquee_Ciment2 *)Pesee_bloquee_Cim2 := TRUE;  
    END_IF;
    IF PESA_Cim2.Tmax_pes
       THEN
       (* pesee_incomplete_Ciment2 *)Pesee_incomplete_Cim2 := TRUE;
    END_IF;
    IF PESA_Cim2.Instable
       THEN 
       (* Basc_instable_Ciment2 *)Basc_instable_Cim2 := TRUE;
    END_IF;
    IF PESA_Cim2.Ajust
       THEN
       (* tol_inf_Ciment2 *)Tol_inf_Cim2 := TRUE;
    END_IF;
    IF PESA_Cim2.Dep_tol
       THEN
       (* Depassement_tolerance_Ciment2 *)Depassement_tolerance_Cim2 := TRUE;
    END_IF;
    Pesee_suivante_Cim2 := PESA_Cim2.pesee_ok
    	AND NOT Alarme_satur_inf_Cim2  (* Ajout R.C. 10/02/2011 P803 pour ne pas valider la pesée *)
	AND NOT Alarme_satur_sup_Cim2; (*      si la mesure de poids est saturée, mais dans la tolérance. *)
 
    (* XX/09/2015 - P868A - artf1598100 *)
    (* Calcul de l'écart de pesée devient l'écart entre le poids pesé *)
    (* et le poids visé (avec toutes les corrections) *)
    (* L'écart de pesée ne prend plus en compte l'écart des gachées précedentes que l'on soit en CGG ou non *)
    (* (utilisé pour déterminer un éventuel dépassement de tolérance.) *)
    Ecart_pesee_Cim2 := PESA_Cim2.ECART_P;
    Ecart_pesee_en_taux_Cim2 := DINT_TO_INT(
    	INT_TO_DINT(PESA_Cim2.ECART_P)
	* 10000 (* Taux en pour dix-millièmes *)
	/ INT_TO_DINT(PESA_Cim2.POIDS_V)
    );

    (* Ecrire le poids visé dans le compte rendu de gâchée*)
    IF NOT Poids_vise_deja_ecrit_Cim2
    AND NOT Dosage_Cim_INIT_EN_COURS THEN
       TG_OUT[NG_Cim2].CR_Basc_Cim2[NP_Cim2].Poids_vise :=
       	            PESA_Cim2.POIDS_V;
       Poids_vise_deja_ecrit_Cim2 := TRUE;
    END_IF;
 
    (*Ecriture de la queue de chute dans le compte-rendu*)
    IF PESA_Cim2.stab_ok
       THEN 
       TG_OUT[NG_Cim2].CR_Basc_Cim2[NP_Cim2].erreur_jettee :=
       	            Poids_instantane_Cim2 - PESA_Cim2.poids_c;	
    END_IF;
  
   (*Ecriture du poids pesée dans le compte-rendu*)
   FM_FIN_DOS_Cim2 (CLK := Pesee_suivante_Cim2); 
   IF FM_FIN_DOS_Cim2.Q
      THEN
      TG_OUT[NG_Cim2].CR_Basc_Cim2[NP_Cim2].Poids_reel_pese :=
                   Poids_instantane_Cim2 - Poids_de_reference_Cim2;

      (* Mise à jour des cumuls pour la correction gachée sur gachée *)
      Cumuls_pesees.Cumuls_pesees_Cim[Numero_produit_Cim2_initial].cumul_poids_reellement_peses :=
         Cumuls_pesees.Cumuls_pesees_Cim[Numero_produit_Cim2_initial].cumul_poids_reellement_peses
	 + INT_TO_DINT(Poids_instantane_Cim2 - Poids_de_reference_Cim2);
      Cumuls_pesees.Cumuls_pesees_Cim[Numero_produit_Cim2_initial].cumul_consignes_sans_correct_g_g :=
         Cumuls_pesees.Cumuls_pesees_Cim[Numero_produit_Cim2_initial].cumul_consignes_sans_correct_g_g
	 + INT_TO_DINT(Poids_demande_Cim2);

      Prod_Suivant_Cim2 		:= TRUE;
      Premier_Prod_Cim2			:= FALSE;	(* Premier dosage termine *)
   END_IF;
ELSE
    Cde_dosage_generale_cim2 := FALSE; (* Ajout R.C. 06/12/2011 P808/P856, préventivement contre les dosages infinis (tel que le bug #0001367) *)
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="231_Sorties_Cim" type="section" task="MAST"></identProgram>
		<STSource>(* Initialisation des variables locales de la section *)
IF Sorties_Cim_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Sorties_Cim_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(*manuel logiciel ciment*)
IF manu_logiciel
   THEN
	TON_manu_Cim (IN := Manu_cde_dosage_cim and Manu_temporise,
	                 PT := Manu_Tps_dosage_Cim);

	Cde_dosage_Cim[Numero_manu_Cim] :=  
	  Auto_pupitre_sans_Arret_prod
	  and not Alarme_poids_max_Cim1
	  and not Alarme_detare_Cim1
	  and manu_logiciel
	  and (
	       (Manu_cde_dosage_cim and not Manu_temporise)
	       or (Manu_cde_dosage_cim and Manu_temporise
	           and not TON_manu_Cim.Q)
	      )
	  AND Not Alarme_Com_HMS_Profibus_Cim1
	  AND NOT Alarme_Com_HMS_Profibus
	  AND Not Alarme_Com_API_ModbusTCP_1
	  AND Not Alarme_IDE500_Cim1;
 
	 IF NOT Cde_dosage_Cim[Numero_manu_Cim]
	    THEN 
	    Manu_cde_dosage_cim := FALSE;
	 END_IF;
END_IF;
  
FD_manu_1_Cim(CLK := Manu_cde_dosage_cim);
IF FD_manu_1_Cim.q
   THEN
   Numero_manu_Cim := 0;
END_IF;
  
(*Commande ciment vers bascule ciment*)

IF Numero_produit_Cim1 &lt;&gt; 0
   THEN

	Bit_cde_dos_Cim1 :=
		NOT Vidange_Cim1
		AND (Auto_pupitre_sans_Arret_prod
			AND NOT manu_logiciel
			AND Cde_dosage_generale_Cim1
		);

	Alarme_bloquante_dosage_Cim1 :=
		Discordance_vidange_cim1
		OR Alarme_poids_max_Cim1
		OR Alarme_detare_Cim1
		OR Alarme_Com_HMS_Profibus_Cim1
		OR Alarme_Com_HMS_Profibus
		OR Alarme_Com_API_ModbusTCP_1
		OR Alarme_IDE500_Cim1;

 	(* Commande Silo Ciment 1 principal *)
	Cde_dosage_Cim[Numero_produit_Cim1] :=
		(
			Bit_cde_dos_Cim1
			OR (Manu_cde_dosage_cim
				AND manu_logiciel
				AND Numero_manu_Cim = Numero_produit_Cim1
			)
		)
		AND NOT Alarme_bloquante_dosage_Cim1;

 	(* Commande Silo Ciment 1 auxiliaire 1 *)
	IF (Numero_produit_Cim1_aux1 &lt;&gt; 0)
	AND (Numero_produit_Cim1_aux1 &lt;&gt; Numero_produit_Cim1) THEN
			(* Le dosage ne se terminera pas si la commande de *)
 			(* dosage du silo principal est sur-écrite à FALSE. *)
		Cde_dosage_Cim[Numero_produit_Cim1_aux1] :=
			(
				Bit_cde_dos_Cim1
		 		OR (Manu_cde_dosage_cim
 					AND manu_logiciel
 					AND Numero_manu_Cim = Numero_produit_Cim1_aux1
				)
 			)
		 	AND Dosage_simultane_Cim1
 			AND NOT Alarme_bloquante_dosage_Cim1;
	END_IF;

 	(* Commande Silo Ciment 1 auxiliaire 2 *)
	IF (Numero_produit_Cim1_aux2 &lt;&gt; 0)
	AND (Numero_produit_Cim1_aux2 &lt;&gt; Numero_produit_Cim1) THEN
			(* Le dosage ne se terminera pas si la commande de *)
 			(* dosage du silo principal est sur-écrite à FALSE. *)
		Cde_dosage_Cim[Numero_produit_Cim1_aux2] :=
			(
				Bit_cde_dos_Cim1
		 		OR (Manu_cde_dosage_cim
 					AND manu_logiciel
 					AND Numero_manu_Cim = Numero_produit_Cim1_aux2
				)
 			)
		 	AND Dosage_simultane_Cim1
 			AND NOT Alarme_bloquante_dosage_Cim1;
	END_IF;

END_IF; 

(* ****************************************************** *)
(* ****************************************************** *)
(* ****************************************************** *)

(* En manuel logiciel, on prévoit un seul ciment!! *) 

  

(*Commande ciment vers bascule ciment 2*)
IF Numero_produit_Cim2 &lt;&gt; 0
   THEN

	Bit_cde_dos_Cim2 :=
		NOT Vidange_Cim2
		AND (Auto_pupitre_sans_Arret_prod
			AND NOT manu_logiciel
			AND Cde_dosage_generale_Cim2
		);

	Alarme_bloquante_dosage_Cim2 :=
		Discordance_vidange_Cim2
		OR Alarme_poids_max_Cim2
		OR Alarme_detare_Cim2
		OR Alarme_Com_HMS_Profibus_Cim1 (*Pas de distinction Ciment1/Ciment2*)
		OR Alarme_Com_HMS_Profibus
		OR Alarme_Com_API_ModbusTCP_1
		OR Alarme_IDE500_Cim2;

  	(* Commande Silo Ciment 2 principal *)
	Cde_dosage_Cim[Numero_produit_Cim2] :=
		(
			Bit_cde_dos_Cim2
			OR (Manu_cde_dosage_cim
				AND manu_logiciel
				AND Numero_manu_Cim = Numero_produit_Cim2
			)
		)
		AND NOT Alarme_bloquante_dosage_Cim2;

 	(* Commande Silo Ciment 2 auxiliaire 1 *)
	IF (Numero_produit_Cim2_aux1 &lt;&gt; 0)
	AND (Numero_produit_Cim2_aux1 &lt;&gt; Numero_produit_Cim2) THEN
			(* Le dosage ne se terminera pas si la commande de *)
 			(* dosage du silo principal est sur-écrite à FALSE. *)
		Cde_dosage_Cim[Numero_produit_Cim2_aux1] :=
			(
				Bit_cde_dos_Cim2
		 		OR (Manu_cde_dosage_cim
 					AND manu_logiciel
 					AND Numero_manu_Cim = Numero_produit_Cim2_aux1
				)
 			)
		 	AND Dosage_simultane_Cim2
 			AND NOT Alarme_bloquante_dosage_Cim2;
	END_IF;

 	(* Commande Silo Ciment 2 auxiliaire 2 *)
	IF (Numero_produit_Cim2_aux2 &lt;&gt; 0)
	AND (Numero_produit_Cim2_aux2 &lt;&gt; Numero_produit_Cim2) THEN
			(* Le dosage ne se terminera pas si la commande de *)
 			(* dosage du silo principal est sur-écrite à FALSE. *)
		Cde_dosage_Cim[Numero_produit_Cim2_aux2] :=
			(
				Bit_cde_dos_Cim2
		 		OR (Manu_cde_dosage_cim
 					AND manu_logiciel
 					AND Numero_manu_Cim = Numero_produit_Cim2_aux2
				)
 			)
		 	AND Dosage_simultane_Cim2
 			AND NOT Alarme_bloquante_dosage_Cim2;
	END_IF;

END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="241_Dosage_Eau" type="section" task="MAST"></identProgram>
		<STSource>(* ************************************************************* *)
(*                  INITIALISATION                               *)
(* ************************************************************* *)

(* Initialisation des variables locales de la section *)
Dosage_Eau_INIT_EN_COURS := Dosage_Eau_DEM_INIT;
IF Dosage_Eau_DEM_INIT THEN

	(* INIT EAU1 *)
	NG_Eau1 			:= index_sortie_buffer;
	Depart_Dosage_Eau1 		:= FALSE; (* Autorise l'init produit *)
	NP_Eau1 			:= 1; (* Premier produit *)
	Gachee_Suivante_Eau1 		:= FALSE;
	Prod_Suivant_Eau1		:= FALSE;
	Depart_verif_Eau1		:= FALSE;
	Gachee_EC_Eau1			:= FALSE;
	Premier_Prod_Eau1		:= TRUE;
		(* "Premier_Prod_Eau1" est mis à TRUE a chaque changement de gachee. *)
		(* Il est remis à FALSE lors de la fin de chaque dosage d'eau. Ce bit, *)
		(* propre à Eau1, permet de savoir quel est le Premier produit dosé pour *)
		(* cette bascule. Chaque bascule peut ainsi travailler sur la même table *)
		(* de dosage. *)
	Poids_demande_Eau1		:= 0;
	Numero_produit_Eau1		:= 0; (* Ajout R.C. 09/07/2009 *)
	Poids_deja_pese_Eau1		:= 0; (* Ajout R.C. 09/07/2009 *)

	(* INIT EAU2 *)
	NG_Eau2				:= index_sortie_buffer; (* Ajout R.C. 03/09/2009 *)
	Depart_Dosage_Eau2 		:= FALSE; (* Autorise l'init produit *)
	NP_Eau2 			:= 1; (* Premier produit *)
	Gachee_Suivante_Eau2 		:= FALSE;
	Prod_Suivant_Eau2		:= FALSE;
	Depart_verif_Eau2		:= FALSE;
	Gachee_EC_Eau2			:= FALSE;
	Premier_Prod_Eau2		:= TRUE;
	Poids_demande_Eau2		:= 0;
	Numero_produit_Eau2		:= 0; (* Ajout R.C. 09/07/2009 *)
	Poids_deja_pese_Eau2		:= 0; (* Ajout R.C. 09/07/2009 *)

	(* Reset de la demande d'init *)
	Dosage_Eau_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
	Dosage_auto_Eau1:=False;
	Dosage_auto_Eau2:=False;
END_IF;


(* ************************************************************* *)
(*                  GESTION DU PARCOURS DE LA TABLE              *)
(* ************************************************************* *)

(* EAU1 *)

(* Lecture des information du produit Eau1 *)
(* Verification du contenu globale de la table *)
TG_Eau1_Valide := TG_IN[NG_Eau1].Numero_gachee &lt;&gt;0
		    AND TG_IN[NG_Eau1].Numero_gachee = TG_IN[NG_Eau1].CR_Code_Fin;
(* Récupération du numéro de cuve à doser *)
NP_Eau1_A_Doser := WORD_TO_INT(TG_IN[NG_Eau1].Basc_Eau1[NP_Eau1].Numero_produit);
(* Tests presence produit dans la gachee*)
Pres_prod_Eau1 := NP_Eau1_A_Doser &lt;&gt; 0
                    AND (NP_Eau1_A_Doser&lt;=Conf_Eau1_nb_cuves);
(*ALE 01/03/2018 -- Reset of Pres_prod_Eau1 to prevent unexpected water dosage*)
IF NP_Eau1_A_Doser &lt;&gt; 0
   AND (NP_Eau1_A_Doser&lt;=Conf_Eau1_nb_cuves)
   AND (INT_TO_REAL(Poids_Eau_A_Doser[NP_Eau1_A_Doser]) - (INT_TO_REAL(Ecart_CHU_Eau_Prod[NG_Eau1][NP_Eau1_A_Doser])*Conf_multipl_Eau1)&lt;=0.0) 
   AND Poids_Eau_A_Doser[NP_Eau1_A_Doser]&lt;&gt;0
THEN
       Pres_prod_Eau1:=0;
       TG_OUT[NG_Eau1].CR_basc_Eau1[NP_Eau1].Poids_vise := 0;
       TG_OUT[NG_Eau1].CR_basc_Eau1[NP_Eau1].erreur_jettee := 0;						
       TG_OUT[NG_Eau1].CR_basc_Eau1[NP_Eau1].Poids_reel_pese :=0;
       TG_OUT[NG_Eau1].CR_basc_Eau1[NP_Eau1].Numero_prod := TG_IN[NG_Eau1].Basc_Eau1[NP_Eau1].Numero_produit;
END_IF;
Infos_produit_Eau1_a_jour := TRUE; (* Modif. 13/10/2009 R.C. *)

(* Test produit a doser *)
IF NOT Depart_Dosage_Eau1	(* Init dosage non fait *)
AND TG_Eau1_Valide		(* Gachee valide  *)
AND ((TG_OUT[NG_Eau1].CR_Etat_Basc_Eau1 = 0)	(* Gachee pas commencée *)(* Ajout R.C. 15/06/2011 P851 - car on risque de bloquer si on pointe sur une gâchée déjà traitée (si toutes les TG sont pleines). *)
	OR (NP_Eau1&gt;1))				(* (on ne vérifie cela qu'au premier produit) *)
THEN
   IF Pres_prod_Eau1		(* Presence produit ds gachee *)
   THEN
         (* Emplacement produit non vide *)
         TG_OUT[NG_Eau1].CR_Etat_Presence_Produit := TG_OUT[NG_Eau1].CR_Etat_Presence_Produit OR 16#0008;
         NP_initial_Eau1_A_Doser := NP_Eau1_A_Doser;
         PD_Eau1_A_Doser := TG_IN[NG_Eau1].Basc_Eau1[NP_Eau1].Poids_demande;
         EJ_Eau1_A_Doser := TG_IN[NG_Eau1].Basc_Eau1[NP_Eau1].Erreur_jettee;
         LC_Eau1_A_Doser := TG_IN[NG_Eau1].Basc_Eau1[NP_Eau1].Limite_correction;
         (* Dire Gachee en cours *)
         Gachee_EC_Eau1			:= TRUE;
         Depart_verif_Eau1		:= TRUE;	(* lance la vérification bascule *)
   ELSE
         (* Emplacement produit vide *)
	 Prod_Suivant_Eau1		:= TRUE;
	 Premier_Prod_Eau1		:= FALSE; (* Ajout R.C. 06/12/2011 P808/P856 : La mise *)
	 	(* à TRUE de Prod_Suivant_Eau1 doit s'accompagner d'une mise à FALSE *)
		(* systématique de Premier_Prod_Eau1. *)
   END_IF;
END_IF;
(* Gestion des alarmes sur la bascule juste avant lancement dosage *)
IF Depart_verif_Eau1 
   THEN
   IF NOT Premier_Prod_Eau1
      OR (Premier_Prod_Eau1 AND Etat_balance_Eau1)  
      THEN
      		IF (Top_Depart_Eau_Avec_CHU[NG_Eau1])	(*Ajout NY : gestion humidite*)
      		THEN  
      		Depart_Dosage_Eau1 		:= TRUE;	(* Lancement dosage *)
      		Depart_verif_Eau1			:= FALSE;	(* RAZ controle bascule *)
      		ELSE
		Depart_Dosage_Eau1 	:= FALSE;	(* Lancement dosage *)
		END_IF;
      IF Depart_Dosage_Eau1 THEN  
      	IF (TG_OUT[NG_Eau1].CR_Etat_Basc_Eau1 = 0) THEN (* Modif R.C. 06/12/2011 P808/P856 : On ajoute *)
      		(* cette condition préventivement pour ne pas risquer un passage de "2" (pesée terminée) *)
		(* à "1" (pesée en cours). *)
         	TG_OUT[NG_Eau1].CR_Etat_Basc_Eau1 := 1;	(* Dire Pesee en cours *)
	 	Attente_fin_vidange_Eau1	:= TRUE; (* Ajout R.C. 06/09/2012 Vidange en plusieurs fois - On mémorise *)
	 	(* qu'un dosage auto a été fait dans la bascule, et qu'il faut attendre toutes les phases de vidange *)
		(* avant d'entreprendre le dosage pour la gâchée suivante. *)
      	END_IF;
      END_IF;
   END_IF;
END_IF;
(* Recherche du produit suivant suivant (Fin de gaché si fin de table)*)
IF Prod_Suivant_Eau1 
   THEN
   Prod_Suivant_Eau1  := FALSE;
   IF NP_Eau1 &lt;6 			(* 6 = fin de table *)
      THEN 
      	 NP_Eau1 := NP_Eau1+1;	(* Produit suivant *)
	 Dosage_auto_Eau1:=False;
	 Infos_produit_Eau1_a_jour := FALSE; (* Modif. 13/10/2009 R.C. *)
	 	(* Permet de ne pas utiliser les anciennes infos NP/NG non correspondantes *)
		(* au NP/NG actuels *)
      ELSE
	 (* CAS NP_Eau1&gt;6 =&gt; FIN DE TABLE DE DOSAGE = FIN GACHEE EAU1 *)
	 (* Dire Gachee Terminee pour le bascule*)
	 Gachee_EC_Eau1  		:= FALSE;
	 TG_OUT[NG_Eau1].CR_Etat_Basc_Eau1 := 2;
	 Pesee_suivante_Eau1		:= FALSE;
	 (* RAZ donnee de dosage *)
	 Poids_demande_Eau1		:= 0;
	 Erreur_jetee_Eau1		:= 0;
	 Limite_correction_Eau1		:= 0; (* inutile ? *)
	 Poids_de_reference_Eau1	:= 0;
	 Poids_deja_pese_Eau1		:= 0;
	 Numero_produit_Eau1		:= 0;
	 Numero_produit_Eau1_initial	:= 0; (* inutile ? *)
	 (* Gachee suivante *)
	 Gachee_Suivante_Eau1 		:= TRUE;	
   END_IF;
   Depart_Dosage_Eau1 		:= FALSE; 	(* Autorise l'init produit *)
END_IF;



(* EAU2 *)
(* Verification du contenu globale de la table *)
TG_Eau2_Valide := TG_IN[NG_Eau2].Numero_gachee &lt;&gt;0
		    AND TG_IN[NG_Eau2].Numero_gachee = TG_IN[NG_Eau2].CR_Code_Fin;
(* Récupération du numéro de cuve à doser *)
NP_Eau2_A_Doser := WORD_TO_INT(TG_IN[NG_Eau2].Basc_Eau2[NP_Eau2].Numero_produit);
(* Tests presence produit dans la gachee*)
Pres_prod_Eau2 := NP_Eau2_A_Doser &lt;&gt; 0
                    AND (NP_Eau2_A_Doser&gt;Conf_Eau1_nb_cuves)
		    AND (NP_Eau2_A_Doser&lt;=Conf_Eau1_nb_cuves+Conf_Eau2_nb_cuves);
(*ALE 01/03/2018 -- Reset of Pres_prod_Eau2 to prevent unexpected water dosage*)
IF NP_Eau2_A_Doser &lt;&gt; 0
   AND (NP_Eau2_A_Doser&lt;=Conf_Eau2_nb_cuves)
   AND (INT_TO_REAL(Poids_Eau_A_Doser[NP_Eau2_A_Doser]) - (INT_TO_REAL(Ecart_CHU_Eau_Prod[NG_Eau2][NP_Eau2_A_Doser])*Conf_multipl_Eau2)&lt;=0.0) 
   AND Poids_Eau_A_Doser[NP_Eau2_A_Doser]&lt;&gt;0
THEN
       Pres_prod_Eau2:=0;
       TG_OUT[NG_Eau2].CR_basc_Eau2[NP_Eau2].Poids_vise := 0;
       TG_OUT[NG_Eau2].CR_basc_Eau2[NP_Eau2].erreur_jettee := 0;						
       TG_OUT[NG_Eau2].CR_basc_Eau2[NP_Eau2].Poids_reel_pese :=0;
       TG_OUT[NG_Eau2].CR_basc_Eau2[NP_Eau2].Numero_prod := TG_IN[NG_Eau2].Basc_Eau2[NP_Eau2].Numero_produit;
END_IF;
Infos_produit_Eau2_a_jour := TRUE; (* Modif. 13/10/2009 R.C. *)

(* Test produit a doser *)
IF NOT Depart_Dosage_Eau2	(* Init dosage non fait *)
   AND TG_Eau2_Valide		(* Gachee valide  *)
   AND ((TG_OUT[NG_Eau2].CR_Etat_Basc_Eau2 = 0)	(* Gachee pas commencée *)(* Ajout R.C. 15/06/2011 P851 - car on risque de bloquer si on pointe sur une gâchée déjà traitée (si toutes les TG sont pleines). *)
	OR (NP_Eau2&gt;1))				(* (on ne vérifie cela qu'au premier produit) *)
   THEN
   IF Pres_prod_Eau2		(* Presence produit ds gachee *)
   THEN
         (* Emplacement produit non vide *)
         TG_OUT[NG_Eau2].CR_Etat_Presence_Produit := TG_OUT[NG_Eau2].CR_Etat_Presence_Produit OR 16#0080;
         NP_initial_Eau2_A_Doser := NP_Eau2_A_Doser;
	 PD_Eau2_A_Doser := TG_IN[NG_Eau2].Basc_Eau2[NP_Eau2].Poids_demande;
         EJ_Eau2_A_Doser := TG_IN[NG_Eau2].Basc_Eau2[NP_Eau2].Erreur_jettee;
         LC_Eau2_A_Doser := TG_IN[NG_Eau2].Basc_Eau2[NP_Eau2].Limite_correction;
         (* Dire Gachee en cours *)
         Gachee_EC_Eau2			:= TRUE;
         Depart_verif_Eau2		:= TRUE;	(* lance la vérification basule *)
      ELSE
         (* Emplacement produit vide *)
	 Prod_Suivant_Eau2		:= TRUE;
	 Premier_Prod_Eau2		:= FALSE; (* Ajout R.C. 06/12/2011 P808/P856 : La mise *)
	 	(* à TRUE de Prod_Suivant_Eau2 doit s'accompagner d'une mise à FALSE *)
		(* systématique de Premier_Prod_Eau2. *)
   END_IF;
END_IF;
(* Gestion des alarmes sur la bascule juste avant lancement dosage *)
IF Depart_verif_Eau2 
   THEN
   IF NOT Premier_Prod_Eau2
      OR (Premier_Prod_Eau2 AND Etat_balance_Eau2)
      THEN
      		IF(Top_Depart_Eau_Avec_CHU[NG_Eau2]) (*Ajout NY : gestion humidite*)
      		THEN
      		Depart_Dosage_Eau2 	:= TRUE;	(* Lancement dosage *)
      		Depart_verif_Eau2		:= FALSE;	(* RAZ controle bascule *)
		ELSE
      		Depart_Dosage_Eau2 	:= FALSE;
      		END_IF;
      IF Depart_Dosage_Eau2 THEN
      IF (TG_OUT[NG_Eau2].CR_Etat_Basc_Eau2 = 0) THEN (* Modif R.C. 06/12/2011 P808/P856 : On ajoute *)
      		(* cette condition préventivement pour ne pas risquer un passage de "2" (pesée terminée) *)
		(* à "1" (pesée en cours). *)
         TG_OUT[NG_Eau2].CR_Etat_Basc_Eau2 := 1;(* Dire Pesee en cours *)
      END_IF;
      END_IF;
   END_IF;
END_IF;
(* Recherche du produit suivant (Fin de gaché si fin de table)*)
IF Prod_Suivant_Eau2 
   THEN
   Prod_Suivant_Eau2  := FALSE;
   IF NP_Eau2 &lt;6 			(* 6 = fin de table *)
      THEN 
      	 NP_Eau2 := NP_Eau2+1;	(* Produit suivant *)
	 Dosage_auto_Eau2:=False;
	 Infos_produit_Eau2_a_jour := FALSE; (* Modif. 13/10/2009 R.C. *)
	 	(* Permet de ne pas utiliser les anciennes infos NP/NG non correspondantes *)
		(* au NP/NG actuels *)
      ELSE
         (* CAS NP_Eau2&gt;6 =&gt; FIN DE TABLE DE DOSAGE = FIN GACHEE EAU1 *)
	 (* Dire Gachee Terminee pour la bascule *)
         Gachee_EC_Eau2  		:= FALSE;
         TG_OUT[NG_Eau2].CR_Etat_Basc_Eau2 := 2;
	 (* RAZ donnee de dosage *)
         Poids_demande_Eau2		:= 0;
         Erreur_jetee_Eau2		:= 0;
         Limite_correction_Eau2		:= 0; (* inutile ? *)
         Poids_de_reference_Eau2	:= 0;
         Poids_deja_pese_Eau2		:= 0;
         Numero_produit_Eau2		:= 0;
         Numero_produit_Eau2_initial	:= 0; (* inutile ? *)
	 (* Gachee suivante *)
	 Gachee_Suivante_Eau2 		:= TRUE;	
   END_IF;
   Depart_Dosage_Eau2 			:= FALSE; 	(* Autorise l'init produit *)
END_IF;



(* ************************************************************* *)
(*                           TABLE SUIVANTE                      *)
(* ************************************************************* *)

(* EAU 1 *)
(* Incrementation pointeur de gachee vers la gachee suivante *)
IF     Gachee_Suivante_Eau1
   AND NOT Depart_Dosage_Eau1
   AND NOT Gachee_EC_Eau1
   THEN

   (* DIRE GACHE EAU 1 TERMINEE "MOT ETAT GACHEE" *)
   TG_OUT[NG_Eau1].CR_Etat_Gachee 	:= TG_OUT[NG_Eau1].CR_Etat_Gachee or 16#0020;



   Dos_ppe_vers_Eau1_termines :=
	   (TG_OUT[NG_Eau1].CR_Etat_Compteurs = 2) (* Dosages par pompe *)
		   (* de la zone "Compteurs" tous finis pour la gâchée en cours, *)
		   (* quelles que soient leur destination. *)
		   (* Le test de cette condition est utile lorsque la section *)
		   (* "300_Dosage_par_pompe" pointe déjà sur une autre gâchée. *)
	   OR (
		   (* Dosages par pompe à destination de la bascule Eau1 terminés *)
		   (* pour la gâchée en cours. *)
		   (* Le test de cette condition est utile lorsque la section *)
		   (* "300_Dosage_par_pompe" pointe sur la même gâchée que celle *)
		   (* en cours sur la ligne Eau1. Dans ce cas, on attend que *)
		   (* seuls les dosages par pompe qui sont à destination de la *)
		   (* bascule Eau1 soient terminés (on n'attend pas la fin des *)
		   (* autres dosages par pompe).*)
		   (nb_dos_ppe_en_cours_Eau1 = 0) (* Il ne reste plus de dosage par *)
			   (* pompe en cours à destination de la bascule Eau1. *)
		   AND (nb_dos_ppe_en_cours_Eau1_valide) AND (NG_ppe = NG_Eau1)
			   (* La valeur de "nb_dos_ppe_en_cours_Eau1" est valide *)
			   (* et correspond bien à la gâchée en cours. Ces tests *)
			   (* permettent de ne pas prendre en compte la valeur "0" *)
			   (* donnée par défaut à l'initialisation, ni la valeur *)
			   (* donnée par le traitement d'une autre gâchée. *)
	   );
	   (* Ajout R.C. 04/04/2012 P857 : Ne pas passer à la gâchée suivante tant *)
	   (* que tous les dosages par pompe à destination de la bascule Eau1 par *)
	   (* la zone "Compteurs" ne sont pas terminés pour la gâchée en cours. *)

   IF (
	   Dos_ppe_vers_Eau1_termines (* On attend que les dosages par pompe *)
		   (* vers Eau1 soient terminés avant de passer à la gâchée *)
		   (* suivante. *)
	   OR (Conf_ppe_nb_ppes = 0) (* Modif R.C. 20/11/2012 : On n'attend pas *)
	   	(* s'il n'y a pas de pompe, car dans ce cas la section gérant les *)
		(* pompes est désactivée, et le flag Dos_ppe_vers_Eau1_termines ne *)
		(* passera pas à TRUE. *)
   )
   OR (
	   (* On ne fige pas l'évolution de NG_Eau1 lorsque la section est en *)
	   (* train de parcourir les emplacements de la TG à la recherche de *)
	   (* la prochaine gâchée à traiter. *)
	   (TG_IN[NG_Eau1].Numero_gachee = 0)
	   OR (TG_IN[NG_Eau1].CR_code_fin &lt;&gt; TG_IN[NG_Eau1].Numero_gachee)
	   (* Note R.C. 06/04/2012 : On pourra créer un bit "TG_Valide" dans le *)
	   (* compte-rendu de chaque gâchée pour ne pas faire ce test qu'à un seul *)
	   (* endroit dans le programme API. -- a voir quand on aura un peu de *)
	   (* disponibilité pour ça. *)
   )
   THEN
	   (* INITIALISATION DONNEE *)
	   Gachee_Suivante_Eau1 		:= FALSE;	(* RAZ incrémentation *)
	   Premier_Prod_Eau1			:= TRUE;	
	   Depart_verif_Eau1			:= FALSE; (* Ajout R.C. 06/12/2011 P808/P856, préventivement *)
	   Prod_Suivant_Eau1			:= FALSE; (* Ajout R.C. 06/12/2011 P808/P856, préventivement *)
(*	   Depart_Dosage_Eau1	 		:= FALSE;*)(* Inutile, car requis pour arriver ici *)
(*	   Gachee_EC_Eau1			:= FALSE;*)(* Inutile, car requis pour arriver ici *)
	   NP_Eau1 	    			:= 1;		(* Init premier produit *)
	   (* INCREMENTATION GACHEE *)
	   NG_Eau1 	     			:= NG_Eau1+1;	(* Gachee suivante *)
	   IF NG_Eau1 &gt; 4
	      THEN NG_Eau1 := 1;
	   END_IF;
	   Dosage_auto_Eau1:=False;
	   Infos_produit_Eau1_a_jour := FALSE; (* Modif. 13/10/2009 R.C. *)
		 	(* Permet de ne pas utiliser les anciennes infos NP/NG non correspondantes *)
			(* au NP/NG actuels *)
   END_IF;

END_IF;

(* EAU 2 *)
(* Incrementation pointeur de gachee vers la gachee suivante *)
IF     Gachee_Suivante_Eau2
   AND NOT Depart_Dosage_Eau2
   AND NOT Gachee_EC_Eau2
   THEN

   (* DIRE GACHE EAU 2 TERMINEE "MOT ETAT GACHEE" *)(* Ajout Eau2 R.C. 03/09/2009*)
   TG_OUT[NG_Eau2].CR_Etat_Gachee 	:= TG_OUT[NG_Eau2].CR_Etat_Gachee or 16#4000;

   (* INITIALISATION DONNEE *)
   Gachee_Suivante_Eau2 		:= FALSE;	(* RAZ incrémentation *)
   Premier_Prod_Eau2			:= TRUE;	
   Depart_verif_Eau2			:= FALSE; (* Ajout R.C. 06/12/2011 P808/P856, préventivement *)
   Prod_Suivant_Eau2			:= FALSE; (* Ajout R.C. 06/12/2011 P808/P856, préventivement *)
(*   Depart_Dosage_Eau2	 		:= FALSE;*)(* Inutile, car requis pour arriver ici *)
(*   Gachee_EC_Eau2			:= FALSE;*)(* Inutile, car requis pour arriver ici *)
   NP_Eau2 	    			:= 1;		(* Init premier produit *)
   (* INCREMENTATION GACHEE *)
   NG_Eau2 	     			:= NG_Eau2+1;	(* Gachee suivante *)
   IF NG_Eau2 &gt; 4
   	THEN NG_Eau2 := 1;
   END_IF;
   Dosage_auto_Eau2:=False;
   Infos_produit_Eau2_a_jour := FALSE; (* Modif. 13/10/2009 R.C. *)
   	(* Permet de ne pas utiliser les anciennes infos NP/NG non correspondantes *)
   	(* au NP/NG actuels *)

END_IF;


(* ************************************************** *)
(*                GESTION DU DOSAGE   EAU1         *)  
(* ************************************************** *)

FM_DOS_Eau1 (CLK := Depart_Dosage_Eau1 AND Infos_produit_Eau1_a_jour);
IF FM_DOS_Eau1.Q
   THEN
	Numero_produit_Eau1 		:= NP_Eau1_A_Doser;
	Numero_produit_Eau1_initial	:= NP_initial_Eau1_A_Doser;
   	Poids_demande_Eau1	 	:= PD_Eau1_A_Doser;
   	Erreur_jetee_Eau1   		:= EJ_Eau1_A_Doser;
   	Limite_correction_Eau1		:= LC_Eau1_A_Doser;
      	Poids_de_reference_Eau1 	:= Poids_instantane_Eau1;
   	(*Copie produit, pesée et numéro cuve dans compte-rendu*)
   	TG_OUT[NG_Eau1].CR_basc_Eau1[NP_Eau1].Numero_prod :=
   		TG_IN[NG_Eau1].Basc_Eau1[NP_Eau1].Numero_produit;
   	(* Initialisation de la correction gachée sur gachée *)
   	Poids_vise_deja_ecrit_Eau1	:= FALSE;
   	(* Init de la CGG quand la CGG n'est pas activée et *)
   	(* aussi quand c'est la 1ère gâchée de la fabrication *)
   	IF (NOT CGG_activee)
   	OR ((TG_IN[NG_Eau1].Proprietes_gachee AND 16#0002) &gt; 0) (* 1ère gâchée de la fabrication *)
   	AND (NP_Eau1 = 1) (* 1er produit de la gâchée *)
	THEN	
   	   (* on active la CGG en début de fabrication *)
   	   CGG_activee_Eau1 := CGG_activee;
   	   (* init des cumuls *)
   	   FOR ma0:=1 TO Conf_eau1_nb_cuves BY 1 DO
   	      cumuls_pesees.Cumuls_pesees_Eau[ma0].cumul_consignes_sans_correct_g_g := 0;
   	      cumuls_pesees.Cumuls_pesees_Eau[ma0].cumul_poids_reellement_peses := 0;
   	   END_FOR;
   	END_IF;

   	(* Récupération des options de dosage *)
   	(* Obligation d'atteindre la consigne *)
   	Flags_pesage_Eau1.obligation_atteindre_consigne := ((TG_IN[NG_Eau1].Basc_Eau1[NP_Eau1].Options_dosage AND 16#0001) &gt; 0);
   	(* Correction gachée sur gachée activée *)
      	Flags_pesage_Eau1.CGG_ON := CGG_activee_Eau1;
      	(* Dernière gachée *)
      	Flags_pesage_Eau1.Derniere_gachee := ((TG_IN[NG_Eau1].Proprietes_gachee AND 16#0001) &gt; 0);
      	(* Première gachée *)
      	Flags_pesage_Eau1.Premiere_gachee := ((TG_IN[NG_Eau1].Proprietes_gachee AND 16#0002) &gt; 0);
   	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
   	Flags_pesage_Eau1.mode_decomptage := FALSE;

	(* XX/09/2015 - P868A - artf1598100 *)
	Weighing_Tolerances (IDFB_Conf_Process_Tol := TG_IN[NG_Eau1].Conf_Water_Process_Tol[Numero_produit_Eau1],
	                     IDFB_Conf_Process_Tol_Default := Conf_Water_Process_Tol_Default[Numero_produit_Eau1],
	                     IDFB_Batch_Properties := TG_IN[NG_Eau1].Proprietes_gachee,
	                     ODFB_Conf_Process_Tol_Used =&gt; Conf_Water1_Tol_Used);
END_IF;   


(*Cuve MES non disponible*)
IF conf_eau_presence_MES
AND ((Numero_produit_Eau1 = 3) OR (Numero_produit_Eau1 = 4))
AND (
	NOT Info_ids_en_fonction
	OR Info_indispo_temporaire
	OR ((Numero_produit_Eau1 = 3) AND NOT Info_densite_cuve_1)
	OR ((Numero_produit_Eau1 = 4) AND NOT Info_densite_cuve_2)
	)
THEN

	indisponibilite_MES		:= TRUE;
END_IF;

(*Défaut de pesée*)
Defaut_Eau1 := Pesee_bloquee_Eau1
 		or indisponibilite_MES
		(*or Alarme_poids_max_eau1*)(* On ne bloque plus la validation de la pesée *)
 			(* en cas de dépassement de la portée paramétrée pour la bascule. *)
 			(* Décision de Patrick HUGON le 01/12/2010, dans le cadre de la *)
 			(* correction gachée sur gachée (qui est susceptible de faire viser *)
 			(* un poids cible égal à la portée de la bascule pour compenser *)
 			(* des sous-dosages). *)
 		or Alarme_detare_Eau1
		or Basc_instable_Eau1
		or Depassement_tolerance_Eau1
		or Tol_inf_Eau1
 		or Pesee_incomplete_Eau1
 		or not Info_balance_eau1_fermee
 		OR Alarme_satur_inf_Eau1
 		OR Alarme_satur_sup_Eau1;
   		
 (*Bloc fonction du pesage*)
IF Dosage_Eau_INIT_EN_COURS
   OR (TG_OUT[NG_Eau1].CR_Etat_Basc_Eau1 = 1
       AND Depart_Dosage_Eau1 )
   THEN

   Flags_pesage_Eau1.AJU_AUTO := Ajustement_auto_eau[Numero_produit_Eau1];
   Flags_pesage_Eau1.SENS_PV := sens_pesage_fin_eau1;
   TON_TOFF_PV_Eau1.TON := Conf_eau_TON_pesage_fin[Numero_produit_Eau1];
   TON_TOFF_PV_Eau1.TOFF := Conf_eau_TOFF_pesage_fin[Numero_produit_Eau1];
   TON_TOFF_VIB_Eau1.TON := Conf_eau_TON_vibreur[Numero_produit_Eau1];
   TON_TOFF_VIB_Eau1.TOFF := Conf_eau_TOFF_vibreur[Numero_produit_Eau1];
   TON_TOFF_AJU_Eau1.TON := Conf_eau_TON_ajustement[Numero_produit_Eau1];
   TON_TOFF_AJU_Eau1.TOFF := Conf_eau_TOFF_ajustement[Numero_produit_Eau1];

   PESA_Eau1 (POIDS_I := Poids_instantane_Eau1,
             POIDS_D := Poids_demande_Eau1,
             POIDS_R := Poids_de_reference_Eau1,
             ERR_JETE := Erreur_jetee_Eau1,
             TOLERANC := Conf_Water1_Tol_Used, (* XX/09/2015 - P868A - artf1598100 *)
             SEUIL_PV := Conf_eau_pesage_fin[Numero_produit_Eau1],
             TON_TOFF_PV := TON_TOFF_PV_Eau1,
             TON_TOFF_VIB := TON_TOFF_VIB_Eau1,
             NB_VIB := Conf_eau_nb_vibreur[Numero_produit_Eau1],
             TON_TOFF_AJU := TON_TOFF_AJU_Eau1,
             TPS_apres_coulant := Conf_eau_tps_apres_coulant[Numero_produit_Eau1],
             TPS_ecoulement := Conf_eau_tps_ecoulement[Numero_produit_Eau1],
             LIM_CORR := Limite_correction_Eau1,
             LIM_SDOS := Conf_eau_limite_sous_dosage[Numero_produit_Eau1_initial],
             DEFAUT := Defaut_Eau1,
             INIT := Dosage_Eau_INIT_EN_COURS,
             T_STAB := Conf_eau1_tps_stabilisation,
             T_M_STAB := Conf_eau1_tps_max_stab,
             EC_STAB := Conf_eau1_ecart_stabilite,
             T_M_PESA := Conf_eau1_tps_max_pesage,
             CUMULS := Cumuls_pesees.Cumuls_pesees_Eau[Numero_produit_Eau1_initial],
             Flags_pesage := Flags_pesage_Eau1,
             PORTEE := Conf_eau1_seuil_maxi,
	     Correction_Humidite := Correction_Humidite_Eau1);

    Poids_deja_pese_Eau1 := PESA_Eau1.poids_p;
    Cde_dosage_generale_Eau1 := PESA_Eau1.cde_dosa;
    IF Cde_dosage_generale_Eau1 THEN
    	Dosage_auto_Eau1:=True;
    END_IF;
    Petite_vitesse_Eau1 := PESA_Eau1.cde_pv;
    Vibreur_cuves_Eau1:= PESA_Eau1.cde_vib;

    IF PESA_Eau1.Pds_bloq
       THEN
       Pesee_bloquee_Eau1 := TRUE;  
    END_IF;
    IF PESA_Eau1.Tmax_pes
       THEN
       Pesee_incomplete_Eau1 := TRUE;
    END_IF;
    IF PESA_Eau1.Instable
       THEN 
       Basc_instable_Eau1 := TRUE;
    END_IF;
    IF PESA_Eau1.Ajust
       THEN
       Tol_inf_Eau1 := TRUE;
    END_IF;
    IF PESA_Eau1.Dep_tol
       THEN
       Depassement_tolerance_Eau1 := TRUE;
    END_IF;
    Pesee_suivante_Eau1 := PESA_Eau1.pesee_ok
    	AND NOT Alarme_satur_inf_Eau1  (* Ajout R.C. 10/02/2011 P803 pour ne pas valider la pesée *)
	AND NOT Alarme_satur_sup_Eau1; (*      si la mesure de poids est saturée, mais dans la tolérance. *)

    (* XX/09/2015 - P868A - artf1598100 *)
    (* Calcul de l'écart de pesée devient l'écart entre le poids pesé *)
    (* et le poids visé (avec toutes les corrections) *)
    (* L'écart de pesée ne prend plus en compte l'écart des gachées précedentes que l'on soit en CGG ou non *)
    (* (utilisé pour déterminer un éventuel dépassement de tolérance.) *)
    Ecart_pesee_Eau1 := PESA_Eau1.ECART_P;
    Ecart_pesee_en_taux_Eau1 := DINT_TO_INT(
    	INT_TO_DINT(PESA_Eau1.ECART_P)
	* 10000 (* Taux en pour dix-millièmes *)
	/ INT_TO_DINT(PESA_Eau1.POIDS_V)
    );
     
    (* Ecrire le poids visé dans le compte rendu de gâchée*)
     IF NOT Poids_vise_deja_ecrit_Eau1
    AND NOT Dosage_Eau_INIT_EN_COURS 
    AND PESA_Eau1.pesee_ok THEN (*Ajout NY*) 
       TG_OUT[NG_Eau1].CR_basc_Eau1[NP_Eau1].Poids_vise :=
       	            PESA_Eau1.POIDS_V;
       Poids_vise_deja_ecrit_Eau1 := TRUE;
    END_IF;
 
    (*Ecriture de la queue de chute dans le compte-rendu*)
     IF PESA_Eau1.stab_ok
        THEN
       TG_OUT[NG_Eau1].CR_basc_Eau1[NP_Eau1].erreur_jettee :=
       	            Poids_instantane_Eau1 - PESA_Eau1.poids_c;	
    END_IF;
  
   (*Ecriture du poids pesée dans le compte-rendu*)
   FM_FIN_DOS_Eau1 (CLK := Pesee_suivante_Eau1); 
   IF FM_FIN_DOS_Eau1.Q
      THEN
      TG_OUT[NG_Eau1].CR_basc_Eau1[NP_Eau1].Poids_reel_pese :=
                   Poids_instantane_Eau1 - Poids_de_reference_Eau1;

      (* Mise à jour des cumuls pour la correction gachée sur gachée *)
      Cumuls_pesees.Cumuls_pesees_Eau[Numero_produit_Eau1_initial].cumul_poids_reellement_peses :=
         Cumuls_pesees.Cumuls_pesees_Eau[Numero_produit_Eau1_initial].cumul_poids_reellement_peses
	 + INT_TO_DINT(Poids_instantane_Eau1 - Poids_de_reference_Eau1);
      Cumuls_pesees.Cumuls_pesees_Eau[Numero_produit_Eau1_initial].cumul_consignes_sans_correct_g_g :=
         Cumuls_pesees.Cumuls_pesees_Eau[Numero_produit_Eau1_initial].cumul_consignes_sans_correct_g_g
	 + INT_TO_DINT(Poids_demande_Eau1)
	 - INT_TO_DINT(Ecart_CHU_Eau_Prod[NG_Eau1][Numero_produit_Eau1_initial]);

      Prod_Suivant_Eau1 		:= TRUE;
      Premier_Prod_Eau1			:= FALSE;	(* Premier dosage termine *)
   END_IF;
ELSE
    Cde_dosage_generale_eau1 := FALSE; (* Ajout R.C. 06/12/2011 P808/P856, préventivement contre les dosages infinis (tel que le bug #0001367) *)
END_IF;

 

(* ************************************************** *)
(*                GESTION DU DOSAGE   EAU2         *)  
(* ************************************************** *)
  
FM_DOS_Eau2 (CLK := Depart_Dosage_Eau2 AND Infos_produit_Eau2_a_jour);
IF FM_DOS_Eau2.Q
   THEN
   Numero_produit_Eau2 			:= NP_Eau2_A_Doser;
   Numero_produit_Eau2_initial		:= NP_initial_Eau2_A_Doser;
   Poids_demande_Eau2	 		:= PD_Eau2_A_Doser;
   Erreur_jetee_Eau2   			:= EJ_Eau2_A_Doser;
   Limite_correction_Eau2		:= LC_Eau2_A_Doser;
   Poids_de_reference_Eau2 		:= Poids_instantane_Eau2;
   (*Copie produit, pesée et numéro cuve dans compte-rendu*)
   TG_OUT[NG_Eau2].CR_basc_Eau2[NP_Eau2].Numero_prod :=
   	TG_IN[NG_Eau2].Basc_Eau2[NP_Eau2].Numero_produit;
   (* Initialisation de la correction gachée sur gachée *)
   Poids_vise_deja_ecrit_Eau2	:= FALSE;
   (* Init de la CGG quand la CGG n'est pas activée et *)
   (* aussi quand c'est la 1ère gâchée de la fabrication *)
   IF (NOT CGG_activee)
   OR ((TG_IN[NG_Eau2].Proprietes_gachee AND 16#0002) &gt; 0) (* 1ère gâchée de la fabrication *)
   AND (NP_Eau2 = 1) (* 1er produit de la gâchée *)
   THEN	
      (* on active la CGG en début de fabrication *)
      CGG_activee_Eau2 := CGG_activee;
      (* init des cumuls *)
      FOR ma0:=(Conf_eau1_nb_cuves + 1) TO (Conf_eau1_nb_cuves + Conf_eau2_nb_cuves) BY 1 DO
         cumuls_pesees.Cumuls_pesees_Eau[ma0].cumul_consignes_sans_correct_g_g := 0;
         cumuls_pesees.Cumuls_pesees_Eau[ma0].cumul_poids_reellement_peses := 0;
      END_FOR;
   END_IF;

   (* Récupération des options de dosage *)
   (* Obligation d'atteindre la consigne *)
   Flags_pesage_Eau2.obligation_atteindre_consigne := ((TG_IN[NG_Eau2].Basc_Eau2[NP_Eau2].Options_dosage AND 16#0001) &gt; 0);
   (* Correction gachée sur gachée activée *)
   Flags_pesage_Eau2.CGG_ON := CGG_activee_Eau2;
   (* Dernière gachée *)
   Flags_pesage_Eau2.Derniere_gachee := ((TG_IN[NG_Eau2].Proprietes_gachee AND 16#0001) &gt; 0);
   (* Première gachée *)
   Flags_pesage_Eau2.Premiere_gachee := ((TG_IN[NG_Eau2].Proprietes_gachee AND 16#0002) &gt; 0);
   (* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
   Flags_pesage_Eau1.mode_decomptage := FALSE;

   (* XX/09/2015 - P868A - artf1598100 *)
   Weighing_Tolerances (IDFB_Conf_Process_Tol := TG_IN[NG_Eau2].Conf_Water_Process_Tol[Numero_produit_Eau2],
                        IDFB_Conf_Process_Tol_Default := Conf_Water_Process_Tol_Default[Numero_produit_Eau2],
                        IDFB_Batch_Properties := TG_IN[NG_Eau2].Proprietes_gachee,
                        ODFB_Conf_Process_Tol_Used =&gt; Conf_Water2_Tol_Used);
END_IF;   

(*Défaut de pesée*)
Defaut_Eau2 := Pesee_bloquee_Eau2
 		(*or Alarme_poids_max_Eau2*)(* On ne bloque plus la validation de la pesée *)
 			(* en cas de dépassement de la portée paramétrée pour la bascule. *)
 			(* Décision de Patrick HUGON le 01/12/2010, dans le cadre de la *)
 			(* correction gachée sur gachée (qui est susceptible de faire viser *)
 			(* un poids cible égal à la portée de la bascule pour compenser *)
 			(* des sous-dosages). *)
 		or Alarme_detare_Eau2
		or Basc_instable_Eau2
		or Depassement_tolerance_Eau2
		or Tol_inf_Eau2
 		or Pesee_incomplete_Eau2
 		or not Info_balance_Eau2_fermee
 		OR Alarme_satur_inf_Eau2
 		OR Alarme_satur_sup_Eau2;
   		
 (*Bloc fonction du pesage*)
IF Dosage_Eau_INIT_EN_COURS
   OR (TG_OUT[NG_Eau2].CR_Etat_Basc_Eau2 = 1
       AND Depart_Dosage_Eau2 )
   THEN

    Flags_pesage_Eau2.AJU_AUTO := Ajustement_auto_eau[Numero_produit_Eau2];
    Flags_pesage_Eau2.SENS_PV := sens_pesage_fin_eau2;
    TON_TOFF_PV_Eau2.TON := Conf_eau_TON_pesage_fin[Numero_produit_Eau2];
    TON_TOFF_PV_Eau2.TOFF := Conf_eau_TOFF_pesage_fin[Numero_produit_Eau2];
    TON_TOFF_VIB_Eau2.TON := Conf_eau_TON_vibreur[Numero_produit_Eau2];
    TON_TOFF_VIB_Eau2.TOFF := Conf_eau_TOFF_vibreur[Numero_produit_Eau2];
    TON_TOFF_AJU_Eau2.TON := Conf_eau_TON_ajustement[Numero_produit_Eau2];
    TON_TOFF_AJU_Eau2.TOFF := Conf_eau_TOFF_ajustement[Numero_produit_Eau2];

    PESA_Eau2 (POIDS_I := Poids_instantane_Eau2,
               POIDS_D := Poids_demande_Eau2,
               POIDS_R := Poids_de_reference_Eau2,
               ERR_JETE := Erreur_jetee_Eau2,
               TOLERANC := Conf_Water2_Tol_Used, (* XX/09/2015 - P868A - artf1598100 *)
               SEUIL_PV := Conf_eau_pesage_fin[Numero_produit_Eau2],
               TON_TOFF_PV := TON_TOFF_PV_Eau2,
               TON_TOFF_VIB := TON_TOFF_VIB_Eau2,
               NB_VIB := Conf_eau_nb_vibreur[Numero_produit_Eau2],
               TON_TOFF_AJU := TON_TOFF_AJU_Eau2,
               TPS_apres_coulant := Conf_eau_tps_apres_coulant[Numero_produit_Eau2],
               TPS_ecoulement := Conf_eau_tps_ecoulement[Numero_produit_Eau2],
               LIM_CORR := Limite_correction_Eau2,
               LIM_SDOS := Conf_eau_limite_sous_dosage[Numero_produit_Eau2_initial],
               DEFAUT := Defaut_Eau2,
               INIT := Dosage_Eau_INIT_EN_COURS,
               T_STAB := Conf_eau2_tps_stabilisation,
               T_M_STAB := Conf_eau2_tps_max_stab,
               EC_STAB := Conf_eau2_ecart_stabilite,
               T_M_PESA := Conf_eau2_tps_max_pesage,
               CUMULS := Cumuls_pesees.Cumuls_pesees_Eau[Numero_produit_Eau2_initial],
               Flags_pesage := Flags_pesage_Eau2,
               PORTEE := Conf_eau2_seuil_maxi,
	       Correction_Humidite := Correction_Humidite_Eau2);
  
 
    Poids_deja_pese_Eau2 := PESA_Eau2.poids_p;
    Cde_dosage_generale_Eau2 := PESA_Eau2.cde_dosa;
    IF Cde_dosage_generale_Eau2 THEN
    	Dosage_auto_Eau2:=True;
    END_IF;
    Petite_vitesse_Eau2:= PESA_Eau2.cde_pv;
    Vibreur_cuves_Eau2:= PESA_Eau2.cde_vib;

    IF PESA_Eau2.Pds_bloq
       THEN
       (* Pesee_bloquee_Eau2 *)Pesee_bloquee_Eau2 := TRUE;  
    END_IF;
    IF PESA_Eau2.Tmax_pes
       THEN
       (* pesee_incomplete_Eau2 *)Pesee_incomplete_Eau2 := TRUE;
    END_IF;
    IF PESA_Eau2.Instable
       THEN 
       (* Basc_instable_Eau2 *)Basc_instable_Eau2 := TRUE;
    END_IF;
    IF PESA_Eau2.Ajust
       THEN
       (* tol_inf_Eau2 *)Tol_inf_Eau2 := TRUE;
    END_IF;
    IF PESA_Eau2.Dep_tol
       THEN
       (* Depassement_tolerance_Eau2 *)Depassement_tolerance_Eau2 := TRUE;
    END_IF;
    Pesee_suivante_Eau2 := PESA_Eau2.pesee_ok
    	AND NOT Alarme_satur_inf_Eau2  (* Ajout R.C. 10/02/2011 P803 pour ne pas valider la pesée *)
	AND NOT Alarme_satur_sup_Eau2; (*      si la mesure de poids est saturée, mais dans la tolérance. *)

    (* XX/09/2015 - P868A - artf1598100 *)
    (* Calcul de l'écart de pesée devient l'écart entre le poids pesé *)
    (* et le poids visé (avec toutes les corrections) *)
    (* L'écart de pesée ne prend plus en compte l'écart des gachées précedentes que l'on soit en CGG ou non *)
    (* (utilisé pour déterminer un éventuel dépassement de tolérance.) *)
    Ecart_pesee_Eau2 := PESA_Eau2.ECART_P;
    Ecart_pesee_en_taux_Eau2 := DINT_TO_INT(
    	INT_TO_DINT(PESA_Eau2.ECART_P)
	* 10000 (* Taux en pour dix-millièmes *)
	/ INT_TO_DINT(PESA_Eau2.POIDS_V)
    );
 
    (* Ecrire le poids visé dans le compte rendu de gâchée*)
    IF NOT Poids_vise_deja_ecrit_Eau2
    AND NOT Dosage_Eau_INIT_EN_COURS
    AND PESA_Eau2.pesee_ok THEN (*Ajout NY*) 
       TG_OUT[NG_Eau2].CR_Basc_Eau2[NP_Eau2].Poids_vise :=
       	            PESA_Eau2.POIDS_V;
       Poids_vise_deja_ecrit_Eau2 := TRUE;
    END_IF;

    (*Ecriture de la queue de chute dans le compte-rendu*)
    IF PESA_Eau2.pesee_ok (*Ajout NY*) 
       THEN 
       TG_OUT[NG_Eau2].CR_Basc_Eau2[NP_Eau2].erreur_jettee :=
       	            Poids_instantane_Eau2 - PESA_Eau2.poids_c;	
    END_IF;
  
   (*Ecriture du poids pesée dans le compte-rendu*)
   FM_FIN_DOS_Eau2 (CLK := Pesee_suivante_Eau2); 
   IF FM_FIN_DOS_Eau2.Q
      THEN
      TG_OUT[NG_Eau2].CR_Basc_Eau2[NP_Eau2].Poids_reel_pese :=
                   Poids_instantane_Eau2 - Poids_de_reference_Eau2;

      (* Mise à jour des cumuls pour la correction gachée sur gachée *)
      Cumuls_pesees.Cumuls_pesees_Eau[Numero_produit_Eau2_initial].cumul_poids_reellement_peses :=
         Cumuls_pesees.Cumuls_pesees_Eau[Numero_produit_Eau2_initial].cumul_poids_reellement_peses
	 + INT_TO_DINT(Poids_instantane_Eau2 - Poids_de_reference_Eau2);
      Cumuls_pesees.Cumuls_pesees_Eau[Numero_produit_Eau2_initial].cumul_consignes_sans_correct_g_g :=
         Cumuls_pesees.Cumuls_pesees_Eau[Numero_produit_Eau2_initial].cumul_consignes_sans_correct_g_g
	 + INT_TO_DINT(Poids_demande_Eau2)
	 - INT_TO_DINT(Ecart_CHU_Eau_Prod[NG_Eau2][Numero_produit_Eau2_initial]);

      Prod_Suivant_Eau2 		:= TRUE;
      Premier_Prod_Eau2			:= FALSE;	(* Premier dosage termine *)
   END_IF;
ELSE
    Cde_dosage_generale_eau2 := FALSE; (* Ajout R.C. 06/12/2011 P808/P856, préventivement contre les dosages infinis (tel que le bug #0001367) *)
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="251_Sorties_Eau" type="section" task="MAST"></identProgram>
		<STSource>(* Initialisation des variables locales de la section *)
IF Sorties_Eau_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Sorties_Eau_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(*manuel logiciel eau*)
IF manu_logiciel
AND (Numero_manu_Eau &gt; 0) (* Ajout R.C. 29/08/2011 P852 *)
   THEN
	IF (Conf_Eau_dest_cuves[Numero_manu_Eau] = 0) THEN (* Mettre la commande à TRUE uniquement pour une cuve pesée. *)
		(* Les commandes des cuves comptées(pompées) sont gérées dans les sections de comptage. *)
		(* Ajout R.C. 29/08/2011 P852 *)

		TON_manu_Eau (IN := Manu_cde_dosage_eau and Manu_temporise,
	                 PT := Manu_Tps_dosage_Eau);

		Cde_dosage_Eau[Numero_manu_Eau] :=  
		  Auto_pupitre_sans_Arret_prod
		  and not Alarme_poids_max_Eau1
		  and not Alarme_detare_Eau1
		  and manu_logiciel
		  and (
		       (Manu_cde_dosage_eau and not Manu_temporise)
		       or (Manu_cde_dosage_eau and Manu_temporise
		           and not TON_manu_Eau.Q)
		      )
		  AND Not Alarme_Com_HMS_Profibus_Eau1
		  AND NOT Alarme_Com_HMS_Profibus
		  AND Not Alarme_Com_API_ModbusTCP_1
		  AND Not Alarme_IDE500_Eau1;
 
		 IF NOT Cde_dosage_Eau[Numero_manu_Eau]
		    THEN 
		    Manu_cde_dosage_eau := FALSE;
		 END_IF;
	END_IF;
END_IF;
  
FD_manu_1_Eau(CLK := Manu_cde_dosage_eau);
IF FD_manu_1_Eau.q
   THEN
   Numero_manu_Eau := 0;
END_IF;
  
(*Commande eau vers bascule eau*)
IF Numero_produit_Eau1 &lt;&gt; 0
   THEN
	Cde_dosage_Eau[Numero_produit_Eau1] :=
	 not Vidange_Eau1
	 and not Discordance_vidange_eau1
	 and not Alarme_poids_max_Eau1
	 and not Alarme_detare_Eau1
	 and (Auto_pupitre_sans_Arret_prod
	         and not manu_logiciel
	         and Cde_dosage_generale_Eau1)
	 or (Manu_cde_dosage_eau
	     and manu_logiciel
	     and Numero_produit_Eau1 = Numero_manu_Eau)
	 AND Not Alarme_Com_HMS_Profibus_Eau1
  	 AND NOT Alarme_Com_HMS_Profibus
	 AND Not Alarme_Com_API_ModbusTCP_1
	 AND Not Alarme_IDE500_Eau1;
END_IF; 

(* ****************************************************** *)
(* ****************************************************** *)
(* ****************************************************** *)

(* En manuel logiciel, on prévoit une seule eau!! *)


  

(*Commande eau vers bascule eau 2*)
IF Numero_produit_Eau2 &lt;&gt; 0
   THEN
	Cde_dosage_Eau [Numero_produit_Eau2] :=
	 not Vidange_Eau2
	 and not Discordance_vidange_Eau2
	 and not Alarme_poids_max_Eau2
	 and not Alarme_detare_Eau2
	 and (Auto_pupitre_sans_Arret_prod
	         and not manu_logiciel
	         and Cde_dosage_generale_Eau2)
	 or (Manu_cde_dosage_eau
	     and manu_logiciel
	     and Numero_produit_Eau2 = Numero_manu_Eau)
 	 AND Not Alarme_Com_HMS_Profibus_Eau1  (*Pas de distinction Eau1/Eau2*)
 	 AND NOT Alarme_Com_HMS_Profibus
	 AND Not Alarme_Com_API_ModbusTCP_1
	 AND Not Alarme_IDE500_Eau2;
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="260_Dosage_Adj" type="section" task="MAST"></identProgram>
		<ILSource>(*******************************************************************************************************************)
 (*                                              Recherche gachée adjuvant                                                        *)
 (*******************************************************************************************************************)

 (* Initialisation des variables locales de la section *)
 LD Dosage_Adj_DEM_INIT
 ST Dosage_Adj_INIT_EN_COURS
 JMPCN Fin_init_NG_adj

 	(* Modif R.C. 06/12/2011 P808/P856 : Modification des conditions *)
 	(* déclenchant cette initialisation. Suite à un problème quand on *)
 	(* était sur une n-ième gâchée dont le premier produit ne faisait *)
 	(* pas dépasser le seuil vide. *)
 	LD index_sortie_buffer
 	ST suite_index_sortie_adjuvant
 	ST NG_adj
 	LD 1 (* Changement de numéro de gâchée =&gt; On initialise le NP à 1 *)
 	ST NP_adj (* (Ajout R.C. 08/07/2011 P806) *)
 	LD 0
 	ST Poids_demande_adj (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
 	ST Numero_produit_adj (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
 	ST Poids_deja_pese_adj (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
	LD TRUE
	R Attente_Autoris_Vidange_Colorant (* Ajout R.C. 28/12/2012 P859 *)

	(* Reset de la demande d'init *)
	LD TRUE
	R Dosage_Adj_DEM_INIT (* L'init de la section a bien été prise en compte. *)
	R Dosage_auto_Adj
 Fin_init_NG_adj:

 ld Pesee_suivante_Adj
 jmpc init_type_pesee_adjuvant
  
 (*Pesée adjuvant si balance libre*)
 ldn Etat_balance_Adj
 jmpc fin_dosage_adjuvant
  
 recherche_index_adjuvant :
  
 (*Recherche index pesée adjuvant*)
 ld suite_index_sortie_adjuvant
 (*Sauvegarde gachee en cours*)
 st NG_Adj
  
 (*Chargement mot état adjuvant*)
 LD TG_OUT[NG_Adj].CR_Etat_Basc_Adj
 eq 2
 ST Pesee_terminee_Adj
 LD TG_OUT[NG_Adj].CR_Etat_Basc_Adj
 eq 1(*Pesée en cours adjuvant*)
 jmpc fin_dosage_adjuvant
  
 (*Si pesée terminée pour cette gachée recherche de la gachée suivante*)
 ldn Pesee_terminee_Adj
 jmpc recherche_tremie_adjuvant

 LD 1
 ST NP_Adj

LD FALSE
ST Dosage_auto_Adj

 ld suite_index_sortie_adjuvant
 add 1
 st suite_index_sortie_adjuvant
 le 4
 jmpc suite_adjuvant
 ld 1
 st suite_index_sortie_adjuvant
  
 suite_adjuvant :
  
 	ld suite_index_sortie_adjuvant
 	eq index_entree_buffer
 	jmpc fin_dosage_adjuvant
 jmp recherche_index_adjuvant	
 (*******************************************************************************************************************)
 (*                                   Test présence du produit dans la gâchée                                                      *)
 (*******************************************************************************************************************)
  
 recherche_tremie_adjuvant :
  
 (* Test présence du produit dans la gâchée *)
 LD TG_IN[NG_Adj].Basc_Adj[NP_Adj].Numero_Produit
 EQ 16#0000
 JMPC fin_dos_gachee_encours_adjuvant
 JMP Dire_en_cours_adjuvant
  
 (*******************************************************************************************************************)
 (*                                              Dosage                                                                            *)
 (*******************************************************************************************************************)
 Dire_en_cours_adjuvant :
  
 (* Dire en cours *)
 ld 1
 ST TG_OUT[NG_Adj].CR_Etat_Basc_Adj  

 (*Dire presence produit*)
 LD TG_OUT[NG_Adj].CR_Etat_Presence_Produit
 or 16#0010
 ST TG_OUT[NG_Adj].CR_Etat_Presence_Produit
  
 init_type_pesee_adjuvant :
 	
 		(* NP limite atteint ? *)
 		LD NP_adj
 		GT 4
 		JMPCN Rech_num_prod_adj
			(* NP limite atteint -&gt; On arrête de parcourir la table *)
			LD 0
			ST Numero_produit_adj
		JMP Fin_rech_num_prod_adj
		Rech_num_prod_adj:
	 		(* Récupération du numéro d'organe de stockage surlequel doser *)
 			LD TG_IN[NG_Adj].Basc_Adj[NP_Adj].Numero_Produit
			WORD_TO_INT
			st Numero_produit_Adj
		Fin_rech_num_prod_adj:

 		(* On enregistre le numéro de produit initial (avant éventuel remplacement de produit). *)
 		LD Numero_produit_Adj
 		ST Numero_produit_Adj_initial
 		eq 0
 		jmpc fin_dos_gachee_encours_adjuvant
 		
 		(*Copie produit, pesée et numéro cuve dans compte-rendu*)
		LD TG_IN[NG_Adj].Basc_Adj[NP_Adj].Numero_Produit
		ST TG_OUT[NG_Adj].CR_basc_Adj[NP_Adj].Numero_prod
 		
 		(*Recherche poids demandé*)
 		LD TG_IN[NG_Adj].Basc_Adj[NP_Adj].Poids_demande
 		st Poids_demande_Adj
  
 		(*Recherche erreur de jetée*)
 		LD TG_IN[NG_Adj].Basc_Adj[NP_Adj].Erreur_jettee
		st Erreur_jetee_Adj
  
  		(*Recherche limite de correction*)
  		LD TG_IN[NG_Adj].Basc_Adj[NP_Adj].Limite_correction
  		ST Limite_correction_Adj

  		ld Poids_instantane_Adj
  		st Poids_de_reference_Adj

  		LD TRUE
  		R Poids_vise_deja_ecrit_Adj (* init *)
  
  		(* Init de la CGG quand la CGG n'est pas activée et *)
  		(* aussi quand c'est la 1ère gâchée de la fabrication *)
  		LDN CGG_activee
  		OR (TG_IN[NG_Adj].Proprietes_gachee
  			AND 16#0002 (* 1ère gâchée de la fabrication *)
  			GT 0
  		)
 		AND (NP_Adj
 			EQ 1 (* 1er produit de la gâchée *)
 		)
  		JMPCN init_corr_g_g_adj__fin
  		init_corr_g_g_adj:
  			(* on active la CGG en début de fabrication *)
  			LD CGG_activee
  			ST CGG_activee_Adj 
  			(* init des cumuls *)
  			LD 0
  			ST ma0
  			init_corr_g_g_adj__boucle:
  			LD ma0
  			ADD 1
  			ST ma0
  			LD ma0
  			GT Conf_adj1_nb_cuves
  			JMPC init_corr_g_g_adj__fin
  			LD 0
  			ST cumuls_pesees.Cumuls_pesees_Adj[ma0].cumul_consignes_sans_correct_g_g
  			ST cumuls_pesees.Cumuls_pesees_Adj[ma0].cumul_poids_reellement_peses
  			JMP init_corr_g_g_adj__boucle
  		init_corr_g_g_adj__fin:


 		(* Récupération des options de dosage *)

    		(* Obligation d'atteindre la consigne *)
    		LD TG_IN[NG_Adj].Basc_Adj[NP_Adj].Options_dosage
 		AND 16#0001
 		GT 0
 		ST Flags_pesage_Adj.obligation_atteindre_consigne

		(* Correction gachée sur gachée activée *)
		LD CGG_activee_Adj
		ST Flags_pesage_Adj.CGG_ON

 		(* Dernière gachée *)
 		LD TG_IN[NG_Adj].Proprietes_gachee
 		AND 16#0001
 		NE 0
 		ST Flags_pesage_Adj.Derniere_gachee

 		(* Première gachée *)
 		LD TG_IN[NG_Adj].Proprietes_gachee
 		AND 16#0002
 		NE 0
 		ST Flags_pesage_Adj.Premiere_gachee

	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
		(* Mode décomptage :non disponible *)
		LD FALSE
		ST Flags_pesage_Adj.mode_decomptage  

	(* XX/09/2015 - P868A - artf1598100 *)
 		CAL Weighing_Tolerances (IDFB_Conf_Process_Tol := TG_IN[NG_Adj].Conf_Admix_Process_Tol[Numero_produit_Adj],
 		                         IDFB_Conf_Process_Tol_Default := Conf_Admix_Process_Tol_Default[Numero_produit_Adj],
 		                         IDFB_Batch_Properties := TG_IN[NG_Adj].Proprietes_gachee,
 		                         ODFB_Conf_Process_Tol_Used =&gt; Conf_Admix_Tol_Used)
 		jmp fin_dosage_adjuvant
  
 fin_dos_gachee_encours_adjuvant :
  
 (* Dire terminé *)
 ld 2
 ST TG_OUT[NG_Adj].CR_Etat_Basc_Adj
  
(* Vidange de la bascule dans la bonbonne à colorants *)
LD Conf_Bonbonne_Colorant
AND (TG_OUT[NG_Adj].CR_Etat_Presence_Produit
	AND 16#0010
	NE 0
) (* Modif R.C. 23/01/2012 P809/P856 suite à bug de vidange/redosage des colorants *)
S Attente_Autoris_Vidange_Colorant
 
 LD TG_OUT[NG_Adj].CR_Etat_Gachee
 or 16#0040
 ST TG_OUT[NG_Adj].CR_Etat_Gachee
  
 ld true 
 r Pesee_suivante_Adj
  
 ld 0
 st Poids_demande_Adj
 st Erreur_jetee_Adj
 ST Limite_correction_Adj (* inutile ? *)
 st Poids_de_reference_Adj
 st Numero_produit_Adj
 ST Numero_produit_Adj_initial (* inutile ? *)
 st Poids_deja_pese_Adj
  
  
 fin_dosage_adjuvant :
 (*Bloc fonction du pesage*)
 LD Dosage_Adj_INIT_EN_COURS
 OR (TG_OUT[NG_Adj].CR_Etat_Basc_Adj 
 EQ 1
 ) 
 JMPC Par_DFB_pesage_Adj

 Pas_par_DFB_pesage_Adj :
 	LD FALSE (* Ajout R.C. 07/12/2011 P808/P856, préventivement contre les dosages infinis (tel que le bug #0001367) *)
 	ST Cde_dosage_generale_adj 
 	JMP fin_adjuvant

 Par_DFB_pesage_Adj :
 LD Ajustement_auto_adjuvant[Numero_produit_Adj]
 ST Flags_pesage_Adj.AJU_AUTO
 LD FALSE (* Le pesage fin n'est pas géré pour les adjuvants *)
 ST Flags_pesage_Adj.SENS_PV

 LD t#1d0h0m0s0ms
 ST TON_TOFF_PV_Adj.TON
 LD t#0s
 ST TON_TOFF_PV_Adj.TOFF
 ST TON_TOFF_VIB_Adj.TON
 ST TON_TOFF_VIB_Adj.TOFF
 LD Conf_adj_TON_aju[Numero_produit_Adj]
 ST TON_TOFF_AJU_Adj.TON
 LD Conf_adj_TOFF_aju[Numero_produit_Adj]
 ST TON_TOFF_AJU_Adj.TOFF
 				 
 CAL PESA_Adj (POIDS_I := Poids_instantane_Adj,
                    POIDS_D := Poids_demande_Adj,
                    POIDS_R := Poids_de_reference_Adj,
                    ERR_JETE := Erreur_jetee_Adj,
                    TOLERANC := Conf_Admix_Tol_Used, (* XX/09/2015 - P868A - artf1598100 *)
                    SEUIL_PV := 0,
                    TON_TOFF_PV := TON_TOFF_PV_Adj,
                    TON_TOFF_VIB := TON_TOFF_VIB_Adj,
                    NB_VIB := 0,
                    TON_TOFF_AJU := TON_TOFF_AJU_Adj,
                    TPS_apres_coulant := Conf_adj_tps_apres_coulant[Numero_produit_Adj],
                    TPS_ecoulement := Conf_adj_tps_ecoulement[Numero_produit_Adj],
                    LIM_CORR := Limite_correction_Adj,
                    LIM_SDOS := Conf_adj_limite_sous_dosage[Numero_produit_Adj_initial],
                    DEFAUT := Defaut_Adj,
                    INIT := Dosage_Adj_INIT_EN_COURS,
                    T_STAB := Conf_adjuvant_basc_tps_stab,
                    T_M_STAB := Conf_adjuvant_basc_tps_max_stab,
                    EC_STAB := Conf_adjuvant_ecart_stabilite,
                    T_M_PESA := Conf_adjuvant_tps_max_pesage,
                    CUMULS := Cumuls_pesees.Cumuls_pesees_Adj[Numero_produit_Adj_initial],
                    Flags_pesage := Flags_pesage_Adj,
                    PORTEE := Conf_adjuvant_basc_seuil_maxi,
		    Correction_Humidite := Correction_Humidite_Autres)
  
 LD PESA_Adj.poids_p
 ST Poids_deja_pese_Adj
 LD PESA_Adj.cde_dosa
 ST Cde_dosage_generale_Adj
 S Dosage_auto_Adj
 LD PESA_Adj.Pds_bloq
 S  Pesee_bloquee_Adj
 LD PESA_Adj.Tmax_pes
 S  Pesee_incomplete_Adj
 LD PESA_Adj.Instable
 S  Basc_instable_Adj
 LD PESA_Adj.Ajust
 S  Tol_inf_Adj
 LD PESA_Adj.Dep_tol
 S  Depassement_tolerance_Adj
 LD PESA_Adj.pesee_ok
 ANDN Alarme_satur_inf_Adj (* Ajout R.C. 10/02/2011 P803 pour ne pas valider la pesée *)
 ANDN Alarme_satur_sup_Adj (*      si la mesure de poids est saturée, mais dans la tolérance. *)
 ST Pesee_suivante_Adj

 (* XX/09/2015 - P868A - artf1598100 *)
 (* Calcul de l'écart de pesée devient l'écart entre le poids pesé *)
 (* et le poids visé (avec toutes les corrections) *)
 (* L'écart de pesée ne prend plus en compte l'écart des gachées précedentes que l'on soit en CGG ou non *)
 (* (utilisé pour déterminer un éventuel dépassement de tolérance.) *)
 LD PESA_Adj.ECART_P
 ST Ecart_pesee_Adj
 INT_TO_DINT
 MUL 10000 (* Taux en pour dix-millièmes *)
 DIV (PESA_Adj.POIDS_V
 	INT_TO_DINT
 )
 DINT_TO_INT
 ST Ecart_pesee_en_taux_Adj

 (* Ecrire le poids visé dans le compte rendu de gâchée*)
 LD Poids_vise_deja_ecrit_Adj
 OR Dosage_Adj_INIT_EN_COURS
 JMPC passer_ecriture_poids_vise_adj
 	LD PESA_Adj.POIDS_V
	ST TG_OUT[NG_Adj].CR_basc_Adj[NP_Adj].Poids_vise
 	LD TRUE
	S Poids_vise_deja_ecrit_Adj
 passer_ecriture_poids_vise_adj:

 (*Ecriture de la queue de chute dans le compte-rendu*)
 LD PESA_Adj.stab_ok
 jmpcn suite_cr_adjuvant
  
 ld Poids_instantane_Adj
 sub PESA_Adj.poids_c
 ST TG_OUT[NG_Adj].CR_basc_Adj[NP_Adj].Erreur_jettee
  
 suite_cr_adjuvant:
 (*Ecriture du poids pesée dans le compte-rendu*) 
 ld Pesee_suivante_Adj
 jmpcn fin_adjuvant
  
 	ld Poids_instantane_Adj
 	sub Poids_de_reference_Adj
	ST TG_OUT[NG_Adj].CR_basc_Adj[NP_Adj].Poids_reel_pese
	INT_TO_DINT
	ADD Cumuls_pesees.Cumuls_pesees_Adj[Numero_produit_Adj_initial].cumul_poids_reellement_peses
	ST Cumuls_pesees.Cumuls_pesees_Adj[Numero_produit_Adj_initial].cumul_poids_reellement_peses

	LD Poids_demande_Adj
	INT_TO_DINT
	ADD Cumuls_pesees.Cumuls_pesees_Adj[Numero_produit_Adj_initial].cumul_consignes_sans_correct_g_g
	ST Cumuls_pesees.Cumuls_pesees_Adj[Numero_produit_Adj_initial].cumul_consignes_sans_correct_g_g
 
	(* Pointer sur produit suivant *)
	LD NP_Adj
	ADD 1
	ST NP_Adj

	LD FALSE
	ST Dosage_auto_Adj
 
 fin_adjuvant :
 (*Défaut de pesée*)
 ld Pesee_bloquee_Adj
 or Basc_instable_Adj
 or Tol_inf_Adj
 or Depassement_tolerance_Adj
(* or Alarme_poids_max_adjuvant*)(* On ne bloque plus la validation de la pesée *)
	(* en cas de dépassement de la portée paramétrée pour la bascule. *)
	(* Décision de Patrick HUGON le 01/12/2010, dans le cadre de la *)
	(* correction gachée sur gachée (qui est susceptible de faire viser *)
	(* un poids cible égal à la portée de la bascule pour compenser *)
	(* des sous-dosages). *)
 or Alarme_detare_Adj
 or Pesee_incomplete_Adj
 or (
 ldn Vidange_Adj
 andn Info_balance_Adj_fermee
 )
 or (
 ld Conf_adjuvant_basc_compartimente
 andn Vidange_Adj
 andn Info_balance_Adj_Comp_ferme
 )
 OR Alarme_satur_inf_Adj
 OR Alarme_satur_sup_Adj
 st Defaut_Adj
</ILSource>
	</program>
	<program>
		<identProgram name="270_Sorties_Adj" type="section" task="MAST"></identProgram>
		<ILSource>(* Initialisation des variables locales de la section *)
LD Sorties_Adj_DEM_INIT
JMPCN Init_Sorties_Adj__Fin
Init_Sorties_Adj:

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	LD TRUE
	R Sorties_Adj_DEM_INIT (* L'init de la section a bien été prise en compte. *)
Init_Sorties_Adj__Fin:


ldn manu_logiciel
OR (Numero_manu_Adj
	EQ 0 (* Ajout R.C. 29/08/2011 P852 *)
)

jmpc fin_manu_adjuvant

LD Conf_Adj_dest_cuves[Numero_manu_Adj]
EQ 0 (* Mettre la commande à TRUE uniquement pour une cuve pesée. *)
	(* Les commandes des cuves comptées(pompées) sont gérées dans les sections de comptage. *)
	(* Ajout R.C. 29/08/2011 P852 *)
JMPCN fin_manu_adjuvant


	(*manuel logiciel adjuvant*)

	ld Manu_cde_dosage_adjuvant
	and Manu_temporise
	st TON_manu_Adj.IN
	CAL TON_manu_Adj (PT := Manu_Tps_dosage_Adj)

	ld Auto_pupitre_sans_Arret_prod
	andn Alarme_poids_max_Adj
	andn Alarme_detare_Adj
	and manu_logiciel
	and (1
		and (Manu_cde_dosage_adjuvant
			andn Manu_temporise
		)
		or (Manu_cde_dosage_adjuvant
			and Manu_temporise
			andn TON_manu_Adj.Q
		)
	)
	ANDN Alarme_Com_HMS_Profibus_ADJ
	ANDN Alarme_Com_HMS_Profibus
	ANDN Alarme_Com_API_ModbusTCP_1
	ANDN Alarme_prot_mot_Dos_ADJ
	ANDN Alarme_IDE500_Adj
	andn Tble_Alarme_Niv_haut_ADJ_Comp[Numero_manu_Adj]
	st Cde_dosage_Adj[Numero_manu_Adj]
	jmpc fin_manu_adjuvant
		ld true
		r Manu_cde_dosage_adjuvant
fin_manu_adjuvant:
  
CAL FD_manu_1_Adj(CLK := Manu_cde_dosage_adjuvant)
ld FD_manu_1_Adj.q
jmpcn fin_manu2_adjuvant
	ld 0
	st Numero_manu_Adj
fin_manu2_adjuvant :
  


(*Commande adjuvant vers bascule adjuvant*)
  
ld Numero_produit_Adj
eq 0
jmpc fin_cde_adjuvant
 
	ldn Vidange_Adj
	andn Vidange_Comp_Adj
	andn Discordance_vidange_adjuvant
	andn Discordance_vidange_comp_adj
	andn Alarme_poids_max_Adj
	andn Alarme_detare_Adj
	and (Auto_pupitre_sans_Arret_prod
		andn manu_logiciel
		and Cde_dosage_generale_Adj
	)
	or (Manu_cde_dosage_adjuvant
		and manu_logiciel
		and (Numero_produit_Adj
			eq Numero_manu_Adj
		)
	)
	ANDN Alarme_Com_HMS_Profibus_ADJ
	ANDN Alarme_Com_HMS_Profibus
	ANDN Alarme_Com_API_ModbusTCP_1
	ANDN Alarme_prot_mot_Dos_ADJ
	ANDN Alarme_IDE500_Adj
	andn Tble_Alarme_Niv_haut_ADJ_Comp[Numero_produit_Adj]
	st Cde_dosage_Adj[Numero_produit_Adj]

fin_cde_adjuvant:
</ILSource>
	</program>
	<program>
		<identProgram name="280_Dosage_Add" type="section" task="MAST"></identProgram>
		<STSource>(* Développé par R.C. 22/07/2011 *)
(* La section est codée sur un modèle Etape-Transition *)



(* TRAITEMENT PRÉLIMINAIRE *)
(*-------------------------*)
(* Init *)

Etape_280_Designee			:= FALSE; (* Permettra de savoir que l'activité *)
	(* d'une étape a changé, afin de ne faire évoluer qu'une étape à la fois *)




(* TRAITEMENT SÉQUENTIEL *)
(*-----------------------*)
(* - Scrutation des Etapes *)


(* Etape initiale : 010_Init_Section *)
Dosage_Add_INIT_EN_COURS := Dosage_Add_DEM_INIT;
IF Dosage_Add_DEM_INIT THEN

	(* Initialiser les variables locales de la section *)
	Etape_280_010_Init_Section		:= 1;
	Etape_280_020_Att_Donnees_TG		:= 0;
	Etape_280_030_Verif_Qte_Demandee	:= 0;
	Etape_280_040_Decla_prod_present	:= 0;
	Etape_280_050_Att_Basc_Prete		:= 0;
	Etape_280_060_Decla_Dos_En_Cours	:= 0;
	Etape_280_070_Init_Dosage		:= 0;
	Etape_280_080_Dosage			:= 0;
	Etape_280_090_Ecr_Compte_Rendu		:= 0;
	Etape_280_100_Prod_Suivant		:= 0;
	Etape_280_190_Decla_Dos_Termine		:= 0;
	Etape_280_200_Gachee_Suivante		:= 0;
	Etape_280_Designee			:= TRUE;

	(* Reset de la demande d'init *)
	Dosage_Add_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)

	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	IF NOT Seuil_vide_add_dispo THEN 
		Basc_add_vide := TRUE;
	END_IF;

END_IF;

(* 010_Init_Section -&gt; 020_Att_Donnees_TG *)
IF (NOT Etape_280_Designee)
AND Etape_280_010_Init_Section THEN
	IF (TRUE) THEN
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 1;
		Etape_280_030_Verif_Qte_Demandee	:= 0;
		Etape_280_040_Decla_prod_present	:= 0;
		Etape_280_050_Att_Basc_Prete		:= 0;
		Etape_280_060_Decla_Dos_En_Cours	:= 0;
		Etape_280_070_Init_Dosage		:= 0;
		Etape_280_080_Dosage			:= 0;
		Etape_280_090_Ecr_Compte_Rendu		:= 0;
		Etape_280_100_Prod_Suivant		:= 0;
		Etape_280_190_Decla_Dos_Termine		:= 0;
		Etape_280_200_Gachee_Suivante		:= 0;
		Etape_280_Designee			:= TRUE;
	END_IF;
END_IF;

(* 020_Att_Donnees_TG -&gt; 030_Verif_Qte_Demandee *)
IF (NOT Etape_280_Designee)
AND Etape_280_020_Att_Donnees_TG THEN
	IF (TG_IN[NG_Add].Numero_gachee &lt;&gt; 0)				(* Données de TG *)
	AND (TG_IN[NG_Add].Numero_gachee = TG_IN[NG_Add].CR_Code_Fin)	(* valides *)
	AND (TG_OUT[NG_Add].CR_Etat_Basc_Add = 0) (* Gâchée pas déjà traitée (condition nécessaire si on a les 4 emplacements de TG pleins) *)
	THEN
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 0;
		Etape_280_030_Verif_Qte_Demandee	:= 1;
		Etape_280_040_Decla_prod_present	:= 0;
		Etape_280_050_Att_Basc_Prete		:= 0;
		Etape_280_060_Decla_Dos_En_Cours	:= 0;
		Etape_280_070_Init_Dosage		:= 0;
		Etape_280_080_Dosage			:= 0;
		Etape_280_090_Ecr_Compte_Rendu		:= 0;
		Etape_280_100_Prod_Suivant		:= 0;
		Etape_280_190_Decla_Dos_Termine		:= 0;
		Etape_280_200_Gachee_Suivante		:= 0;
		Etape_280_Designee			:= TRUE;
	END_IF;
END_IF;

(* 030_Verif_Qte_Demandee -&gt; 040_Lect_Consignes *)
(* ou *)
(* 030_Verif_Qte_Demandee -&gt; 190_Decla_Dos_Termine *)
IF (NOT Etape_280_Designee)
AND Etape_280_030_Verif_Qte_Demandee THEN
	IF (TG_IN[NG_Add].Basc_Add[NP_Add].Numero_produit &gt; 0) (* La quantité demandée est non nulle pour le produit pointé. *)
	AND (TG_IN[NG_Add].Basc_Add[NP_Add].Numero_produit &lt;= INT_TO_WORD(Conf_basc_add_nb_organes)) THEN
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 0;
		Etape_280_030_Verif_Qte_Demandee	:= 0;
		Etape_280_040_Decla_prod_present	:= 1;
		Etape_280_050_Att_Basc_Prete		:= 0;
		Etape_280_060_Decla_Dos_En_Cours	:= 0;
		Etape_280_070_Init_Dosage		:= 0;
		Etape_280_080_Dosage			:= 0;
		Etape_280_090_Ecr_Compte_Rendu		:= 0;
		Etape_280_100_Prod_Suivant		:= 0;
		Etape_280_190_Decla_Dos_Termine		:= 0;
		Etape_280_200_Gachee_Suivante		:= 0;
		Etape_280_Designee			:= TRUE;
	ELSE
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 0;
		Etape_280_030_Verif_Qte_Demandee	:= 0;
		Etape_280_040_Decla_prod_present	:= 0;
		Etape_280_050_Att_Basc_Prete		:= 0;
		Etape_280_060_Decla_Dos_En_Cours	:= 0;
		Etape_280_070_Init_Dosage		:= 0;
		Etape_280_080_Dosage			:= 0;
		Etape_280_090_Ecr_Compte_Rendu		:= 0;
		Etape_280_100_Prod_Suivant		:= 0;
		Etape_280_190_Decla_Dos_Termine		:= 1;
		Etape_280_200_Gachee_Suivante		:= 0;
		Etape_280_Designee			:= TRUE;
	END_IF;
END_IF;

(* 040_Lect_Consignes -&gt; 050_Att_Basc_Prete *)
(* ou *)
(* 040_Lect_Consignes -&gt; 070_Init_Dosage *)
IF (NOT Etape_280_Designee)
AND Etape_280_040_Decla_prod_present THEN
	IF (NP_Add = 1) THEN
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 0;
		Etape_280_030_Verif_Qte_Demandee	:= 0;
		Etape_280_040_Decla_prod_present	:= 0;
		Etape_280_050_Att_Basc_Prete		:= 1;
		Etape_280_060_Decla_Dos_En_Cours	:= 0;
		Etape_280_070_Init_Dosage		:= 0;
		Etape_280_080_Dosage			:= 0;
		Etape_280_090_Ecr_Compte_Rendu		:= 0;
		Etape_280_100_Prod_Suivant		:= 0;
		Etape_280_190_Decla_Dos_Termine		:= 0;
		Etape_280_200_Gachee_Suivante		:= 0;
		Etape_280_Designee			:= TRUE;
	ELSIF (NP_Add &gt; 1) THEN
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 0;
		Etape_280_030_Verif_Qte_Demandee	:= 0;
		Etape_280_040_Decla_prod_present	:= 0;
		Etape_280_050_Att_Basc_Prete		:= 0;
		Etape_280_060_Decla_Dos_En_Cours	:= 0;
		Etape_280_070_Init_Dosage		:= 1;
		Etape_280_080_Dosage			:= 0;
		Etape_280_090_Ecr_Compte_Rendu		:= 0;
		Etape_280_100_Prod_Suivant		:= 0;
		Etape_280_190_Decla_Dos_Termine		:= 0;
		Etape_280_200_Gachee_Suivante		:= 0;
		Etape_280_Designee			:= TRUE;
	END_IF;
END_IF;

(* 050_Att_Basc_Prete -&gt; 060_Decla_Dos_En_Cours *)
IF (NOT Etape_280_Designee)
AND Etape_280_050_Att_Basc_Prete THEN
	IF (Etat_balance_Add) THEN
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 0;
		Etape_280_030_Verif_Qte_Demandee	:= 0;
		Etape_280_040_Decla_prod_present	:= 0;
		Etape_280_050_Att_Basc_Prete		:= 0;
		Etape_280_060_Decla_Dos_En_Cours	:= 1;
		Etape_280_070_Init_Dosage		:= 0;
		Etape_280_080_Dosage			:= 0;
		Etape_280_090_Ecr_Compte_Rendu		:= 0;
		Etape_280_100_Prod_Suivant		:= 0;
		Etape_280_190_Decla_Dos_Termine		:= 0;
		Etape_280_200_Gachee_Suivante		:= 0;
		Etape_280_Designee			:= TRUE;
	END_IF;
END_IF;

(* 060_Decla_Dos_En_Cours -&gt; 070_Init_Dosage *)
IF (NOT Etape_280_Designee)
AND Etape_280_060_Decla_Dos_En_Cours THEN
	IF (TRUE) THEN
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 0;
		Etape_280_030_Verif_Qte_Demandee	:= 0;
		Etape_280_040_Decla_prod_present	:= 0;
		Etape_280_050_Att_Basc_Prete		:= 0;
		Etape_280_060_Decla_Dos_En_Cours	:= 0;
		Etape_280_070_Init_Dosage		:= 1;
		Etape_280_080_Dosage			:= 0;
		Etape_280_090_Ecr_Compte_Rendu		:= 0;
		Etape_280_100_Prod_Suivant		:= 0;
		Etape_280_190_Decla_Dos_Termine		:= 0;
		Etape_280_200_Gachee_Suivante		:= 0;
		Etape_280_Designee			:= TRUE;
	END_IF;
END_IF;

(* 070_Init_Dosage -&gt; 080_Dosage *)
IF (NOT Etape_280_Designee)
AND Etape_280_070_Init_Dosage THEN
	IF (TRUE) THEN
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 0;
		Etape_280_030_Verif_Qte_Demandee	:= 0;
		Etape_280_040_Decla_prod_present	:= 0;
		Etape_280_050_Att_Basc_Prete		:= 0;
		Etape_280_060_Decla_Dos_En_Cours	:= 0;
		Etape_280_070_Init_Dosage		:= 0;
		Etape_280_080_Dosage			:= 1;
		Etape_280_090_Ecr_Compte_Rendu		:= 0;
		Etape_280_100_Prod_Suivant		:= 0;
		Etape_280_190_Decla_Dos_Termine		:= 0;
		Etape_280_200_Gachee_Suivante		:= 0;
		Etape_280_Designee			:= TRUE;
	END_IF;
END_IF;

(* 080_Dosage -&gt; 090_Ecr_Compte_Rendu *)
IF (NOT Etape_280_Designee)
AND Etape_280_080_Dosage THEN
	IF (Pesee_suivante_Add)
	AND (Memo_Basc_stable_Add) THEN
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 0;
		Etape_280_030_Verif_Qte_Demandee	:= 0;
		Etape_280_040_Decla_prod_present	:= 0;
		Etape_280_050_Att_Basc_Prete		:= 0;
		Etape_280_060_Decla_Dos_En_Cours	:= 0;
		Etape_280_070_Init_Dosage		:= 0;
		Etape_280_080_Dosage			:= 0;
		Etape_280_090_Ecr_Compte_Rendu		:= 1;
		Etape_280_100_Prod_Suivant		:= 0;
		Etape_280_190_Decla_Dos_Termine		:= 0;
		Etape_280_200_Gachee_Suivante		:= 0;
		Etape_280_Designee			:= TRUE;
	END_IF;
END_IF;

(* 090_Ecr_Compte_Rendu -&gt; 100_Prod_Suivant *)
(* ou *)
(* 090_Ecr_Compte_Rendu -&gt; 190_Decla_Dos_Termine *)
IF (NOT Etape_280_Designee)
AND Etape_280_090_Ecr_Compte_Rendu THEN
	IF (NP_Add &lt; 4) THEN
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 0;
		Etape_280_030_Verif_Qte_Demandee	:= 0;
		Etape_280_040_Decla_prod_present	:= 0;
		Etape_280_050_Att_Basc_Prete		:= 0;
		Etape_280_060_Decla_Dos_En_Cours	:= 0;
		Etape_280_070_Init_Dosage		:= 0;
		Etape_280_080_Dosage			:= 0;
		Etape_280_090_Ecr_Compte_Rendu		:= 0;
		Etape_280_100_Prod_Suivant		:= 1;
		Etape_280_190_Decla_Dos_Termine		:= 0;
		Etape_280_200_Gachee_Suivante		:= 0;
		Etape_280_Designee			:= TRUE;
	ELSE
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 0;
		Etape_280_030_Verif_Qte_Demandee	:= 0;
		Etape_280_040_Decla_prod_present	:= 0;
		Etape_280_050_Att_Basc_Prete		:= 0;
		Etape_280_060_Decla_Dos_En_Cours	:= 0;
		Etape_280_070_Init_Dosage		:= 0;
		Etape_280_080_Dosage			:= 0;
		Etape_280_090_Ecr_Compte_Rendu		:= 0;
		Etape_280_100_Prod_Suivant		:= 0;
		Etape_280_190_Decla_Dos_Termine		:= 1;
		Etape_280_200_Gachee_Suivante		:= 0;
		Etape_280_Designee			:= TRUE;
	END_IF;
END_IF;

(* 100_Prod_Suivant -&gt; 030_Verif_Qte_Demandee *)
IF (NOT Etape_280_Designee)
AND Etape_280_100_Prod_Suivant THEN
	IF (TRUE) THEN
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 0;
		Etape_280_030_Verif_Qte_Demandee	:= 1;
		Etape_280_040_Decla_prod_present	:= 0;
		Etape_280_050_Att_Basc_Prete		:= 0;
		Etape_280_060_Decla_Dos_En_Cours	:= 0;
		Etape_280_070_Init_Dosage		:= 0;
		Etape_280_080_Dosage			:= 0;
		Etape_280_090_Ecr_Compte_Rendu		:= 0;
		Etape_280_100_Prod_Suivant		:= 0;
		Etape_280_190_Decla_Dos_Termine		:= 0;
		Etape_280_200_Gachee_Suivante		:= 0;
		Etape_280_Designee			:= TRUE;
	END_IF;
END_IF;

(* 190_Decla_Dos_Termine -&gt; 200_Gachee_Suivante *)
IF (NOT Etape_280_Designee)
AND Etape_280_190_Decla_Dos_Termine THEN
	IF (TRUE) THEN
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 0;
		Etape_280_030_Verif_Qte_Demandee	:= 0;
		Etape_280_040_Decla_prod_present	:= 0;
		Etape_280_050_Att_Basc_Prete		:= 0;
		Etape_280_060_Decla_Dos_En_Cours	:= 0;
		Etape_280_070_Init_Dosage		:= 0;
		Etape_280_080_Dosage			:= 0;
		Etape_280_090_Ecr_Compte_Rendu		:= 0;
		Etape_280_100_Prod_Suivant		:= 0;
		Etape_280_190_Decla_Dos_Termine		:= 0;
		Etape_280_200_Gachee_Suivante		:= 1;
		Etape_280_Designee			:= TRUE;
	END_IF;
END_IF;

(* 200_Gachee_Suivante -&gt; 020_Att_Donnees_TG *)
IF (NOT Etape_280_Designee)
AND Etape_280_200_Gachee_Suivante THEN
	IF (TRUE) THEN
		Etape_280_010_Init_Section		:= 0;
		Etape_280_020_Att_Donnees_TG		:= 1;
		Etape_280_030_Verif_Qte_Demandee	:= 0;
		Etape_280_040_Decla_prod_present	:= 0;
		Etape_280_050_Att_Basc_Prete		:= 0;
		Etape_280_060_Decla_Dos_En_Cours	:= 0;
		Etape_280_070_Init_Dosage		:= 0;
		Etape_280_080_Dosage			:= 0;
		Etape_280_090_Ecr_Compte_Rendu		:= 0;
		Etape_280_100_Prod_Suivant		:= 0;
		Etape_280_190_Decla_Dos_Termine		:= 0;
		Etape_280_200_Gachee_Suivante		:= 0;
		Etape_280_Designee			:= TRUE;
	END_IF;
END_IF;



   



(* TRAITEMENT POSTÉRIEUR *)
(*-----------------------*)
(* - Actions *)


(* INITIALISATION DE LA GÂCHÉE *)
IF Etape_280_010_Init_Section
OR Etape_280_200_Gachee_Suivante THEN
	(* Note R.C. 27/07/2011 : Il est probable que tout ou partie de ces initialisations soient inutiles. *)
	Numero_produit_Add := 0;
	Poids_demande_Add := 0;
	Erreur_jetee_Add := 0;
	Limite_correction_Add := 0; 
	Poids_de_reference_Add := 0;
	Poids_deja_pese_Add := 0;
	Numero_produit_Add_initial := 0;
	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	For i:= 1 TO 4 DO 	
	poids_deja_pese_add_decomptage[i]:=0;
	END_FOR;
	Poids_deja_pese_Add_Cum := 0;
END_IF;



(* GESTION DES POINTEURS DE GÂCHÉES / PRODUIT *)
IF Etape_280_010_Init_Section THEN
	(* Initialisation des pointeurs de gâchée / produit *)
	NG_Add := 1;
	NP_Add := 1;
	dosage_auto_add:=false;
END_IF;
IF Etape_280_100_Prod_Suivant THEN
	(* Produit suivant *)
	NP_Add := NP_Add + 1;
	dosage_auto_add:=false;
END_IF;
IF Etape_280_200_Gachee_Suivante THEN
	(* Gâchée suivante *)
	IF NG_Add &lt; 4 THEN
		NG_Add := NG_Add + 1;
	ELSE
		NG_Add := 1;
	END_IF;
	NP_Add := 1;
	dosage_auto_add:=false;
END_IF;



(* DÉCLARATIONS EN COMPTE RENDU DE GÂCHÉE *)
(* Déclaration "dosage en cours" dans le CR de la bascule *)
IF Etape_280_060_Decla_Dos_En_Cours THEN
	IF (TG_OUT[NG_Add].CR_Etat_Basc_Add = 0) THEN (* Condition préventive pour ne *)
		(* pas risquer un passage de "2" (pesée terminée) à "1" (pesée en cours). *)
		TG_OUT[NG_Add].CR_Etat_Basc_Add := 1; (* 1 = "Dosage en cours" *)
	END_IF;
END_IF;
(* Déclaration "dosage terminé" dans le CR de la bascule *)
(*                           et dans le mot d'état de la gâchée *)
IF Etape_280_190_Decla_Dos_Termine THEN
	TG_OUT[NG_Add].CR_Etat_Basc_Add := 2; (* 2 = "Dosage terminé" *)
	TG_OUT[NG_Add].CR_Etat_Gachee_2 := TG_OUT[NG_Add].CR_Etat_Gachee_2 OR 16#0001; (* "Pesée Add Terminée" *)
END_IF;
(* Déclaration "Produit présent" *)
IF Etape_280_040_Decla_prod_present THEN
	TG_OUT[NG_Add].CR_Etat_Presence_Produit := TG_OUT[NG_Add].CR_Etat_Presence_Produit OR 16#0100;
END_IF;


(* INITIALISATIONS POUR LE DOSAGE (PARTIE #1) *)
IF Etape_280_070_Init_Dosage THEN

	(* Lecture des consignes de dosage *)
	Numero_produit_Add := WORD_TO_INT(TG_IN[NG_Add].Basc_Add[NP_Add].Numero_produit);
	Poids_demande_Add := TG_IN[NG_Add].Basc_Add[NP_Add].Poids_demande;
	Erreur_jetee_Add := TG_IN[NG_Add].Basc_Add[NP_Add].Erreur_jettee;
	Limite_correction_Add := TG_IN[NG_Add].Basc_Add[NP_Add].Limite_correction;

	(* Mémorisation du numéro de produit initial (le numéro de produit peut changer en cas de remplacement produit) *)
	Numero_produit_Add_initial := Numero_produit_Add;

END_IF;

(* LECTURE DE LA LIGNE DE POIDS EN COURS *)
(* Code spécifique à la ligne additionnelle *)
(* Rendu nécessaire par la possibilité d'avoir une ligne de poids pour chaque organe de stockage. *)
(*	- On a choisi de conserver les entrées "poids" du DFB en 16 bits *)
(*	cela oblige à fournir au DFB le poids de l'organe en cours (qui est sur 16 bits) *)
(*	au lieu de fournir le poids total de la bascule (qui est sur 32 bits) *)
IF Etape_280_070_Init_Dosage
OR Etape_280_080_Dosage
OR Etape_280_090_Ecr_Compte_Rendu THEN
	IF (conf_basc_add_pesage_individuel) THEN
		IF (Numero_produit_Add &gt;= 1)
		AND(Numero_produit_Add &lt;= 4)  THEN
			Poids_instantane_Add_EC := BCMix_Pds_Add[Numero_produit_Add];
		ELSE
			Poids_instantane_Add_EC := 0;
		END_IF;
	ELSE
		Poids_instantane_Add_EC := BCMix_Pds_Add[1];
	END_IF;
END_IF;

(* INITIALISATIONS POUR LE DOSAGE (PARTIE #2) *)
IF Etape_280_070_Init_Dosage THEN

	(* Mémorisation du poids initial *)(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	IF conf_basc_add_mode_decomptage THEN
		IF NP_ADD &lt;= 1 THEN
			Poids_de_reference_Add :=0;
		ELSE
			Poids_de_reference_Add := Poids_deja_pese_add_Cum;
		END_IF;
	Poids_de_depart_Add_Decompt := Poids_instantane_Add_EC; (* Poids des ODS à l'INIT du dosage *)
	Memo_Poids_deja_pese_add := 0; 
	Poids_deja_pese_add_Decompt := 0;(* RAZ memoire poids deja pesé si interruption pesage en cours :
					 Capot ouvert OU Changement Produits*)
	ELSE 
	Poids_de_reference_Add := Poids_instantane_Add_EC;
	Poids_de_depart_Add_Decompt := 0;
	END_IF;

	(* Copie du numéro produit dans le compte-rendu *)
	TG_OUT[NG_Add].CR_Basc_Add[NP_Add].Numero_prod := TG_IN[NG_Add].Basc_Add[NP_Add].Numero_produit;
	
	(* INITIALISATION DE LA CORRECTION GACHÉE SUR GACHÉE *)
	Poids_vise_deja_ecrit_Add := FALSE;
	(* Activation/Désactivation de la CGG quand la CGG n'est pas activée et *)
	(* aussi quand c'est la 1ère gâchée de la fabrication *)
	IF (NOT CGG_activee)
	OR ((TG_IN[NG_Add].Proprietes_gachee AND 16#0002) &gt; 0) (* 1ère gâchée de la fabrication *)
	AND (NP_Add = 1) (* 1er produit de la gâchée *)
	THEN
		(* on active la CGG en début de fabrication *)
		CGG_activee_add := CGG_activee;
	   	(* Init des cumuls CGG *)
		FOR ma0:=1 TO Conf_basc_add_nb_organes BY 1 DO
			cumuls_pesees.Cumuls_pesees_Add[ma0].cumul_consignes_sans_correct_g_g := 0;
			cumuls_pesees.Cumuls_pesees_Add[ma0].cumul_poids_reellement_peses := 0;
		END_FOR;
	END_IF;

	(* PRÉPARATION DES OPTIONS DE DOSAGE *)
	Flags_pesage_add.obligation_atteindre_consigne := ((TG_IN[NG_Add].Basc_Add[NP_Add].Options_dosage AND 16#0001) &gt; 0);
	Flags_pesage_add.CGG_ON := CGG_activee_Add;
	Flags_pesage_add.Derniere_gachee := ((TG_IN[NG_Add].Proprietes_gachee AND 16#0001) &gt; 0);
	Flags_pesage_add.Premiere_gachee := ((TG_IN[NG_Add].Proprietes_gachee AND 16#0002) &gt; 0);
	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	Flags_pesage_add.mode_decomptage := conf_basc_add_mode_decomptage;
	(* Reset de la mémoire "bascule stable" qui sera requise pour mettre fin à la phase de dosage *)
	Memo_Basc_stable_Add := FALSE;

	(* XX/09/2015 - P868A - artf1598100 *)
	Weighing_Tolerances (IDFB_Conf_Process_Tol := TG_IN[NG_Add].Conf_Add_Process_Tol[Numero_produit_Add],
	                     IDFB_Conf_Process_Tol_Default := Conf_Add_Process_Tol_Default[Numero_produit_Add],
	                     IDFB_Batch_Properties := TG_IN[NG_Add].Proprietes_gachee,
	                     ODFB_Conf_Process_Tol_Used =&gt; Conf_Add_Tol_Used);
END_IF;


(* SURVEILLANCE REMPLISSAGE DES OdS EN PHASE DE DOSAGE et REMPLACEMENT DE PRODUITS *)
IF Etape_280_080_Dosage THEN
(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	IF conf_basc_add_mode_decomptage THEN
		(* Stockage Add: Capot ouvert pour remplissage *)
		Cnd_arret_dosage_capot_ouvert := (conf_basc_add_pesage_individuel AND Alarme_capot_ouvert_stock_add[Numero_produit_add])
			OR (NOT conf_basc_add_pesage_individuel AND Alarme_capot_ouvert_stock_add[1] &lt;&gt; 0);

		TON_Poids_Add_Stab_Cap_Ouvert (IN := Cnd_arret_dosage_capot_ouvert, PT := Conf_basc_add_tps_max_stab); 
		TOF_Poids_Add_Stab_Cap_Ouvert (IN := Cnd_arret_dosage_capot_ouvert, PT := Conf_basc_add_tps_max_stab); 

		IF NOT TOF_Poids_Add_Stab_Cap_Ouvert.Q THEN
			Stock_Add_En_Remplissage := FALSE;
		END_IF;
		IF Cnd_arret_dosage_capot_ouvert THEN (* En décomptage Global
								Si présence capot alors seul le Capot 1 est pris en compte *)
			Stock_Add_En_Remplissage := TRUE;
		END_IF;

		(* Mémorisation poids d'arret si ouverture capot Ods *)
		IF  TON_Poids_Add_Stab_Cap_Ouvert.Q AND NOT TON_Poids_Add_Stab_Cap_Ouvert_Ec THEN 
			Poids_deja_pese_add_Decompt := PESA_ADD.poids_p;
			TON_Poids_Add_Stab_Cap_Ouvert_Ec := TRUE;
		END_IF;

		IF  TON_Poids_Add_Stab_Cap_Ouvert.Q THEN 
			Poids_de_depart_Add_Decompt := Poids_instantane_Add_EC;
		ELSE 
			TON_Poids_Add_Stab_Cap_Ouvert_Ec := FALSE;
		END_IF;

		(* Stockage Add: remplacement de produit demandé *)
		IF Remplacement_Add AND (Pesee_bloquee_Add OR Pesee_incomplete_Add) THEN
			Memo_Poids_deja_pese_add:= PESA_ADD.poids_p;
		END_IF;
		IF Remplacement_Add_Mem THEN
			Poids_de_depart_Add_Decompt := Poids_instantane_Add_EC;
			Poids_deja_pese_add_Decompt := Memo_Poids_deja_pese_add;
			Remplacement_Add_Mem := FALSE;
		END_IF;
	END_IF;
END_IF;

(* PHASE DE DOSAGE (PARTIE #1 : APPEL DU BLOC FONCTION) *)
IF Etape_280_080_Dosage
OR Etape_280_010_Init_Section (* On active le DFB également pour l'initialiser *) THEN
		(* sinon, on risque de conserver certains états (Petite vitesse, Ajustements) *)
		(* d'une précédente gâchée qui aurait été cassée. *)
	Bloc_fonction_Add_Actif := TRUE;
ELSE
	Bloc_fonction_Add_Actif := FALSE;
END_IF;

(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
IF Bloc_fonction_Add_Actif AND NOT Stock_Add_En_Remplissage THEN

	(* Calcul d'un "défaut de pesée" (utilisé par le bloc fonction de pesage) *)
	Defaut_Add := Pesee_bloquee_Add
 		(*OR Alarme_poids_max_add*)(* On ne bloque plus la validation de la pesée *)
 			(* en cas de dépassement de la portée paramétrée pour la bascule. *)
 			(* Décision de Patrick HUGON le 01/12/2010, dans le cadre de la *)
 			(* correction gachée sur gachée (qui est susceptible de faire viser *)
 			(* un poids cible égal à la portée de la bascule pour compenser *)
 			(* des sous-dosages). *)
 		OR Alarme_detare_Add
		OR Basc_instable_Add
		OR Depassement_tolerance_Add
		OR Tol_inf_Add
 		OR Pesee_incomplete_Add
 		OR NOT Info_balance_Add_fermee
 		OR Alarme_satur_inf_Add
 		OR Alarme_satur_sup_Add;

	(* Mises en structures de données de configuration *)
	(* (nécessaire pour ne pas dépasser la limite du nombre maximum d'E/S du DFB) *)
	Flags_pesage_Add.AJU_AUTO := Ajustement_auto_Add[Numero_produit_Add];
	Flags_pesage_Add.SENS_PV := sens_pesage_fin_Basc_Add;
	TON_TOFF_PV_Add.TON := Conf_Add_TON_pesage_fin[Numero_produit_Add];
	TON_TOFF_PV_Add.TOFF := Conf_Add_TOFF_pesage_fin[Numero_produit_Add];
	TON_TOFF_VIB_Add.TON := Conf_Add_TON_vibreur[Numero_produit_Add];
	TON_TOFF_VIB_Add.TOFF := Conf_Add_TOFF_vibreur[Numero_produit_Add];
	TON_TOFF_AJU_Add.TON := Conf_Add_TON_ajustement[Numero_produit_Add];
	TON_TOFF_AJU_Add.TOFF := Conf_Add_TOFF_ajustement[Numero_produit_Add];

	(*Bloc fonction du pesage*)
	PESA_Add (POIDS_I := Poids_instantane_Add_EC,
		POIDS_D := Poids_demande_Add,
		POIDS_R := Poids_de_reference_Add,
		ERR_JETE := Erreur_jetee_Add,
		TOLERANC := Conf_Add_Tol_Used, (* XX/09/2015 - P868A - artf1598100 *)
		SEUIL_PV := Conf_Add_pesage_fin[Numero_produit_Add],
		TON_TOFF_PV := TON_TOFF_PV_Add,
		TON_TOFF_VIB := TON_TOFF_VIB_Add,
		NB_VIB := Conf_add_nb_vibreur[Numero_produit_Add],
		TON_TOFF_AJU := TON_TOFF_AJU_Add,
		TPS_apres_coulant := Conf_Add_tps_apres_coulant[Numero_produit_Add],
		TPS_ecoulement := Conf_Add_tps_ecoulement[Numero_produit_Add],
		LIM_CORR := Limite_correction_Add,
		LIM_SDOS := Conf_add_limite_sous_dosage[Numero_produit_Add_initial],
		DEFAUT := Defaut_Add,
		INIT := Dosage_Add_INIT_EN_COURS,
		T_STAB := Conf_basc_add_tps_stabilisation,
		T_M_STAB := Conf_basc_add_tps_max_stab,
		EC_STAB := Conf_basc_add_ecart_stabilite,
		T_M_PESA := Conf_basc_add_tps_max_pesage,
		CUMULS := Cumuls_pesees.Cumuls_pesees_Add[Numero_produit_add_initial],
		Flags_pesage := Flags_pesage_add,
		PORTEE := Conf_basc_add_seuil_maxi,
		POIDS_INIT_DECOMPTAGE := Poids_de_depart_Add_Decompt,(* ASM Jan 2014 -P864 : artf 1347731 *)
		POIDS_P_MEMO := Poids_deja_pese_add_Decompt,(* ASM Jan 2014 -P864 : artf 1347731 *)
		Correction_Humidite := Correction_Humidite_Autres);
END_IF;


(* PHASE DE DOSAGE (PARTIE #2 : TRAITEMENT DES SORTIES DU DU BLOC FONCTION) *)
IF Etape_280_080_Dosage THEN
	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	Poids_deja_pese_add_decomptage[NP_ADD] :=PESA_Add.poids_p;
	Poids_deja_pese_add := PESA_Add.poids_p; 
	IF conf_basc_add_mode_decomptage THEN
		Poids_deja_pese_add_Cum := SUM_ARINT (poids_deja_pese_add_decomptage);
		Poids_basc_add_decomptage := Poids_deja_pese_add_Cum; (* Spécifique Ligne Add: Calcul poids déja pesé pour BCMIX*)
	END_IF;

	Cde_dosage_generale_add := PESA_Add.cde_dosa;
	Petite_vitesse_add := PESA_Add.cde_pv;
	Vibreur_organes_Add := PESA_Add.cde_vib;
	IF Cde_dosage_generale_add THEN
		dosage_auto_add := True;
	END_IF;
	(* Alarmes *)
	IF PESA_Add.Pds_bloq THEN
		Pesee_bloquee_add := TRUE;  
	END_IF;
	IF PESA_Add.Tmax_pes THEN
		pesee_incomplete_add := TRUE;
	END_IF;
	IF PESA_Add.Instable THEN 
		Basc_instable_add := TRUE;
	END_IF;
	IF PESA_Add.Ajust THEN
		tol_inf_add := TRUE;
	END_IF;
	IF PESA_Add.Dep_tol THEN
		Depassement_tolerance_add := TRUE;
	END_IF;

	Pesee_suivante_Add := PESA_Add.pesee_ok
		AND NOT Alarme_satur_inf_add  (* Ajout R.C. 10/02/2011 P803 pour ne pas valider la pesée *)
		AND NOT Alarme_satur_sup_add; (*      si la mesure de poids est saturée, mais dans la tolérance. *)

	(* XX/09/2015 - P868A - artf1598100 *)
	(* Calcul de l'écart de pesée devient l'écart entre le poids pesé *)
	(* et le poids visé (avec toutes les corrections) *)
	(* L'écart de pesée ne prend plus en compte l'écart des gachées précedentes que l'on soit en CGG ou non *)
	(* (utilisé pour déterminer un éventuel dépassement de tolérance.) *)
	Ecart_pesee_Add := PESA_Add.ECART_P;
	Ecart_pesee_en_taux_Add := DINT_TO_INT(
		INT_TO_DINT(PESA_Add.ECART_P)
		* 10000 (* Taux en pour dix-millièmes *)
		/ INT_TO_DINT(PESA_Add.POIDS_V)
	);

	(* Écriture du poids visé dans le compte rendu de gâchée *)
	IF NOT Poids_vise_deja_ecrit_add THEN
		TG_OUT[NG_Add].CR_Basc_Add[NP_Add].Poids_vise :=
			PESA_Add.POIDS_V;
		Poids_vise_deja_ecrit_add := TRUE;
	END_IF;

	(* Stabilité détectée *)
	IF PESA_Add.Stab_OK THEN
		(* Ecriture de l'erreur de jetée dans le compte rendu de gâchée *)
		(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
		IF NOT conf_basc_add_mode_decomptage THEN
			TG_OUT[NG_Add].CR_Basc_Add[NP_Add].erreur_jettee := 
			Poids_instantane_Add_EC - PESA_Add.poids_c;
		ELSE
			TG_OUT[NG_Add].CR_Basc_Add[NP_Add].erreur_jettee := 
			Poids_deja_pese_add_Cum - PESA_Add.poids_c;
		END_IF;
		(* Mémorisation de la stabilité (requis pour quitter l'étape de dosage) *)
		Memo_Basc_stable_Add := TRUE;
	END_IF;
	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	(* Bascule ADD non vide : mode Décomptage et bascule sans controle de vide *)
	IF Cde_dosage_generale_add THEN
	Basc_add_vide := FALSE;
	END_IF;

ELSE (* Si on n'est pas en phase de dosage : *)

	Cde_dosage_generale_add := FALSE;
	Petite_vitesse_add := NOT (sens_pesage_fin_basc_add); (* Etat inactif par défaut *)
	Vibreur_organes_add := FALSE;
	Pesee_suivante_Add := FALSE;

END_IF;   


(* MISES À JOUR UNE FOIS LE PESAGE TERMINÉ *)
IF Etape_280_090_Ecr_Compte_Rendu THEN
	(* Ecriture du poids pesé dans le compte rendu de gâchée *)

	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	IF NOT conf_basc_add_mode_decomptage THEN
	TG_OUT[NG_Add].CR_Basc_Add[NP_Add].Poids_reel_pese :=
		Poids_instantane_Add_EC - Poids_de_reference_add;
	ELSE
	TG_OUT[NG_Add].CR_Basc_Add[NP_Add].Poids_reel_pese :=
		Poids_deja_pese_add_Cum - Poids_de_reference_add;
	END_IF;

	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	(* Mise à jour des cumuls pour la correction gachée sur gachée *)
(* 	Cumuls_pesees.Cumuls_pesees_Add[Numero_produit_add_initial].cumul_poids_reellement_peses :=
		Cumuls_pesees.Cumuls_pesees_Add[Numero_produit_add_initial].cumul_poids_reellement_peses
		+ INT_TO_DINT(Poids_instantane_Add_EC - Poids_de_reference_add);
 *)
	Cumuls_pesees.Cumuls_pesees_Add[Numero_produit_add_initial].cumul_poids_reellement_peses :=
		Cumuls_pesees.Cumuls_pesees_Add[Numero_produit_add_initial].cumul_poids_reellement_peses
		+ INT_TO_DINT(TG_OUT[NG_Add].CR_Basc_Add[NP_Add].Poids_reel_pese);

	Cumuls_pesees.Cumuls_pesees_Add[Numero_produit_add_initial].cumul_consignes_sans_correct_g_g :=
		Cumuls_pesees.Cumuls_pesees_Add[Numero_produit_add_initial].cumul_consignes_sans_correct_g_g
		+ INT_TO_DINT(Poids_demande_add);
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="290_Sorties_Add" type="section" task="MAST"></identProgram>
		<STSource>(* Initialisation des variables locales de la section *)
IF Sorties_Add_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Sorties_Add_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(* Manuel logiciel *)
IF (manu_logiciel) THEN
	TON_manu_Add (IN := Manu_cde_dosage_Add AND Manu_temporise,
		PT := Manu_Tps_dosage_Add);

	Cde_dosage_Add[Numero_manu_Add] :=  
		Auto_pupitre_sans_Arret_prod
		AND NOT Alarme_poids_max_Add
		AND NOT Alarme_detare_Add
		AND manu_logiciel
		AND (
			(Manu_cde_dosage_Add AND NOT Manu_temporise)
			OR (Manu_cde_dosage_Add AND Manu_temporise
				AND NOT TON_manu_Add.Q)
			)
(*		AND NOT Alarme_Com_HMS_Profibus_Basc_Add*)(* Non géré pour le moment *)
		AND NOT Alarme_Com_HMS_Profibus
		AND NOT Alarme_Com_API_ModbusTCP_1
		AND NOT Alarme_IDE500_Add
			(* ASM Jan 2014 -P864 : artf 1347731 : Additional balance  *)
		AND NOT Alarme_capot_ouvert_stock_add[Numero_manu_Add];

		IF NOT Cde_dosage_Add[Numero_manu_Add] THEN 
			Manu_cde_dosage_Add := FALSE;
		END_IF;
END_IF;
  
FD_manu_1_Add(CLK := Manu_cde_dosage_Add);
IF (FD_manu_1_Add.Q) THEN
	Numero_manu_Add := 0;
END_IF;



(*Commande OdS Add vers Bascule Add*)
IF (Numero_produit_Add &lt;&gt; 0) THEN

	Bit_cde_dos_Add :=
		NOT Vidange_Add
		AND (Auto_pupitre_sans_Arret_prod
			AND NOT manu_logiciel
			AND Cde_dosage_generale_Add
		);

	Alarme_bloquante_dosage_Add :=
		Discordance_vidange_Basc_Add
		OR Alarme_poids_max_Add
		OR Alarme_detare_Add
(*		OR Alarme_Com_HMS_Profibus_Basc_Add*)(* Non géré pour le moment *)
		OR Alarme_Com_HMS_Profibus
		OR Alarme_Com_API_ModbusTCP_1
		OR Alarme_IDE500_Add;

 	(* Commande Org. de Stockage Additionnel principal *)
	Cde_dosage_Add[Numero_produit_Add] :=
		(
			Bit_cde_dos_Add
			OR (Manu_cde_dosage_Add
				AND manu_logiciel
				AND (Numero_manu_Add = Numero_produit_Add)
			)
		)
		AND NOT Alarme_bloquante_dosage_Add
		AND NOT Stock_Add_En_Remplissage;(* ASM Jan 2014 -P864 : artf 1347731 : Additional balance  *)
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="300_Dosage_Ppe" type="section" task="MAST"></identProgram>
		<STSource>(* Développé par R.C. 06/03/2012 *)
(* La section est codée sur un modèle Etape-Transition *)

(* Cette section permet de lancer les dosages par pompe spécifiés dans la *)
(* zone "Compteurs" de la table de gâchée. *)
(* Sont concernés tous les dosages par pompe qui peuvent commencer dès que la *)
(* cible (destination) est prête : *)
(*    - Les dosages par pompe immédiats à destination du malaxeur/camion ("phase 1"). *)
(*    - Les dosages par pompe à destination d'un tampon-pompe. *)
(*    - Les dosages par pompe à destination de la bascule Eau1. *)
(* *)
(* Ne sont pas concernés par cette section les dosages par pompe nécessitant une *)
(* synchronisation particulière en phase d'introduction. Ces dosages sont pris en *)
(* charge directement par la section de gestion d'introduction. *)


(* TRAITEMENT PRÉLIMINAIRE *)
(*-------------------------*)
(* Init *)

Etape_300_Designee			:= FALSE; (* Permettra de savoir que l'activité *)
	(* d'une étape a changé, afin de ne faire évoluer qu'une étape à la fois *)




(* TRAITEMENT SÉQUENTIEL *)
(*-----------------------*)
(* - Scrutation des Etapes *)


(* Etape initiale : 010_Init_Section *)
IF Dosage_Ppe_DEM_INIT THEN

	(* Initialiser les variables locales de la section *)
	Etape_300_010_Init_Section		:= 1;
	Etape_300_020_Att_Donnees_TG		:= 0;
	Etape_300_030_Verif_Qte_Demandee	:= 0;
	Etape_300_040_Decla_prod_present	:= 0;
	Etape_300_050_Att_Dest_Prete		:= 0;
	Etape_300_060_Decla_Dos_En_Cours	:= 0;
	Etape_300_070_Init_Dosage		:= 0;
	Etape_300_080_Att_Fin_Dosage		:= 0;
	Etape_300_090_Dos_Termine		:= 0;
	Etape_300_100_Prod_Suivant		:= 0;
	Etape_300_180_Att_Fin_Dosages		:= 0;
	Etape_300_190_Decla_Dos_Termine		:= 0;
	Etape_300_200_Gachee_Suivante		:= 0;
	Etape_300_Designee			:= TRUE;

	(* Reset de la demande d'init *)
	Dosage_Ppe_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;

(* 010_Init_Section -&gt; 020_Att_Donnees_TG *)
IF (NOT Etape_300_Designee)
AND Etape_300_010_Init_Section THEN
	IF (TRUE) THEN
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 1;
		Etape_300_030_Verif_Qte_Demandee	:= 0;
		Etape_300_040_Decla_prod_present	:= 0;
		Etape_300_050_Att_Dest_Prete		:= 0;
		Etape_300_060_Decla_Dos_En_Cours	:= 0;
		Etape_300_070_Init_Dosage		:= 0;
		Etape_300_080_Att_Fin_Dosage		:= 0;
		Etape_300_090_Dos_Termine		:= 0;
		Etape_300_100_Prod_Suivant		:= 0;
		Etape_300_180_Att_Fin_Dosages		:= 0;
		Etape_300_190_Decla_Dos_Termine		:= 0;
		Etape_300_200_Gachee_Suivante		:= 0;
		Etape_300_Designee			:= TRUE;
	END_IF;
END_IF;

(* 020_Att_Donnees_TG -&gt; 030_Verif_Qte_Demandee *)
IF (NOT Etape_300_Designee)
AND Etape_300_020_Att_Donnees_TG THEN
	IF (TG_IN[NG_Ppe].Numero_gachee &lt;&gt; 0)				(* Données de TG *)
	AND (TG_IN[NG_Ppe].Numero_gachee = TG_IN[NG_Ppe].CR_Code_Fin)	(*   valides *)
	AND (TG_OUT[NG_Ppe].CR_Etat_Compteurs = 0) (* Gâchée pas déjà traitée (condition nécessaire si on a les 4 emplacements de TG pleins) *)
	THEN
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 0;
		Etape_300_030_Verif_Qte_Demandee	:= 1;
		Etape_300_040_Decla_prod_present	:= 0;
		Etape_300_050_Att_Dest_Prete		:= 0;
		Etape_300_060_Decla_Dos_En_Cours	:= 0;
		Etape_300_070_Init_Dosage		:= 0;
		Etape_300_080_Att_Fin_Dosage		:= 0;
		Etape_300_090_Dos_Termine		:= 0;
		Etape_300_100_Prod_Suivant		:= 0;
		Etape_300_180_Att_Fin_Dosages		:= 0;
		Etape_300_190_Decla_Dos_Termine		:= 0;
		Etape_300_200_Gachee_Suivante		:= 0;
		Etape_300_Designee			:= TRUE;
	END_IF;
END_IF;

(* 030_Verif_Qte_Demandee -&gt; 040_Decla_prod_present *)
(* ou *)
(* 030_Verif_Qte_Demandee -&gt; 180_Att_Fin_Dosages *)
IF (NOT Etape_300_Designee)
AND Etape_300_030_Verif_Qte_Demandee THEN
	IF (TG_IN[NG_Ppe].Compteurs[NP_Ppe].Numero_produit &gt; 0) (* La quantité demandée est non nulle pour le produit pointé. *)
	AND (TG_IN[NG_Ppe].Compteurs[NP_Ppe].Numero_produit &lt;= INT_TO_WORD(Conf_ppe_nb_ppes)) THEN
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 0;
		Etape_300_030_Verif_Qte_Demandee	:= 0;
		Etape_300_040_Decla_prod_present	:= 1;
		Etape_300_050_Att_Dest_Prete		:= 0;
		Etape_300_060_Decla_Dos_En_Cours	:= 0;
		Etape_300_070_Init_Dosage		:= 0;
		Etape_300_080_Att_Fin_Dosage		:= 0;
		Etape_300_090_Dos_Termine		:= 0;
		Etape_300_100_Prod_Suivant		:= 0;
		Etape_300_180_Att_Fin_Dosages		:= 0;
		Etape_300_190_Decla_Dos_Termine		:= 0;
		Etape_300_200_Gachee_Suivante		:= 0;
		Etape_300_Designee			:= TRUE;
	ELSE
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 0;
		Etape_300_030_Verif_Qte_Demandee	:= 0;
		Etape_300_040_Decla_prod_present	:= 0;
		Etape_300_050_Att_Dest_Prete		:= 0;
		Etape_300_060_Decla_Dos_En_Cours	:= 0;
		Etape_300_070_Init_Dosage		:= 0;
		Etape_300_080_Att_Fin_Dosage		:= 0;
		Etape_300_090_Dos_Termine		:= 0;
		Etape_300_100_Prod_Suivant		:= 0;
		Etape_300_180_Att_Fin_Dosages		:= 1;
		Etape_300_190_Decla_Dos_Termine		:= 0;
		Etape_300_200_Gachee_Suivante		:= 0;
		Etape_300_Designee			:= TRUE;
	END_IF;
END_IF;

(* 040_Decla_prod_present -&gt; 050_Att_Dest_Prete *)
(* Code spécifique au dosage par pompe : *)
(* Contrairement à un dosage par bascule, on teste que la destination est *)
(* prête pour chaque produit dosé. (Pour les dosages par bascule, on teste *)
(* que la bascule est prête qu'au premier produit dosé). *)
IF (NOT Etape_300_Designee)
AND Etape_300_040_Decla_prod_present THEN
	IF (TRUE) THEN
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 0;
		Etape_300_030_Verif_Qte_Demandee	:= 0;
		Etape_300_040_Decla_prod_present	:= 0;
		Etape_300_050_Att_Dest_Prete		:= 1;
		Etape_300_060_Decla_Dos_En_Cours	:= 0;
		Etape_300_070_Init_Dosage		:= 0;
		Etape_300_080_Att_Fin_Dosage		:= 0;
		Etape_300_090_Dos_Termine		:= 0;
		Etape_300_100_Prod_Suivant		:= 0;
		Etape_300_180_Att_Fin_Dosages		:= 0;
		Etape_300_190_Decla_Dos_Termine		:= 0;
		Etape_300_200_Gachee_Suivante		:= 0;
		Etape_300_Designee			:= TRUE;
	END_IF;
END_IF;

(* 050_Att_Dest_Prete -&gt; 060_Decla_Dos_En_Cours *)
IF (NOT Etape_300_Designee)
AND Etape_300_050_Att_Dest_Prete THEN
	Dest_ppe_prete_tampon_ppe := (Conf_ppe_dest[Numero_produit_Ppe] &lt;= 4) (* La pompe(+tampon) est à destination du camion/malaxeur *)
				AND Conf_tampons_ppe_presence[Numero_produit_Ppe] (* ...et est associée à un tampon *)
				AND Etape_385_020_Att_gestion_ccr[Numero_produit_Ppe]; (* ...et ce tampon est prêt pour recevoir le produit *)
				(* Note R.C. 03/04/2012, conformément à la spécification LAF014-DSL34, les *)
				(* tampons sont toujours à destination du camion/malaxeur (jamais à *)
				(* destination d'une bascule à eau). *)
	Dest_ppe_prete_camion_ou_malax := (Conf_ppe_dest[Numero_produit_Ppe] &lt;= 4) (*  La pompe est à destination du camion/malaxeur *)
				AND NOT Conf_tampons_ppe_presence[Numero_produit_Ppe] (* ...et ne possède pas de tampon *)
				AND Camion_OK (* ...et ce camion ou malaxeur est prêt *)
				AND (NG_Ppe = NG_Intro); (* ...et la gâchée en cours d'introduction est la même gâchée que celle traitée dans cette section *)
	Dest_ppe_prete_basc_Eau1 :=  (Conf_ppe_dest[Numero_produit_Ppe] = 13) (*  La pompe est à destination de la bascule Eau1 *)
				AND NOT Conf_tampons_ppe_presence[Numero_produit_Ppe] (* ...et ne possède pas de tampon *)
				AND (TG_OUT[NG_Ppe].CR_etat_basc_eau1 = 2); (* ...et la bascule Eau1 est prête (on vérifie qu'il n'y a pas de pesage en cours, car sinon on risquerait de fausser celui-ci en ajoutant du produit par pompe) *)
	IF (	Dest_ppe_prete_tampon_ppe
		OR Dest_ppe_prete_camion_ou_malax
		OR Dest_ppe_prete_basc_Eau1
	)
	AND NOT Dosages_ppe_en_cours[Numero_produit_Ppe] (* Pompe pas déjà en cours d'utilisation *)
	THEN
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 0;
		Etape_300_030_Verif_Qte_Demandee	:= 0;
		Etape_300_040_Decla_prod_present	:= 0;
		Etape_300_050_Att_Dest_Prete		:= 0;
		Etape_300_060_Decla_Dos_En_Cours	:= 1;
		Etape_300_070_Init_Dosage		:= 0;
		Etape_300_080_Att_Fin_Dosage		:= 0;
		Etape_300_090_Dos_Termine		:= 0;
		Etape_300_100_Prod_Suivant		:= 0;
		Etape_300_180_Att_Fin_Dosages		:= 0;
		Etape_300_190_Decla_Dos_Termine		:= 0;
		Etape_300_200_Gachee_Suivante		:= 0;
		Etape_300_Designee			:= TRUE;
	END_IF;
END_IF;

(* 060_Decla_Dos_En_Cours -&gt; 070_Init_Dosage *)
IF (NOT Etape_300_Designee)
AND Etape_300_060_Decla_Dos_En_Cours THEN
	IF (TRUE) THEN
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 0;
		Etape_300_030_Verif_Qte_Demandee	:= 0;
		Etape_300_040_Decla_prod_present	:= 0;
		Etape_300_050_Att_Dest_Prete		:= 0;
		Etape_300_060_Decla_Dos_En_Cours	:= 0;
		Etape_300_070_Init_Dosage		:= 1;
		Etape_300_080_Att_Fin_Dosage		:= 0;
		Etape_300_090_Dos_Termine		:= 0;
		Etape_300_100_Prod_Suivant		:= 0;
		Etape_300_180_Att_Fin_Dosages		:= 0;
		Etape_300_190_Decla_Dos_Termine		:= 0;
		Etape_300_200_Gachee_Suivante		:= 0;
		Etape_300_Designee			:= TRUE;
	END_IF;
END_IF;

(* 070_Init_Dosage -&gt; 080_Att_Fin_Dosage *)
IF (NOT Etape_300_Designee)
AND Etape_300_070_Init_Dosage THEN
	IF (TRUE) THEN
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 0;
		Etape_300_030_Verif_Qte_Demandee	:= 0;
		Etape_300_040_Decla_prod_present	:= 0;
		Etape_300_050_Att_Dest_Prete		:= 0;
		Etape_300_060_Decla_Dos_En_Cours	:= 0;
		Etape_300_070_Init_Dosage		:= 0;
		Etape_300_080_Att_Fin_Dosage		:= 1;
		Etape_300_090_Dos_Termine		:= 0;
		Etape_300_100_Prod_Suivant		:= 0;
		Etape_300_180_Att_Fin_Dosages		:= 0;
		Etape_300_190_Decla_Dos_Termine		:= 0;
		Etape_300_200_Gachee_Suivante		:= 0;
		Etape_300_Designee			:= TRUE;
	END_IF;
END_IF;

(* 080_Att_Fin_Dosage -&gt; 090_Dos_Termine *)
IF (NOT Etape_300_Designee)
AND Etape_300_080_Att_Fin_Dosage THEN
	IF (Statut_Ppe_en_cours_Section300 = 0) (* Dosage terminé *)
	OR bit_dosage_parallele (* En cas de dosage parallèle, on passe directement au *)
		(* lancement du produit suivant. Dans ce cas, on testera plus tard que *)
		(* tous les dosages sont finis avant de passer à la suite. *)
	THEN
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 0;
		Etape_300_030_Verif_Qte_Demandee	:= 0;
		Etape_300_040_Decla_prod_present	:= 0;
		Etape_300_050_Att_Dest_Prete		:= 0;
		Etape_300_060_Decla_Dos_En_Cours	:= 0;
		Etape_300_070_Init_Dosage		:= 0;
		Etape_300_080_Att_Fin_Dosage		:= 0;
		Etape_300_090_Dos_Termine		:= 1;
		Etape_300_100_Prod_Suivant		:= 0;
		Etape_300_180_Att_Fin_Dosages		:= 0;
		Etape_300_190_Decla_Dos_Termine		:= 0;
		Etape_300_200_Gachee_Suivante		:= 0;
		Etape_300_Designee			:= TRUE;
	END_IF;
END_IF;

(* 090_Dos_Termine -&gt; 100_Prod_Suivant *)
(* ou *)
(* 090_Dos_Termine -&gt; 180_Att_Fin_Dosages *)
IF (NOT Etape_300_Designee)
AND Etape_300_090_Dos_Termine THEN
	IF (NP_Ppe &lt; 5) THEN
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 0;
		Etape_300_030_Verif_Qte_Demandee	:= 0;
		Etape_300_040_Decla_prod_present	:= 0;
		Etape_300_050_Att_Dest_Prete		:= 0;
		Etape_300_060_Decla_Dos_En_Cours	:= 0;
		Etape_300_070_Init_Dosage		:= 0;
		Etape_300_080_Att_Fin_Dosage		:= 0;
		Etape_300_090_Dos_Termine		:= 0;
		Etape_300_100_Prod_Suivant		:= 1;
		Etape_300_180_Att_Fin_Dosages		:= 0;
		Etape_300_190_Decla_Dos_Termine		:= 0;
		Etape_300_200_Gachee_Suivante		:= 0;
		Etape_300_Designee			:= TRUE;
	ELSE
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 0;
		Etape_300_030_Verif_Qte_Demandee	:= 0;
		Etape_300_040_Decla_prod_present	:= 0;
		Etape_300_050_Att_Dest_Prete		:= 0;
		Etape_300_060_Decla_Dos_En_Cours	:= 0;
		Etape_300_070_Init_Dosage		:= 0;
		Etape_300_080_Att_Fin_Dosage		:= 0;
		Etape_300_090_Dos_Termine		:= 0;
		Etape_300_100_Prod_Suivant		:= 0;
		Etape_300_180_Att_Fin_Dosages		:= 1;
		Etape_300_190_Decla_Dos_Termine		:= 0;
		Etape_300_200_Gachee_Suivante		:= 0;
		Etape_300_Designee			:= TRUE;
	END_IF;
END_IF;

(* 100_Prod_Suivant -&gt; 030_Verif_Qte_Demandee *)
IF (NOT Etape_300_Designee)
AND Etape_300_100_Prod_Suivant THEN
	IF (TRUE) THEN
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 0;
		Etape_300_030_Verif_Qte_Demandee	:= 1;
		Etape_300_040_Decla_prod_present	:= 0;
		Etape_300_050_Att_Dest_Prete		:= 0;
		Etape_300_060_Decla_Dos_En_Cours	:= 0;
		Etape_300_070_Init_Dosage		:= 0;
		Etape_300_080_Att_Fin_Dosage		:= 0;
		Etape_300_090_Dos_Termine		:= 0;
		Etape_300_100_Prod_Suivant		:= 0;
		Etape_300_180_Att_Fin_Dosages		:= 0;
		Etape_300_190_Decla_Dos_Termine		:= 0;
		Etape_300_200_Gachee_Suivante		:= 0;
		Etape_300_Designee			:= TRUE;
	END_IF;
END_IF;

(* 180_Att_Fin_Dosages -&gt; 190_Decla_Dos_Termine *)
(* Code spécifique au dosage par pompe : *)
(* L'étape 180 n'existe pas pour les dosages par bascules. Elle a été *)
(* ajouté spécialement pour traiter le cas du dosage parallèle. *)
IF (NOT Etape_300_Designee)
AND Etape_300_180_Att_Fin_Dosages THEN
	IF (Statut_Ppe_en_cours_Section300 = 0) (* On vérifie la fin de tous les dosages *)
		(* (on peut se retrouver ici avec des dosages en cours si on est en *)
		(* 'dosage parallèle') *)
	OR NOT bit_dosage_parallele (* On ne vérifie pas la fin de tous les dosages *)
		(* lorsque le mode 'dosage parallèle' n'est pas activé. Cela permettra *)
		(* de se tirer d'affaire en passant en dosage non parallèle en cas de *)
		(* bug ici. *)
	THEN
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 0;
		Etape_300_030_Verif_Qte_Demandee	:= 0;
		Etape_300_040_Decla_prod_present	:= 0;
		Etape_300_050_Att_Dest_Prete		:= 0;
		Etape_300_060_Decla_Dos_En_Cours	:= 0;
		Etape_300_070_Init_Dosage		:= 0;
		Etape_300_080_Att_Fin_Dosage		:= 0;
		Etape_300_090_Dos_Termine		:= 0;
		Etape_300_100_Prod_Suivant		:= 0;
		Etape_300_180_Att_Fin_Dosages		:= 0;
		Etape_300_190_Decla_Dos_Termine		:= 1;
		Etape_300_200_Gachee_Suivante		:= 0;
		Etape_300_Designee			:= TRUE;
	END_IF;
END_IF;

(* 190_Decla_Dos_Termine -&gt; 200_Gachee_Suivante *)
IF (NOT Etape_300_Designee)
AND Etape_300_190_Decla_Dos_Termine THEN
	Attente_fin_phase_3_dry :=
		((TG_IN[NG_Ppe].mot_destination AND 16#0100) &lt;&gt; 0) (* Gâchée 'dry-batch' en cours *)
		AND (
			TG_IN[NG_Ppe].Proprietes_gachee.0 (* A la derniere gâchée, *)
			AND (
				((TG_OUT[NG_Ppe].CR_Etat_Gachee AND 16#0100) = 0) (* on attend si l'introduction n'est pas terminée *)
				OR Bit_validation_camion_s_seche (* ou si le bit de validation camion n'est pas encore disparu. *)
			)		
		);
		(* Modif R.C. 22/06/2009 Ticket Mantis #0000642 : Ne pas passer *)
		(* à la gâchée suivante si un dosage de l'eau en "dry-batch" n'est *)
		(* pas fini *)
		(* + Correction R.C. 18/11/2009 Ticket Mantis #0000776 : Effet de *)
		(* bord constaté sur les fabrications anhydrite *)
		(* Note R.C. 05/04/2012 : Cela est un moyen simple de s'assurer que les *)
		(* dosages 'phase 3' d'une fabrication soient bien terminés, et que le bit *)
		(* de validation du camion de la fabrication soit bien retombé à FALSE avant *)
		(* de permettre un départ d'une phase 1 à la fabrication suivante. *)
	IF NOT Attente_fin_phase_3_dry THEN
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 0;
		Etape_300_030_Verif_Qte_Demandee	:= 0;
		Etape_300_040_Decla_prod_present	:= 0;
		Etape_300_050_Att_Dest_Prete		:= 0;
		Etape_300_060_Decla_Dos_En_Cours	:= 0;
		Etape_300_070_Init_Dosage		:= 0;
		Etape_300_080_Att_Fin_Dosage		:= 0;
		Etape_300_090_Dos_Termine		:= 0;
		Etape_300_100_Prod_Suivant		:= 0;
		Etape_300_180_Att_Fin_Dosages		:= 0;
		Etape_300_190_Decla_Dos_Termine		:= 0;
		Etape_300_200_Gachee_Suivante		:= 1;
		Etape_300_Designee			:= TRUE;
	END_IF;
END_IF;

(* 200_Gachee_Suivante -&gt; 020_Att_Donnees_TG *)
IF (NOT Etape_300_Designee)
AND Etape_300_200_Gachee_Suivante THEN
	IF (TRUE) THEN
		Etape_300_010_Init_Section		:= 0;
		Etape_300_020_Att_Donnees_TG		:= 1;
		Etape_300_030_Verif_Qte_Demandee	:= 0;
		Etape_300_040_Decla_prod_present	:= 0;
		Etape_300_050_Att_Dest_Prete		:= 0;
		Etape_300_060_Decla_Dos_En_Cours	:= 0;
		Etape_300_070_Init_Dosage		:= 0;
		Etape_300_080_Att_Fin_Dosage		:= 0;
		Etape_300_090_Dos_Termine		:= 0;
		Etape_300_100_Prod_Suivant		:= 0;
		Etape_300_180_Att_Fin_Dosages		:= 0;
		Etape_300_190_Decla_Dos_Termine		:= 0;
		Etape_300_200_Gachee_Suivante		:= 0;
		Etape_300_Designee			:= TRUE;
	END_IF;
END_IF;







(* TRAITEMENT POSTÉRIEUR *)
(*-----------------------*)
(* - Actions *)


(* INITIALISATION DE LA GÂCHÉE *)
IF Etape_300_010_Init_Section
OR Etape_300_200_Gachee_Suivante THEN
	(* Note R.C. 27/07/2011 : Il est probable que tout ou partie de ces initialisations soient inutiles. *)
	Numero_produit_Ppe := 0;
	MOVE_BOOL_AREBOOL (IN := FALSE, OUT =&gt; Dosages_ppe_en_cours_Section300);
	MOVE_BOOL_AREBOOL (IN := FALSE, OUT =&gt; Dosages_ppe_termine_Section300);
	nb_dos_ppe_en_cours_Eau1_valide := FALSE; (* Invalider la valeur contenue dans "nb_dos_ppe_en_cours_Eau1" *)
END_IF;



(* GESTION DES POINTEURS DE GÂCHÉES / PRODUIT *)
IF Etape_300_010_Init_Section THEN
	(* Initialisation des pointeurs de gâchée / produit *)
	NG_Ppe := 1;
	NP_Ppe := 1;
END_IF;
IF Etape_300_100_Prod_Suivant THEN
	(* Produit suivant *)
	NP_Ppe := NP_Ppe + 1;
END_IF;
IF Etape_300_200_Gachee_Suivante THEN
	(* Gâchée suivante *)
	IF NG_Ppe &lt; 4 THEN
		NG_Ppe := NG_Ppe + 1;
	ELSE
		NG_Ppe := 1;
	END_IF;
	NP_Ppe := 1;
END_IF;



(* DÉCLARATIONS EN COMPTE RENDU DE GÂCHÉE *)
(* Déclaration "dosage en cours" dans le CR de la bascule *)
IF Etape_300_060_Decla_Dos_En_Cours THEN
	IF (TG_OUT[NG_Ppe].CR_Etat_Compteurs = 0) THEN (* Condition préventive pour ne *)
		(* pas risquer un passage de "2" (pesée terminée) à "1" (pesée en cours). *)
		TG_OUT[NG_Ppe].CR_Etat_Compteurs := 1; (* 1 = "Dosage en cours" *)
	END_IF;
END_IF;
(* Déclaration "dosage terminé" dans le CR de la bascule *)
(*                           et dans le mot d'état de la gâchée *)
IF Etape_300_190_Decla_Dos_Termine THEN
	TG_OUT[NG_Ppe].CR_Etat_Compteurs := 2; (* 2 = "Dosage terminé" *)
	TG_OUT[NG_Ppe].CR_Etat_Gachee_2 := TG_OUT[NG_Ppe].CR_Etat_Gachee_2 OR 16#0002; (* "Dosage par pompe Terminé" *)
END_IF;
(* Déclaration "Produit présent" *)
IF Etape_300_040_Decla_prod_present THEN
	TG_OUT[NG_Ppe].CR_Etat_Presence_Produit := TG_OUT[NG_Ppe].CR_Etat_Presence_Produit OR 16#0200;
END_IF;




(* LECTURE DU NUMERO DE POMPE *)
(* Code spécifique au dosage par pompe : *)
(* On lit le numéro de la pompe dans "Numero_produit_Ppe", car cette variable est *)
(* utilisée pour savoir que la destination est prête. *)
IF Etape_300_050_Att_Dest_Prete THEN
	(* Lecture du numéro de pompe sur laquelle on doit doser *)
	Numero_produit_Ppe := WORD_TO_INT(TG_IN[NG_Ppe].Compteurs[NP_Ppe].Numero_produit);
END_IF;



(* INITIALISATIONS POUR LE DOSAGE *)
(* + LECTURE DES CONSIGNES *)
(* + DEMANDE DE LANCEMENT DU DOSAGE *)
IF Etape_300_070_Init_Dosage THEN

	(* Copie du numéro produit dans le compte-rendu *)
	TG_OUT[NG_Ppe].CR_Compteurs[NP_Ppe].Numero_prod := TG_IN[NG_Ppe].Compteurs[NP_Ppe].Numero_produit;

	(* Lecture des consignes de dosage *)
	(* + Demande de lancement du dosage *)
		(* Pour demander à la section "321_gestion_CCR" de lancer le dosage par pompe *)
		(* il suffit de renseigner les variables suivantes : *)
	Erreur_jetee_Ppe[Numero_produit_Ppe] := TG_IN[NG_Ppe].Compteurs[NP_Ppe].Erreur_jettee;
	Poids_demande_Ppe[Numero_produit_Ppe] := TG_IN[NG_Ppe].Compteurs[NP_Ppe].Poids_demande;
	Consignes_ppes[Numero_produit_Ppe] := Poids_demande_Ppe[Numero_produit_Ppe] - Erreur_jetee_Ppe[Numero_produit_Ppe];
	Demande_debut_dosage_ppe[Numero_produit_Ppe] := TRUE; (* Demande le lancement du dosage par pompe *)

	(* Mémorisation de données permettant à la section "321_gestion_CCR" de prendre *)
	(* en charge la suite des traitements (dont l'écriture dans la zone .CR_Compteurs[]) *)
	Dosages_ppe_en_cours_Section300[Numero_produit_Ppe] := TRUE; (* Liste des pompes en cours *)
	Dosage_ppe_en_cours_Section300 := TRUE; (* Mémorisation qu'un dosage est en cours *)
	NP_Compteurs_ppe[Numero_produit_Ppe] := NP_Ppe; (* Sauvegarde de NP_Ppe qui sera utile à la *)
		(* section "321_gestion_CCR". Il est nécessaire de faire cette sauvegarde dans la *)
		(* mesure où "NP_Ppe" peut ne pas attendre la fin du dosage pour être incrémenté *)
		(* (dans le cadre d'un dosage par pompe "parallèle") *)

	Dosages_ppe_en_cours[Numero_produit_Ppe] := TRUE; (* Note R.C. 07/03/2012 : Cette information est *)
		(* à priori utilisée par BC-Mix, mais on n'arrive pas exactement à savoir pourquoi... *)

END_IF;



(* SYNCHRONISATION AVEC LA SECTION DE DOSAGE EAU1 *)
IF Etape_300_030_Verif_Qte_Demandee
AND Etape_300_Designee
AND (NP_Ppe = 1)
THEN
(* Dès qu'une gâchée valide est reçue, on calcule le nombre total de dosages par *)
(* pompe qui seront à faire à destination de la bascule Eau1. *)
(* Ce compteur de dosages restants permettra de ne pas passer aux dosages de la *)
(* gâchée suivante sur la bascule Eau1 tant que tous les dosages par pompe vers *)
(* cette même bascule n'ont pas été terminés pour la gâchée en cours. *)
(* Note R.C. 04/04/2012 : Ce développement permet de traiter le cas où on aurait *)
(* pas suffisament d'eau pesée pour dépasser le seuil vide réglé, et des produits *)
(* pompés vers la bascule. *)
	(* - Compter le nombre de dosages par pompe qu'il y aura à faire vers la *)
	(* bascule Eau1. *)
	nb_dos_ppe_en_cours_Eau1 := 0; (* Valeur par défaut *)
	FOR i:=1 TO 5 BY 1 DO
		idx_ppe := WORD_TO_INT(TG_IN[NG_Intro].Compteurs[i].Numero_produit);
		IF (idx_ppe &gt; 0)
		AND (idx_ppe &lt;= Conf_ppe_nb_ppes) THEN
			IF (Conf_ppe_dest[idx_ppe] = 13) THEN (* Destination bascule Eau1 *)
				nb_dos_ppe_en_cours_Eau1 := nb_dos_ppe_en_cours_Eau1 + 1;
			END_IF;
		END_IF;
	END_FOR;
	(* - Indiquer qu'a partir de cet instant, la valeur contenue dans *)
	(* "nb_dos_ppe_en_cours_Eau1" est valide, pour bien confirmer qu'une *)
	(* valeur à 0 est bien à prendre en compte (il ne s'agit pas de la *)
	(* valeur "0" donnée par défaut). *)
	nb_dos_ppe_en_cours_Eau1_valide := TRUE;
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="320_Adressage_CCRs_M340" type="section" task="MAST"></identProgram>
		<STSource>(* 19/01/09 *)
(* Gestion CCR M340 uniquement.
   Cette section ne doit jamais être activée sur un Quantum *)
(* Cette première partie sert à adresser les cartes en utilisant le module fonctionel
   M340 *)


(* Initialisation des variables locales de la section *)
IF Adressage_CCRs_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Adressage_CCRs_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(*ADRESSAGE DE(s) CARTE CCR***********************************************)
(*Ecriture des valeurs de compteur dans des tables indexables*************)
IF NOT CCR_Simulees THEN
	COUNTER_CURRENT_VALUE_CPT[1] := - DINT_TO_INT (CPT01_COUNTER_CURRENT_VALUE) ;
	COUNTER_CURRENT_VALUE_CPT[2] := - DINT_TO_INT (CPT02_COUNTER_CURRENT_VALUE) ; 
	COUNTER_CURRENT_VALUE_CPT[3] := - DINT_TO_INT (CPT03_COUNTER_CURRENT_VALUE) ; 
	COUNTER_CURRENT_VALUE_CPT[4] := - DINT_TO_INT (CPT04_COUNTER_CURRENT_VALUE); 
	COUNTER_CURRENT_VALUE_CPT[5] := - DINT_TO_INT (CPT05_COUNTER_CURRENT_VALUE) ;
	COUNTER_CURRENT_VALUE_CPT[6] := - DINT_TO_INT (CPT06_COUNTER_CURRENT_VALUE) ; 
	COUNTER_CURRENT_VALUE_CPT[7] := - DINT_TO_INT (CPT07_COUNTER_CURRENT_VALUE) ; 
	COUNTER_CURRENT_VALUE_CPT[8] := - DINT_TO_INT (CPT08_COUNTER_CURRENT_VALUE); 
	COUNTER_CURRENT_VALUE_CPT[9] := - DINT_TO_INT (CPT09_COUNTER_CURRENT_VALUE) ;
	COUNTER_CURRENT_VALUE_CPT[10] := - DINT_TO_INT (CPT10_COUNTER_CURRENT_VALUE) ; 
	COUNTER_CURRENT_VALUE_CPT[11] := - DINT_TO_INT (CPT11_COUNTER_CURRENT_VALUE) ; 
	COUNTER_CURRENT_VALUE_CPT[12] := - DINT_TO_INT (CPT12_COUNTER_CURRENT_VALUE) ; 
	COUNTER_CURRENT_VALUE_CPT[13] := - DINT_TO_INT (CPT13_COUNTER_CURRENT_VALUE) ; 
	COUNTER_CURRENT_VALUE_CPT[14] := - DINT_TO_INT (CPT14_COUNTER_CURRENT_VALUE) ; 
	COUNTER_CURRENT_VALUE_CPT[15] := - DINT_TO_INT (CPT15_COUNTER_CURRENT_VALUE) ; 
	COUNTER_CURRENT_VALUE_CPT[16] := - DINT_TO_INT (CPT16_COUNTER_CURRENT_VALUE) ; 
	COUNTER_CURRENT_VALUE_CPT[17] := - DINT_TO_INT (CPT17_COUNTER_CURRENT_VALUE) ; 
	COUNTER_CURRENT_VALUE_CPT[18] := - DINT_TO_INT (CPT18_COUNTER_CURRENT_VALUE) ; 
	COUNTER_CURRENT_VALUE_CPT[19] := - DINT_TO_INT (CPT19_COUNTER_CURRENT_VALUE) ; 
	COUNTER_CURRENT_VALUE_CPT[20] := - DINT_TO_INT (CPT20_COUNTER_CURRENT_VALUE) ; 
END_IF;
(*Ecriture des valeurs de seuils dans des tables indexables*************)
CPT01_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[1]  ) ; 
CPT02_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[2]  ) ; 
CPT03_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[3]  ) ; 
CPT04_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[4]  ) ; 
CPT05_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[5]  ) ; 
CPT06_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[6]  ) ; 
CPT07_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[7]  ) ; 
CPT08_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[8]  ) ; 
CPT09_LOWER_TH_VALUE := - INT_TO_DINT (  LOWER_TH_VALUE_CPT[9] ) ; 
CPT10_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[10] ) ; 
CPT11_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[11] ) ; 
CPT12_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[12] ) ; 
CPT13_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[13] ) ; 
CPT14_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[14] ) ; 
CPT15_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[15] ) ; 
CPT16_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[16] ) ; 
CPT17_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[17] ) ; 
CPT18_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[18] ) ; 
CPT19_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[19] ) ; 
CPT20_LOWER_TH_VALUE := - INT_TO_DINT ( LOWER_TH_VALUE_CPT[20] ) ; 
(*Ecriture des valeurs de RESET dans des tables indexables*************)
CPT01_FORCE_RESET := FORCE_RESET_CPT[1]  ; 
CPT02_FORCE_RESET := FORCE_RESET_CPT[2]  ; 
CPT03_FORCE_RESET := FORCE_RESET_CPT[3]  ; 
CPT04_FORCE_RESET := FORCE_RESET_CPT[4]  ; 
CPT05_FORCE_RESET := FORCE_RESET_CPT[5]  ; 
CPT06_FORCE_RESET := FORCE_RESET_CPT[6]  ; 
CPT07_FORCE_RESET := FORCE_RESET_CPT[7]  ; 
CPT08_FORCE_RESET := FORCE_RESET_CPT[8]  ; 
CPT09_FORCE_RESET := FORCE_RESET_CPT[9]  ; 
CPT10_FORCE_RESET := FORCE_RESET_CPT[10] ; 
CPT11_FORCE_RESET := FORCE_RESET_CPT[11] ; 
CPT12_FORCE_RESET := FORCE_RESET_CPT[12] ; 
CPT13_FORCE_RESET := FORCE_RESET_CPT[13] ; 
CPT14_FORCE_RESET := FORCE_RESET_CPT[14] ; 
CPT15_FORCE_RESET := FORCE_RESET_CPT[15] ; 
CPT16_FORCE_RESET := FORCE_RESET_CPT[16] ; 
CPT17_FORCE_RESET := FORCE_RESET_CPT[17] ; 
CPT18_FORCE_RESET := FORCE_RESET_CPT[18] ; 
CPT19_FORCE_RESET := FORCE_RESET_CPT[19] ; 
CPT20_FORCE_RESET := FORCE_RESET_CPT[20] ;
(* Modif R.C. 20/08/2009 *)
IF CCR_Simulees THEN
	FOR Index_D:=1 TO 20 DO
		IF FORCE_RESET_CPT[Index_D] THEN
			Cde_raz_simu_compteurs_ppe := TRUE; (* Sera mis à FALSE par un timer *)
		END_IF;
	END_FOR;
END_IF;

(*Ecriture des valeurs de ????? dans des tables indexables*************) 
CPT01_FORCE_ENABLE := FORCE_ENABLE_CPT[1]  ;                             
CPT02_FORCE_ENABLE := FORCE_ENABLE_CPT[2]  ;                             
CPT03_FORCE_ENABLE := FORCE_ENABLE_CPT[3]  ;                             
CPT04_FORCE_ENABLE := FORCE_ENABLE_CPT[4]  ;                             
CPT05_FORCE_ENABLE := FORCE_ENABLE_CPT[5]  ;                             
CPT06_FORCE_ENABLE := FORCE_ENABLE_CPT[6]  ;                             
CPT07_FORCE_ENABLE := FORCE_ENABLE_CPT[7]  ;                             
CPT08_FORCE_ENABLE := FORCE_ENABLE_CPT[8]  ;                             
CPT09_FORCE_ENABLE := FORCE_ENABLE_CPT[9]  ;                             
CPT10_FORCE_ENABLE := FORCE_ENABLE_CPT[10] ;                             
CPT11_FORCE_ENABLE := FORCE_ENABLE_CPT[11] ;                             
CPT12_FORCE_ENABLE := FORCE_ENABLE_CPT[12] ;                             
CPT13_FORCE_ENABLE := FORCE_ENABLE_CPT[13] ;                             
CPT14_FORCE_ENABLE := FORCE_ENABLE_CPT[14] ;                             
CPT15_FORCE_ENABLE := FORCE_ENABLE_CPT[15] ;                             
CPT16_FORCE_ENABLE := FORCE_ENABLE_CPT[16] ;                             
CPT17_FORCE_ENABLE := FORCE_ENABLE_CPT[17] ;                             
CPT18_FORCE_ENABLE := FORCE_ENABLE_CPT[18] ;                             
CPT19_FORCE_ENABLE := FORCE_ENABLE_CPT[19] ;                             
CPT20_FORCE_ENABLE := FORCE_ENABLE_CPT[20] ;                             
(*Ecriture des valeurs de ????? dans des tables indexables*************)
CPT01_FORCE_SYNC := FORCE_SYNC_CPT[1]  ;                                
CPT02_FORCE_SYNC := FORCE_SYNC_CPT[2]  ;                                
CPT03_FORCE_SYNC := FORCE_SYNC_CPT[3]  ;                                
CPT04_FORCE_SYNC := FORCE_SYNC_CPT[4]  ;                                
CPT05_FORCE_SYNC := FORCE_SYNC_CPT[5]  ;                                
CPT06_FORCE_SYNC := FORCE_SYNC_CPT[6]  ;                                
CPT07_FORCE_SYNC := FORCE_SYNC_CPT[7]  ;                                
CPT08_FORCE_SYNC := FORCE_SYNC_CPT[8]  ;                                
CPT09_FORCE_SYNC := FORCE_SYNC_CPT[9]  ;                                
CPT10_FORCE_SYNC := FORCE_SYNC_CPT[10] ;                                
CPT11_FORCE_SYNC := FORCE_SYNC_CPT[11] ;                                
CPT12_FORCE_SYNC := FORCE_SYNC_CPT[12] ;                                
CPT13_FORCE_SYNC := FORCE_SYNC_CPT[13] ;                                
CPT14_FORCE_SYNC := FORCE_SYNC_CPT[14] ;                                
CPT15_FORCE_SYNC := FORCE_SYNC_CPT[15] ;                                
CPT16_FORCE_SYNC := FORCE_SYNC_CPT[16] ;                                
CPT17_FORCE_SYNC := FORCE_SYNC_CPT[17] ;                                
CPT18_FORCE_SYNC := FORCE_SYNC_CPT[18] ;                                
CPT19_FORCE_SYNC := FORCE_SYNC_CPT[19] ;                                
CPT20_FORCE_SYNC := FORCE_SYNC_CPT[20] ;                                
(*Ecriture des valeurs de ????? dans des tables indexables*************)
CPT01_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[1]  ;        
CPT02_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[2]  ;        
CPT03_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[3]  ;        
CPT04_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[4]  ;        
CPT05_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[5]  ;        
CPT06_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[6]  ;        
CPT07_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[7]  ;        
CPT08_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[8]  ;        
CPT09_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[9]  ;        
CPT10_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[10] ;        
CPT11_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[11] ;        
CPT12_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[12] ;        
CPT13_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[13] ;        
CPT14_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[14] ;        
CPT15_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[15] ;        
CPT16_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[16] ;        
CPT17_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[17] ;        
CPT18_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[18] ;        
CPT19_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[19] ;        
CPT20_EVT_COUNTER_LOW_ENABLE := EVT_COUNTER_LOW_ENABLE_CPT[20] ;        
(*Ecriture des valeurs de ????? dans des tables indexables*************)
CPT01_COMPARE_ENABLE := COMPARE_ENABLE_CPT[1]  ;                        
CPT02_COMPARE_ENABLE := COMPARE_ENABLE_CPT[2]  ;                        
CPT03_COMPARE_ENABLE := COMPARE_ENABLE_CPT[3]  ;                        
CPT04_COMPARE_ENABLE := COMPARE_ENABLE_CPT[4]  ;                        
CPT05_COMPARE_ENABLE := COMPARE_ENABLE_CPT[5]  ;                        
CPT06_COMPARE_ENABLE := COMPARE_ENABLE_CPT[6]  ;                        
CPT07_COMPARE_ENABLE := COMPARE_ENABLE_CPT[7]  ;                        
CPT08_COMPARE_ENABLE := COMPARE_ENABLE_CPT[8]  ;                        
CPT09_COMPARE_ENABLE := COMPARE_ENABLE_CPT[9]  ;                        
CPT10_COMPARE_ENABLE := COMPARE_ENABLE_CPT[10] ;                        
CPT11_COMPARE_ENABLE := COMPARE_ENABLE_CPT[11] ;                        
CPT12_COMPARE_ENABLE := COMPARE_ENABLE_CPT[12] ;                        
CPT13_COMPARE_ENABLE := COMPARE_ENABLE_CPT[13] ;                        
CPT14_COMPARE_ENABLE := COMPARE_ENABLE_CPT[14] ;                        
CPT15_COMPARE_ENABLE := COMPARE_ENABLE_CPT[15] ;                        
CPT16_COMPARE_ENABLE := COMPARE_ENABLE_CPT[16] ;                        
CPT17_COMPARE_ENABLE := COMPARE_ENABLE_CPT[17] ;                        
CPT18_COMPARE_ENABLE := COMPARE_ENABLE_CPT[18] ;                        
CPT19_COMPARE_ENABLE := COMPARE_ENABLE_CPT[19] ;                        
CPT20_COMPARE_ENABLE := COMPARE_ENABLE_CPT[20] ;                        
(* !!! pb la sortie est activée alors que le seuil est dépassée. 
   cette info serait utiliser pour être sûr que l'evt à été pris en compte.
   vérifier si l'evt peux faire un stop compteur (sans stopper le comptage*)
(* NON UTILISE POUR LE MOMENT *)
COUNTER_LOW_CPT[1]  := CPT01_COUNTER_LOW ;
COUNTER_LOW_CPT[2]  := CPT02_COUNTER_LOW ;
COUNTER_LOW_CPT[3]  := CPT03_COUNTER_LOW ;
COUNTER_LOW_CPT[4]  := CPT04_COUNTER_LOW ;
COUNTER_LOW_CPT[5]  := CPT05_COUNTER_LOW ;
COUNTER_LOW_CPT[6]  := CPT06_COUNTER_LOW ;
COUNTER_LOW_CPT[7]  := CPT07_COUNTER_LOW ;
COUNTER_LOW_CPT[8]  := CPT08_COUNTER_LOW ;
COUNTER_LOW_CPT[9]  := CPT09_COUNTER_LOW ;
COUNTER_LOW_CPT[10] := CPT10_COUNTER_LOW ;
COUNTER_LOW_CPT[11] := CPT11_COUNTER_LOW ;
COUNTER_LOW_CPT[12] := CPT12_COUNTER_LOW ;
COUNTER_LOW_CPT[13] := CPT13_COUNTER_LOW ;
COUNTER_LOW_CPT[14] := CPT14_COUNTER_LOW ;
COUNTER_LOW_CPT[15] := CPT15_COUNTER_LOW ;
COUNTER_LOW_CPT[16] := CPT16_COUNTER_LOW ;
COUNTER_LOW_CPT[17] := CPT17_COUNTER_LOW ;
COUNTER_LOW_CPT[18] := CPT18_COUNTER_LOW ;
COUNTER_LOW_CPT[19] := CPT19_COUNTER_LOW ;
COUNTER_LOW_CPT[20] := CPT20_COUNTER_LOW ;
                     
(* FIN ADRESSAGE DE(s) CARTE CCR***********************************************)
</STSource>
	</program>
	<program>
		<identProgram name="321_Gestion_CCRs" type="section" task="MAST"></identProgram>
		<STSource>(**************** PREPARATION D'INFOS POUR LES MODES MANUELS *****************)

(* Calcul des fronts sur les demandes de dosage en mode "Manuel pupitre" *)
FM_dos_pupitre_PPE_1 (CLK := BP_dosage_Ppe[1], Q =&gt; FM_BP_pupitre_PPE[1]);
FM_dos_pupitre_PPE_2 (CLK := BP_dosage_Ppe[2], Q =&gt; FM_BP_pupitre_PPE[2]);
FM_dos_pupitre_PPE_3 (CLK := BP_dosage_Ppe[3], Q =&gt; FM_BP_pupitre_PPE[3]);
FM_dos_pupitre_PPE_4 (CLK := BP_dosage_Ppe[4], Q =&gt; FM_BP_pupitre_PPE[4]);
FM_dos_pupitre_PPE_5 (CLK := BP_dosage_Ppe[5], Q =&gt; FM_BP_pupitre_PPE[5]);
FM_dos_pupitre_PPE_6 (CLK := BP_dosage_Ppe[6], Q =&gt; FM_BP_pupitre_PPE[6]);
FM_dos_pupitre_PPE_7 (CLK := BP_dosage_Ppe[7], Q =&gt; FM_BP_pupitre_PPE[7]);
FM_dos_pupitre_PPE_8 (CLK := BP_dosage_Ppe[8], Q =&gt; FM_BP_pupitre_PPE[8]);
FM_dos_pupitre_PPE_9 (CLK := BP_dosage_Ppe[9], Q =&gt; FM_BP_pupitre_PPE[9]);
FM_dos_pupitre_PPE_10 (CLK := BP_dosage_Ppe[10], Q =&gt; FM_BP_pupitre_PPE[10]);
FM_dos_pupitre_PPE_11 (CLK := BP_dosage_Ppe[11], Q =&gt; FM_BP_pupitre_PPE[11]);
FM_dos_pupitre_PPE_12 (CLK := BP_dosage_Ppe[12], Q =&gt; FM_BP_pupitre_PPE[12]);
FM_dos_pupitre_PPE_13 (CLK := BP_dosage_Ppe[13], Q =&gt; FM_BP_pupitre_PPE[13]);
FM_dos_pupitre_PPE_14 (CLK := BP_dosage_Ppe[14], Q =&gt; FM_BP_pupitre_PPE[14]);
FM_dos_pupitre_PPE_15 (CLK := BP_dosage_Ppe[15], Q =&gt; FM_BP_pupitre_PPE[15]);
FM_dos_pupitre_PPE_16 (CLK := BP_dosage_Ppe[16], Q =&gt; FM_BP_pupitre_PPE[16]);
FM_dos_pupitre_PPE_17 (CLK := BP_dosage_Ppe[17], Q =&gt; FM_BP_pupitre_PPE[17]);
FM_dos_pupitre_PPE_18 (CLK := BP_dosage_Ppe[18], Q =&gt; FM_BP_pupitre_PPE[18]);
FM_dos_pupitre_PPE_19 (CLK := BP_dosage_Ppe[19], Q =&gt; FM_BP_pupitre_PPE[19]);
FM_dos_pupitre_PPE_20 (CLK := BP_dosage_Ppe[20], Q =&gt; FM_BP_pupitre_PPE[20]);

(* Calcul des fronts sur les demandes de dosage en mode "Manuel logiciel" *)
FM_dos_Manulog_PPE_1 (CLK := Cde_BCMix_PPE[1], Q =&gt; FM_BCMix_Cde_PPE[1]);
FM_dos_Manulog_PPE_2 (CLK := Cde_BCMix_PPE[2], Q =&gt; FM_BCMix_Cde_PPE[2]);
FM_dos_Manulog_PPE_3 (CLK := Cde_BCMix_PPE[3], Q =&gt; FM_BCMix_Cde_PPE[3]);
FM_dos_Manulog_PPE_4 (CLK := Cde_BCMix_PPE[4], Q =&gt; FM_BCMix_Cde_PPE[4]);
FM_dos_Manulog_PPE_5 (CLK := Cde_BCMix_PPE[5], Q =&gt; FM_BCMix_Cde_PPE[5]);
FM_dos_Manulog_PPE_6 (CLK := Cde_BCMix_PPE[6], Q =&gt; FM_BCMix_Cde_PPE[6]);
FM_dos_Manulog_PPE_7 (CLK := Cde_BCMix_PPE[7], Q =&gt; FM_BCMix_Cde_PPE[7]);
FM_dos_Manulog_PPE_8 (CLK := Cde_BCMix_PPE[8], Q =&gt; FM_BCMix_Cde_PPE[8]);
FM_dos_Manulog_PPE_9 (CLK := Cde_BCMix_PPE[9], Q =&gt; FM_BCMix_Cde_PPE[9]);
FM_dos_Manulog_PPE_10 (CLK := Cde_BCMix_PPE[10], Q =&gt; FM_BCMix_Cde_PPE[10]);
FM_dos_Manulog_PPE_11 (CLK := Cde_BCMix_PPE[11], Q =&gt; FM_BCMix_Cde_PPE[11]);
FM_dos_Manulog_PPE_12 (CLK := Cde_BCMix_PPE[12], Q =&gt; FM_BCMix_Cde_PPE[12]);
FM_dos_Manulog_PPE_13 (CLK := Cde_BCMix_PPE[13], Q =&gt; FM_BCMix_Cde_PPE[13]);
FM_dos_Manulog_PPE_14 (CLK := Cde_BCMix_PPE[14], Q =&gt; FM_BCMix_Cde_PPE[14]);
FM_dos_Manulog_PPE_15 (CLK := Cde_BCMix_PPE[15], Q =&gt; FM_BCMix_Cde_PPE[15]);
FM_dos_Manulog_PPE_16 (CLK := Cde_BCMix_PPE[16], Q =&gt; FM_BCMix_Cde_PPE[16]);
FM_dos_Manulog_PPE_17 (CLK := Cde_BCMix_PPE[17], Q =&gt; FM_BCMix_Cde_PPE[17]);
FM_dos_Manulog_PPE_18 (CLK := Cde_BCMix_PPE[18], Q =&gt; FM_BCMix_Cde_PPE[18]);
FM_dos_Manulog_PPE_19 (CLK := Cde_BCMix_PPE[19], Q =&gt; FM_BCMix_Cde_PPE[19]);
FM_dos_Manulog_PPE_20 (CLK := Cde_BCMix_PPE[20], Q =&gt; FM_BCMix_Cde_PPE[20]);
FOR Idx2 :=1 TO 20 DO
    cde_BCMix_ARINT[Idx2] := BOOL_TO_INT(Cde_BCMix_PPE[Idx2]);
END_FOR;
Statut_Cde_BCMix_ppe := SUM_ARINT (IN := cde_BCMix_ARINT);

(* Calcul des fronts sur les demandes de dosage en mode "Manuel logiciel temporisé" (?) *)
FM_Cde_Manu_PPE_01 (CLK := Cde_manu_ppe[1], Q =&gt; FM_Cde_Manu_PPE[1] ); 
FM_Cde_Manu_PPE_02 (CLK := Cde_manu_ppe[2], Q =&gt; FM_Cde_Manu_PPE[2] ); 
FM_Cde_Manu_PPE_03 (CLK := Cde_manu_ppe[3], Q =&gt; FM_Cde_Manu_PPE[3] ); 
FM_Cde_Manu_PPE_04 (CLK := Cde_manu_ppe[4], Q =&gt; FM_Cde_Manu_PPE[4] ); 
FM_Cde_Manu_PPE_05 (CLK := Cde_manu_ppe[5], Q =&gt; FM_Cde_Manu_PPE[5] ); 
FM_Cde_Manu_PPE_06 (CLK := Cde_manu_ppe[6], Q =&gt; FM_Cde_Manu_PPE[6] ); 
FM_Cde_Manu_PPE_07 (CLK := Cde_manu_ppe[7], Q =&gt; FM_Cde_Manu_PPE[7] ); 
FM_Cde_Manu_PPE_08 (CLK := Cde_manu_ppe[8], Q =&gt; FM_Cde_Manu_PPE[8] ); 
FM_Cde_Manu_PPE_09 (CLK := Cde_manu_ppe[9], Q =&gt; FM_Cde_Manu_PPE[9] ); 
FM_Cde_Manu_PPE_10 (CLK := Cde_manu_ppe[10], Q =&gt; FM_Cde_Manu_PPE[10]); 
FM_Cde_Manu_PPE_11 (CLK := Cde_manu_ppe[11], Q =&gt; FM_Cde_Manu_PPE[11]); 
FM_Cde_Manu_PPE_12 (CLK := Cde_manu_ppe[12], Q =&gt; FM_Cde_Manu_PPE[12]); 
FM_Cde_Manu_PPE_13 (CLK := Cde_manu_ppe[13], Q =&gt; FM_Cde_Manu_PPE[13]); 
FM_Cde_Manu_PPE_14 (CLK := Cde_manu_ppe[14], Q =&gt; FM_Cde_Manu_PPE[14]); 
FM_Cde_Manu_PPE_15 (CLK := Cde_manu_ppe[15], Q =&gt; FM_Cde_Manu_PPE[15]); 
FM_Cde_Manu_PPE_16 (CLK := Cde_manu_ppe[16], Q =&gt; FM_Cde_Manu_PPE[16]); 
FM_Cde_Manu_PPE_17 (CLK := Cde_manu_ppe[17], Q =&gt; FM_Cde_Manu_PPE[17]); 
FM_Cde_Manu_PPE_18 (CLK := Cde_manu_ppe[18], Q =&gt; FM_Cde_Manu_PPE[18]); 
FM_Cde_Manu_PPE_19 (CLK := Cde_manu_ppe[19], Q =&gt; FM_Cde_Manu_PPE[19]); 
FM_Cde_Manu_PPE_20 (CLK := Cde_manu_ppe[20], Q =&gt; FM_Cde_Manu_PPE[20]); 




(********************* INIT DES COMPTEURS ***********************)


(* Initialisation des variables locales de la section *)
IF Gestion_CCRs_DEM_INIT
OR Init_API_Terminee (* Note R.C. 13/04/2012 : Je n'ai pas trouvé de documentation *)
	(* expliquant la raison de ce "OR Init_API_Terminee". Il aurait été plus *)
	(* propre de lever "Gestion_CCRs_DEM_INIT" à TRUE à l'endroit *)
	(* nécessitant l'init de cette section (par exemple à l'initialisation *)
	(* d'une section s'exécutant après celle-ci). *)
THEN

	FOR IDX_init1 :=1 TO 20 DO
		FORCE_RESET_CPT[IDX_init1]		:= TRUE; (* Reset du compteur *)
		FORCE_ENABLE_CPT[IDX_init1]		:= TRUE; (* Mise en oeuvre du compteur *)
		FORCE_SYNC_CPT[IDX_init1]		:= TRUE; (* Démarrage fonction de comptage *)
		EVT_COUNTER_LOW_ENABLE_CPT[IDX_init1]	:= TRUE; (* Autorisation evt low *)
		COMPARE_ENABLE_CPT[IDX_init1]		:= TRUE; (* Validation utilisation des seuils *)
		Demande_debut_dosage_ppe[IDX_init1]	:= FALSE;
		Demande_remplacement_ppe[IDX_init1]	:= FALSE; (* Demande de remplacement produit *)
		Ppe_Etape2_Attente_init[IDX_init1]	:= FALSE;
		Ppe_Etape3_Dosage[IDX_init1]		:= FALSE; (* RàZ sortie comptage *)
		Ppe_Etape3b_Ajustement[IDX_init1]	:= FALSE;
		Ppe_Etape4_Consigne_atteinte[IDX_init1]	:= FALSE; (* RàZ bit d'arret (evt ou dépassement consigne) *)
		Ppe_Etape8_Ecriture_CR[IDX_init1]	:= FALSE;
		Ppe_en_cours[IDX_init1]			:= FALSE;
		temps_dosage_ppe[IDX_init1]		:= 0;
		BCMix_Arret_ppe[IDX_init1]		:= 0;
		Memo_Cpt_Avant_remplace[IDX_init1]	:= 0; (* Valeur du compteur avant le remplacement *)
	END_FOR;
	IF CCR_Simulees
   	AND M340_Actif THEN
		Cde_raz_simu_compteurs_ppe := TRUE; (* Sera mis à FALSE par un timer *)
   	END_IF;

	(* Reset de la demande d'init *)
	Gestion_CCRs_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
ELSE
	FOR IDX_init2 := 1 TO 20 DO
		FORCE_RESET_CPT[IDX_init2]		:= FALSE; (* Par défaut en début de section *)
	END_FOR;
END_IF;







(********************* DIVERS (1/2) ***********************)

Dosage_ppe_en_cours := Dosage_ppe_en_cours_Section300
			OR Dosage_ppe_en_cours_Section392;






(********************* GESTION DU DOSAGE PAR POMPE ***********************)
(* Les demandes de lancement d’un dosage par CCR peuvent être faites en plusieurs *)
(* endroits du programme : *)
(*    - Lors d’un dosage à destination du malaxeur/camion (Section "392_Sequence_de_Vidange") *)
(*    - Lors d’un dosage par pompe dès que la destination est prête (Section "300_Dosage_par_pompe") *)

FOR Idx_RUN := 1 TO Conf_ppe_nb_ppes DO

	(* - Init des compteurs (partie 1/2) *)
	Dem_autorisation_dos_tampon_ppe[Idx_RUN] := FALSE; (* Init *)
	IF Demande_debut_dosage_ppe[Idx_RUN]
	AND Dosages_ppe_en_cours[Idx_RUN] (* On vérifie le dosage de la pompe considérée *)
	AND (	NOT Conf_ppe_multiplexe
		OR (Conf_ppe_multiplexe AND (Statut_Ppe_en_cours = 0))
	)
	THEN
		IF NOT Conf_tampons_ppe_presence[Idx_RUN] (* S'il n'y a pas de tampon-pompe *)
		OR Autorisation_dosage_tampon_ppe[Idx_RUN] THEN (* ...ou si on a eu l'autorisation *)
						(* de la section gérant les tampons-pompe *)
			(* On lance le process de dosage en commençant par une initialisation *)
			(* de la voie de comptage. *)
			Demande_debut_dosage_ppe[Idx_RUN] := FALSE;
			Ppe_Etape1_Init_cpt[Idx_RUN] := TRUE;
		ELSIF Conf_tampons_ppe_presence[Idx_RUN] THEN
		(* Sinon, tant qu'on n'a pas eu d'autorisation : *)
			Dem_autorisation_dos_tampon_ppe[Idx_RUN] := TRUE;
			(* Faire une demande d'autorisation à la section gérant les tampons-pompe *)
		END_IF;
		Calc_QdC_ppe_impossible[Idx_RUN] := FALSE;
		Ppe_Etape8_Ecriture_CR[Idx_RUN] := FALSE;
		temps_dosage_ppe[Idx_RUN] := 0;
		Ppe_en_cours[Idx_RUN] := TRUE; (* Statut par pompe quelque soit la séquence (Section 241, 300, 392) *)
	END_IF;
	MOVE_AREBOOL_DINT (IN := Ppe_en_cours, OUT =&gt; Statut_Ppe_en_cours);
	(* Les sections "Eau" et "Dosage diff" mettent à jour les consignes et autres informations *)
	(* utiles pour le dosage. *)

	(* - Calcul des index 'Mux' et 'Non-Mux' *)
	(* Principe du multiplexage : *)
	(*    On a jusqu'à 20 commandes de pompes mais on n'utilise que 5 compteurs (= 1 carte de comptage rapide) *)
	(* On définit les index "Idx_MUX" et "Idx_Direct" à partir de l'index "Idx_RUN" : *)
	(*    L'index "Idx_RUN" correspond à l'index de la pompe. *)
	(*    En multiplexé: *)
	(*       - L'index "Idx_MUX" correspond au numéro de la voie de comptage (de 1 à 5) *)
	(*         correspondante au numéro de la pompe utilisée. *)
	(*       - L'index "Idx_Direct" correspond au numéro de la pompe utilisée (= "Idx_RUN") *)
	(*    En non multiplexé: *)
	(*       "Idx_MUX" = "Idx_Direct" = "Idx_RUN" (= l'index de la pompe utilisée) *)
	(* =&gt; Ainsi le restant du code est identique en multiplexé et en séquentiel/parallèle. *)
	IF Conf_ppe_multiplexe THEN
		(* Mode multiplexé : *)
		(* On met à jour les index "direct" et "run" uniquement au lancement du dosage. *)
		IF Ppe_Etape1_Init_cpt[Idx_RUN] OR Demande_ajustement_ppe[Idx_RUN] 
		OR (Cde_BCMix_PPE[Idx_RUN] AND NOT Alarme_Cde_BCMix_Refusee AND NOT Dosage_ppe_en_cours) THEN
			Idx_Direct := Idx_RUN;
			CASE Idx_RUN OF (* Si changement de la liste =&gt; changement des événements *)
				1 : Idx_MUX := 1;	2 : Idx_MUX := 2;
				3 : Idx_MUX := 3;	4 : Idx_MUX := 4;
				5 : Idx_MUX := 5;	6 : Idx_MUX := 1;
				7 : Idx_MUX := 2;	8 : Idx_MUX := 3;
				9 : Idx_MUX := 4;	10: Idx_MUX := 5;
				11: Idx_MUX := 1;	12: Idx_MUX := 2;
				13: Idx_MUX := 3;	14: Idx_MUX := 4;
				15: Idx_MUX := 5;	16: Idx_MUX := 1;
				17: Idx_MUX := 2;	18: Idx_MUX := 3;
				19: Idx_MUX := 4;	20: Idx_MUX := 5;
			ELSE
				Idx_MUX := 0; (* Ne doit pas être utilisé à 0 *)
			END_CASE;
		END_IF;
	ELSE
		(* Mode non multiplexé : *)
		Idx_MUX := Idx_RUN;
		Idx_Direct := Idx_RUN;
	END_IF;

	(* - Lecture du nombre d'impulsions *)
	IF NOT (CCR_simulees OR Simuler_dosage_Prod_compte) THEN
		Compteur_ppe[Idx_Direct] := COUNTER_CURRENT_VALUE_CPT[Idx_MUX]; 
	END_IF;

	(* - Init des compteurs (partie 2/2) *)
	(* Modif M.D. 13/08/2008 : Init du compteur avant démarrage de la pompe. *)
	(* Pour initialiser le compteur, il faut avoir initialisé les index 'Mux' et 'direct' *)
	IF Ppe_Etape1_Init_cpt[Idx_Direct] THEN
		IF CCR_simulees AND M340_Actif THEN
			Cde_raz_simu_compteurs_ppe := TRUE; (* Sera mis à FALSE par un timer *)
(*			Compteur_ppe_adjuvants[Idx_Direct] := 0;*)
		END_IF;
		IF Simuler_dosage_Prod_compte THEN
			Compteur_ppe[Idx_Direct] := 0;
		END_IF;
		Ppe_Etape1_Init_cpt[Idx_Direct] := FALSE;
		Ppe_Etape2_Attente_init[Idx_Direct] := TRUE;
		FORCE_RESET_CPT[Idx_MUX] := TRUE;
		start_comptage_ppe_QT[Idx_MUX] := TRUE; (* Quantum : Le " start_comptage_ppe_QT" entraine le remise à zéro du compteur *)

		(* XX/09/2015 - P868A - artf1598100 *)
		IF ((Conf_ppe_dest[Idx_Direct] &lt;&gt; 13) AND NOT Conf_tampons_ppe_presence[Idx_Direct]) THEN
			Weighing_Tolerances (IDFB_Conf_Process_Tol := TG_IN[NG_Intro].Conf_PP_Process_Tol[Idx_Direct],
			                     IDFB_Conf_Process_Tol_Default := Conf_PP_Process_Tol_Default[Idx_Direct],
			                     IDFB_Batch_Properties := TG_IN[NG_Intro].Proprietes_gachee,
			                     ODFB_Conf_Process_Tol_Used =&gt; Conf_PP_Tol_Used[Idx_Direct]);
		ELSE
			Weighing_Tolerances (IDFB_Conf_Process_Tol := TG_IN[NG_Ppe].Conf_PP_Process_Tol[Idx_Direct],
			                     IDFB_Conf_Process_Tol_Default := Conf_PP_Process_Tol_Default[Idx_Direct],
			                     IDFB_Batch_Properties := TG_IN[NG_Ppe].Proprietes_gachee,
			                     ODFB_Conf_Process_Tol_Used =&gt; Conf_PP_Tol_Used[Idx_Direct]);
		END_IF;
	END_IF;

	(* - Lancement des dosages 'Mux' et 'Non-Mux' *)
	(*    ...suite à une demande de dosage *)
	IF Ppe_Etape2_Attente_init[Idx_Direct] 
	AND (Compteur_ppe[Idx_Direct] = 0) (* Vérification que l'init des compteurs a bien été faite *)
	AND (NOT FORCE_RESET_CPT[Idx_MUX]) (* Vérification que l'init des compteurs a bien été faite *)
	AND (Idx_MUX &lt;&gt; 0)
	THEN
		Ppe_Etape2_Attente_init[Idx_Direct] := FALSE;
		Ppe_Etape3_Dosage[Idx_Direct] := TRUE; (* =&gt; Marche pompe *)
		Consigne_pour_CCR[Idx_MUX] := Consignes_ppes[Idx_Direct];
		start_comptage_ppe_QT[Idx_MUX] := FALSE; (* Quantum : Le " start_comptage_ppe_QT" entraine le remise à zéro du compteur *)
	END_IF;
	(*    ...suite au constat qu'un ajustement est nécessaire *)
	IF Demande_ajustement_ppe[Idx_Direct]
	AND (Idx_MUX &lt;&gt; 0)
	THEN
		Demande_ajustement_ppe[Idx_Direct] := FALSE;
		Ppe_Etape3_Dosage[Idx_Direct] := TRUE; (* =&gt; Marche pompe *)
		Ppe_Etape3b_Ajustement[Idx_Direct] := TRUE;  
		Consigne_pour_CCR[Idx_MUX] := Dos_min_ppe[Idx_Direct];
	END_IF;
	LOWER_TH_VALUE_CPT[Idx_MUX] := Consigne_pour_CCR[Idx_MUX]; (* Modif R.C. 16/12/2011 On passe par une variable *)
		(* interne "Consigne_pour_CCR" pour envoyer la consigne dans la CCR *)
		(* car il avait été constaté que la zone mémoire contenant la consigne de la CCR *)
		(* ("LOWER_TH_VALUE_CPT[]") ne contient la valeur qu'un certain temps après avoir *)
		(* celle-ci. Cela a posé problème quand on essayait de comparer le nombre d'impulsions *)
		(* comptées à "LOWER_TH_VALUE_CPT[]". *)

	(* - Détection de fin de dosage *)
	(* Modif M.D. 12/08/2008 : Problème sur les événements *)
	(* La gestion combinée des évenements et des seuils de comptage pose toujours *)
	(* problème : La CCR étant un process indépendant et asynchrone, il n'est pas *)
	(* possible de vérifier que lors du passage en ajustement, la nouvelle consigne *)
	(* soit bien supérieure au compteur. Ici on ajoute de manière asynchrone la *)
	(* remise à 0 de la sortie de pompe si le compteur est supérieur ou égal à la consigne. *)
	IF Ppe_Etape3_Dosage[Idx_direct]
	AND (Compteur_ppe[Idx_direct] &gt;= Consigne_pour_CCR[Idx_MUX])
	OR (BCMix_Arret_ppe[Idx_direct] = 1) (* Modif M.D. 02/09/2008 Ordre d'arret du produit pompé *)
	OR (Demande_remplacement_ppe[Idx_direct]) (* Modif M.D. 08/03/2011 Remplacement produit *)
	THEN 
		Ppe_Etape3_Dosage[Idx_direct] := FALSE;
		Ppe_Etape4_Consigne_atteinte[Idx_direct] := TRUE;
	END_IF;
END_FOR;



(********************* MODE MANUEL LOGICIEL ***********************)
FOR Idx_PPE := 1 TO Conf_ppe_nb_ppes DO

	(* En mode MANUEL LOGICIEL (dont Manu Temporisé) : *) 

	(* Commande de la pompe *)
	IF Cde_BCMix_PPE[Idx_PPE]
	AND Conf_ppe_multiplexe 
	AND (Statut_Cde_BCMix_ppe &gt; 1) THEN
		(* Si on est en multiplexé, on interdit le dosage en manuel logiciel lorsqu'une *)
		(* pompe est en cours, car cette pompe risque de perturber le comptage en mode Auto. *)
		Set(Alarme_Cde_BCMix_Refusee); (* Alarme remise à 0 par BC-Mix *)
	END_IF;
	Cde_manu_ppe[Idx_PPE] := Cde_BCMix_PPE[Idx_PPE]
				AND NOT Alarme_Cde_BCMix_Refusee
				AND (Cpt_marche_manulog_PPE[Idx_PPE] &lt; Consigne_ManuLog_PPE[Idx_PPE])
				AND Manu_logiciel;                          

	(* Init du compteur d'impulsion en manu logiciel (on utilise pas l'événement dans ce cas) *)
	IF FM_BCMix_Cde_PPE[Idx_PPE] THEN
		Memo_Cpt_manulog_PPE[Idx_PPE] := Compteur_ppe[Idx_PPE];
	END_IF;

	(* Ici, la consigne doit être à 1 avant la commande BC-Mix *)
	IF (Consigne_ManuLog_PPE[Idx_PPE] = 32767) THEN
		Consigne_ManuLog_PPE[Idx_PPE] := 10111;
	END_IF; (* Modif. M.D. Limiter la consigne (LAVAUR) *)
	(* Note R.C. 08/03/2012 : "?!" On ne retrouve aucune trace de cette modification dans *)
	(* les fichiers de traçabilité. De quand date cette modification ? Est-ce suite à une *)
	(* demande de correction ? Pourquoi tester avec un "égal strict" ? Pourquoi "10111" ??? *)

	(* Arrêt du dosage *)
	IF (Compteur_ppe[Idx_PPE] &gt;= (Memo_Cpt_manulog_PPE[Idx_PPE] + Consigne_ManuLog_PPE[Idx_PPE]))
	AND Cde_BCMix_PPE[Idx_PPE]
	OR Alarme_Cde_BCMix_Refusee 
	THEN
		Memo_Cpt_manulog_PPE[Idx_PPE] := 0;
		Cpt_marche_manulog_PPE[Idx_PPE] := 0;
		Cde_BCMix_PPE[Idx_PPE] := FALSE;
	END_IF;

END_FOR;



(********************* COMMANDE DE LA POMPE (EN MODE AUTOMATIQUE) ***********************)
FOR Idx_PPE := 1 TO Conf_ppe_nb_ppes DO
	(* En mode AUTOMATIQUE, l’arrêt est provoqué par : *)
	(*    - Un événement lors que le compteur est supérieur ou égal à la consigne. *)
	(*    - Une alarme "temps max de dosage" apparaît *)
	(*    - Une alarme "pompe bloquée" apparaît *)
	(*    - Un passage en manuel logiciel *)
	(*    - Un arrêt cycle. *)
	Cde_auto_ppe[Idx_PPE] := Ppe_Etape3_Dosage[Idx_PPE]
				AND NOT Ppe_bloquee[Idx_PPE]
				AND NOT Temps_max_ppe[Idx_PPE]
				(*AND Info_presence_produit_ppe[Idx_PPE]*)(* Désactivation R.C. 09/07/2012 suite à demande de LAFARGE, en attendant que LAFARGE nous informe comment cette information doit se comporter dans BC-Mix. - #0001655 *)
				AND Auto_pupitre_sans_Arret_prod
				AND NOT Manu_Logiciel;

	(* Fusion des commandes 'auto' et 'manu' *)(* Modif R.C. 28/06/2012 P857 *)
	Cde_dosage_Ppe[Idx_PPE] := Cde_auto_ppe[Idx_PPE] OR Cde_manu_ppe[Idx_PPE];
END_FOR;






(********************* ALARMES ***********************)
(* Pour tous les produits pompés , on génère les alarmes : *)
(*    - Défaut débit : détection de sur débit et sous débit (alarme non bloquante), *)
(*    - Temps Max Dosage : détection du temps maxi de dosage (alarme bloquante : on *)
(*      stoppe la pompe en attendant la validation de l’opérateur). *)
(*    - Fuite : détection de présence de fuite (alarme non bloquante), *)
(*    - Pompe Bloquée : détection de pompe bloquée (alarme bloquante : on stoppe la *)
(*      pompe en attendant la validation de l’opérateur), *)
(* De plus on génère les tolérances de dosage Max &amp; Min, qui seront utilisées dans la *)
(* suite de la section pour générer les alarmes de dépassement de tolérance de dosage. *)

FOR Idx1 := 1 TO Conf_ppe_nb_ppes DO

	(* Alarme "Sous-débit" *)
	(* Alarme "Sur-débit" *)
	Tol_debit_ppe := DINT_TO_INT(INT_TO_DINT(conf_ppe_debit[Idx1]) * INT_TO_DINT(conf_ppe_tolerance_debit[Idx1]) / 100);
	IF Cde_auto_Ppe[Idx1] (* En manuel logiciel, on n'affiche pas les alarmes de débit (voir modif faite par M.D. le 26/11/2004) ni l'alarme "temps max" pour rester isofonctionnel en P857 *)(* Modif R.C. 28/06/2012 *)
	AND Auto_pupitre_sans_Arret_prod
	AND top_sec
	THEN  
		temps_dosage_ppe[Idx1] := temps_dosage_ppe[Idx1] + 1;

		(* Calcul du débit de la pompe *) 
		debit_ppe[Idx1] := Compteur_ppe[Idx1] - memo_controle_debit[Idx1];
		
		(* Tolérance négative *)
		IF (debit_ppe[Idx1] &lt; (conf_ppe_debit[Idx1] - Tol_debit_ppe))
		AND (temps_dosage_ppe[Idx1] &gt;= 2)
		THEN
			sous_debit_ppe[Idx1] := TRUE;
		END_IF;
		
		(* Tolérance positive *)
		IF (debit_ppe[Idx1] &gt; (conf_ppe_debit[Idx1] + Tol_debit_ppe))
		AND (temps_dosage_ppe[Idx1] &gt;= 2)
		THEN
			sur_debit_ppe[Idx1] := TRUE;
		END_IF;

		memo_controle_debit[Idx1] := Compteur_ppe[Idx1];
	END_IF;

	(* Alarme "Dépassement temps de dosage maxi" *)
	IF (temps_dosage_ppe[Idx1] &gt;= conf_ppe_tps_max[Idx1]) THEN
		Temps_max_ppe[Idx1] := TRUE;
		temps_dosage_ppe[Idx1] := 0; (*remis à zéro au lancement du dosage*)
	END_IF;

	(* Alarme "Pompe bloquée" *)
	(* Modif M.D. 03/03/2008 : Alarme non fonctionnelle en P600 *)
	IF Cde_auto_Ppe[Idx1] AND top_100_ms (* En manuel logiciel, on n'affiche pas l'alarme "pompe bloquée" pour rester isofonctionnel en P857 *)(* Modif R.C. 28/06/2012 *)
	AND Auto_pupitre_sans_Arret_prod 
	THEN
		IF (Compteur_ppe[Idx1] = memo_ppe_bloque[Idx1]) THEN
			Cpt100ms_ppe[Idx1] := Cpt100ms_ppe[Idx1] + 1; (* Inc cpt temps *)
			IF (Cpt100ms_ppe[Idx1] &gt;= Conf_ppe_tps_detect_bloquee) THEN
				Ppe_bloquee[Idx1] := TRUE;
				Cpt100ms_ppe[Idx1] := 0;
			END_IF;
		ELSE
			Cpt100ms_ppe[Idx1] := 0;
		END_IF;
		memo_ppe_bloque[Idx1] := Compteur_ppe[Idx1];
	END_IF;

	(* Calcul des tolérances *)
	(* XX/09/2015 - P868A - artf1598100 *)
	Tol_ppe := DINT_TO_INT(INT_TO_DINT(Poids_demande_Ppe[Idx1]) * INT_TO_DINT(Conf_PP_Tol_Used[Idx1]) / 1000);
	Dos_min_ppe[Idx1] := Poids_demande_Ppe[Idx1] - Tol_ppe;
	Dos_max_ppe[Idx1] := Poids_demande_Ppe[Idx1] + Tol_ppe;

END_FOR;

(* Alarme "Fuite pompe" *)
(* On résonne par "voie de comptage", et non par "pompe" comme le reste de la section. *)
nb_voies_comptage := Conf_ppe_nb_ppes;
IF Conf_ppe_multiplexe AND (nb_voies_comptage &gt; 5) THEN
	nb_voies_comptage := 5;
END_IF;
FOR Idx1 := 1 TO nb_voies_comptage DO
	(* Récupération du nombre d'impulsions comptées relatives à chaque voie de comptage : *)
	(* Note : le reste de la section utilise des nombres d'impulsions relatives à chaque pompe *)
	(*    ce qui est différent dans le cas du mode multiplexé. *)
	IF NOT CCR_simulees THEN
		(* On lit le nombre d'impulsions sur la CCR *)
		Compteur_ppe_fuites[Idx1] := COUNTER_CURRENT_VALUE_CPT[Idx1];
	ELSE
		(* On récupère le nombre d'impulsions du simulateur *)
		IF NOT Conf_ppe_multiplexe THEN
			Compteur_ppe_fuites[Idx1] := Compteur_ppe[Idx1];
		ELSE
			Compteur_ppe_fuites[Idx1] := Compteur_ppe[Idx1]
					+ Compteur_ppe[Idx1+5]
					+ Compteur_ppe[Idx1+10]
					+ Compteur_ppe[Idx1+15];
		END_IF;
	END_IF;
	(* Elaboration des conditions pour le 'test fuite' relatif à la voie de comptage : *)
	IF Conf_ppe_multiplexe THEN
		Impulsions_attendues := Cde_dosage_Ppe[Idx1]
			OR Cde_dosage_Ppe[Idx1+5]
			OR Cde_dosage_Ppe[Idx1+10]
			OR Cde_dosage_Ppe[Idx1+15]
			OR Ppe_Etape5_Apres_coulant[Idx1]
			OR Ppe_Etape5_Apres_coulant[Idx1+5]
			OR Ppe_Etape5_Apres_coulant[Idx1+10]
			OR Ppe_Etape5_Apres_coulant[Idx1+15]
			OR BP_dosage_Ppe[Idx1]
			OR BP_dosage_Ppe[Idx1+5]
			OR BP_dosage_Ppe[Idx1+10]
			OR BP_dosage_Ppe[Idx1+15];
	ELSE
		Impulsions_attendues := Cde_dosage_Ppe[Idx1]
			OR Ppe_Etape5_Apres_coulant[Idx1]
			OR BP_dosage_Ppe[Idx1];
	END_IF;
	test_fuite_PPE[Idx1] :=	NOT Impulsions_attendues
		AND (NOT Conf_ppe_ctrl_fuite_base_temps (* Détection de fuite "par impulsions" : on teste en continu *)
			OR top_detection_fuite (* Détection de fuite "par temps" : on teste périodiquement *)
		);
	(* On teste si il y a une fuite : *)
	IF test_fuite_PPE[Idx1] THEN
		IF (Compteur_ppe_fuites[Idx1] &gt; (memo_fuite_pompe[Idx1] + Conf_ppe_nb_imp_avant_fuite)) THEN
			fuite_ppe[Idx1] := TRUE; (* Fuite détectée ! *)
		END_IF;
		memo_fuite_pompe[Idx1] := Compteur_ppe_fuites[Idx1];
	END_IF;
	IF Impulsions_attendues THEN
		(* On réinitialise la "memo" pour ne pas annoncer une fuite lorsqu'un *)
		(* dosage a eu lieu depuis le dernier 'test fuite'. *)
		(* Ajout R.C. 20/05/2011 P851 car cela semble nécessaire à la *)
		(* lecture du code, mais la nécessité n'a pas été démontrée dans la *)
		(* pratique. *)
		memo_fuite_pompe[Idx1] := Compteur_ppe_fuites[Idx1];
	END_IF;
END_FOR;






(********************* ARRET DU DOSAGE ***********************)
FOR Idx_PPE := 1 TO Conf_ppe_nb_ppes DO
(* Une fois le dosage arrêté : *)
(*    - On enregistre la valeur du compteur (en fin de dosage). *)
(*    - Puis on lance la phase « d’après coulant » (mode auto uniquement). *)
(*    - A la fin de cette phase, on mesure la différence entre la valeur du compteur et *)
(*      celle qu'on avait enregistré en fin de dosage. Cela mesure la queue de *)
(*      chute (mode auto uniquement). *)
(*    - Enfin, on déclare la fin du dosage sur la pompe en fonction des défauts de *)
(*      tolérance (mode auto uniquement). *)

	(* - Lancement de la phase d'après-coulant *)
	(* On lance l'apres coulant de toutes façons : par la suite on enregistre ou pas la qdc! *)
	(* on utilise l'index 'Direct' partout car on ne dose qu'un seul produit pompé en multiplexé *)
	(* Modif M.D. 13/08/2008 : Lors de l'init des compteurs, les consignes sont à 0, la *)
	(* moindre impulsion décenche un événement. Il faut donc s'assurer qu'un dosage est bien *)
	(* en cours. *)
	IF Ppe_Etape4_Consigne_atteinte[Idx_PPE]
	AND Dosages_ppe_en_cours[Idx_PPE] 
	THEN 
		memo_cpt_pour_QDC[Idx_PPE] := Compteur_ppe[Idx_PPE];
		Ppe_Etape4_Consigne_atteinte[Idx_PPE] := FALSE;
		Ppe_Etape5_Apres_coulant[Idx_PPE] := TRUE; (* Lancement apres coulant *)
(*		FD_CPT[Idx_DIRECT] := 0;*)(* En multiplexé, on passe plusieurs fois dans la *)
		(* boucle avec une détection de front. Il faut donc remettre à 0 cette variable. *)
	END_IF; 

	(* - Détermination de la fin de la phase d'après-coulant par chronométrage *)
	(*    ...Chonométrage *)
	IF Ppe_Etape5_Apres_coulant[Idx_PPE]
(*	OR NOT Info_Plant_In_Auto*)
	AND top_sec
	THEN 
		Tempo_apres_coulant[Idx_PPE] := Tempo_apres_coulant[Idx_PPE] + 1;
	END_IF;
	(*    ...Déclaration de la fin de la phase d'après-coulant *)
	IF (Tempo_apres_coulant[Idx_PPE] &gt;= conf_ppe_apres_coulant)
	AND Ppe_Etape5_Apres_coulant[Idx_PPE]
	THEN
		Ppe_Etape5_Apres_coulant[Idx_PPE] := FALSE;
		Ppe_Etape6_Calcul_QdC[Idx_PPE] := TRUE;
		Tempo_apres_coulant[Idx_PPE] := 0;
	END_IF;

	(* - Calcul de la queue de chute *)
	(*    ...Détermination de cas où on ne doit pas calculer la queue de chute *)
	(*       Si on à une commande de pompe manuelle pendant l'après-coulant, alors on ne *)
	(*          mesure pas la QdC. *)
	(*       (Note : Si en manuel logiciel on n'a pas de commande alors les impulsions *)
	(*       correspondent bien à la QdC) *)
	IF (	Ppe_Etape5_Apres_coulant[Idx_PPE]
		AND Cde_dosage_Ppe[Idx_PPE]
	)
	OR Ppe_Etape3b_Ajustement[Idx_PPE]
	THEN
		Calc_QdC_ppe_impossible[Idx_PPE] := TRUE;
	END_IF;
	(*    ...Calcul de la queue de chute (si QdC perturbée, ou si phase ajustement) *)
	IF Ppe_Etape6_Calcul_QdC[Idx_PPE] THEN
		IF NOT Calc_QdC_ppe_impossible[Idx_PPE]
		AND NOT Ppe_Etape3b_Ajustement[Idx_PPE]
		THEN
			qdc[Idx_PPE] := Compteur_ppe[Idx_PPE] - memo_cpt_pour_QDC[Idx_PPE];	
		END_IF;
		Ppe_Etape6_Calcul_QdC[Idx_PPE] := FALSE;	
		Ppe_Etape7_Calcul_poids_dose[Idx_PPE] := TRUE;
	END_IF;

	(* - Evaluation du poids dosé (En mode Automatique uniquement) *)
	IF Ppe_Etape7_Calcul_poids_dose[Idx_PPE]
	AND Auto_pupitre_sans_Arret_prod 
	AND NOT Manu_logiciel
	THEN
		IF (BCMix_Arret_ppe[Idx_PPE] = 0) THEN
			IF (Compteur_ppe[Idx_PPE] &lt; Dos_min_ppe[Idx_PPE])
			AND (NOT Ppe_Etape3b_Ajustement[Idx_PPE]) 
			AND (NOT Demande_remplacement_ppe[Idx_PPE])
			THEN
				(* Sous-tolérance *)
				Depassement_poids_Ppe[Idx_PPE] := Compteur_ppe[Idx_PPE] - Poids_demande_Ppe[Idx_PPE];
				Def_tol_neg_ppe[Idx_PPE] := TRUE;
				Demande_ajustement_ppe[Idx_PPE] := TRUE; (* Entraine un dosage impulsionnel *)
			END_IF;
			IF (Compteur_ppe[Idx_PPE] &gt; Dos_max_ppe[Idx_PPE])
			THEN
				(* Sur-tolérance *)
				Depassement_poids_Ppe[Idx_PPE] := Poids_demande_Ppe[Idx_PPE] - Compteur_ppe[Idx_PPE];
				Def_tol_pos_ppe[Idx_PPE] := TRUE;
				Ppe_Etape8_Ecriture_CR[Idx_PPE] := TRUE;
				Ppe_Etape3b_Ajustement[Idx_PPE] := FALSE;	 
				Demande_remplacement_ppe[Idx_PPE] := FALSE; (* Annule le remplacement si demande par BC-Mix *)	
			END_IF;
			IF (Compteur_ppe[Idx_PPE] &gt;= Dos_min_ppe[Idx_PPE])
			AND (Compteur_ppe[Idx_PPE] &lt;= Dos_max_ppe[Idx_PPE])
			THEN
				(* Dans la tolérance *)
				Depassement_poids_Ppe[Idx_PPE] := 0;
				Ppe_Etape8_Ecriture_CR[Idx_PPE] := TRUE;
				Ppe_Etape3b_Ajustement[Idx_PPE] := FALSE;	 	 
				Demande_remplacement_ppe[Idx_PPE] := FALSE; (* Annule le remplacement si demande par BC-Mix *)	
			END_IF;
		ELSIF (BCMix_Arret_ppe[Idx_PPE] = 1) 
		THEN
			(* Ordre d'arrêt de la pompe *)
			(* Ajout M.D. 02/09/2008 *)
			Depassement_poids_Ppe[Idx_PPE] := 0;
			BCMix_Arret_ppe[Idx_PPE] := 0;
			Ppe_Etape8_Ecriture_CR[Idx_PPE] := TRUE;
			Ppe_Etape3b_Ajustement[Idx_PPE] := FALSE;	 	 
        	END_IF;

		(* Demande de remplacement produit *)
		(* Ajout M.D. 08/03/2011 *)
		IF (Demande_remplacement_ppe[Idx_PPE]) THEN
			Demande_remplacement_ppe[Idx_PPE] := FALSE;
			(* Enregistement du compteur pour ajout au poids pesé *)
			IF Dosages_ppe_en_cours_Section300[Idx_PPE] THEN
				Dosages_ppe_en_cours_Section300[Produit_remplacement_Ppe[Idx_PPE]] := TRUE;
				Dosages_ppe_en_cours_Section300[Idx_PPE] := FALSE;
				NP_Compteurs_ppe[Produit_remplacement_Ppe[Idx_PPE]] := NP_Compteurs_ppe[Idx_PPE];
				NP_Compteurs_ppe[Idx_PPE] := 0; (* Initialisation non obligatoire, faite pour éviter ça puisse perturber le débug *)
			END_IF;
			IF Dosages_ppe_en_cours_Section392[Idx_PPE] THEN
				Dosages_ppe_en_cours_Section392[Produit_remplacement_Ppe[Idx_PPE]] := TRUE;
				Dosages_ppe_en_cours_Section392[Idx_PPE] := FALSE;
				Num_index_dos_diff_ppe[Produit_remplacement_Ppe[Idx_PPE]] := Num_index_dos_diff_ppe[Idx_PPE];
				Num_index_dos_diff_ppe[Idx_PPE] := 0; (* Initialisation non obligatoire, faite pour éviter ça puisse perturber le débug *)
			END_IF;
			Memo_Cpt_Avant_remplace[Produit_remplacement_Ppe[Idx_PPE]] := Compteur_ppe[Idx_PPE];
			(* Lancement nouveau dosage *)
			Consignes_ppes[Produit_remplacement_Ppe[Idx_PPE]] :=
					Consignes_ppes[Idx_PPE]	- Memo_Cpt_Avant_remplace[Produit_remplacement_Ppe[Idx_PPE]];
			Demande_debut_dosage_ppe[Produit_remplacement_Ppe[Idx_PPE]] := TRUE;
			Remplace_PPE_en_cours[Produit_remplacement_Ppe[Idx_PPE]] := TRUE;
			(* Remarque : on laisse les bits de dosage en cours *)
		END_IF;

		Ppe_Etape7_Calcul_poids_dose[Idx_PPE] := FALSE;
        END_IF;

	(* - Remplissage du Compte-Rendu de gâchée *)	
	IF Ppe_Etape8_Ecriture_CR[Idx_PPE] 
	AND NOT Def_tol_neg_ppe[Idx_PPE]	(* XX/07/2015 - P866 - artf1461244 *)
	AND NOT Def_tol_pos_ppe[Idx_PPE]	(* XX/07/2015 - P866 - artf1461244 *)
	THEN
		IF Dosages_ppe_en_cours_Section300[Idx_PPE] THEN
		(* ...Compte rendu pour un dosage par pompe en utilisant la zone "Compteurs" de la table de gachées *)

			(* ... Numéro de produit =&gt; CR *)
			No_prod_Section300 := NP_Compteurs_ppe[Idx_PPE];
			TG_OUT[NG_Ppe].CR_Compteurs[No_prod_Section300].Numero_prod := INT_TO_WORD(Idx_PPE);

			(* ...Poids réellement pesé =&gt; CR *)
			IF Remplace_PPE_en_cours[Idx_PPE] THEN
				TG_OUT[NG_Ppe].CR_Compteurs[No_prod_Section300].Poids_reel_pese :=
						Compteur_ppe[Idx_PPE] + Memo_Cpt_Avant_remplace[Idx_PPE];
				Remplace_PPE_en_cours[Idx_PPE] := FALSE;
			ELSE
				TG_OUT[NG_Ppe].CR_Compteurs[No_prod_Section300].Poids_reel_pese :=
						Compteur_ppe[Idx_PPE];
			END_IF;

			(* ...Erreur de jetée mesurée =&gt; CR *)
			IF NOT Calc_QdC_ppe_impossible[Idx_PPE] THEN
				TG_OUT[NG_Ppe].CR_Compteurs[No_prod_Section300].Erreur_jettee := qdc[Idx_PPE];
			ELSE
				TG_OUT[NG_Ppe].CR_Compteurs[No_prod_Section300].Erreur_jettee := 0;
			END_IF;

			(* ...Mise à jour de flags de gestion du dosage *)
			Dosages_ppe_termine_Section300[Idx_PPE] := TRUE;
			Dosages_ppe_en_cours_Section300[Idx_PPE] := FALSE;
			NP_Compteurs_ppe[Idx_PPE] := 0; (* Initialisation non obligatoire, faite pour éviter ça puisse perturber le débug *)

			(* ...Synchronisation avec la section "241_Dosage_eau_ST" pour *)
			(* les produits pompés à destination de la bascule Eau1 *)
			No_ppe_initial := WORD_TO_INT(TG_IN[NG_Ppe].Compteurs[No_prod_Section300].Numero_produit);
			IF (Conf_ppe_dest[No_ppe_initial] = 13) (* Destination "Bascule Eau1" *)
			THEN
			(* Le produit initialement demandé était à destination de la bascule Eau1 *)
				(* =&gt; Mettre à jour le compteur de dosages en cours vers la bascule Eau1 *)
				nb_dos_ppe_en_cours_Eau1 := nb_dos_ppe_en_cours_Eau1 - 1;
			END_IF;
		END_IF;

		IF Dosages_ppe_en_cours_Section392[Idx_PPE] THEN
		(* ...Compte rendu pour une destination malaxeur (DRY) *)

			(* ... Numéro de produit =&gt; CR *)
			No_prod_Section392 := Num_index_dos_diff_ppe[Idx_PPE];
			TG_OUT[NG_Intro].CR_Dos_dif_DRY[No_prod_Section392].Numero_prod := INT_TO_WORD(Idx_PPE);

			(* ...Poids réellement pesé =&gt; CR *)
			IF Remplace_PPE_en_cours[Idx_PPE] THEN
				TG_OUT[NG_Intro].CR_Dos_dif_DRY[No_prod_Section392].Poids_reel_pese :=
						Compteur_ppe[Idx_PPE] + Memo_Cpt_Avant_remplace[Idx_PPE];	
				Remplace_PPE_en_cours[Idx_PPE] := FALSE;
			ELSE
				TG_OUT[NG_Intro].CR_Dos_dif_DRY[No_prod_Section392].Poids_reel_pese :=
						Compteur_ppe[Idx_PPE];	
			END_IF;

			(* ...Erreur de jetée mesurée =&gt; CR *)
			IF NOT Calc_QdC_ppe_impossible[Idx_PPE] THEN
				TG_OUT[NG_Intro].CR_Dos_dif_DRY[No_prod_Section392].Erreur_jettee := qdc[Idx_PPE];
			ELSE
				TG_OUT[NG_Intro].CR_Dos_dif_DRY[No_prod_Section392].Erreur_jettee := 0;
			END_IF;

			(* ...Mise à jour de flags de gestion du dosage *)
			Dosages_ppe_termine_Section392[Idx_PPE]  := TRUE;
			Dosages_ppe_en_cours_Section392[Idx_PPE] := FALSE;
			(* Modif M.D. 08/09/2008 : BC-Mix peut arrêter un dosage et entrainer une pesée nulle. *)
			(* la table "Seq_ppe_vers_malax_termine" présente la fin des dosages en fonction de la table de dosage. *)
			(* (On utilisait avant la detection d'une valeur non nulle du CR de pesée) *)
			(* "Dosage dry terminé" (par ordre de la table de dosage) permet de retrouver le numéro de la séquence *)
			Seq_ppe_vers_malax_en_cours[No_prod_Section392] := FALSE; 
			Seq_ppe_vers_malax_termine[No_prod_Section392] := TRUE; 
			Num_index_dos_diff_ppe[Idx_PPE] := 0; (* Initialisation non obligatoire, faite pour éviter ça puisse perturber le débug *)
		END_IF;

		Ppe_Etape8_Ecriture_CR[Idx_PPE]		:= FALSE;
		Ppe_Etape3b_Ajustement[Idx_PPE]		:= FALSE;
		Ppe_en_cours[Idx_PPE]			:= FALSE;
		Consignes_ppes[Idx_PPE]			:= 0;
		Poids_demande_Ppe[Idx_PPE]		:= 0;
		Dosages_ppe_en_cours[Idx_PPE]		:= FALSE; (*??? - Adressé BCMIX?*)

	END_IF;

END_FOR;





(********************* DIVERS (2/2) ***********************)

(* Calcul de l'information "Produit pompé en cours" (pour destination Eau1) *)
(* Règle imposée par les sections "Compteurs" et "Prod dif" : *)
(*    - "Dosages_ppe_en_cours_Section300" doit être remis à zéro apres chaque produit *)
(*      pompé : mode séquentiel *)
(*    - "Dosages_ppe_en_cours_Section392" doit rester à 1 jusqu'a la fin des comptages *)
(* On met la table des dosages en cours dans un DINT. Si ce DINT = 0, aucun dosage n'est en cours *)
(* On ne s'occupe pas ici des produits différés qui ont une destination différente. *)
MOVE_AREBOOL_DINT (IN := Dosages_ppe_en_cours_Section300, OUT =&gt; Statut_Ppe_en_cours_Section300);
IF (Statut_Ppe_en_cours_Section300 = 0)
OR NOT Info_Plant_In_Auto
THEN
	Dosage_ppe_en_cours_Section300 := FALSE;
END_IF;


(* Reset de la commande de RAZ des compteurs *)
TON_RAZ_Simu_Compteurs_Ppe (IN := Cde_raz_simu_compteurs_ppe, PT := t#2s);
IF (TON_RAZ_Simu_Compteurs_Ppe.Q) THEN
	Cde_raz_simu_compteurs_ppe := FALSE; (* Reset au bout de 2 secondes *)
END_IF;



(* Redistribution des commandes des pompes par cuve : *)
(* Modif R.C. 01/08/2011 P852 *)
(* - Recopie des commandes des pompes dans une structure ayant un index 0 *)
(*   Cela permet de ne pas avoir d'erreur pour la conversion {num cuve}-&gt;{num pompe} lorsque la cuve n'a pas de pompe associée. *)
FOR idx_ppe := 1 TO 20 DO
	Cde_dosage_Ppe_copie[idx_ppe] := Cde_dosage_Ppe[idx_ppe];
END_FOR;
Cde_dosage_Ppe_copie[0] := FALSE; (* FALSE par défaut si pas de pompe associé à la cuve *)
(* - Redistribution des commandes des pompes pour les cuve à adjuvant *)
FOR Idx_cuve := 1 TO (Conf_adj1_nb_cuves + Conf_adj2_nb_cuves) DO (* Rappel : "Conf_adj1_nb_cuves" représente l'ensemble des cuves adj pesées et comptées *)
	Cde_dosage_Adj_ppe[Idx_cuve] := Cde_dosage_Ppe_copie[Conf_Adj_dest_cuves[Idx_cuve]];
END_FOR;
(* - Redistribution des commandes des pompes pour les cuve à eau *)
FOR Idx_cuve := 1 TO 4 DO (* Rappel : le nombre de cuves à eau utilisées ne peut être déterminé d'après "Conf_eau1_nb_cuves" et "Conf_eau2_nb_cuves" *)
	Cde_dosage_Eau_ppe[Idx_cuve] := Cde_dosage_Ppe_copie[Conf_Eau_dest_cuves[Idx_cuve]];
END_FOR;
</STSource>
	</program>
	<program>
		<identProgram name="340_Dosage_Anh" type="section" task="MAST"></identProgram>
		<ILSource>(*******************************************************************************************************************)
 (*                                              Recherche gachée anhydrite                                                        *)
 (*******************************************************************************************************************)

 (* Initialisation des variables locales de la section *)
 LD Dosage_Anh_DEM_INIT
 ST Dosage_Anh_INIT_EN_COURS
 JMPCN Fin_init_NG_anh

 	(* Modif R.C. 06/12/2011 P808/P856 : Modification des conditions *)
 	(* déclenchant cette initialisation. Suite à un problème quand on *)
 	(* était sur une n-ième gâchée dont le premier produit ne faisait *)
 	(* pas dépasser le seuil vide. *)
 	LD index_sortie_buffer
 	ST suite_index_sortie_anhydrite
 	ST NG_anh
 	LD 1 (* Changement de numéro de gâchée =&gt; On initialise le NP à 1 *)
 	ST NP_anh (* (Ajout R.C. 08/07/2011 P806) *)
 	LD 0
 	ST Poids_demande_anh (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
 	ST Numero_produit_anh (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)
 	ST Poids_deja_pese_anh (* Ajout R.C. 06/12/2011 P808/P856, par sécurité *)

	(* Reset de la demande d'init *)
	LD TRUE
	R Dosage_Anh_DEM_INIT (* L'init de la section a bien été prise en compte. *)
	R Dosage_auto_Anh

 Fin_init_NG_anh:

 ld Pesee_suivante_Anh
 jmpc init_type_pesee_anhydrite
  
 (*Pesée anhydrite si balance libre*)
 ldn Etat_balance_Anh
 jmpc fin_dosage_anhydrite
  
 recherche_index_anhydrite :
  
 (*Recherche index pesée anhydrite*)
 ld suite_index_sortie_anhydrite
 (*Sauvegarde gachee en cours*)
 st NG_Anh
  
 (*Chargement mot état anhydrite*)
 LD TG_OUT[NG_Anh].CR_Etat_Basc_Anh
 eq 2
 ST Pesee_terminee_Anh
 LD TG_OUT[NG_Anh].CR_Etat_Basc_Anh
 eq 1(*Pesée en cours anhydrite*)
 jmpc fin_dosage_anhydrite
  
 (*Si pesée terminée pour cette gachée recherche de la gachée suivante*)
 ldn Pesee_terminee_Anh
 jmpc recherche_tremie_anhydrite

 LD 1
 ST NP_Anh

LD FALSE
ST Dosage_auto_Anh
  
 ld suite_index_sortie_anhydrite
 add 1
 st suite_index_sortie_anhydrite
 LE 4
 jmpc suite_anhydrite
 ld 1
 st suite_index_sortie_anhydrite
  
 suite_anhydrite :
  
 	ld suite_index_sortie_anhydrite
 	eq index_entree_buffer
 	jmpc fin_dosage_anhydrite
 jmp recherche_index_anhydrite	
 (*******************************************************************************************************************)
 (*                                   Test présence du produit dans la gâchée                                                      *)
 (*******************************************************************************************************************)
  
 recherche_tremie_anhydrite :
 LD TG_IN[NG_Anh].Basc_Anh[NP_Anh].Numero_Produit
 and 16#01ff
 EQ 16#0000
 JMPC fin_dos_gachee_encours_anhydrite
 JMP Dire_en_cours_anhydrite
  
 (*******************************************************************************************************************)
 (*                                              Dosage                                                                            *)
 (*******************************************************************************************************************)
 Dire_en_cours_anhydrite :
  
 (* Dire en cours *)
 ld 1
 ST TG_OUT[NG_Anh].CR_Etat_Basc_Anh
  
 (*Dire presence produit*)
 LD TG_OUT[NG_Anh].CR_Etat_Presence_Produit
 or 16#0020
 ST TG_OUT[NG_Anh].CR_Etat_Presence_Produit
  
 init_type_pesee_anhydrite :
 	
 	(* NP limite atteint ? *)
 	LD NP_anh
 	GT 2
 	JMPCN Rech_num_prod_anh
 		(* NP limite atteint -&gt; On arrête de parcourir la table *)
		LD FALSE
		ST Type_produit_anhydrite
 		LD 0
 		ST Numero_produit_anh
 	JMP Fin_rech_num_prod_anh
 	Rech_num_prod_anh:
 		(* Récupération du numéro d'organe de stockage surlequel doser *)
 		LD TG_IN[NG_Anh].Basc_Anh[NP_Anh].Numero_Produit
		st mot_travail4_anhydrite
  
 		(* - Extraction type de produit*)
 		GET_BIT (IN :=mot_travail4_anhydrite, NO :=16)
		ST Type_produit_anhydrite
 	 	(*0=anhydrite 1=granulat*)

 		(* - Récupération du numéro d'organe de stockage *)
 		LD mot_travail4_anhydrite
 		AND 16#01ff
 		WORD_TO_INT
 		ST Numero_produit_anh
 	Fin_rech_num_prod_anh:
  
 	(* On enregistre le numéro de produit initial (avant éventuel remplacement de produit). *)
 	LD Numero_produit_Anh
 	ST Numero_produit_Anh_initial
 	eq 0
 	jmpc fin_dos_gachee_encours_anhydrite
 
 	(*Copie produit, pesée et numéro silo dans compte-rendu*)
 	LD TG_IN[NG_Anh].Basc_Anh[NP_Anh].Numero_Produit
 	ST TG_OUT[NG_Anh].CR_basc_Anh[NP_Anh].Numero_prod
 	
 	(*Recherche poids demandé*)
	LD TG_IN[NG_Anh].Basc_Anh[NP_Anh].Poids_demande
 	st Poids_demande_Anh
 
 	(*Recherche erreur de jetée*)
 	LD TG_IN[NG_Anh].Basc_Anh[NP_Anh].Erreur_jettee
	st Erreur_jetee_Anh
  
 	(*Recherche limite de correction*)
 	LD TG_IN[NG_Anh].Basc_Anh[NP_Anh].Limite_correction
 	ST Limite_correction_Anh

 	ld Type_produit_anhydrite
 	jmpc suite_config_anhydrite
 		
 (*Copie configuration du silo*)
(* XX/09/2015 - P868A - artf1598100 *)
 CAL Weighing_Tolerances (IDFB_Conf_Process_Tol := TG_IN[NG_Anh].Conf_Anh_Process_Tol,
                          IDFB_Conf_Process_Tol_Default := Conf_Anh_Process_Tol_Default,
                          IDFB_Batch_Properties := TG_IN[NG_Anh].Proprietes_gachee,
                          ODFB_Conf_Process_Tol_Used =&gt; Conf_Anh_Tol_Used)

 ld Conf_silo_anhyd_pesage_fin
 st Seuil_pv_Anh_Gra
 ld Conf_silo_anhydrite_TON_pv
 ST TON_TOFF_PV_Anh_Gra.TON
 ld Conf_silo_anhydrite_TOFF_pv
 ST TON_TOFF_PV_Anh_Gra.TOFF
 ld Conf_silo_anhydrite_TON_vibreur
 ST TON_TOFF_VIB_Anh_Gra.TON
 ld Conf_silo_anhydrite_TOFF_vibreur
 ST TON_TOFF_VIB_Anh_Gra.TOFF
 ld Conf_silo_anhydrite_nb_vibreur
 st Nb_vib_anh_gra
 ld Conf_silo_anhydrite_TON_ajust
 ST TON_TOFF_AJU_Anh_Gra.TON
 ld Conf_silo_anhydrite_TOFF_ajust
 ST TON_TOFF_AJU_Anh_Gra.TOFF
 ld Conf_silo_anhydrite_tps_reponse
 st tps_reponse_anh_gra
 ld Conf_silo_anh_tps_apres_coulant
 st tps_apres_coulant_anh_gra
 LD Conf_silo_anh_limite_sous_dosage
 ST Limite_sous_dosage_anh_gra
 LD Cumuls_pesees.Cumuls_pesees_Anh[Numero_produit_Anh]
 ST Cumul_pesees_anh_gra
  
 jmp fin_config_anhydrite
  		
 suite_config_anhydrite :
  
 	(*Copie configuration de la trémie*)
	(* XX/09/2015 - P868A - artf1598100 *)
	CAL Weighing_Tolerances (IDFB_Conf_Process_Tol := TG_IN[NG_Anh].Conf_Agg_Process_Tol[Numero_produit_Anh],
	                         IDFB_Conf_Process_Tol_Default := Conf_Agg_Process_Tol_Default[Numero_produit_Anh],
	                         IDFB_Batch_Properties := TG_IN[NG_Anh].Proprietes_gachee,
	                         ODFB_Conf_Process_Tol_Used =&gt; Conf_Anh_Tol_Used)

 	ld Conf_granulat_pesage_fin[Numero_produit_Anh]
 	st Seuil_pv_Anh_Gra
 	ld Conf_granulat_TON_pesage_fin[Numero_produit_Anh]
 	ST TON_TOFF_PV_Anh_Gra.TON
	ld Conf_granulat_TOFF_pesage_fin[Numero_produit_Anh]
 	ST TON_TOFF_PV_Anh_Gra.TOFF
 	ld Conf_granulat_TON_vibreur[Numero_produit_Anh]
 	ST TON_TOFF_VIB_Anh_Gra.TON
 	ld Conf_granulat_TOFF_vibreur[Numero_produit_Anh]
 	ST TON_TOFF_VIB_Anh_Gra.TOFF
 	ld Conf_granulat_nb_vibreur[Numero_produit_Anh]
 	st Nb_vib_anh_gra
 	ld Conf_granulat_TON_ajustement[Numero_produit_Anh]
 	ST TON_TOFF_AJU_Anh_Gra.TON
 	ld Conf_granulat_TOFF_ajustement[Numero_produit_Anh]
 	ST TON_TOFF_AJU_Anh_Gra.TOFF
 	ld Conf_granulat_tps_ecoulement[Numero_produit_Anh]
 	st tps_reponse_anh_gra
 	ld Conf_granulat_tps_apres_coulant[Numero_produit_Anh]
 	st tps_apres_coulant_anh_gra
 	LD Conf_granulat_limite_sous_dosage[Numero_produit_Anh]
 	ST Limite_sous_dosage_anh_gra
 	LD Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Anh]
 	ST Cumul_pesees_anh_gra
 
 fin_config_anhydrite :	
  
 		Ld Poids_instantane_Anh
 		st Poids_de_reference_Anh

 		LD TRUE
 		R Poids_vise_deja_ecrit_Anh (* init *)
  
 		(* Init de la CGG quand la CGG n'est pas activée et *)
 		(* aussi quand c'est la 1ère gâchée de la fabrication *)
 		LDN CGG_activee
 		OR (TG_IN[NG_Anh].Proprietes_gachee
 			AND 16#0002 (* 1ère gâchée de la fabrication *)
 			GT 0
 		)
 		AND (NP_Anh
 			EQ 1 (* 1er produit de la gâchée *)
 		)
 		JMPCN init_corr_g_g_anh__fin2
 		init_corr_g_g_anh:
 			(* on active la CGG en début de fabrication *)
 			LD CGG_activee
 			ST CGG_activee_Anh 
 			(* init des cumuls anhydrite *)
 			LD 0
 			ST ma0
 			init_corr_g_g_anh__boucle1:
 			LD ma0
 			ADD 1
 			ST ma0
 			LD ma0
 			GT Conf_anhydrite_nb_silos
 			JMPC init_corr_g_g_anh__fin1
 			LD 0
 			ST cumuls_pesees.Cumuls_pesees_Anh[ma0].cumul_consignes_sans_correct_g_g
 			ST cumuls_pesees.Cumuls_pesees_Anh[ma0].cumul_poids_reellement_peses
			JMP init_corr_g_g_anh__boucle1
		init_corr_g_g_anh__fin1:
 			(* init des cumuls granulats pour anhydrite *)
 			LD Conf_granulat1_nb_tremies
			ADD Conf_granulat2_nb_tremies
 			ST ma0
 			init_corr_g_g_anh__boucle2:
 			LD ma0
 			ADD 1
 			ST ma0
 			LD ma0
 			GT (Conf_granulat1_nb_tremies
			ADD Conf_granulat2_nb_tremies
			ADD Conf_anhydrite_nb_tremies
 			)
 			JMPC init_corr_g_g_anh__fin2
 			LD 0
 			ST cumuls_pesees.Cumuls_pesees_Gra[ma0].cumul_consignes_sans_correct_g_g
 			ST cumuls_pesees.Cumuls_pesees_Gra[ma0].cumul_poids_reellement_peses
			JMP init_corr_g_g_anh__boucle2
 		init_corr_g_g_anh__fin2:
 

 		(* Récupération des options de dosage *)

 		(* Obligation d'atteindre la consigne *)
 		LD TG_IN[NG_Anh].Basc_Anh[NP_Anh].Options_dosage
 		AND 16#0001
 		GT 0
 		ST Flags_pesage_Anh.obligation_atteindre_consigne

		(* Correction gachée sur gachée activée *)
		LD CGG_activee_Anh
		ST Flags_pesage_Anh.CGG_ON
 
 		(* Dernière gachée *)
 		LD TG_IN[NG_Anh].Proprietes_gachee
 		AND 16#0001
 		NE 0
 		ST Flags_pesage_Anh.Derniere_gachee

 		(* Première gachée *)
 		LD TG_IN[NG_Anh].Proprietes_gachee
 		AND 16#0002
 		NE 0
 		ST Flags_pesage_Anh.Premiere_gachee

	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
		(* Mode décomptage :non disponible *)
		LD FALSE
		ST Flags_pesage_Anh.mode_decomptage 

 		jmp fin_dosage_anhydrite
  
 fin_dos_gachee_encours_anhydrite :
  
 (* Dire terminé *)
 ld 2
 ST TG_OUT[NG_Anh].CR_Etat_Basc_Anh
   
 LD TG_OUT[NG_Anh].CR_Etat_Gachee
 or 16#0080
 ST TG_OUT[NG_Anh].CR_Etat_Gachee
  
 ld true 
 r Pesee_suivante_Anh
  
 ld 0
 st Poids_demande_Anh
 st Erreur_jetee_Anh
 ST Limite_correction_Anh (* inutile ? *)
 st Poids_de_reference_Anh
 st Poids_deja_pese_Anh
 st Numero_produit_Anh
 ST Numero_produit_Anh_initial (* inutile ? *)
   
 fin_dosage_anhydrite :
 (*Bloc fonction du pesage*) 
 LD Dosage_Anh_INIT_EN_COURS
 OR (TG_OUT[NG_Anh].CR_Etat_Basc_Anh 
 EQ 1
 ) 
 JMPC Par_DFB_pesage_Anh

 Pas_par_DFB_pesage_Anh :
 	LD FALSE (* Ajout R.C. 07/12/2011 P808/P856, préventivement contre les dosages infinis (tel que le bug #0001367) *)
 	ST Cde_dosage_generale_Anh 
 	JMP fin_anhydrite

 Par_DFB_pesage_Anh :
 ld 1
 and (Type_produit_anhydrite
 and Ajustement_auto_granulat[Numero_produit_Anh]
 )
 or (Ajustement_auto_anhydrite
 andn Type_produit_anhydrite
 )
 st Aju_auto_Anh_Gra

 LD Aju_auto_Anh_Gra
 ST Flags_pesage_Anh.AJU_AUTO
 LD sens_pesage_fin_anhydrite
 ST Flags_pesage_Anh.SENS_PV
  
 CAL PESA_Anh (POIDS_I := Poids_instantane_Anh,
                     POIDS_D := Poids_demande_Anh,
                     POIDS_R := Poids_de_reference_Anh,
                     ERR_JETE := Erreur_jetee_Anh,
                     TOLERANC := Conf_Anh_Tol_Used, (* XX/09/2015 - P868A - artf1598100 *)
                     SEUIL_PV := Seuil_pv_Anh_Gra,
                     TON_TOFF_PV := TON_TOFF_PV_Anh_Gra,
                     TON_TOFF_VIB := TON_TOFF_VIB_Anh_Gra,
                     NB_VIB := Nb_vib_anh_gra,
                     TON_TOFF_AJU := TON_TOFF_AJU_Anh_Gra,
                     TPS_apres_coulant := tps_apres_coulant_anh_gra,
                     TPS_ecoulement := tps_reponse_anh_gra,
                     LIM_CORR := Limite_correction_Anh,
                     LIM_SDOS := Limite_sous_dosage_anh_gra,
                     DEFAUT := Defaut_Anh,
                     INIT := Dosage_Anh_INIT_EN_COURS,
                     T_STAB := Conf_anhydrite_tps_stabilisation,
                     T_M_STAB := Conf_anhydrite_tps_max_stab,
                     EC_STAB := Conf_anhydrite_ecart_stab,
                     T_M_PESA := Conf_anhydrite_tps_max_pesage,
                     CUMULS := Cumul_pesees_anh_gra,
                     Flags_pesage := Flags_pesage_Anh,
                     PORTEE := Conf_anhydrite_seuil_maxi,
		     Correction_Humidite := Correction_Humidite_Autres)
  
                       
 LD PESA_Anh.poids_p
 ST Poids_deja_pese_Anh
 LD PESA_Anh.cde_dosa
 ST Cde_dosage_generale_Anh
 S Dosage_auto_Anh
 LD PESA_Anh.cde_pv
 ST Petite_vitesse_Anh
 LD PESA_Anh.cde_vib
 ST Vibreur_organes_Anh
 LD PESA_Anh.Pds_bloq
 S  Pesee_bloquee_Anh
 LD PESA_Anh.Tmax_pes
 S  Pesee_incomplete_Anh
 LD PESA_Anh.Instable
 S  Basc_instable_Anh
 LD PESA_Anh.Ajust
 S  Tol_inf_Anh
 LD PESA_Anh.Dep_tol
 S  Depassement_tolerance_Anh
 LD PESA_Anh.pesee_ok
 ANDN Alarme_satur_inf_Anh (* Ajout R.C. 10/02/2011 P803 pour ne pas valider la pesée *)
 ANDN Alarme_satur_sup_Anh (*      si la mesure de poids est saturée, mais dans la tolérance. *)
 ST Pesee_suivante_Anh

 (* XX/09/2015 - P868A - artf1598100 *)
 (* Calcul de l'écart de pesée devient l'écart entre le poids pesé *)
 (* et le poids visé (avec toutes les corrections) *)
 (* L'écart de pesée ne prend plus en compte l'écart des gachées précedentes que l'on soit en CGG ou non *)
 (* (utilisé pour déterminer un éventuel dépassement de tolérance.) *)
 LD PESA_Anh.ECART_P
 ST Ecart_pesee_Anh
 INT_TO_DINT
 MUL 10000 (* Taux en pour dix-millièmes *)
 DIV (PESA_Anh.POIDS_V
 	INT_TO_DINT
 )
 DINT_TO_INT
 ST Ecart_pesee_en_taux_Anh

 (* Ecrire le poids visé dans le compte rendu de gâchée*)
 LD Poids_vise_deja_ecrit_Anh
 OR Dosage_Anh_INIT_EN_COURS
 JMPC passer_ecriture_poids_vise_anh
 	LD PESA_Anh.POIDS_V
	ST TG_OUT[NG_Anh].CR_basc_Anh[NP_Anh].Poids_vise
 	LD TRUE
	S Poids_vise_deja_ecrit_Anh
 passer_ecriture_poids_vise_anh:

 (*Ecriture de la queue de chute dans le compte-rendu*)
 LD PESA_Anh.stab_ok
 jmpcn suite_cr_anhydrite
  
 ld Poids_instantane_Anh
 sub PESA_Anh.poids_c
 ST TG_OUT[NG_Anh].CR_basc_Anh[NP_Anh].Erreur_jettee
  
  
 suite_cr_anhydrite:
 (*Ecriture du poids pesée dans le compte-rendu*)
 ld Pesee_suivante_Anh
 jmpcn fin_anhydrite
  
 	ld Poids_instantane_Anh
 	sub Poids_de_reference_Anh
 	ST TG_OUT[NG_Anh].CR_basc_Anh[NP_Anh].Poids_reel_pese
	ST Poids_reel_pese_Anh_Gra

	(* Mettre à jour les cumuls pour la correction gachée sur gachée *)
	LD Type_produit_anhydrite
	JMPC ecrire_cumuls_pour_prod_gra
	ecrire_cumuls_pour_prod_anh:
		LD Poids_reel_pese_Anh_Gra
		INT_TO_DINT
		ADD Cumuls_pesees.Cumuls_pesees_Anh[Numero_produit_Anh_initial].cumul_poids_reellement_peses
		ST Cumuls_pesees.Cumuls_pesees_Anh[Numero_produit_Anh_initial].cumul_poids_reellement_peses
		LD Poids_demande_Anh
		INT_TO_DINT
		ADD Cumuls_pesees.Cumuls_pesees_Anh[Numero_produit_Anh_initial].cumul_consignes_sans_correct_g_g
		ST Cumuls_pesees.Cumuls_pesees_Anh[Numero_produit_Anh_initial].cumul_consignes_sans_correct_g_g
	JMP fin_ecriture_cumuls
	ecrire_cumuls_pour_prod_gra:
		LD Poids_reel_pese_Anh_Gra
		INT_TO_DINT
		ADD Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Anh_initial].cumul_poids_reellement_peses
		ST Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Anh_initial].cumul_poids_reellement_peses
		LD Poids_demande_Anh
		INT_TO_DINT
		ADD Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Anh_initial].cumul_consignes_sans_correct_g_g
		ST Cumuls_pesees.Cumuls_pesees_Gra[Numero_produit_Anh_initial].cumul_consignes_sans_correct_g_g
	fin_ecriture_cumuls:
 
  	(* Pointer sur produit suivant *)
 	LD NP_Anh
 	ADD 1
 	ST NP_Anh

	LD FALSE
	ST Dosage_auto_Anh
  	
 fin_anhydrite :
 (*Défaut de pesée*)
 ld Pesee_bloquee_Anh
 or Basc_instable_Anh
 or Tol_inf_Anh
 or Depassement_tolerance_Anh
(* or Alarme_poids_max_anhydrite*)(* On ne bloque plus la validation de la pesée *)
	(* en cas de dépassement de la portée paramétrée pour la bascule. *)
	(* Décision de Patrick HUGON le 01/12/2010, dans le cadre de la *)
	(* correction gachée sur gachée (qui est susceptible de faire viser *)
	(* un poids cible égal à la portée de la bascule pour compenser *)
	(* des sous-dosages). *)
 or Alarme_detare_Anh
 or Pesee_incomplete_Anh
 orn Info_balance_Anh_fermee
 OR Alarme_satur_inf_Anh
 OR Alarme_satur_sup_Anh
 st Defaut_Anh
</ILSource>
	</program>
	<program>
		<identProgram name="350_Sorties_Anh" type="section" task="MAST"></identProgram>
		<ILSource>(*Commande dosage anhydrite*)

(* Initialisation des variables locales de la section *)
LD Sorties_Anh_DEM_INIT
JMPCN Init_Sorties_Anh__Fin
Init_Sorties_Anh:

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	LD TRUE
	R Sorties_Anh_DEM_INIT (* L'init de la section a bien été prise en compte. *)
Init_Sorties_Anh__Fin:

  
 ld Manu_cde_dosage_anhydrite
 and Manu_temporise
 st TON_manu_Anh.IN
  
 CAL TON_manu_Anh (PT :=Manu_Tps_dosage_Anh)
  
 ldn Vidange_Anh
 andn Discordance_vidange_anhydrite
 and (Numero_produit_Anh
 eq 1
 and Cde_dosage_generale_Anh
 andn Type_produit_anhydrite
 andn Manu_logiciel
 )
 or (Manu_cde_dosage_anhydrite
 and Manu_logiciel
 and (
 ldn Manu_temporise
 or (
 ldn TON_manu_Anh.Q
 and Manu_temporise
 )
 )
 )
 and Auto_pupitre_sans_Arret_prod
 andn Alarme_poids_max_Anh
 andn Alarme_detare_Anh
 ANDN Alarme_Com_HMS_Profibus
 ANDN Alarme_Com_API_ModbusTCP_1 
 ANDN Alarme_IDE500_Anh
 st Cde_dosage_Anh

LD TRUE (*Modif MD 19/12/07 site Lavaur : probème sur LDN x, R y. cette fonction
ne fonctionne que sur LD, pas avec LDN *)
ANDN Cde_dosage_Anh
R Manu_cde_dosage_anhydrite
</ILSource>
	</program>
	<program>
		<identProgram name="360_Remplacement_produits" type="section" task="MAST"></identProgram>
		<ILSource>(* Initialisation des variables locales de la section *)
LD Remplacement_produits_DEM_INIT
JMPCN Init_Remplacement_produits__Fin
Init_Remplacement_produits:

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	LD TRUE
	R Remplacement_produits_DEM_INIT (* L'init de la section a bien été prise en compte. *)
Init_Remplacement_produits__Fin:



(* Remplacement produit bascule Granulat 1 *)
LD remplacement_granulat1
AND (	Pesee_bloquee_Gra1
	OR Pesee_incomplete_Gra1
)
JMPCN fin_remplacement_gra1
	LD 0
	ST Ecart_CHU_Gra[NG_CHU][Numero_produit_Gra1]
	LD Poids_Gra_A_Doser[NG_CHU][Numero_produit_Gra1]
	ST Poids_Gra_A_Doser[NG_CHU][Produit_remplacement_Gra1]
	LD 1
	ST Product_Replacement[Numero_produit_Gra1]
	LD 2
	ST Product_Replacement[Produit_remplacement_Gra1]
	LD Produit_remplacement_Gra1
	ST Numero_produit_Gra1
	LD TRUE
	R remplacement_granulat1
fin_remplacement_gra1 :

(* Remplacement produit bascule Granulat 2 *)
LD remplacement_granulat2
AND (	Pesee_bloquee_Gra2
	OR Pesee_incomplete_Gra2
)
JMPCN fin_remplacement_gra2
	LD 0
	ST Ecart_CHU_Gra[NG_GRA2][Numero_produit_Gra2]
	LD Poids_Gra_A_Doser[NG_GRA2][Numero_produit_Gra2]
	ST Poids_Gra_A_Doser[NG_GRA2][Produit_remplacement_Gra2]
	LD 1
	ST Product_Replacement[Numero_produit_Gra2]
	LD 2
	ST Product_Replacement[Produit_remplacement_Gra2]
	LD Produit_remplacement_Gra2
	ST Numero_produit_Gra2
	LD TRUE
	R remplacement_granulat2
fin_remplacement_gra2 :

(* Remplacement produit bascule Ciment 1 *)
LD remplacement_cim1
AND (	Pesee_bloquee_Cim1
	OR Pesee_incomplete_Cim1
) 
JMPCN fin_remplacement_cim1
	LD Produit_remplacement_Cim1
	ST Numero_produit_Cim1
	LD TRUE
	R remplacement_cim1
fin_remplacement_cim1 :

(* Remplacement produit bascule Ciment 2 *)
LD remplacement_Cim2
AND (	Pesee_bloquee_Cim2
	OR Pesee_incomplete_Cim2
) 
JMPCN fin_remplacement_cim2
	LD Produit_remplacement_Cim2
	ST Numero_produit_Cim2
	LD TRUE
	R remplacement_Cim2
fin_remplacement_cim2 :
 
  
(* Remplacement produit bascule Eau 1 *)
LD remplacement_eau1
AND (	Pesee_bloquee_Eau1
	OR indisponibilite_MES
	OR Pesee_incomplete_Eau1
)
JMPCN fin_remplacement_eau1
	LD Produit_remplacement_Eau1
	ST Numero_produit_Eau1
	LD TRUE
	R remplacement_eau1
fin_remplacement_eau1 :

(* Remplacement produit bascule Eau 2 *)
LD remplacement_Eau2
AND (	Pesee_bloquee_Eau2
	OR Pesee_incomplete_Eau2
) 
JMPCN fin_remplacement_eau2
	LD Produit_remplacement_Eau2
	ST Numero_produit_Eau2
	LD TRUE
	R remplacement_Eau2
fin_remplacement_eau2 :

(* Remplacement produit bascule Adjuvant *)
LD Pesee_bloquee_Adj
AND remplacement_adjuvant
JMPCN fin_remplacement_adj
	LD Produit_remplacement_Adj
	ST Numero_produit_Adj
	LD TRUE
	R remplacement_adjuvant
fin_remplacement_adj :

(* Remplacement produit bascule Additionnelle *)
LD Remplacement_Add
AND (	Pesee_bloquee_Add
	OR Pesee_incomplete_Add
)
JMPCN fin_remplacement_add
	LD Produit_remplacement_Add
	ST Numero_produit_Add
	LD TRUE
	R Remplacement_Add
	(* Changement de ligne de poids *)
	(* Spécificité ligne additionnelle : Lorsqu'il y a une ligne de poids par *)
	(* organe de stockage (mode pesage individuel), on impacte le poids de référence *)
	(* lorsqu'on passe d'une ligne de poids à une autre. *)
	LD conf_basc_add_pesage_individuel
	JMPCN fin_chgt_ligne_poids_add
		LD TRUE
		S Remplacement_Add_Mem	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
		LD conf_basc_add_mode_decomptage
		JMPC fin_chgt_ligne_poids_add
		(* Le poids de référence devient le poids actuel de la nouvelle ligne de *)
		(* poids PLUS le poids déjà pesé. *)
			LD BCMix_Pds_Add[Numero_produit_Add]
			ADD Poids_deja_pese_Add
			ST Poids_de_reference_Add
	fin_chgt_ligne_poids_add:
fin_remplacement_add :
</ILSource>
	</program>
	<program>
		<identProgram name="365_Gestion_Glace_Add_vers_Gra" type="section" task="MAST"></identProgram>
		<STSource>(* Ajout R.C. 14/09/2009 Gestion de la glace *)

(* NOTE : Nous utilisons le terme "Glace" pour représenter un produit dosé dans *)
(* une bascule à eau qui a pour destination un tapis peseur à granulats. *)


(* Initialisation des variables locales de la section *)
IF Gestion_Glace_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Gestion_Glace_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;



(* FABRICATION D' "ETATS DE SYNTHESE" *)
(* Les états de synthèse ci-dessous permettent de préparer des informations *)
(* directement relatives au tapis peseur Granulat 1, ou à celui de la ligne Granulat 2 *)
(* IMPORTANT : *)
(* Ces état sont concus à l'aide des informations correspondantes à la gachee *)
(* soit "en cours d'introduction", soit "en cours de transfert", ou *)
(* soit "en cours de dosage". *)
(* Il faut donc prendre soin de n'utiliser ces informations que dans les sections *)
(* qui leur sont destinées, au risque d'obtenir des bugs aléatoires ! *)
(* Nous indiquons pour chaque flag a quelle gachée il est lié. *)


(* Etat de synthese "Présence produit eau" *)
(* pour les gâchées en cours de dosage sur les lignes à granulat *)
	(* car "Gachee_en_cours_granulat1" et "Gachee_en_cours_granulat2" *)
	(* sont liés aux gâchées en cours de dosage sur les lignes à granulat *)
Gra1_presence_prod_Eau1 := ((TG_OUT[NG_Gra1].CR_Etat_Presence_Produit AND 16#0008) &lt;&gt; 0) ;
Gra1_presence_prod_Eau2 := ((TG_OUT[NG_Gra1].CR_Etat_Presence_Produit AND 16#0080) &lt;&gt; 0) ;
Gra2_presence_prod_Eau1 := ((TG_OUT[NG_Gra2].CR_Etat_Presence_Produit AND 16#0008) &lt;&gt; 0) ;
Gra2_presence_prod_Eau2 := ((TG_OUT[NG_Gra2].CR_Etat_Presence_Produit AND 16#0080) &lt;&gt; 0) ;
(*
WORD_TO_BIT (IN:=TG_OUT[Gachee_en_cours_granulat1].CR_Etat_Presence_Produit,
 		BIT3 =&gt; gra1_presence_prod_eau1,
		BIT7 =&gt; gra1_presence_prod_eau2
  		)
WORD_TO_BIT (IN:=TG_OUT[Gachee_en_cours_granulat2].CR_Etat_Presence_Produit,
 		BIT3 =&gt; gra2_presence_prod_eau1,
		BIT7 =&gt; gra2_presence_prod_eau2
  		)
*)


(* Etat de synthese "Presence Glace" *)
(* pour la gachée en cours d'introduction *)
	(* car "presence_prod_eau1" et "presence_prod_eau2" sont liés à la *)
	(* gâchée en cours d'introduction *)
Intro_Presence_Glace_Gra1 := ((Conf_Eau_dest_basc[1] = 1) AND Presence_prod_Eau1)
	OR ((Conf_Eau_dest_basc[2] = 1) AND Presence_prod_Eau2);
Intro_Presence_Glace_Gra2 := ((Conf_Eau_dest_basc[1] = 2) AND Presence_prod_Eau1)
	OR ((Conf_Eau_dest_basc[2] = 2) AND Presence_prod_Eau2);


(* Etat de synthese "Presence Glace" *)
(* pour la gachée en cours de dosage sur les lignes à granulat *)
Transf_Presence_Glace_Gra1 := ((Conf_Eau_dest_basc[1] = 1) AND Gra1_presence_prod_Eau1)
	OR ((Conf_Eau_dest_basc[2] = 1) AND Gra1_presence_prod_Eau2);
Transf_Presence_Glace_Gra2 := ((Conf_Eau_dest_basc[1] = 2) AND Gra2_presence_prod_Eau1)
	OR ((Conf_Eau_dest_basc[2] = 2) AND Gra2_presence_prod_Eau2);


(* Etat de synthese "Seuil Vide atteint" *)
(* identique pour toutes les gachées *)
Seuil_Vide_Glace_vers_Gra1 := ((Conf_Eau_dest_basc[1] &lt;&gt; 1) OR Seuil_vide_atteint_Eau1)
	AND ((Conf_Eau_dest_basc[2] &lt;&gt; 1) OR Seuil_vide_atteint_Eau2);
Seuil_Vide_Glace_vers_Gra2 := ((Conf_Eau_dest_basc[1] &lt;&gt; 2) OR Seuil_vide_atteint_Eau1)
	AND ((Conf_Eau_dest_basc[2] &lt;&gt; 2) OR Seuil_vide_atteint_Eau2);


(* Etat de synthese "Intro glace prête" *)
(* pour la gachée en cours d'introduction *)
	(* car "suite_index_introduction", "presence_prod_eau1", et "presence_prod_eau2" *)
	(* sont liés à la gâchée en cours d'introduction *)
Intro_Glace_Prete_Gra1 := ((Conf_Eau_dest_basc[1] &lt;&gt; 1) OR ((TG_OUT[suite_index_introduction].CR_Etat_Gachee AND 16#0020) &lt;&gt; 0) OR NOT Presence_prod_Eau1)
	AND ((Conf_Eau_dest_basc[2] &lt;&gt; 1) OR ((TG_OUT[suite_index_introduction].CR_Etat_Gachee AND 16#4000) &lt;&gt; 0) OR NOT Presence_prod_Eau2);
Intro_Glace_Prete_Gra2 := ((Conf_Eau_dest_basc[1] &lt;&gt; 2) OR ((TG_OUT[suite_index_introduction].CR_Etat_Gachee AND 16#0020) &lt;&gt; 0) OR NOT Presence_prod_Eau1)
	AND ((Conf_Eau_dest_basc[2] &lt;&gt; 2) OR ((TG_OUT[suite_index_introduction].CR_Etat_Gachee AND 16#4000) &lt;&gt; 0) OR NOT Presence_prod_Eau2);


(* Etat de synthese "Transfert glace prêt" *)
(* pour les gachées en cours de dosage sur les lignes granulat) *)
	(* car "Gachee_en_cours_granulat1", "Gachee_en_cours_granulat2", et *)
	(* "x_gra#_presence_prod_eau#" sont liés aux gâchées en cours de *)
	(* dosage sur les lignes à granulat *)
Transfert_Glace_Pret_Gra1 := ((Conf_Eau_dest_basc[1] &lt;&gt; 1) OR ((TG_OUT[NG_Gra1].CR_Etat_Gachee AND 16#0020) &lt;&gt; 0) OR NOT Gra1_presence_prod_Eau1)
	AND ((Conf_Eau_dest_basc[2] &lt;&gt; 1) OR ((TG_OUT[NG_Gra1].CR_Etat_Gachee AND 16#4000) &lt;&gt; 0) OR NOT Gra1_presence_prod_Eau2);
Transfert_Glace_Pret_Gra2 := ((Conf_Eau_dest_basc[1] &lt;&gt; 2) OR ((TG_OUT[NG_Gra2].CR_Etat_Gachee AND 16#0020) &lt;&gt; 0) OR NOT Gra2_presence_prod_Eau1)
	AND ((Conf_Eau_dest_basc[2] &lt;&gt; 2) OR ((TG_OUT[NG_Gra2].CR_Etat_Gachee AND 16#4000) &lt;&gt; 0) OR NOT Gra2_presence_prod_Eau2);


(* Etat de synthese "Intro en cours" *)
(* pour la gachée en cours d'introduction *)
	(* car les variables "introduction_*_en_cours" sont liés à la *)
	(* gâchée en cours d'introduction *)
Intro_Glace_encours_Gra1 := ((Conf_Eau_dest_basc[1] = 1) AND (Introduction_Eau1_encours OR Introduction_Gra_encours))
	OR ((Conf_Eau_dest_basc[2] = 1) AND (Introduction_Eau2_encours OR Introduction_Gra_encours));
Intro_Glace_encours_Gra2 := ((Conf_Eau_dest_basc[1] = 2) AND (Introduction_Eau1_encours OR Introduction_Gra_encours))
	OR ((Conf_Eau_dest_basc[2] = 2) AND (Introduction_Eau2_encours OR Introduction_Gra_encours));


(* ------------------------------------------------ 
(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
 ------------------------------------------------ *)
(* ************************************************* *)
(* Additionnal line to Weighers/belts GRA1 &amp; GRA2  *)

(*Additional balance emptying into aggregate balance*)
Intro_Presence_Add_Gra1 := ((Conf_basc_add_dest = 5) and Presence_prod_Add);
Intro_Presence_Add_Gra2 := ((Conf_basc_add_dest = 6) and Presence_prod_Add);

(* Additional balance dosing *)
Transf_Presence_Add_Gra1 := ((Conf_basc_add_dest = 5) AND (TG_OUT[NG_Gra1].CR_Etat_Presence_Produit AND 16#0100) &lt;&gt; 0);
Transf_Presence_Add_Gra2 := ((Conf_basc_add_dest = 6) AND (TG_OUT[NG_Gra1].CR_Etat_Presence_Produit AND 16#0100) &lt;&gt; 0);

(* Additional balance  *)
Seuil_vide_Add_vers_Gra1 := Conf_basc_add_dest &lt;&gt; 5  OR Seuil_vide_atteint_add;
Seuil_vide_Add_vers_Gra2 := Conf_basc_add_dest &lt;&gt; 6  OR Seuil_vide_atteint_add;

(* Additional balance weighed &amp; ready *)
Intro_Add_Prete_Gra1 := ((Conf_basc_add_dest &lt;&gt; 5) OR ((TG_OUT[suite_index_introduction].CR_Etat_Gachee_2 AND 16#0001) &lt;&gt; 0));
Intro_Add_Prete_Gra2 := ((Conf_basc_add_dest &lt;&gt; 6) OR ((TG_OUT[suite_index_introduction].CR_Etat_Gachee_2 AND 16#0001) &lt;&gt; 0));

(* Additional balance  *)
Transfert_Add_Pret_Gra := (Conf_basc_add_dest &lt;&gt; 5 AND Conf_basc_add_dest &lt;&gt; 6) OR (Conf_basc_add_dest = 5 AND(TG_OUT[NG_GRA1].CR_Etat_Gachee_2 AND 16#0001) &lt;&gt; 0)
	OR (Conf_basc_add_dest = 6 AND (TG_OUT[NG_GRA2].CR_Etat_Gachee_2 AND 16#0001) &lt;&gt; 0) 
	OR NOT (((TG_OUT[NG_GRA1].CR_Etat_Presence_Produit AND 16#0100) &lt;&gt; 0) AND ((TG_OUT[NG_GRA2].CR_Etat_Presence_Produit AND 16#0100) &lt;&gt; 0));

(* Additional balance  *)
Intro_Add_encours_Gra1 := Conf_basc_add_dest = 5 AND (Introduction_Add_encours  OR Introduction_Gra_encours);
Intro_Add_encours_Gra2 := Conf_basc_add_dest = 6 AND (Introduction_Add_encours OR Introduction_Gra_encours);

(* ************************************************* *)
(* Additional line to EAU1 weigher *)
Seuil_vide_atteint_Add_Eau1 := (Conf_basc_add_dest = 13 AND Seuil_vide_atteint_add);
Intro_Presence_Add_Eau1 := ((Conf_basc_add_dest = 13) AND Presence_prod_Add);
Lancer_transfert_Add_Eau1 := Intro_Presence_Add_Eau1 AND Pesee_Adj_terminee AND Pesee_Eau1_terminee;
(* ------------------------------------------------ *)

(* ************************************************* *)
(* Additional line to SKIP Transfer or Belt transfer *)
Transf_Presence_Add_skip := (Conf_basc_add_dest = 8) AND ((TG_OUT[suite_index_transfert_G].CR_Etat_Gachee_2 AND 16#0001) &lt;&gt; 0);
Intro_Presence_Add_skip := (Conf_basc_add_dest = 8) AND Presence_prod_Add;

Transf_Presence_Add_tapis_tr := (Conf_basc_add_dest = 7) AND ((TG_OUT[suite_index_transfert_G].CR_Etat_Gachee_2 AND 16#0001) &lt;&gt; 0);
Intro_Presence_Add_tapis_tr := (Conf_basc_add_dest = 7) AND Presence_prod_Add;
</STSource>
	</program>
	<program>
		<identProgram name="370_Stockage_inter_Gra" type="section" task="MAST"></identProgram>
		<ILSource>(**********************************************************************************************************************************)
 (*								transfert d'une pesée vers un organe de stockage intermédiaire									  *)
 (**********************************************************************************************************************************)

 (* Initialisation des variables locales de la section *)
 LD Stockage_inter_Gra_DEM_INIT
 JMPCN debut_transfert_granulat

	LD TRUE
	S tremie_tampon_granulat_vide
	S skip_transfert_vide
	R Dire_transfert_Gra_termine
	R retard_transfert_glace_add_lu (* Ajout R.C. 26/11/2009 retard d'introduction sur la glace *)
	R t0_Transfert_Glace_Add (* Ajout R.C. 26/11/2009 *)
	R Lancer_transfert_Glace_Eau1 (* Ajout R.C. 26/11/2009 *)
	R Lancer_transfert_Glace_Eau2 (* Ajout R.C. 26/11/2009 *)
	R Lancer_transfert_add_Gra (* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	R Lancer_transfert_add_skip (* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	R Lancer_transfert_Add_tapis_tr (* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	
	LD 0
	ST chrono_transfert_glace_add (* Ajout R.C. 26/11/2009 *)
	
	LD index_sortie_buffer
	ST suite_index_transfert_G (* Déplacé par R.C. 26/11/2009 *)

	(* Reset de la demande d'init *)
	LD TRUE
	R Stockage_inter_Gra_DEM_INIT (* L'init de la section a bien été prise en compte. *)

 debut_transfert_granulat:
  
 (* Test la fin du transfert, déclaré en section introduction2 *)
 ld Dire_transfert_Gra_termine
 jmpc Dire_terminee_granulat  

(*  
 (* Déplacé par R.C. 26/11/2009 *)
 ld index_sortie_buffer
 st suite_index_transfert_G 
*)
  
 debut_transfert_G:
 (* Calcule le mot d'état TRANSFERT (corespondant aux granulats en cours) et extrais les bits utiles *)
 	GET_BIT (IN:=TG_OUT[suite_index_transfert_G].CR_Etat_TTGra,NO:=2)
	ST transfert_terminee_granulat
	  
 (*Si pesée terminée pour cette gachée recherche de la gachée suivante*)
 
 
	(* On passe à la gâchée suivante si celle-ci contient des *)
	(* informations de gâchée, mais aucun granulat ni glace *)
	(* Modif R.C. 23/02/2010 *)
	(* Corrige un dysfonctionnement sur anhydrite à partir *)
	(* de P705, suite à la correction d'un bug aléatoire. *)
	LD TRUE
	AND (TG_IN[suite_index_transfert_G].Numero_gachee
		NE 0
	)
	AND (TG_IN[suite_index_transfert_G].CR_Code_fin
		EQ TG_IN[suite_index_transfert_G].Numero_gachee
	) (* Table de gâchée remplie *)
	AND (TG_IN[suite_index_transfert_G].Basc_gra1[1].Numero_produit
		EQ 0
	) (* Pas de produit Granulat 1 à doser *)
	AND (TG_IN[suite_index_transfert_G].Basc_gra2[1].Numero_produit
		EQ 0
	) (* Pas de produit Granulat 2 à doser *)
	AND (FALSE
		OR (TG_IN[suite_index_transfert_G].Basc_Eau1[1].Numero_produit
			EQ 0
		) (* Pas de produit Glace pas bascule Eau1 à doser *)
		OR (Conf_Eau_dest_basc[1]
			EQ 0
		) (* ou la bascule Eau1 ne passe pas par une chaine granulat *)
	)
	AND (FALSE
		OR (TG_IN[suite_index_transfert_G].Basc_Eau2[1].Numero_produit
			EQ 0
		) (* Pas de produit Glace pas bascule Eau2 à doser *)
		OR (Conf_Eau_dest_basc[2]
			EQ 0
		) (* ou la bascule Eau2 ne passe pas par une chaine granulat *)
	)
	AND (FALSE	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
		OR (TG_IN[suite_index_transfert_G].Basc_Add[1].Numero_produit
			EQ 0
		)(* Pas de produit ADD pas bascule ADD à doser *)
		OR (TRUE
			AND (Conf_basc_add_dest
				NE 5
			)(* bascule ADD ne passe pas par la chaine granulats *)
			AND (Conf_basc_add_dest
				NE 6
			)(* bascule ADD ne passe pas par la chaine granulats *)
			AND (Conf_basc_add_dest
				NE 8
			)(* bascule ADD ne passe pas par la chaine granulats *)
		)
	)
	ST Pas_de_transfert_granulat

 	ld transfert_terminee_granulat
	or Pas_de_transfert_granulat (* Modif R.C. 23/02/2010 *)
 	jmpcn transfert2

		LD FALSE
		ST transfert_terminee_granulat (* Modif R.C. 25/02/2010 *)
			(* L'index s'incrémentait de +2 sur certaines gachées *)
			(* anhydrite : +1 d'abord car "Pas_de_transfert_granulat" *)
			(* était vu à 1, puis +1 ensuite car "transfert_terminee_granulat" *)
			(* était vu à 1 car non remis à 0. *)
 	 
 		ld suite_index_transfert_G
 		add 1
 		st suite_index_transfert_G
  		LE 4
 		jmpc transfert1
 		ld 1
 		st suite_index_transfert_G
  
 transfert1:
  
		(* Changement de gachee -&gt; Initialiser le transfert de la glace *)
		LD 0
		ST chrono_transfert_glace_add
		LD TRUE
		R retard_transfert_glace_add_lu (* Ajout R.C. 26/11/2009 - Se souvenir que *)
		(* le retard de transfert de la glace n'a pas encore été récupéré *)

 		ld suite_index_transfert_G
 		eq index_entree_buffer
 		jmpc pas_transfert_granulat

 		jmp debut_transfert_G
 		
 transfert2:	
 (* Calcule le mot d'état PRESENCE PRODUIT  (corespondant aux granulats en cours)  et extrais les bits utiles *)
 	WORD_TO_BIT (IN:=TG_OUT[suite_index_transfert_G].CR_Etat_Presence_Produit,
 		bit0 =&gt; Presence_Gra1,
 		bit1 =&gt; Presence_Gra2
  		)
 (* Création des informations pesée granulat terminée *)  
 (* GRANULAT1 *)
	LD TG_OUT[NG_Gra1].CR_Etat_Basc_Gra1
	EQ 2
	ST Pesee_terminee_Gra1
  
  
 (* GRANULAT2 *)
 (*Modif MD 13/08/04 mélange de gachée P367*)
 (* remplacement de "Index_mot_etat_granulat2" par "Index_mot_etat_g2_pes_term"*)
 	LD TG_OUT[NG_Gra2].CR_Etat_Basc_Gra2
 	eq 2
 	st Pesee_terminee_Gra2
  


(* Récupérer le retard d'introduction s'il y a de la glace à transferer *)
(* Ajout R.C. 26/11/2009 *)
(* Note : On ne peut pas utiliser les variables "x_Presence_Glace_Gra#" *)
(* ni "presence_prod_eau1#", car ces variables sont basées sur le numéro *)
(* de gâchées en cours d'introduction qui est susceptible d'être en retard *)
(* par rapport au numéro de gâchée en cours de transfert. *)

LDN retard_transfert_glace_add_lu
AND (TG_IN[suite_index_transfert_G].Numero_Gachee
	NE 0
	)
AND (TG_IN[suite_index_transfert_G].CR_Code_fin
	EQ TG_IN[suite_index_transfert_G].Numero_Gachee
	)
(* Modif R.C. 08/12/2009 : Récupérer le retard de transfert de la *)
(* glace s'il n'a pas déjà été récupéré, et qu'en plus la table de *)
(* gachée a bien été remplie par BC-Mix - chose qu'on teste grace à *)
(* la valeur de Numero_Gachee et de CR_Code_fin. *)
JMPCN fin_recup_retard_intro_glace

	(* Récupérer les retards de transfert de la glace par rapport aux granulats *)
	LD TG_IN[suite_index_transfert_G].retard_transf_glace_eau1
	ST retard_transfert_glace_eau1
	LD TG_IN[suite_index_transfert_G].retard_transf_glace_eau2
	ST retard_transfert_glace_eau2
	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	LD TG_IN[suite_index_transfert_G].retard_transf_add
	ST retard_transfert_add


	(* Récupérer le retard d'introduction pour la glace de la bascule "Eau 1" *)
	LD TRUE
	R Glace_Eau1_a_transferer (* Init *)
	LD TRUE
	AND (TG_IN[suite_index_transfert_G].Basc_Eau1[1].Numero_produit
		NE 0 (* Il y a un produit 'Eau1' à doser dans la gachée *)
	)
	AND (Conf_Eau_dest_basc[1]
		NE 0 (* Eau1 est de la glace *)
	)
	JMPCN n_est_pas_glace_eau1
		LD TRUE
		S Glace_Eau1_a_transferer
	n_est_pas_glace_eau1:

	(* Récupérer le retard d'introduction pour la glace de la bascule "Eau 2" *)
	LD TRUE
	R Glace_Eau2_a_transferer (* Init *)
	LD TRUE
	AND (TG_IN[suite_index_transfert_G].Basc_Eau2[1].Numero_produit
		NE 0 (* Il y a un produit 'Eau2' à doser dans la gachée *)
	)
	AND (Conf_Eau_dest_basc[2]
		NE 0 (* Eau2 est de la glace *)
	)
	JMPCN n_est_pas_glace_eau2
		LD TRUE
		S Glace_Eau2_a_transferer
	n_est_pas_glace_eau2:

	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	(* Récupérer le retard d'introduction pour la ligne Additionnelle *)
	LD TRUE
	R Add_a_transferer (* Init *)
	LD TRUE
	AND (TG_IN[suite_index_transfert_G].Basc_add[1].Numero_produit
		NE 0 (* Il y a un produit ADD à doser dans la gachée *)
	)
	AND ( FALSE
		OR (Conf_basc_add_dest
		EQ 5
		) (* ADD vers tapis 1*)
		OR (Conf_basc_add_dest
		EQ 6 (* ADD vers tapis 2*)
		)
		OR (Conf_basc_add_dest
		EQ 7 (* ADD vers Tapis Transfert*)
		)
		OR (Conf_basc_add_dest
		EQ 8 (* ADD vers Skip Transfert*)
		)
	)
	JMPCN pas_add_vers_tapis
		LD TRUE
		S Add_a_transferer
	pas_add_vers_tapis:
		
	LD TRUE
	S retard_transfert_glace_add_lu (* Se souvenir que les retards d'introduction *)
		(* de la glace ont bien été récupérés *)

fin_recup_retard_intro_glace:


(* Modif R.C. 30/09/2009, avec la nouvelle section de dosage eau, *)
(* la présence eau est déclarée plus tot qu'avec l'ancienne section, *) 
(* et du coup ca entrainait en début de gachée : *)
(*   =&gt; passage de "Gra_pret_pour_transfert" à 1 *)
(*   =&gt; "transfert_granulat_OK" est mis à 1 avec un SET *)
(*   =&gt; tapis de transfert se met en marche *)
(*   =&gt; glace et granulats ne se dosent pas. *)
(* Introduction de la condition "pas_de_granulat_a_doser" pour pallier au problème *)
(*
ld true
and (TG_OUT[suite_index_transfert_G].CR_Etat_Basc_Gra1
	eq 2
	)
and (false
	orn Conf_granulat2_pres_balance
	or (TG_OUT[suite_index_transfert_G].CR_Etat_Basc_Gra2
		eq 2
		)
	)
st pas_de_granulat_a_doser
*)
ld false (* en cours de debug ! *)
st pas_de_granulat_a_doser

 	
 (*Granulat prêt à être transferé*)
 ldn transfert_terminee_granulat
 and (Presence_Gra1
      or Presence_Gra2
      or (pas_de_granulat_a_doser
           and (Transf_Presence_Glace_Gra1
                or Transf_Presence_Glace_Gra2
		or Transf_Presence_ADD_Gra1 (* ASM Nov 2013 -P864 : artf 1347731 : Additional balance *)
		or Transf_Presence_ADD_Gra2 (* ASM Nov 2013 -P864 : artf 1347731 : Additional balance *)
               )
          )
     )
 and Pesee_terminee_Gra1
 and (
      ldn Conf_granulat2_pres_balance
      or (Pesee_terminee_Gra2
          and Conf_granulat2_pres_balance
         )
     )
 and Transfert_Glace_Pret_Gra1 (* ne permettre le transfert que si la *)
 and Transfert_Glace_Pret_Gra2         (* glace est prete à etre introduite *)
 and Transfert_ADD_Pret_Gra    (* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
 AND (TG_OUT[suite_index_transfert_G].CR_Etat_Presence_Produit
      AND (16#0001
          OR 16#0002
      )
      NE 0
 ) (* Ajout R.C. 06/12/2011 P808/P856 : On remplace une correction faite en *)
 	(* P800 sur Pesee_terminee_Gra1. Cette correction bloquait le transfert *)
	(* lorsqu'il n'y avait des granulats dosés que sur la ligne Gra2 (#1131). *)
 st Gra_pret_pour_transfert
  

 (* Création du bit de validation du transfert *)
 ld Gra_pret_pour_transfert
 and (1
 and (bit_valide_skip
 and Conf_skip_transfert
 andn Conf_TT_granulat
 )
 or (bit_valide_TT
 and Conf_TT_granulat
 andn Conf_skip_transfert
 )
 )
 s transfert_granulat_OK
 r tremie_tampon_granulat_vide
 r skip_transfert_vide
  
 (*Vidange des granulats dans le skip dans le cas de skip + trémie tampon*)
  
 ld Gra_pret_pour_transfert
 and bit_valide_skip
 and Conf_skip_transfert
 and Conf_TT_granulat
 s Vidange_granulat_dans_skip
 r skip_transfert_vide
  
 (*Vidange du skip dans la trémie tampon*)
  
 ld Skip_pret_pour_vidange_dans_TT
 and bit_valide_TT
 and Conf_skip_transfert
 and Conf_TT_granulat
 s Vidange_skip_dans_TT
 r tremie_tampon_granulat_vide
 r anticipation_skip_TT

 (* Ajout G.C.&amp;&amp; A.L. 02/03/2016 P869c - BC-Mix 5.6.2. *)
 (* BC-Mix précise désormais qu'on est en anhydrite composants par composants *)
 (* pour éviter que le skip monte tout seul à la fin du dosage granulats *)
 (* Cette modification impact la section 400 et remplace le bit Vidange_terminee_Gra *)
 (* Ce problème est dû à une désynchronisation de l'indexe NG_INTRO et suite_index_transfert_G *)
 (* Du coup le Vidange_terminee_Gra est toujours vrai tant que le NG_INTRO est sur anhydrite *)
 (* Ce qui entraine dés la fin du dosage granulat le départ du skip si le NG_INTRO est sur anhydrite *)
 ld Conf_skip_transfert
 and Anhydrite_CPC
 and Conf_TT_granulat
 and (Presence_Gra1
      or (pas_de_granulat_a_doser
           and (Transf_Presence_Glace_Gra1
		or Transf_Presence_ADD_Gra1
		)
	)
 )
 st Pres_Gra1_Skip_TT_anhCPC

 ld Conf_skip_transfert
 and Anhydrite_CPC
 and Conf_TT_granulat
 and (Presence_Gra2
      or (pas_de_granulat_a_doser
           and (Transf_Presence_Glace_Gra2
		or Transf_Presence_ADD_Gra2
		)
	)
 )
 st Pres_Gra2_Skip_TT_anhCPC

 ld Vidange_terminee_Gra1
 and (Pres_Gra1_Skip_TT_anhCPC
 or Pres_Gra2_Skip_TT_anhCPC
 )
 and (
      ldn Conf_granulat2_pres_balance
      or (Vidange_terminee_Gra2
          and Conf_granulat2_pres_balance
         )
     )
 st Vid_terminee_Gra_Skip_TT_anhCPC

(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
(* Transfert ADD vers Skip de transfert *)
ldn transfert_terminee_granulat
 and Add_a_transferer 
 and Transf_Presence_Add_skip
 and (TG_OUT[suite_index_transfert_G].CR_Etat_Presence_Produit
 	AND (16#0100
	)
	NE 0
	)
  and ( true
 	andn (Presence_Gra1
		or Presence_Gra2
		)
  	or  (false
 		or (
			ld Conf_granulat_vidange_parallele
 			and (transfert_granulat_OK
			or Vidange_granulat_dans_skip
				)
			)
		or (
			ldn Conf_granulat_vidange_parallele
 			and (Vidange_terminee_Gra1
			orn Presence_Gra1
				)	
			and (Vidange_terminee_Gra2
			orn Presence_Gra2
				)
			)
		)
	)
st Lancer_transfert_Add_skip

(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
(* Transfert ADD vers Tapis de transfert *)
ldn transfert_terminee_granulat
 and (	true
 	and (Conf_TT_granulat
		or Conf_skip_transfert
		)
	)
 and Add_a_transferer 
 and Transf_Presence_Add_tapis_tr
 and (TG_OUT[suite_index_transfert_G].CR_Etat_Presence_Produit
 	AND (16#0100
	)
	NE 0
	)
  and ( true
 	andn (Presence_Gra1
		or Presence_Gra2
		)
  	or  (false
 		or (
			ld Conf_granulat_vidange_parallele
 			and transfert_granulat_OK
				
			)
		or (
			ldn Conf_granulat_vidange_parallele
 			and (Vidange_terminee_Gra1
			orn Presence_Gra1
				)	
			and (Vidange_terminee_Gra2
			orn Presence_Gra2
				)
			)
		)
	)
st Lancer_transfert_Add_tapis_tr
  
 (* Si bit de validation à un Dire transfert en cours dans mot d'état *)
 ld transfert_granulat_OK
 or Vidange_granulat_dans_skip
 jmpcn pas_transfert_granulat	
  
 	LD TRUE
	AND (Glace_Eau1_a_transferer
	     OR Glace_Eau2_a_transferer
     	     OR Add_a_transferer (* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	     )
	ANDN TG_OUT[suite_index_transfert_G].CR_Etat_TTGra.0 (* Ajout M.D. 11/02/2011 P803 *)
		(* pour ne faire le SET qu'au premier passage à cet endroit, et non *)
		(* en permanence lors de la gâchée. - Problème vu avec un tapis de transfert. *)
	S t0_Transfert_Glace_Add (* Ajout R.C. 26/11/2009 *)

	(* Dire en cours transfert granulat *)
	LD TG_OUT[suite_index_transfert_G].CR_Etat_TTGra
 	or 16#0001
	ST TG_OUT[suite_index_transfert_G].CR_Etat_TTGra

  	jmp pas_transfert_granulat
  
  		Dire_terminee_granulat:
 		(* Dire terminee et RAZ en cours *)
 		LD TG_OUT[suite_index_transfert_G].CR_Etat_TTGra
		or 16#0002
 		and 16#fffe
 		ST TG_OUT[suite_index_transfert_G].CR_Etat_TTGra
  	
  		(* Dire terminée dans mot état gachée *)
 		LD TG_OUT[suite_index_transfert_G].CR_Etat_Gachee
		or 16#0004
 		ST TG_OUT[suite_index_transfert_G].CR_Etat_Gachee
 	
 		(* Déclaration d'organe indisponible *)
 		ld true
 		r Dire_transfert_Gra_termine
 		r Vidange_en_cours_Gra1
 		r Vidange_terminee_Gra1
 		r Vidange_en_cours_Gra2
 		r Vidange_terminee_Gra2
 		
 		(*Anticipation montée skip avant la fin de tous les dosages*)
 		ld conf_skip_avant_fin_dosages
 		andn Conf_TT_granulat
 		s anticipation_montee_skip
 		 
 pas_transfert_granulat:
  
 (*Anticipation montée skip vers trémie tampon*)
  
  
 ld Skip_pret_pour_vidange_dans_TT
 and (conf_skip_avant_fin_dosages
 or (Conf_TT_granulat_tps_vidange
 sub tps_ecoule_vidange_TT_granulat
 lt Conf_skip_tps_bas_attente
 and Vidange_TT_granulat
 and Conf_skip_transfert
 and Conf_TT_granulat
 )
 )
 s anticipation_skip_TT
  
 (*Calcul du seuil à dépasser pour le contrôle du poids transferé dans la trémie tampon*)
  
 ld Conf_TT_granulat_pourcent
 int_to_dint
 st DINT_TT_gra_pourcent


(* Boucle pour faire le cumul des poids reels peses des granulats *)
(* Modif R.C.11/06/2010 *)

 (* Init de la boucle *)
 LD 1
 ST NP_Gra_ctrl_poids_TT_Gra
 LD 0
 ST poids_pese_Gra (* Init cumul *)

 (* Boucle *)
cumuler_poids_pour_chaque_prod_gra:
 (* Cumuler le poids pour le produit "granulat" en cours *)
 LD TG_OUT[suite_index_transfert_G].CR_basc_Gra1[NP_Gra_ctrl_poids_TT_Gra].Poids_reel_pese
 ADD poids_pese_Gra
 ST poids_pese_Gra
 LD TG_OUT[suite_index_transfert_G].CR_basc_Gra2[NP_Gra_ctrl_poids_TT_Gra].Poids_reel_pese
 ADD poids_pese_Gra (* Ajout R.C. 11/06/2010 : avant le poids associé à *)
 	(* la chaine "granulat 2" n'était pas pris en compte dans le contrôle de poids *)
	(* de la trémie tampon à granulats *)
 ST poids_pese_Gra
 (* Produit "granulat" suivant *)
 LD NP_Gra_ctrl_poids_TT_Gra
 ADD 1
 ST NP_Gra_ctrl_poids_TT_Gra
 (* Boucler s'il reste d'autres produits "granulat" à prendre en compte *)
 LD NP_Gra_ctrl_poids_TT_Gra
 LE 5
 JMPC cumuler_poids_pour_chaque_prod_gra

 LD poids_pese_Gra
 int_to_dint
 mul DINT_TT_gra_pourcent
 div 100
 dint_to_int
 st Seuil_a_depasser_TT_Gra

(* -------------------------------------------------------------------- *)
  
(* Lancer le transfert de la glace 
 / Granulat avec un retard si necessaire *) (* ASM Nov 2013 -P864 : Additional balance *)
 (* Ajout R.C. 26/11/2009 *)

 (* Chronométrage pour le transfert de la glace *)
 LD t0_Transfert_Glace_Add
 AND top_100_ms
 JMPCN Sauter_chrono_transfert_glace_add
 	(* Cette méthode de chronométrage est la même que pour l'introduction *)
	(* dans le malaxeur (afin de ne pas avoir de problème si on passe en *)
	(* manuel logiciel entre temps, notamment), mais nous utilisons une *)
	(* base de temps en 1/10ièmes de secondes ici pour être plus précis *)
	 LD chrono_transfert_glace_add
	 add 1
	 st chrono_transfert_glace_add
 Sauter_chrono_transfert_glace_add:

 (* Lancer le transfert de la glace de la bascule "Eau 1" *)
 LD chrono_transfert_glace_add
 GE (retard_transfert_glace_eau1
 	MUL 10 (* conversion en 1/10ièmes de secondes *)
 )
 AND Glace_Eau1_a_transferer
 AND t0_Transfert_Glace_Add
 S Lancer_transfert_Glace_Eau1	

 (* Lancer le transfert de la glace de la bascule "Eau 2" *)
 LD chrono_transfert_glace_add
 GE (retard_transfert_glace_eau2
 	MUL 10 (* conversion en 1/10ièmes de secondes *)
 )
 AND Glace_Eau2_a_transferer
 AND t0_Transfert_Glace_Add
 S Lancer_transfert_Glace_Eau2	

 (* Lancer le transfert de ligne Additionnelle *)
 (* ASM Nov 2013 -P864 : Additional balance *)
 LD chrono_transfert_glace_add
 GE (retard_transfert_add
 	MUL 10 (* conversion en 1/10ièmes de secondes *)
 )
 AND t0_Transfert_Glace_Add
 AND Add_a_transferer
 AND (FALSE
 	OR (Conf_basc_add_dest 
 	EQ 5
 		)
	OR (Conf_basc_add_dest 
 	EQ 6
 		)	
	)
 S Lancer_transfert_ADD_gra

 (* Arrêter le chronomètre à la fin de la tempo *)
 (* Cela peut éviter un overflow qui prendrait moins d'une heure *)
 LD TRUE
 AND (Lancer_transfert_Glace_Eau1
 	ORN Glace_Eau1_a_transferer
 )
 AND (Lancer_transfert_Glace_Eau2
 	ORN Glace_Eau2_a_transferer
 )
 AND (Lancer_transfert_ADD_gra
 	ORN Add_a_transferer
 )
 R t0_Transfert_Glace_Add
</ILSource>
	</program>
	<program>
		<identProgram name="380_Stockage_inter_Cim" type="section" task="MAST"></identProgram>
		<ILSource>(**********************************************************************************************************************************)
 (*								transfert d'une pesée vers un organe de stockage intermédiaire									  *)
 (**********************************************************************************************************************************)

 (* Initialisation des variables locales de la section *)
 LD Stockage_inter_Cim_DEM_INIT
 jmpc debut_transfert_ciment
  
	LD TRUE
	S TT_cim_vide
	S Bonbonne_cim_vide
	R Dire_transfert_Cim_termine

	(* Reset de la demande d'init *)
	LD TRUE
	R Stockage_inter_Cim_DEM_INIT (* L'init de la section a bien été prise en compte. *)

 debut_transfert_ciment:
  
 ld Dire_transfert_Cim_termine
 jmpc Dire_terminee_ciment 
  
 ld index_sortie_buffer
 st suite_index_transfert_cim 
  
 debut_transfert_C:
 (* Calcule le mot d'état TRANSFERT (corespondant aux ciment en cours) et extrait les bits utiles *)
 	GET_BIT (IN:=TG_OUT[suite_index_transfert_cim].CR_Etat_Gachee,NO:=5)
	ST Transfert_cim_termine
 	
 	
 	
  
 (*Si pesée terminée pour cette gachée recherche de la gachée suivante*)
 	ldn Transfert_cim_termine
 	jmpc transfert2_ciment
 	 
 		ld suite_index_transfert_cim
 		add 1
 		st suite_index_transfert_cim
  		LE 4
 		jmpc transfert1_ciment
 		ld 1
 		st suite_index_transfert_cim
  
 transfert1_ciment:
  
 		ld suite_index_transfert_cim
 		eq index_entree_buffer
 		jmpc pas_transfert_ciment
  
 		jmp debut_transfert_C
 		
 transfert2_ciment:	
 (* Calcule le mot d'état PRESENCE PRODUIT  (corespondant aux liants en cours)  et extrais les bits utiles *)
 	WORD_TO_BIT (IN:=TG_OUT[suite_index_transfert_cim].CR_Etat_Presence_Produit,
 		BIT2 =&gt; Presence_Cim1)
 	
(*
 (* Création des informations pesée ciment terminée *)  
 	(* Modif Cim2 M.D. 26/03/09 CIMENT 2 *)
	(*  "Index_mot_etat_ciment" était mis a jour en section dosage ciment*)
	LD TG_OUT[NG_Cim1].CR_Etat_Basc_Cim
 	eq 2
 	st Pesee_terminee_ciment (* Ce flag est écrit également en section 220_Dosage_ciment (ancienne section de dosage) ! *)
*)(* Modif R.C. 04/11/2010 *)
  
 (*Ciment prêt à être transferé*)	
 ldn Transfert_cim_termine
 and Presence_Cim1
(* and Pesee_terminee_ciment*)(* Modif R.C. 04/11/2010 : modifié car ne fonctionnait pas avec la nouvelle section de dosage ciment *)
 AND (TG_OUT[suite_index_transfert_cim].CR_Etat_Basc_Cim1 (* Modif R.C. 04/11/2010 *)
 	EQ 2
 )
 AND (TG_IN[suite_index_transfert_cim].Numero_gachee
 ne 0
 )
 st cim_pret_pour_transfert
  
 (* Création du bit de validation du transfert *)
 ld cim_pret_pour_transfert
 and Bonbonne_cim_vide
 and Info_autorisation_chargement_SAS
 and Conf_bonbonne_cim
 andn Transfert_bonbonne_dans_TT
 s Vidange_Cim_dans_bonbonne
 r Bonbonne_cim_vide
  
 ld bonbonne_prete_pour_transfert
 and Info_pressostat_presence_air
 and bit_valide_TT_cim
 and Conf_bonbonne_cim
 and Conf_TT_Cim
 andn Info_autorisation_chargement_SAS
 s Transfert_bonbonne_dans_TT
 r TT_cim_vide
  
 jmp pas_transfert_ciment
  
  		Dire_terminee_ciment:
  		(* Dire terminée dans mot état gachée *)
		LD TG_OUT[suite_index_transfert_cim].CR_Etat_Gachee
 		or 16#0010
		ST TG_OUT[suite_index_transfert_cim].CR_Etat_Gachee
 	
 		(* Déclaration d'organe indisponible *)
 		ld true
 		r Dire_transfert_Cim_termine
  
 pas_transfert_ciment:
  
 (*Calcul du seuil à dépasser pour le contrôle du poids transferé dans la trémie tampon*)
  
 ld Conf_TT_cim_pourcent
 int_to_dint
 st DINT_TT_cim_pourcent
  




(* Boucle pour faire le cumul des poids reels peses des liants *)
(* Modif R.C.11/06/2010 *)

 (* Init de la boucle *)
 LD 1
 ST NP_Cim_ctrl_poids_TT_Cim
 LD 0
 ST poids_pese_Cim1 (* Init cumul *)

 (* Boucle *)
cumuler_poids_pour_chaque_prod_cim:
 (* Cumuler le poids pour le produit "ciment" en cours *)
 LD TG_OUT[suite_index_transfert_cim].CR_basc_Cim1[NP_Cim_ctrl_poids_TT_Cim].Poids_reel_pese
 ADD poids_pese_Cim1
 ST poids_pese_Cim1
 (* Produit "ciment" suivant *)
 LD NP_Cim_ctrl_poids_TT_Cim
 ADD 1
 ST NP_Cim_ctrl_poids_TT_Cim
 (* Boucler s'il reste d'autres produits "ciment" à prendre en compte *)
 LD NP_Cim_ctrl_poids_TT_Cim
 LE 4
 JMPC cumuler_poids_pour_chaque_prod_cim



 LD poids_pese_Cim1
 int_to_dint
 mul DINT_TT_cim_pourcent
 div 100
 dint_to_int
 st Seuil_a_depasser_TT_cim
</ILSource>
	</program>
	<program>
		<identProgram name="385_Stockage_inter_Ppe" type="section" task="MAST"></identProgram>
		<STSource>(****************************************************************************************)
(*	Transfert d'un produit pompé vers un organe de stockage intermédiaire		*)
(****************************************************************************************)
(* Développé par R.C. 23/02/2012 *)
(* sur la base de la spécification LAF014-DSL34 *)

(* La section est codée sur un modèle Etape-Transition *)


(* Initialisation des variables locales de la section *)
Stockage_inter_Ppe_INIT_EN_COURS := Stockage_inter_Ppe_DEM_INIT;
IF Stockage_inter_Ppe_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Stockage_inter_Ppe_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


Pb_cond_initiales_tampon_ppe := FALSE; (* par défaut *)

FOR Idx_Ppe:=1 TO 20 DO

	(* Traitement préliminaire *)
	(*-------------------------*)
	(* Init *)

	Etape_385_Designee[Idx_Ppe]		:= FALSE; (* Permettra de savoir que l'activité *)
		(* d'une étape a changé, afin de ne faire évoluer qu'une étape à la fois *)



	(* Traitement séquentiel *)
	(*-----------------------*)
	(* - Scrutation des Etapes *)

	(* Etape initiale : 010_Att_Cond_Initiales *)
	IF Stockage_inter_Ppe_INIT_EN_COURS THEN
		Etape_385_010_Att_Cond_Initiales[Idx_Ppe]	:= 1;
		Etape_385_020_Att_gestion_ccr[Idx_Ppe]		:= 0;
		Etape_385_030_Att_fin_dosage_Ppe[Idx_Ppe]	:= 0;
		Etape_385_040_Att_Demande_Intro[Idx_Ppe]	:= 0;
		Etape_385_050_Vidange_tampon[Idx_Ppe]		:= 0;
		Etape_385_060_Att_Ferm_tampon[Idx_Ppe]		:= 0;
		Etape_385_Designee[Idx_Ppe]			:= TRUE;
	END_IF;


IF (Idx_Ppe &lt;= Conf_ppe_nb_ppes)
AND Conf_tampons_ppe_presence[Idx_Ppe]
THEN
(* On optimise le temps de traitement en ne parcourant que les pompes paramétrées *)
(* qui ont un tampon. *)

	(* 010_Att_Cond_Initiales -&gt; 020_Att_gestion_ccr *)
	IF (NOT Etape_385_Designee[Idx_Ppe])
	AND Etape_385_010_Att_Cond_Initiales[Idx_Ppe] THEN
		IF Info_tampon_ppe_vide[Idx_Ppe]
		AND Tampon_ppe_ferme[Idx_Ppe]
		THEN
			Etape_385_010_Att_Cond_Initiales[Idx_Ppe]	:= 0;
			Etape_385_020_Att_gestion_ccr[Idx_Ppe]		:= 1;
			Etape_385_030_Att_fin_dosage_Ppe[Idx_Ppe]	:= 0;
			Etape_385_040_Att_Demande_Intro[Idx_Ppe]	:= 0;
			Etape_385_050_Vidange_tampon[Idx_Ppe]		:= 0;
			Etape_385_060_Att_Ferm_tampon[Idx_Ppe]		:= 0;
			Etape_385_Designee[Idx_Ppe]			:= TRUE;
		END_IF;
	END_IF;

	(* 020_Att_gestion_ccr -&gt; 030_Att_fin_dosage_Ppe *)
	IF (NOT Etape_385_Designee[Idx_Ppe])
	AND Etape_385_020_Att_gestion_ccr[Idx_Ppe] THEN
		IF Dem_autorisation_dos_tampon_ppe[Idx_Ppe] THEN
			Etape_385_010_Att_Cond_Initiales[Idx_Ppe]	:= 0;
			Etape_385_020_Att_gestion_ccr[Idx_Ppe]		:= 0;
			Etape_385_030_Att_fin_dosage_Ppe[Idx_Ppe]	:= 1;
			Etape_385_040_Att_Demande_Intro[Idx_Ppe]	:= 0;
			Etape_385_050_Vidange_tampon[Idx_Ppe]		:= 0;
			Etape_385_060_Att_Ferm_tampon[Idx_Ppe]		:= 0;
			Etape_385_Designee[Idx_Ppe]			:= TRUE;
		END_IF;
	END_IF;

	(* 030_Att_fin_dosage_Ppe -&gt; 040_Att_Demande_Intro *)
	IF (NOT Etape_385_Designee[Idx_Ppe])
	AND Etape_385_030_Att_fin_dosage_Ppe[Idx_Ppe] THEN
		IF NOT Ppe_en_cours[Idx_Ppe] (* = Phase de dosage par pompe finie *)
		AND (Dem_autorisation_dos_tampon_ppe[Idx_Ppe] = FALSE) (* L'autorisation de *)
			(* dosage a bien été prise en compte. *)
			(* On teste cette condition par sécurité. *)
		THEN
			Etape_385_010_Att_Cond_Initiales[Idx_Ppe]	:= 0;
			Etape_385_020_Att_gestion_ccr[Idx_Ppe]		:= 0;
			Etape_385_030_Att_fin_dosage_Ppe[Idx_Ppe]	:= 0;
			Etape_385_040_Att_Demande_Intro[Idx_Ppe]	:= 1;
			Etape_385_050_Vidange_tampon[Idx_Ppe]		:= 0;
			Etape_385_060_Att_Ferm_tampon[Idx_Ppe]		:= 0;
			Etape_385_Designee[Idx_Ppe]			:= TRUE;
		END_IF;
	END_IF;
 
	(* 040_Att_Demande_Intro -&gt; 050_Vidange_tampon *)
	IF (NOT Etape_385_Designee[Idx_Ppe])
	AND Etape_385_040_Att_Demande_Intro[Idx_Ppe] THEN
		IF Dem_vidange_tampon_ppe[Idx_Ppe] THEN
			Etape_385_010_Att_Cond_Initiales[Idx_Ppe]	:= 0;
			Etape_385_020_Att_gestion_ccr[Idx_Ppe]		:= 0;
			Etape_385_030_Att_fin_dosage_Ppe[Idx_Ppe]	:= 0;
			Etape_385_040_Att_Demande_Intro[Idx_Ppe]	:= 0;
			Etape_385_050_Vidange_tampon[Idx_Ppe]		:= 1;
			Etape_385_060_Att_Ferm_tampon[Idx_Ppe]		:= 0;
			Etape_385_Designee[Idx_Ppe]			:= TRUE;
		END_IF;
	END_IF;
 
	(* 050_Vidange_tampon -&gt; 060_Att_Ferm_tampon *)
	IF (NOT Etape_385_Designee[Idx_Ppe])
	AND Etape_385_050_Vidange_tampon[Idx_Ppe] THEN
		IF Info_tampon_ppe_vide[Idx_Ppe]
		AND NOT Alarme_vidange_tampons_ppe
		THEN
			Etape_385_010_Att_Cond_Initiales[Idx_Ppe]	:= 0;
			Etape_385_020_Att_gestion_ccr[Idx_Ppe]		:= 0;
			Etape_385_030_Att_fin_dosage_Ppe[Idx_Ppe]	:= 0;
			Etape_385_040_Att_Demande_Intro[Idx_Ppe]	:= 0;
			Etape_385_050_Vidange_tampon[Idx_Ppe]		:= 0;
			Etape_385_060_Att_Ferm_tampon[Idx_Ppe]		:= 1;
			Etape_385_Designee[Idx_Ppe]			:= TRUE;
		END_IF;
	END_IF;
 
	(* 060_Att_Ferm_tampon -&gt; 020_Att_gestion_ccr *)
	IF (NOT Etape_385_Designee[Idx_Ppe])
	AND Etape_385_060_Att_Ferm_tampon[Idx_Ppe] THEN
		IF Tampon_ppe_ferme[Idx_Ppe]
		AND (Vid_Tampon_ppe_terminee[Idx_Ppe] = FALSE) (* Fin de vidange du tampon bien prise *)
			(* en compte (=&gt; La séquence de vidange a bien été déclarée terminée) *)
			(* On teste cette condition par sécurité. *)
		THEN
			Etape_385_010_Att_Cond_Initiales[Idx_Ppe]	:= 0;
			Etape_385_020_Att_gestion_ccr[Idx_Ppe]		:= 1;
			Etape_385_030_Att_fin_dosage_Ppe[Idx_Ppe]	:= 0;
			Etape_385_040_Att_Demande_Intro[Idx_Ppe]	:= 0;
			Etape_385_050_Vidange_tampon[Idx_Ppe]		:= 0;
			Etape_385_060_Att_Ferm_tampon[Idx_Ppe]		:= 0;
			Etape_385_Designee[Idx_Ppe]			:= TRUE;
		END_IF;
	END_IF;


END_IF;
IF (Idx_Ppe &lt;= Conf_ppe_nb_ppes) THEN
(* On optimise le temps de traitement en ne parcourant que les pompes paramétrées. *)



	(* Traitement postérieur *)
	(*-----------------------*)
	(* - Actions *)

	(* Autorisation du dosage que lorsque le tampon-pompe est prêt, et que la *)
	(* séquence est à l'étape prévue. *)
	Autorisation_dosage_tampon_ppe[Idx_Ppe] := Etape_385_030_Att_fin_dosage_Ppe[Idx_Ppe];

	(* Commande de vidange du tampon *)
	Vidange_tampon_ppe[Idx_Ppe] := Etape_385_050_Vidange_tampon[Idx_Ppe] AND NOT Info_tampon_ppe_vide[Idx_Ppe] AND NOT Defaut_Intro;

	(* Reset de la demande de vidange *)
	IF Etape_385_050_Vidange_tampon[Idx_Ppe]
	AND Etape_385_Designee[Idx_Ppe]
	THEN
		(* Au moment où l'étape "Etape_385_050_Vidange_tampon" est *)
		(* activée, on sait que la demande de vidange a été prise en compte *)
		(* =&gt; On resette la demande de vidange. *)
		Dem_vidange_tampon_ppe[Idx_Ppe] := FALSE;
	END_IF;

	(* Détection de fin de vidange *)
	IF Etape_385_060_Att_Ferm_tampon[Idx_Ppe]
	AND Etape_385_Designee[Idx_Ppe]
	THEN
		(* Au moment où l'étape "Etape_385_060_Att_Ferm_tampon" est *)
		(* activée, on sait que la vidange vient de se terminer *)
		(* =&gt; On met à TRUE un flag qui permettra à la section de gestion *)
		(* d'introduction de déclarer la fin de la séquence de vidange. *)
		Vid_Tampon_ppe_terminee[Idx_Ppe] := TRUE;
	END_IF;

	(* Détection d'un problème de conditions initiales non atteintes *)
	IF (Etape_385_010_Att_Cond_Initiales[Idx_Ppe]) (* On n'a pas atteint les conditions initiales requises *)
	AND (Dem_autorisation_dos_tampon_ppe[Idx_Ppe]) (* alors qu'un dosage est demandé. *)
	THEN
		Pb_cond_initiales_tampon_ppe := TRUE;
	END_IF;

END_IF;
END_FOR;


(* Alarme "Seuil vide non atteint" commune à tous les tampons-pompe *)
TON_Alarme_vidange_tampon_ppe1 (IN := Cde_vidange_tampon_ppe[1] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe2 (IN := Cde_vidange_tampon_ppe[2] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe3 (IN := Cde_vidange_tampon_ppe[3] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe4 (IN := Cde_vidange_tampon_ppe[4] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe5 (IN := Cde_vidange_tampon_ppe[5] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe6 (IN := Cde_vidange_tampon_ppe[6] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe7 (IN := Cde_vidange_tampon_ppe[7] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe8 (IN := Cde_vidange_tampon_ppe[8] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe9 (IN := Cde_vidange_tampon_ppe[9] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe10 (IN := Cde_vidange_tampon_ppe[10] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe11 (IN := Cde_vidange_tampon_ppe[11] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe12 (IN := Cde_vidange_tampon_ppe[12] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe13 (IN := Cde_vidange_tampon_ppe[13] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe14 (IN := Cde_vidange_tampon_ppe[14] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe15 (IN := Cde_vidange_tampon_ppe[15] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe16 (IN := Cde_vidange_tampon_ppe[16] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe17 (IN := Cde_vidange_tampon_ppe[17] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe18 (IN := Cde_vidange_tampon_ppe[18] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe19 (IN := Cde_vidange_tampon_ppe[19] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
TON_Alarme_vidange_tampon_ppe20 (IN := Cde_vidange_tampon_ppe[20] AND NOT Alarme_vidange_tampons_ppe, PT := Conf_Hopper_Tank_Empty_Time);
IF TON_Alarme_vidange_tampon_ppe1.Q
OR TON_Alarme_vidange_tampon_ppe2.Q
OR TON_Alarme_vidange_tampon_ppe3.Q
OR TON_Alarme_vidange_tampon_ppe4.Q
OR TON_Alarme_vidange_tampon_ppe5.Q
OR TON_Alarme_vidange_tampon_ppe6.Q
OR TON_Alarme_vidange_tampon_ppe7.Q
OR TON_Alarme_vidange_tampon_ppe8.Q
OR TON_Alarme_vidange_tampon_ppe9.Q
OR TON_Alarme_vidange_tampon_ppe10.Q
OR TON_Alarme_vidange_tampon_ppe11.Q
OR TON_Alarme_vidange_tampon_ppe12.Q
OR TON_Alarme_vidange_tampon_ppe13.Q
OR TON_Alarme_vidange_tampon_ppe14.Q
OR TON_Alarme_vidange_tampon_ppe15.Q
OR TON_Alarme_vidange_tampon_ppe16.Q
OR TON_Alarme_vidange_tampon_ppe17.Q
OR TON_Alarme_vidange_tampon_ppe18.Q
OR TON_Alarme_vidange_tampon_ppe19.Q
OR TON_Alarme_vidange_tampon_ppe20.Q
OR Pb_cond_initiales_tampon_ppe
THEN
	Alarme_vidange_tampons_ppe := TRUE; (* Alarme remise à FALSE par BC-Mix *)
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="386_Stockage_inter_Color" type="section" task="MAST"></identProgram>
		<STSource>(********************************************************)
(*	Transfert par bonbonne à colorants		*)
(********************************************************)
(* Développé par R.C. 21/12/2012 *)
(* sur la base de la note technique LAF022-NT40 *)

(* La section est codée sur un modèle Etape-Transition *)


(* TRAITEMENT PRÉLIMINAIRE *)
(*-------------------------*)
(* Init *)

Etape_386_0xx_Designee			:= FALSE;
Etape_386_1xx_Designee			:= FALSE;
	(* Permettra de savoir que l'activité d'une étape a changé, afin de ne faire *)
	(* évoluer qu'une étape à la fois *)




(* TRAITEMENT SÉQUENTIEL *)
(*-----------------------*)
(* - Scrutation des Etapes *)


(* Etape initiale : 010_Init_Section *)
(* Etape initiale : 110_Att_Autoris_Transf *)
IF Stockage_inter_Color_DEM_INIT THEN

	(* Initialiser les variables locales de la section *)
	(* - Gestion maitre du transfert des colorants *)
	Etape_386_010_Init_Section		:= 1;
	Etape_386_020_Att_Cond_Initiales	:= 0;
	Etape_386_030_Autoris_Vidange		:= 0;
	Etape_386_040_Vidange_En_Cours		:= 0;
	Etape_386_050_Vidange_Terminee		:= 0;
	Etape_386_060_Autoris_Ferm_Clap		:= 0;
	Etape_386_070_Autoris_Transfert		:= 0;
	Etape_386_080_Transfert_En_Cours	:= 0;
	Etape_386_090_Transfert_Termine		:= 0;
	Etape_386_0xx_Designee			:= TRUE;
	(* - Gestion des organes de transfert des colorants *)
	Etape_386_110_Att_Aut_Ferm_Clap		:= 1;
	Etape_386_120_Fermer_clapet_XV2		:= 0;
	Etape_386_130_Att_Autoris_Transf	:= 0;
	Etape_386_140_Mise_pression_XV3		:= 0;
	Etape_386_150_Transf_Termine		:= 0;
	Etape_386_1xx_Designee			:= TRUE;


	(* Reset de la demande d'init *)
	Stockage_inter_Color_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;



(* Grafcet de gestion maitre du transfert des colorants (Etapes 0xx) : *)

(* 010_Init_Section -&gt; 020_Att_Cond_Initiales *)
IF (NOT Etape_386_0xx_Designee)
AND Etape_386_010_Init_Section THEN
	IF (TRUE) THEN
		Etape_386_010_Init_Section		:= 0;
		Etape_386_020_Att_Cond_Initiales	:= 1;
		Etape_386_0xx_Designee			:= TRUE;
	END_IF;
END_IF;

(* 020_Att_Cond_Initiales -&gt; 030_Autoris_Vidange *)
IF (NOT Etape_386_0xx_Designee)
AND Etape_386_020_Att_Cond_Initiales THEN
	IF (	Info_Machine_Colorant_OK
		AND NOT Alarme_coffret_non_pret
	)	(* Machine prête pour contrôle automatique *)
	AND (	Info_XV2_ouvert
		AND NOT Info_XV2_ferme
		AND NOT Info_pressostat_actif
		AND NOT Alarme_PSL1_too_long
		AND NOT Reserv_Exped_non_vide
		AND NOT Etat_reserv_exped
		AND NOT Alarme_Reserv_Exped_Plein
	) 	(* Conditions initiales réunies *)
	AND Attente_Autoris_Vidange_Colorant (* Attente d'autorisation de vidange de la *)
		(* part de la section gérant la bascule (pour synchronisation des traitements) *)
	THEN
		Etape_386_020_Att_Cond_Initiales	:= 0;
		Etape_386_030_Autoris_Vidange		:= 1;
		Etape_386_0xx_Designee			:= TRUE;
	END_IF;
END_IF;

(* 030_Autoris_Vidange -&gt; 040_Vidange_En_Cours *)
IF (NOT Etape_386_0xx_Designee)
AND Etape_386_030_Autoris_Vidange THEN
	IF NOT Attente_Autoris_Vidange_Colorant THEN (* Plus d'attente d'autorisation de *)
		(* vidange de la bascule (étape bien prise en compte) *)
		Etape_386_030_Autoris_Vidange		:= 0;
		Etape_386_040_Vidange_En_Cours		:= 1;
		Etape_386_0xx_Designee			:= TRUE;
	END_IF;
END_IF;

(* 040_Vidange_En_Cours -&gt; 050_Vidange_Terminee *)
IF (NOT Etape_386_0xx_Designee)
AND Etape_386_040_Vidange_En_Cours THEN
	IF Seuil_vide_atteint_Adj THEN	(* Attente fin de vidange de la bascule Adj *)
		Etape_386_040_Vidange_En_Cours		:= 0;
		Etape_386_050_Vidange_Terminee		:= 1;
		Etape_386_0xx_Designee			:= TRUE;
	END_IF;
END_IF;

(* 050_Vidange_Terminee -&gt; 060_Autoris_Ferm_Clap *)
IF (NOT Etape_386_0xx_Designee)
AND Etape_386_050_Vidange_Terminee THEN
	IF Info_balance_Adj_fermee (* On attend que la bascule soit fermée pour *)
		(* autoriser la fermeture du clapet *)
	AND Etape_386_110_Att_Aut_Ferm_Clap (* Attente de l'autorisation de fermeture *)
		(* du clapet de la part de la gestion des organes de transfert des colorants *)
		(* (pour synchronisation des traitements) *)
	THEN
		Etape_386_050_Vidange_Terminee		:= 0;
		Etape_386_060_Autoris_Ferm_Clap		:= 1;
		Etape_386_0xx_Designee			:= TRUE;
	END_IF;
END_IF;

(* 060_Autoris_Ferm_Clap -&gt; 070_Autoris_Transfert *)
IF (NOT Etape_386_0xx_Designee)
AND Etape_386_060_Autoris_Ferm_Clap THEN
	IF Introduction_Adj_encours (* Demande d'introduction vers le malaxeur *)
		(* (suivant la séquence d'introduction définie) *)
	AND Etape_386_130_Att_Autoris_Transf (* Attente de l'autorisation du transfert *)
		(* de la part de la gestion des organes de transfert des colorants *)
		(* pour s'assurer que l'autorisation de fermeture du clapet a bien été *)
		(* prise en compte. *)
	AND NOT Etape_386_110_Att_Aut_Ferm_Clap (* ... et disparition de l'attente *)
		(* de l'autorisation de fermeture du clapet *)
		(* (pour synchronisation des traitements) *)
	THEN
		Etape_386_060_Autoris_Ferm_Clap		:= 0;
		Etape_386_070_Autoris_Transfert		:= 1;
		Etape_386_0xx_Designee			:= TRUE;
	END_IF;
END_IF;

(* 070_Autoris_Transfert -&gt; 080_Transfert_En_Cours *)
IF (NOT Etape_386_0xx_Designee)
AND Etape_386_070_Autoris_Transfert THEN
	IF NOT Etape_386_130_Att_Autoris_Transf THEN (* Plus d'attente de l'autorisation *)
		(* du transfert (l'autorisation a bien été prise en compte) *)
		Etape_386_070_Autoris_Transfert		:= 0;
		Etape_386_080_Transfert_En_Cours	:= 1;
		Etape_386_0xx_Designee			:= TRUE;
	END_IF;
END_IF;

(* 080_Transfert_En_Cours -&gt; 090_Transfert_Termine *)
IF (NOT Etape_386_0xx_Designee)
AND Etape_386_080_Transfert_En_Cours THEN
	IF Etape_386_150_Transf_Termine THEN (* Transfert terminé *)
		Etape_386_080_Transfert_En_Cours	:= 0;
		Etape_386_090_Transfert_Termine		:= 1;
		Etape_386_0xx_Designee			:= TRUE;
	END_IF;
END_IF;

(* 090_Transfert_Termine -&gt; 020_Att_Cond_Initiales *)
IF (NOT Etape_386_0xx_Designee)
AND Etape_386_090_Transfert_Termine THEN
	IF (TRUE) THEN
		Etape_386_090_Transfert_Termine		:= 0;
		Etape_386_020_Att_Cond_Initiales	:= 1;
		Etape_386_0xx_Designee			:= TRUE;
	END_IF;
END_IF;



(* Grafcet de gestion des organes de transfert des colorants (Etapes 1xx) : *)

(* 110_Att_Aut_Ferm_Clap  -&gt; 120_Fermer_clapet_XV2  *)
(*                        -&gt; 130_Att_Autoris_Transf *)
IF (NOT Etape_386_1xx_Designee)
AND Etape_386_110_Att_Aut_Ferm_Clap THEN
	IF Etape_386_060_Autoris_Ferm_Clap THEN (* Autorisation de fermer le clapet par *)
		(* la gestion maitre du transfert des colorants *)
		Etape_386_110_Att_Aut_Ferm_Clap		:= 0;
		Etape_386_120_Fermer_clapet_XV2		:= 1;
		Etape_386_130_Att_Autoris_Transf	:= 1;
		Etape_386_1xx_Designee			:= TRUE;
	END_IF;
END_IF;

(* 130_Att_Autoris_Transf -&gt; 140_Mise_pression_XV3  *)
IF (NOT Etape_386_1xx_Designee)
AND Etape_386_130_Att_Autoris_Transf THEN
	IF Etape_386_070_Autoris_Transfert THEN (* Autorisation de lancement du transfert *)
		(* par la gestion maitre du transfert des colorants *)
		Etape_386_130_Att_Autoris_Transf	:= 0;
		Etape_386_140_Mise_pression_XV3		:= 1;
		Etape_386_1xx_Designee			:= TRUE;
	END_IF;
END_IF;

(* 140_Mise_pression_XV3  -&gt; 150_Transf_Termine *)
IF (NOT Etape_386_1xx_Designee)
AND Etape_386_140_Mise_pression_XV3 THEN
	IF Etape_386_230_Fin_Transf_Detecte
	OR NOT Reserv_Exped_non_vide (* Condition ajoutée pour ne pas attendre toute *)
		(* la temporisation si la bonbonne a été vidée en manuel logiciel entre *)
		(* temps. *)
	THEN
		Etape_386_140_Mise_pression_XV3		:= 0;
		Etape_386_150_Transf_Termine		:= 1;
		Etape_386_1xx_Designee			:= TRUE;
	END_IF;
END_IF;

(* 120_Fermer_clapet_XV2  -&gt;                       *)
(* 150_Transf_Termine     -&gt; 110_Att_Aut_Ferm_Clap *)
IF (NOT Etape_386_1xx_Designee)
AND (	Etape_386_120_Fermer_clapet_XV2
	AND Etape_386_150_Transf_Termine
) THEN
	IF TON_Attente_depress_sas_colorant.Q (* On attend la dépressurisation totale *)
		(* une fois la fin du transfert détectée avant d'autoriser l'ouverture *)
		(* du clapet pour un autre cycle de transfert. *)
	AND NOT Etape_386_080_Transfert_En_Cours (* On s'assure que la gestion maitre *)
		(* du transfert des colorants a bien pris en compte que le transfert *)
		(* est terminé compte tenu de l'activité de l'étape "150_Transf_Termine" *)
		(* avant de désactiver cette étape. *)
	THEN
		Etape_386_120_Fermer_clapet_XV2		:= 0;
		Etape_386_150_Transf_Termine		:= 0;
		Etape_386_110_Att_Aut_Ferm_Clap		:= 1;
		Etape_386_1xx_Designee			:= TRUE;
	END_IF;
END_IF;








(* TRAITEMENT POSTÉRIEUR *)
(*-----------------------*)
(* - Actions *)

(* Commande du clapet hermétique (Clapet XV2) *)
IF NOT Alarme_coffret_non_pret THEN (* En automatique, on attend un acquittement de l'alarme *)
	(* (qui peut être dûe à un défaut de capteur) pour changer la commande du clapet. *)
	Ouv_XV2 := NOT (Etape_386_120_Fermer_clapet_XV2);
END_IF;

(* Commande de la mise en pression de la bonbonne (Vanne XV3) *)
IF Etape_386_140_Mise_pression_XV3
AND TON_XV2_Ferme.Q THEN
	IF NOT Alarme_coffret_non_pret THEN (* En automatique, on attend un acquittement pour *)
		(* remettre sous pression *)
		Ouv_XV3 := TRUE; (* SET *)
	END_IF;
ELSE
	Ouv_XV3 := FALSE; (* RESET *)
END_IF;

(* Attente de dépressurisation totale *)
TON_Attente_depress_sas_colorant(IN := Etape_386_150_Transf_Termine, PT := Conf_Color_Wait_Airlock_Depress);(* 5s typiquement *)

(* Mise à 1 d'un flag pour déclarer la fin d'introduction *)
IF Etape_386_090_Transfert_Termine THEN
	Transfert_Adj_Termine := TRUE; (* SET *)
END_IF;

(* Prêt pour introduction *)
Transf_ds_bonbonne_termine := Etape_386_060_Autoris_Ferm_Clap (* En attente de demande d'introduction *)
	AND TON_XV2_Ferme.Q; (* Clapet fermé depuis 2s *)

(* Alarme "Bonbonne colorant : Réservoir d'expédition non vide" *)
(* La bascule est prête a être vidangée, mais on est bloqué à l'étape d'attente *)
(* des conditions initiales car la bonbonne n'est pas vide. *)
IF Attente_Autoris_Vidange_Colorant
AND Etape_386_020_Att_Cond_Initiales
AND (	Reserv_Exped_non_vide
	OR Etat_reserv_exped
) THEN
	Alarme_Reserv_Exped_Plein := TRUE; (* SET *)
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="390_Pret_Pour_Intro" type="section" task="MAST"></identProgram>
		<ILSource>(*******************************************************************************************************************)
(*                                      Gestion de l'introduction				                                                 *)
(*******************************************************************************************************************)

(* Initialisation des variables locales de la section *)
LD Pret_pour_Intro_DEM_INIT
JMPCN Init_Pret_pour_Intro__Fin
Init_Pret_pour_Intro:

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	LD TRUE
	R Pret_pour_Intro_DEM_INIT (* L'init de la section a bien été prise en compte. *)
Init_Pret_pour_Intro__Fin:

(* Arret de l'introduction si défaut de vidange d'une bascule ou défaut malaxeur ou perte de fin de course trappe fermée *) 
LD Intro_en_cours
AND (	TRUE
	AND (	TRUE
		AND (	Ordre_intro_Gra1
			OR Ordre_intro_Gra2
		)
		AND (	Discordance_vidange_granulat1
			OR Discordance_vidange_granulat2
			OR Vidange_bloquee_Gra1
			OR Vidange_bloquee_Gra2
			OR Alarme_vidange_TT_granulat (* Ajout R.C. 15/04/2010 suite à demande du CdC de l'évolution #793 *)
			OR (	Discordance_vidange_TT_granulat
				ANDN Info_TT_Gra_ouverte
			)
			OR (	Skip_bloque
				ANDN Info_skip_haut
				ANDN Conf_TT_granulat
			)
			OR Defaut_tapis_transfert
		)
	)
	OR (	Introduction_Cim1_encours
		AND (	Discordance_vidange_cim1
			OR Vidange_bloquee_Cim1
			OR (	Discordance_vidange_TT_cim
				ANDN Info_TT_Cim_ouverte
			)
		)
	)
	OR (	Introduction_Cim2_encours
		AND (	Discordance_vidange_Cim2
			OR Vidange_bloquee_Cim2
		)
	)
	OR (	Introduction_Eau1_encours
		AND (	Discordance_vidange_eau1
			OR Vidange_bloquee_Eau1
		)
	)
	OR (	Introduction_Eau2_encours
		AND (	Discordance_vidange_Eau2
			OR Vidange_bloquee_Eau2
		)
	)
	OR (	Discordance_vidange_adjuvant
		AND Introduction_Adj_encours
	)
	OR (	Introduction_Anh_encours
		AND (	Discordance_vidange_anhydrite 
			OR Vidange_bloquee_Anh
		)
	)
	OR (	Introduction_Add_encours
		AND (	Discordance_vidange_Basc_Add
			OR Vidange_bloquee_Add
		)
	)
	OR (	destination_malaxeur_1
		ANDN (	bit_conf_anhy_8
			AND bit_mal_grand_ouv_conf_anhy_8
		)
		AND (	Defaut_Mal1
			OR (
				LDN destination_sortie_seche
				ANDN Vidange_en_cours_Mal1
				ANDN Malaxage_encours_Mal1
				AND (
					LDN Info_trappe1_fermee_mal1
					ORN Info_trappe2_fermee_mal1
				)
			)
		)
	)
	OR (	destination_malaxeur_2
		AND (	Defaut_Mal2
			OR (
				LDN destination_sortie_seche
				ANDN Vidange_en_cours_Mal2
				ANDN Malaxage_encours_Mal2
				AND (
					LDN Info_trappe1_fermee_mal2
					ORN Info_trappe2_fermee_mal2
				)
			)
		)
	)
)
ST Defaut_Intro

LD Intro_en_cours
JMPC Fin_Section_390
  
LD index_sortie_buffer
ST suite_index_introduction
  
debut2: (* Retour à debut2 lors de l'init de l'index à 1 *)
(* Recherche malaxeur concerné *)

LD suite_index_introduction (* Modif M.D. 05/10/2007 Mémorisation de la gachée en vidange *)
ST NG_Intro
(* Note R.C. 04/05/2010 : Dans cette section, il faudra voir s'il est nécessaire de remplacer l'index "suite_index_introduction" par l'index "Gachee_en_vidange" (dont on contrôle la mémorisation) *)

LD TRUE
R Camion_OK (* Init *)

LD TG_IN[NG_Intro].Numero_gachee
EQ 0
ST pas_de_gachee_en_cours
JMPC Fin_Section_390

WORD_TO_BIT (IN:=TG_IN[NG_Intro].mot_destination,
		BIT0 =&gt; destination_sortie_seche,
		BIT1 =&gt; destination_malaxeur_1,
		BIT2 =&gt; destination_malaxeur_2,
		BIT4 =&gt; dem_valcamion_av_vidange,
		BIT5 =&gt; bit_mal_grand_ouv_conf_anhy_8,
		BIT6 =&gt; bit_conf_anhy_8,
		BIT7 =&gt; pas_vid_basc_eau,
		BIT8 =&gt; Bit_Gachee_dry, (* Création de l'information de destination dry M340 *)
		BIT9 =&gt; Anhydrite_CPC (*Modification pour Wissous*)
		)

LD destination_sortie_seche
ANDN destination_malaxeur_1
ANDN destination_malaxeur_2
ST Sortie_seche

LD TRUE
AND (TG_OUT[NG_Intro].CR_Etat_Presence_Produit
	EQ 0
)
AND (TG_IN[NG_Intro].Dos_dif_dry[1].Numero_produit (* Ajout R.C. 09/10/2012 #0001802 - L'introduction était bloquée s'il n'y avait que des introductions différées *)
	EQ 0
)
JMPC Fin_Section_390

(* PRESENCE PRODUIT *)			
WORD_TO_BIT (IN:=TG_OUT[NG_Intro].CR_Etat_Presence_Produit,
		BIT0 =&gt; Presence_prod_Gra1,
		BIT1 =&gt; Presence_prod_Gra2,
		BIT2 =&gt; Presence_prod_Cim1,
		BIT3 =&gt; Presence_prod_Eau1,
		BIT4 =&gt; Presence_prod_Adj,
		BIT5 =&gt; Presence_prod_Anh,
		BIT6 =&gt; Presence_prod_Cim2, (* Ajout M.D. 20/03/2009 Ajout Bascule Ciment 2 *)
		BIT7 =&gt; Presence_prod_Eau2, (* Ajout R.C. 02/09/2009 Ajout Bascule Eau 2 *)
		BIT8 =&gt; Presence_prod_Add, (* Ajout R.C. 02/11/2011 Ajout Bascule Add *)
		BIT9 =&gt; Presence_prod_Ppe (* Ajout R.C. 08/03/2012 Ajout Zone "Compteurs" en TG *)
		)
(* GACHEE : PESEE TERMINEE/ TRANSFERT TERMINEE *)
WORD_TO_BIT (IN:=TG_OUT[NG_Intro].CR_Etat_Gachee,
		BIT0 =&gt; Pesee_Gra1_terminee,
		BIT1 =&gt; Pesee_Gra2_terminee,	
		BIT2 =&gt; Transfert_G_terminee,
		BIT3 =&gt; Pesee_Cim1_terminee,
		BIT4 =&gt; Transfert_C_terminee,
		BIT5 =&gt; Pesee_Eau1_terminee,
		BIT6 =&gt; Pesee_Adj_terminee,
		BIT7 =&gt; Pesee_Anh_terminee,
		BIT8 =&gt; Introduction_terminee,
		BIT13 =&gt; Pesee_Cim2_terminee, (* Ajout R.C. 01/12/2009 Ajout Bascule Ciment 2 *)
		BIT14 =&gt; Pesee_Eau2_terminee (* Ajout R.C. 01/12/2009 Ajout Bascule Eau 2 *)
		)
WORD_TO_BIT (IN:=TG_OUT[NG_Intro].CR_Etat_Gachee_2,
		BIT0 =&gt; Pesee_Add_terminee, (* Ajout R.C. 02/11/2011 Ajout Bascule Add *)
		BIT1 =&gt; Dosages_Ppe_termines (* Ajout R.C. 08/03/2012 Ajout Zone "Compteurs" en TG *)
		)



(* Tester si la cible (Malaxeur et/ou Camion) est prête pour l'introduction *)
(* Modif. M.D. 28/07/2004 ajout cas anhydrite : eau et granulat *)
(* par malaxeur fermé et anhydrite par sortie seche *)
(* exterieur au malax. Il faut verifier la validation camion *)

LD FALSE 
OR (	destination_malaxeur_1
	ANDN destination_sortie_seche
	AND (	dem_valcamion_av_vidange
		AND Bit_validation_camion_mal1
		ORN dem_valcamion_av_vidange
	)
	AND (	Info_vidange_vers_malaxeur_1
		AND Conf_presence_bypass
		ORN Conf_presence_bypass
	)
	AND Info_trappe1_fermee_mal1
	AND Info_trappe2_fermee_mal1
	AND malaxeur_1_vide
)
OR (	destination_malaxeur_2
	ANDN destination_sortie_seche
	AND (	dem_valcamion_av_vidange
		AND Bit_validation_camion_mal2
		ORN dem_valcamion_av_vidange
	)
	AND (	Info_vidange_vers_mal2_s_seche
		AND Conf_presence_bypass
		ORN Conf_presence_bypass
	)
	AND Info_trappe1_fermee_mal2
	AND Info_trappe2_fermee_mal2
	AND malaxeur_2_vide
)
OR (	Sortie_seche
	AND (	Info_vidange_vers_mal2_s_seche
		AND Conf_presence_bypass
		ORN Conf_presence_bypass
	)
	AND Bit_validation_camion_s_seche
)
OR (	destination_sortie_seche
	AND (	TRUE
		AND (	destination_malaxeur_1
			AND malaxeur_1_vide
			AND (	Info_vidange_vers_malaxeur_1
				AND Conf_presence_bypass
				ORN Conf_presence_bypass
			)
			AND Bit_validation_camion_mal1
			AND (	Info_trappe1_ouverte_mal1
				OR Info_trappe2_ouverte_mal1
			)
		)
		OR (	destination_malaxeur_2
			AND malaxeur_2_vide
			AND (	Info_vidange_vers_mal2_s_seche
				AND Conf_presence_bypass
				ORN Conf_presence_bypass
			)
			AND Bit_validation_camion_mal2
			AND (	Info_trappe1_ouverte_mal2
				OR Info_trappe2_ouverte_mal2
			)
		)
	)
)
OR (	bit_conf_anhy_8
	AND destination_malaxeur_1
	AND malaxeur_1_vide
	AND Info_vidange_vers_mal2_s_seche
	AND (	FALSE
		OR (	bit_mal_grand_ouv_conf_anhy_8
			AND (	Info_trappe1_ouverte_mal1
				OR Info_trappe2_ouverte_mal1
			)
		)
		OR (
			LDN bit_mal_grand_ouv_conf_anhy_8
			AND Info_trappe1_fermee_mal1
			AND Info_trappe2_fermee_mal1
			AND Bit_validation_camion_mal1
		)
	) 
)
S Camion_OK


(* Modif M.D. xx/01/2011 Anticipation phase2 (dry uniquement) *)
(* Calcul du bit qui va permettre d'anticiper l'introduction phase1 *)
(* (granulat et ciment), sans attendre completement le dosage de l'eau *)
(* comptée dans le camion. *)

(* ANTICIPATION PHASE 2 DRY *)
(* Note R.C. 16/03/2012 : L'anticipation phase 2 (dry-batch) est conçue avec *)
(* pour hypothèse que l'eau est à l'index 1 de la zone "Dos_dif_dry". Comme l'eau *)
(* ne devrait pas passer par un tampon-pompe, son départ sera soumis à validation *)
(* de la présence camion. *)
(* - Détermination de la consigne (nb impulsions) a atteindre avant anticipation *)

(* ANTICIPATION PHASE 2 DRY *)
(* Modif G.C. 24/05/2013 : L'anticipation de la phase 2 est dorénavant concue pour *)
(* fonctionner avec de l'eau pesée/pompée. Dans le cas de l'eau pesée, l'anticipation *)
(* de la phase 2 n'est prise en compte qu'avec de l'eau pesée sur la bascule Eau 1 *)

LD Bit_Gachee_dry 			(* Vérification que la production est bien du Dry-Batch *)	
AND Conf_anticipation_phase2_dry 	(* Vérification que l'option d'anticipation phase 2 est active *)
JMPCN Fin_calcul_anticipation_ph2	(* Si ces deux conditions ne sont pas respectées alors on ne fait pas de calcul inutile *)

LD Presence_prod_Eau1		(* Suivant le cas eau pompée ou eau pesée on jump dans la section appropriée *)
JMPCN cas_eau_pompee		


Cas_eau_pesee :		(* Section eau pesée pour valider ou non l'anticipation phase 2 *)


LD Pesee_Eau1_terminee		(* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
ST Pulse_Pesee_Eau1_terminee

LD Pulse_Pesee_Eau1_terminee	(* Pour éviter de calculer constamment le % d'eau en phase 1 *)
RE				(* ainsi que le poids total demandé sur la bascule Eau1 *)
JMPCN Fin_boucle_for_no2	(* On attend un front montant de "Pesee_Eau1_terminee" pour les faire*)

LD 0		(* initialisation de la valeur de "i" utiliser dans la boucle for ci-dessous *)
ST i

Debut_boucle_for_no1:	(* Cette boucle for permet de balayer "Vidange_Dry[i]" pour déterminer le % d'eau en phase 1 *)

LD i		(* incrémentation de "i" *)
ADD 1
ST i

LD i		(* Si "i" dépasse l3 on quitte la boucle for car "Vidange_Dry[1-12]" *)
GE 13
JMPC Fin_boucle_for_no1

LD TG_IN[NG_Intro].Vidange_Dry[i].Code_synchro		(* Si le code synchro n'est pas une demande d'intro phase 1 *)
EQ 16#0FFF						(* alors on passe au produit suivant (i++) *)
JMPCN Debut_boucle_for_no1

LD TG_IN[NG_Intro].Vidange_Dry[i].Code_prod		(* Si le code produit n'est pas égale à 5 (code produit eau) *)
AND 16#00FF						(* alors on passe au produit suivant (i++) *)
EQ 5
JMPCN Debut_boucle_for_no1
							(* Si le code synchro est une demande d'intro phase 1 et *)
LD TG_IN[NG_Intro].Vidange_Dry[i].Qte			(* si le code produit est égale à 5 (code produit eau) *)
ST Pourcentage_eau_ph1					(* alors on enregistre le pourcentage d'eau requis en phase 1 *)

Fin_boucle_for_no1:

LD 0		(* initialisations des valeurs de "i" et de "Poids_total_demande_eau" utilisées dans la boucle for ci-dessous *)
ST i
ST Poids_total_pese_eau1

Debut_boucle_for_no2:	(* Cette boucle for permet de balayer "Basc_Eau1[i]" pour déterminer le poids total demandé sur la bascule Eau1 *)

LD i		(* incrémentation de "i" *)
ADD 1
ST i

LD i		(* Si "i" dépasse 7 on quitte la boucle for car "Basc_Eau1[1-6]" *)
GE 7
JMPC Fin_boucle_for_no2

LD TG_OUT[NG_Intro].CR_Basc_Eau1[i].Numero_prod		(* Si le Numero_produit = 0 cela veut dire *)
NE 0							(* qu'il n'y a pas de produit demandé *)
JMPCN Debut_boucle_for_no2				(* alors on passe au produit suivant (i++) *)

LD Poids_total_pese_eau1				(* on rajoute tous les poids des produits pesés sur la bascule Eau1 *)
ADD TG_OUT[NG_Intro].CR_Basc_Eau1[i].Poids_reel_pese	(* qu'on enregistre dans Poids_total_pese_eau1 *)
ST Poids_total_pese_eau1				

JMP Debut_boucle_for_no2

Fin_boucle_for_no2:

LD Poids_total_pese_eau1		(* Sachant le pourcentage d'eau requis en phase 1 *)
INT_TO_DINT				(* Ainsi que le total des poids pesés sur la bascule Eau1 *)
MUL (	Pourcentage_eau_ph1		(* on détermine la quantité d'eau requise en phase 1 *)
	INT_TO_DINT			(* qu'on enregistre dans la variable "Poids_demande_eau_ph1" *)
)
DIV 100
DINT_TO_INT
ST Poids_demande_eau_ph1

LD Poids_demande_eau_ph1		(* Sachant le pourcentage d'eau requis pour l'anticipation de la phase 2 *)
INT_TO_DINT				(* on détermine la quantité d'eau requise en phase 1 pour déclencher *)
MUL (	Conf_pourcentage_anticip_phase2	(* l'anticipation de la phase 2 qu'on enregistre dans la variable "Poids_necessaire_pour_anticip *)
	INT_TO_DINT
)
DIV 100
DINT_TO_INT
ST Poids_necessaire_pour_anticip

LD Poids_total_pese_eau1		(* Sachant le poids total pesé sur bascule (phase 1 et 3)une fois pesé *)
SUB Poids_necessaire_pour_anticip	(* ainsi que la quantité d'eau necessaire dans le camion pour déclencher l'anticipation de la phase 2 *)
ST Consigne_anticipation		(* à l'aide d'une soustraction on détermine la consigne d'anticipation *)

LD Pesee_Eau1_terminee			(* Pour déclencher l'"Anticipation_phase2_valide" il faut que : *)
AND Introduction_Eau1_encours		(* - le dosage de la bascule Eau 1 terminé *)
AND ( 					(* - Introduction Eau1 en cours *)
	LD Poids_instantane_Eau1	(* - Et que le poids sur la bascule Eau 1 soit inférieur à la consigne *)
	LT Consigne_anticipation 
)
ST Anticipation_phase2_valide

JMP fin_calcul_anticipation_ph2


Cas_eau_pompee :	(* Section eau pompée pour valider ou non l'anticipation phase 2 *)


LD TG_IN[NG_Intro].Dos_dif_dry[1].Poids_Demande		
INT_TO_DINT
MUL (	Conf_pourcentage_anticip_phase2		(* Sachant le pourcentage d'eau requis pour l'anticipation de la phase 2 *)
	INT_TO_DINT				(* on détermine la consigne d'anticipation *)
)
DIV 100
DINT_TO_INT
ST Consigne_anticipation					
(* - Détermination du numéro de pompe/compteur utilisés pour l'anticipation *)
LD TG_IN[NG_Intro].Dos_dif_dry[1].Numero_produit
WORD_TO_INT
ST No_Cpt_pour_anticipation
(* - Détermination de la valeur actuelle du compteur utilisé comme référence pour *)
(* l'anticipation *)
LD 0
ST Val_Cpt_pour_anticipation (* Init*)
LD Cde_dosage_Ppe[No_Cpt_pour_anticipation]
JMPCN pas_MAJ_compteur_anticipation
	LD Compteur_ppe[No_Cpt_pour_anticipation]
	ST Val_Cpt_pour_anticipation
pas_MAJ_compteur_anticipation :
(* - On determine si on fait l'anticipation phase 2 maintenant, ou pas. *)
LD Val_Cpt_pour_anticipation
GT Consigne_anticipation 
ST Anticipation_phase2_valide

Fin_calcul_anticipation_ph2 :










(* Si introduction terminée pour cette gachée recherche de la gachée suivante *)
LDN Introduction_terminee
JMPC introduction4 
	LD suite_index_introduction
	ADD 1
	ST suite_index_introduction
	LE 4
	JMPC introduction_3
		LD 1
		ST suite_index_introduction
	introduction_3:
	LD suite_index_introduction
	EQ index_entree_buffer
	JMPC Fin_Section_390
 	JMP debut2 
introduction4:	




(* On détermine la liste des produits dont on attend la fin de dosage *)
(* Ajout R.C. 10/10/2012 #0001802 *) 

LDN Pesee_Gra1_terminee
AND (TG_IN[suite_index_introduction].Basc_Gra1[1].Numero_produit
	NE 0
)
ST Attente_fin_dos_Gra1

LDN Pesee_Gra2_terminee
AND (TG_IN[suite_index_introduction].Basc_Gra2[1].Numero_produit
	NE 0
)
AND (Conf_granulat2_nb_tremies
	GT 0
) (* Condition particulière pour permettre le bon fonctionnement de l'évolution *)
(* #0000678 : Possibilité d'utiliser la ligne Gra2 pour étendre le nombre de produits *)
(* dosés par gâchée sur la ligne Gra1. Note : On ne peut pas utiliser la variable *)
(* "Plage_etendue_Gra1" qui est dépendante de la gâchée en cours de dosage sur la *)
(* ligne Gra1, et non de la gâchée en cours d’introduction. *)
ST Attente_fin_dos_Gra2

LDN Pesee_Cim1_terminee
AND (TG_IN[suite_index_introduction].Basc_Cim1[1].Numero_produit
	NE 0
)
ST Attente_fin_dos_Cim1

LDN Pesee_Cim2_terminee
AND (TG_IN[suite_index_introduction].Basc_Cim2[1].Numero_produit
	NE 0
)
ST Attente_fin_dos_Cim2

LDN Pesee_Eau1_terminee
AND (TG_IN[suite_index_introduction].Basc_Eau1[1].Numero_produit
	NE 0
)
ST Attente_fin_dos_Eau1

LDN Pesee_Eau2_terminee
AND (TG_IN[suite_index_introduction].Basc_Eau2[1].Numero_produit
	NE 0
)
ST Attente_fin_dos_Eau2

LDN Pesee_Adj_terminee
AND (TG_IN[suite_index_introduction].Basc_Adj[1].Numero_produit
	NE 0
)
ST Attente_fin_dos_Adj

LDN Pesee_Anh_terminee
AND (TG_IN[suite_index_introduction].Basc_Anh[1].Numero_produit
	NE 0
)
ST Attente_fin_dos_Anh

LDN Pesee_Add_terminee
AND (TG_IN[suite_index_introduction].Basc_Add[1].Numero_produit
	NE 0
)
ST Attente_fin_dos_Add




(*********************** PHASE 1 *****************************)
(* On attend la fin des introductions de la phase 1 pour lancer l'introduction *)
(* proprement dite (phase 2) *)
LD TRUE
ANDN (	Intros_ph1_terminees
	ANDN (	Sequence_dry_en_cours
		OR Sequence_dry_termine
	) (* On invalide le flag "Intros_ph1_terminees" lorsqu'il y a une phase *)
		(* d'introduction déjà en cours (= statut "en cours" ou statut *)
		(* "terminé" à TRUE). Dans ce cas, "Intros_ph1_terminees" peut *)
		(* être à TRUE, mais pour une autre gâchée. *)
		(* Note R.C. 05/04/2012 : On garde le test de ces conditions par *)
		(* sécurité, mais elle ne sont peut être pas indispensables. *)
)
ANDN Anticipation_phase2_valide (* Si l' "anticipation phase 2" est déclenchée, *)
	(* alors on ne tient plus compte du statut de la phase 1 pour bloquer *)
	(* le départ de l'intro principale (phase 2). *)
JMPC Fin_Section_390



LD Conf_TT_granulat
OR Conf_skip_transfert
JMPC avec_stockage_intermediaire

	(*********************** GRA1 *****************************)
	(* Si la pesée granulat 1 n'est pas terminée on ne commence pas l'introduction *)
	LD Attente_fin_dos_Gra1
	JMPC Fin_Section_390

	(*********************** GRA2 *****************************)
	(* Si la pesée granulat 2 n'est pas terminée on ne commence pas l'introduction *)
	LD Attente_fin_dos_Gra2
	JMPC Fin_Section_390

JMP sans_stockage_intermediaire
avec_stockage_intermediaire:
	(*********************** TRANSFERT GRA *****************************)
	(* Si présence trémie tampon ou skip de transfert et que le transfert dans l'organe *)
	(* n'est pas terminée on ne commence pas l'introduction*)
	LDN Attente_fin_dos_Gra1
	ANDN Attente_fin_dos_Gra2
 	AND (	TRUE
		AND (	Transfert_G_terminee
			AND (	Presence_prod_Gra1
				OR Presence_prod_Gra2
				OR Intro_Presence_Glace_Gra1
				OR Intro_Presence_Glace_Gra2
			)
		)
		OR (
			LDN Presence_prod_Gra1
			ANDN Presence_prod_Gra2
			ANDN Intro_Presence_Glace_Gra1
			ANDN Intro_Presence_Glace_Gra2
		)
	)
 	ST transfert_des_granulat_effectue
 	JMPCN Fin_Section_390
  	 
sans_stockage_intermediaire:



LD Conf_TT_Cim
OR Conf_bonbonne_cim
JMPC avec_stockage_intermediaire_cim

	(*********************** CIM1 &amp; CIM2 *****************************)
	(* Si la pesée ciment n'est pas terminée on ne commence pas l'introduction *)
	LD Attente_fin_dos_Cim1
	OR Attente_fin_dos_Cim2
 	JMPC Fin_Section_390
  
JMP sans_stockage_intermediaire_cim
avec_stockage_intermediaire_cim :
  
	(*********************** TRANSFERT CIM *****************************)
	(* Si présence trémie tampon et que le transfert dans l'organe *)
	(*  n'est pas terminé on ne commence pas l'introduction*)
	LDN Attente_fin_dos_Cim1
	ANDN Attente_fin_dos_Cim2
 	AND (	TRUE
		AND (	Transfert_C_terminee
			AND Presence_prod_Cim1
		)
		ORN Presence_prod_Cim1
	)
	JMPCN Fin_Section_390

sans_stockage_intermediaire_cim :



(*********************** EAU1 &amp; EAU2 (PESEE) *****************************)
(* Si la pesée eau n'est pas terminée on ne commence pas l'introduction *)
LD Attente_fin_dos_Eau1
OR Attente_fin_dos_Eau2
JMPC Fin_Section_390


LD Conf_Bonbonne_Colorant
JMPC avec_Bonbonne_Colorant

	(*********************** ADJ (PESE) *****************************)
	(* Cas sans bonbonne : Si la pesée adj n'est pas terminée on ne commence pas l'introduction *)
	LD Attente_fin_dos_Adj
	AND Conf_adjuvant_basc_pres_bascule (* Modif M.D. 12/01/2009 : correction sur P528 (bonbonne colorants) *) 
	JMPC Fin_Section_390

JMP sans_Bonbonne_Colorant
avec_Bonbonne_Colorant : (* Ajout M.D. 09/01/2009 Gestion du transfert adjuvant *)

	(*********************** TRANSFERT ADJ (PESE) *****************************)
	(* Si présence bonbonne et que le transfert dans l'organe *)
	(*  n'est pas terminée on ne commence pas l'introduction *)
	LDN Attente_fin_dos_adj
	AND (	TRUE
		AND (	Etape_386_060_Autoris_Ferm_Clap (* Le grafcet de gestion maitre *)
				(* est prêt à autoriser le transfert (donc l'introduction *)
				(* des colorants *)
			AND Etape_386_130_Att_Autoris_Transf (* Le système de transfert est *)
				(* dans un état "prêt à faire le transfert". *)
			AND Presence_prod_Adj
		)
		ORN Presence_prod_Adj
	)
	JMPCN Fin_Section_390

sans_Bonbonne_Colorant : 
  
(*********************** ADJ (PESE) / COMP1 VERS EAU1 *****************************)
(* Si la bascule ou le premier compartiment d'adjuvant se vide dans l'eau et *)
(* si cette vidange n'est pas faite alors on ne commence pas l'introduction *)
LD Conf_adjuvant_comp1_vers_eau1
AND Presence_prod_Adj
ANDN Introduction_Adj_terminee
JMPC Fin_Section_390

(*********************** ADJ (PESE) / COMP2 VERS EAU1 *****************************)
(* Si le deuxieme compartiment d'adjuvant se vide dans l'eau et *)
(* cette vidange n'est pas faite alors on ne commence pas l'introduction *)
LD Conf_adjuvant_comp2_vers_eau1
ANDN Introduction_Comp_Adj_terminee
AND Presence_prod_Adj
JMPC Fin_Section_390



(*********************** ANH *****************************)
(* Si la pesée anhydrite n'est pas terminée on ne commence pas l'introduction *) 
LD Attente_fin_dos_Anh
AND Conf_anhydrite_pres_bascule (* Note R.C. 10/10/2012 : Cette condition n'est probablement *)
	(* plus utile, mais on la conserve par prudence. *)
JMPC Fin_Section_390



(*********************** ADD *****************************)
(* Si la pesée additionnelle n'est pas terminée on ne commence pas l'introduction *) 
LD Attente_fin_dos_Add
OR ( Intro_Presence_Add_skip	  (* ASM - Nov/2013 - Additional line *)
	OR Intro_Presence_Add_Eau1
	)
ANDN Intro_Add_terminee
JMPC Fin_Section_390


(*********************** PRODUITS COMPTES *****************************)
(* Si les dosages par pompe de la zone "Compteurs" ne sont pas terminés, on ne commence pas l'introduction *)
(* =&gt; On parcourt tous les index de la zone "Compteurs" de la TG pour savoir *)
(* s'il y a un dosage par pompe dont le statut doit bloquer l'introduction. *)

(* - On calcule "Dosage_Ppe_bloquant_pour_intro[]" pour chaque index de la zone "Compteurs" *)
LD 0
ST i (* Init *)
Test_dosages_ppe_bloquants:
LD i
ADD 1
ST i
GT 5
JMPC Test_dosages_ppe_bloquants__fin
	LD TRUE
	R Dosage_Ppe_bloquant_pour_intro[i] (* Init à "FALSE" par défaut *)
	LD TG_IN[NG_Intro].Compteurs[i].Numero_produit
	WORD_TO_INT
	ST idx_ppe
	LD idx_ppe
	LE 0
	JMPC Test_dosages_ppe_bloquants (* Rester à la valeur par défaut, et tester l'index suivant *)
	LD idx_ppe
	GT Conf_ppe_nb_ppes
	JMPC Test_dosages_ppe_bloquants (* Rester à la valeur par défaut, et tester l'index suivant *)
	LD Conf_tampons_ppe_presence[idx_ppe] (* Si la pompe possède un tampon *)
	ORN (	Conf_ppe_dest[idx_ppe] (* ou que la pompe n'est pas à destination *)
		LE 4 (* d'un camion/malaxeur, *)
	) (* alors l'introduction doit attendre la fin du dosage correspondant. *)
	(* Note R.C. 10/04/2012 : Il n'y a pas de cas actuellement où on utilise la *)
	(* zone "Compteurs" pour faire des dosages sans tampon vers le camion/malaxeur. *)
	(*    ce cas (initialement prévu) se fait tout comptes faits par la *)
	(*    zone "Dos_dif_dry". =&gt; Conséquence : Actuellement, tous les dosages non *)
	(*    terminés de la zone "Compteurs" bloquent le lancement de l'introduction. *)
	ANDN Dosages_ppe_termine_Section300[idx_ppe] (* Si le dosage 'i' demandé (dans *)
		(* la zone "Compteurs" de la TG) n'est pas terminé pour la pompe 'idx_ppe' *)
		(* correspondante, alors on déclare que l'état des "dosages par pompe" *)
		(* doit bloquer l'introduction. *)
	ANDN Dosages_Ppe_termines (* Si tous les dosages par pompe de la gâchée en *)
		(* cours d'introduction sont terminés (pour toutes les pompes), alors *)
		(* on ne tient pas compte du fait que le dosage ne soit pas vu *)
		(* "terminé" pour la pompe 'idx_ppe'. *)
		(* Effectivement, le statut "terminé" peut repasser à FALSE pour la *)
		(* pompe lorsque la section de dosage par pompe passe à la gâchée *)
		(* suivante. *)
		(* Explications supplémentaire R.C. 03/04/2012 : "Dosages_Ppe_termines" *)
		(* est à TRUE quand tous les dosages par pompe par la zone "Compteurs" *)
		(* de la gâchée en cours d'introduction sont terminés. *)
		(* Si "Dosages_Ppe_termines" est à TRUE, alors il ne faut pas faire *)
		(* de SET de "Dosage_Ppe_bloquant_pour_intro" quel que soit le statut *)
		(* individuel de la pompe (pour les raisons évoquées ci-dessus). *)
	S Dosage_Ppe_bloquant_pour_intro[i]
	JMP Test_dosages_ppe_bloquants
Test_dosages_ppe_bloquants__fin:
(* - On bloque l'introduction si on trouve 1 élément à TRUE dans "Dosage_Ppe_bloquant_pour_intro[]" *)
LD Dosage_Ppe_bloquant_pour_intro
MOVE_AREBOOL_INT Liste_Dosages_Ppe_bloquants
LD Liste_Dosages_Ppe_bloquants
NE 0 (* Un des dosages de la zone "Compteurs" de la TG bloque l'introduction *)
JMPC Fin_Section_390


(* Test equipement centrale pour une anticipation d'introduction *)
LD destination_malaxeur_1
AND (	Conf_granulat1_skip
	OR Conf_skip_transfert
)
JMPCN fin_anticipation

(* Vérification granulat à introduire *)
LD TG_IN[suite_index_introduction].Vidange_Dry[1].Code_prod
AND 16#00FF
NE 1
JMPC fin_anticipation

	(* Si temps restant &lt; temps de montee du  skip jusqu'à position intermediaire *)
	LDN malaxeur_1_vide
	AND (	TRUE
		AND (	Conf_skip_transfert
			ANDN Conf_TT_granulat
			AND Transfert_G_terminee
			ANDN Ordre_intro_Gra1
			ANDN Ordre_intro_Gra2
		)
		OR (	Conf_granulat1_skip
			AND Pesee_Gra1_terminee
			ANDN Ordre_intro_Gra1
		)
	)
	AND anticipation_skip
	ANDN Introduction_Gra_terminee
	S anticipation_montee_skip

fin_anticipation: 


(* Début d'introduction si le malaxeur concerné est vide, *)
(*  en marche et que ces trappes sont bien fermées *)
LD Camion_OK
S Camion_OK_Dosages_OK (* Modif R.C. 05/09/2003 *)
	(* Permet le lancement de l'alarme malaxeur arrêté *)
AND Camion_OK_Dosages_OK_Malaxeur_OK (* Modif R.C. 05/09/2003 *)
S Intro_en_cours
 
(*
ANDN Bit_Gachee_dry  		 
S Pas_Vidange_Dry (* Modif R.C. 22/06/2009 *)  
*)(* Modif. M.D. xx/01/2011 on veut lancer la vidange Dry dans tous les cas *)

LD Intro_en_cours		
JMPCN Fin_Section_390

	(*Déclaration de malaxeur plein*) 
	LD destination_malaxeur_1
	R declaration_malaxeur_1_vide
	LD destination_malaxeur_2
	R declaration_malaxeur_2_vide

Fin_Section_390 :
</ILSource>
	</program>
	<program>
		<identProgram name="391_Mesure_QdC_bascules" type="section" task="MAST"></identProgram>
		<LDSource nbColumns="11">
			<networkLD>
				<typeLine>
					<emptyLine nbRows="10"></emptyLine>
				</typeLine>
				<typeLine>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Mesure_QdC_bascules_DEM_INIT"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="4"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Lire_poids_apres_pause_vid_Eau1"></coil>
					<HLink nbCells="1"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="4"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Calcul_QdC_basc_Eau1"></coil>
					<HLink nbCells="1"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="2"></HLink>
					<operateBlock width="4">
						<statement>QdC_basc_Index_Eau1 := 0;</statement>
					</operateBlock>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<FFBBlock instanceName=".3" typeName="MOVE_INT_ARINT" additionnalPinNumber="0" enEnO="true" width="16" height="3">
						<objPosition posX="7" posY="14"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN" effectiveParameter="0"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="OUT" effectiveParameter="QdC_basc_valide_Eau1"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="2"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="4"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<FFBBlock instanceName=".5" typeName="MOVE_REAL_ARREAL" additionnalPinNumber="0" enEnO="true" width="16" height="4">
						<objPosition posX="7" posY="17"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN" effectiveParameter="0.0"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="OUT" effectiveParameter="QdC_basc_valeurs_Eau1"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="2"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="4"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<HLink nbCells="4"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Mesure_QdC_bascules_DEM_INIT"></coil>
					<HLink nbCells="1"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="3"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="NContact" contactVariableName="Vidange_Eau1"></contact>
					<HLink nbCells="3"></HLink>
					<contact typeContact="openContact" contactVariableName="Entre_vidanges_Eau1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<operateBlock width="4">
						<statement>Poids_avant_debut_pause_vid_Eau1 := Poids_real_Eau1;</statement>
					</operateBlock>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<HLink nbCells="4"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Lire_poids_apres_pause_vid_Eau1"></coil>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName="TON_stab_vid_partielle_Eau1" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="3" posY="32"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="t#1s"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Lire_poids_apres_pause_vid_Eau1"></contact>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<operateBlock width="4">
						<statement>Poids_apres_debut_pause_vid_Eau1:=Poids_real_Eau1;</statement>
					</operateBlock>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<HLink nbCells="4"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Calcul_QdC_basc_Eau1"></coil>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName="TON_att_avant_calc_QdC_basc_Eau1" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="3" posY="38"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="t#1s"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Calcul_QdC_basc_Eau1"></contact>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<operateBlock width="4">
						<statement>QdC_basc_valeurs_Eau1[QdC_basc_Index_Eau1] := Poids_avant_debut_pause_vid_Eau1 - Poids_apres_debut_pause_vid_Eau1;</statement>
					</operateBlock>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<HLink nbCells="4"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Lire_poids_apres_pause_vid_Eau1"></coil>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="NContact" contactVariableName="Lire_poids_apres_pause_vid_Eau1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="5"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<operateBlock width="4">
						<statement>QdC_basc_Index_Eau1:= QdC_basc_Index_Eau1+1;</statement>
					</operateBlock>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<HLink nbCells="4"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Calcul_QdC_basc_Eau1"></coil>
				</typeLine>
				<typeLine>
					<compareBlock width="2">
						<expression>QdC_basc_Index_Eau1=5</expression>
					</compareBlock>
					<HLink nbCells="5"></HLink>
					<operateBlock width="4">
						<statement>QdC_basc_Index_Eau1:= 0;</statement>
					</operateBlock>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<compareBlock width="2">
						<expression>QdC_basc_valeurs_Eau1[0]&gt;0.0</expression>
					</compareBlock>
					<HLink nbCells="5"></HLink>
					<operateBlock width="4">
						<statement>QdC_basc_valide_Eau1[0]:=1;</statement>
					</operateBlock>
				</typeLine>
				<typeLine>
					<compareBlock width="2">
						<expression>QdC_basc_valeurs_Eau1[1]&gt;0.0</expression>
					</compareBlock>
					<HLink nbCells="5"></HLink>
					<operateBlock width="4">
						<statement>QdC_basc_valide_Eau1[1]:=1;</statement>
					</operateBlock>
				</typeLine>
				<typeLine>
					<compareBlock width="2">
						<expression>QdC_basc_valeurs_Eau1[2]&gt;0.0</expression>
					</compareBlock>
					<HLink nbCells="5"></HLink>
					<operateBlock width="4">
						<statement>QdC_basc_valide_Eau1[2]:=1;</statement>
					</operateBlock>
				</typeLine>
				<typeLine>
					<compareBlock width="2">
						<expression>QdC_basc_valeurs_Eau1[3]&gt;0.0</expression>
					</compareBlock>
					<HLink nbCells="5"></HLink>
					<operateBlock width="4">
						<statement>QdC_basc_valide_Eau1[3]:=1;</statement>
					</operateBlock>
				</typeLine>
				<typeLine>
					<compareBlock width="2">
						<expression>QdC_basc_valeurs_Eau1[4]&gt;0.0</expression>
					</compareBlock>
					<HLink nbCells="5"></HLink>
					<operateBlock width="4">
						<statement>QdC_basc_valide_Eau1[4]:=1;</statement>
					</operateBlock>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName=".1" typeName="SUM_ARINT" additionnalPinNumber="0" enEnO="true" width="12" height="3">
						<objPosition posX="3" posY="54"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN" effectiveParameter="QdC_basc_valide_Eau1"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="OUT" effectiveParameter="QdC_basc_nb_valeurs_Eau1"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName=".2" typeName="SUM_ARREAL" additionnalPinNumber="0" enEnO="true" width="14" height="3">
						<objPosition posX="3" posY="57"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN" effectiveParameter="QdC_basc_valeurs_Eau1"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="OUT" effectiveParameter="QdC_basc_somme_valeurs_Eau1"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<compareBlock width="2">
						<expression>QdC_basc_nb_valeurs_Eau1&gt;0</expression>
					</compareBlock>
					<HLink nbCells="5"></HLink>
					<operateBlock width="4">
						<statement>QdC_basc_moyenne_Eau1:=QdC_basc_somme_valeurs_Eau1/INT_TO_REAL(QdC_basc_nb_valeurs_Eau1);</statement>
					</operateBlock>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="38"></emptyLine>
				</typeLine>
				<textBox width="11" height="1">Keep the weight in memory when starting holding the discharge
    <objPosition posX="0" posY="26"></objPosition>
				</textBox>
				<textBox width="5" height="1">Clear the init request :
    <objPosition posX="6" posY="24"></objPosition>
				</textBox>
				<textBox width="11" height="1">Calculate the average value of the weigher's free fall to be used
    <objPosition posX="0" posY="43"></objPosition>
				</textBox>
				<textBox width="11" height="1">Calculate the "Weigher's Free-Fall"
    <objPosition posX="0" posY="37"></objPosition>
				</textBox>
				<textBox width="3" height="1">(Place future initialisations here)
    <objPosition posX="6" posY="22"></objPosition>
				</textBox>
				<textBox width="8" height="5">Note R.C. 28/01/2013 : The following improvement can be recommended, though Lafarge wants his code to be used :
   - 1 TON block could have be used instead of 2, because the calculation can be made as soon as the weight after free-fall is known. This would also make the "Calcul_QdC_basc_Eau1" variable redundant.
   - It would have been more understandable to wait the "weigher's stabilisation time" once the weigher is seen "closed", instead of waiting "1s" or "2s".
   - A function block should be used for a such function as calculating an "Average". A good structuring of  the code (separating low and high level code) is time-saving in the long term as it keeps the program easy to understand and maintain.
   - There are much simpler way to determinate "QdC_basc_nb_valeurs_Eau1" (one of those ways consists in using an OCCUR_ARINT function block, another way is to use a simple counter)
   - Do not use Ladder section. We've been trying to get rid of them in the last years.
    <objPosition posX="0" posY="3"></objPosition>
				</textBox>
				<textBox width="11" height="1">Initialisation of the local variables of the section
    <objPosition posX="0" posY="9"></objPosition>
				</textBox>
				<textBox width="11" height="2">This section calculates the weighers' "free fall" (weight lost between stopping to command emptying the weigher, and the actual weight obtained)
- The weigher's freefall is used in order to improve the precision of a partial weigher discharge (linked to the "fragmented weigher discharge" feature)

Developed internally by LAFARGE (by Nicshan YOGESWARAN - Dec. 2012)
Embedded in P859 PLC program "As such", as requested by Lafarge - only some minor changes were made (comments, init, variable names, ...).
    <objPosition posX="0" posY="0"></objPosition>
				</textBox>
				<textBox width="11" height="1">Determine the weight when stabilised, after holding the discharge
    <objPosition posX="0" posY="31"></objPosition>
				</textBox>
			</networkLD>
		</LDSource>
	</program>
	<program>
		<identProgram name="392_Sequence_Intro_Vidange" type="section" task="MAST"></identProgram>
		<STSource>(* Cette section gère l'introduction dans le malaxeur, ou dans le camion. *)
(* On ouvre les bascules et on démarre les pompes suivant la séquence *)
(* indiquée par BC-Mix en table de gachée. *)


(* Rem1 : 
   "TG_OUT[A].CR_vidange_Dry[X].termine" et ".encours" sont associés à la table de vidange
   et permettent de connaitre l'état de vidange pour chaque index de la table.
   Ces informations sont utilisées pour suivre l'évolution des vidanges.
   (pas de correllation avec les produits*)

(* Rem2 : 
   "TG_OUT[NG_VD].CR_Etat_Basc_Gra1" est un mot d'état de la TG qui sert à lier l'état de la
    vidange au type de produit et permet notamment à BC-Mix de faire le suivi de production *)

(* Remarque M.D. xx/01/2011
  Les vidanges et transfert Dry et Wet sont maintenant gérés en utilisant les séquences
  qui définissent le process wet : la gestion de séquence ne devrait donc plus tenir compte 
  de la trémie tampon Gra et Cim, qui sont déja gérée dans le process wet *)

(* Remarque R.C. 28/09/2012 - P858 *)
(* ATTENTION : SUITE A LA REALISATION PARTIELLE DE L'EVOLUTION "VIDANGE EN *)
(* PLUSIEURS FOIS" (DSL41), LA GESTION DE L'INTRODUCTION POUR LA BASCULE EAU1 *)
(* EST DIFFERENTE QUE POUR LES AUTRES BASCULES. *)
(* UNE UNIFORMISATION DE LA GESTION POUR TOUTES LES BASCULES EST PREVUE. *)


(* Initialisation des variables locales de la section *)
IF Sequence_Intro_Vidange_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Sequence_Intro_Vidange_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;



(***************************************************************************)
(********************* PAUSE DES VIDANGES/INTRODUCTIONS ********************)
(***************************************************************************)

(*Pause sur les timer d'introduction : on ne stoppe pas une introduction en cours,
  mais cela évite de poursuivre le séquence en cas de problème*)
pause_vidange_Gra := (Discordance_vidange_granulat1 OR Discordance_vidange_granulat2) AND Vid_Gra_En_Cours;
pause_vidange_Cim1 := Discordance_vidange_cim1 AND Vid_Cim1_En_Cours; 
pause_vidange_Cim2 := Discordance_vidange_Cim2 AND Vid_Cim2_En_Cours;
pause_vidange_Eau1 := Discordance_vidange_eau1 AND Vid_Eau1_En_Cours;
pause_vidange_Eau2 := Discordance_vidange_Eau2 AND Vid_Eau2_En_Cours;
pause_vidange_Adj := Discordance_vidange_Adjuvant AND (Vid_Adj_En_Cours OR Vid_Adj_C2_En_Cours);
pause_vidange_Anh := Discordance_vidange_Anhydrite AND Vid_Anh_En_Cours;
pause_vidange_Add := Discordance_vidange_basc_add AND Vid_Add_En_Cours;
                        



(***************************************************************************)
(********************** INITIALISATION DE LA SEQUENCE **********************)
(***************************************************************************)

(* Après 1 cycle complet d'initialisation pendant *)
(* lequel "Sequence_dry_init_en_cours" était à TRUE, *)
(* et "Sequence_dry_init_fait" est à FALSE, *)
(* on mémorise que l'init de l'intro a bien été fait. *)
(* Ajout R.C. 11/04/2012 P857 *)
IF Sequence_dry_init_en_cours THEN
	Sequence_dry_init_en_cours := FALSE;
	Sequence_dry_init_fait := TRUE;
END_IF;

(* On lance l'init de l'introduction pour la gâchée suivante... *)
Nouvelle_gachee_a_introduire := ((TG_IN[NG_Intro].Numero_gachee &lt;&gt; 0) (* ...si la gâchée est *)
		AND (TG_IN[NG_Intro].CR_Code_fin = TG_IN[NG_Intro].Numero_gachee)) (* valide *)(* Ajout R.C. 10/04/2012 P857 : Il ne faut pas faire l'initialisation si on n'a pas encore les données - posait problème en multigâchées *)
	AND ((TG_OUT[NG_Intro].CR_Etat_Gachee AND 16#0100) = 0) (* ...et si la gâchée pointée n'a pas déjà été introduite *)
	AND NOT Sequence_dry_en_cours (* ...et si on a fini de traiter l'intro précédente *)
	AND NOT Sequence_dry_init_fait; (* ...et si l'init n'a pas déjà été fait *)

FM_Init_Seq_Intro (CLK := Nouvelle_gachee_a_introduire AND Camion_OK);
IF FM_Init_Seq_Intro.Q THEN

(*
	(* Ecriture du No de gachée_En_vidange *)
	NG_VD := Gachee_en_vidange;
*)
	(* en attente BCMIX, on initialise la TG avec des constantes *)
	(*  VOIR section test_DRY *)

	Idx_SVD := 1; (* PVD : Produit Vidange Dry *)
	Sequence_dry_init_en_cours := TRUE;
	Sequence_dry_init_fait := FALSE;
	Sequence_dry_en_cours := FALSE;
	Sequence_dry_termine := FALSE;
	Temps_dep_SVD := 0;
	MOVE_DINT_ARDINT (IN := 0, OUT =&gt; Temps_Vid_Dry);
	MOVE_BOOL_AREBOOL (IN := FALSE, OUT =&gt; Seq_ppe_vers_malax_en_cours);
	MOVE_BOOL_AREBOOL (IN := FALSE, OUT =&gt; Seq_ppe_vers_malax_termine);
	MOVE_BOOL_AREBOOL (IN := FALSE, OUT =&gt; Dosages_ppe_termine_Section392);
	MOVE_BOOL_AREBOOL (IN := FALSE, OUT =&gt; Dosages_ppe_en_cours_Section392);
	Dosage_ppe_en_cours_Section392 := FALSE;
	Top_depart_Vid_Gra := FALSE;
	Top_depart_Vid_Cim1 := FALSE;
	Top_depart_Vid_Anh := FALSE;
	Top_depart_Vid_Adj := FALSE;
	Top_depart_Vid_Adj_C2 := FALSE;
	Top_depart_Vid_Ppe := FALSE; (* 1 seul "Top départ" partagé entre toutes les pompes *)
	Top_depart_Vid_Cim2 := FALSE;
	Top_depart_Vid_Eau2 := FALSE;
	Top_depart_Vid_Add := FALSE;
	Top_depart_Vid_Tampon_Ppe := FALSE; (* 1 seul "Top départ" partagé entre tous les tampons-pompes *)
	
	(* Ajout R.C. 07/02/2013 P859 #0001922 *)
	Idx_Vid_Dry_Gra := 0;
	Idx_Vid_Dry_Cim1 := 0;
	Idx_Vid_Dry_Anh := 0;
	Idx_Vid_Dry_Adj := 0;
	Idx_Vid_Dry_Adj_C2 := 0;
	Idx_Vid_Dry_Cim2 := 0;
	Idx_Vid_Dry_Eau2 := 0;
	Idx_Vid_Dry_Add := 0;

	FOR i:= 1 TO 20 DO
		IndexSeqVid_Tampon_ppe[i] := 0;
		Dem_vidange_tampon_ppe[i] := FALSE;
	END_FOR;

	Poids_avant_vidange_Eau1 := 0;
	Poids_avant_vidange_Eau1_Disp := FALSE;

	(* Listage des séquences d'introduction à faire dans le mot de statut *)
	Statut_Pres_Vid_Dry := 0; (* Utilisé pour calculer la fin de vidange *)
	Statut_Pres_Vid_Dry_Ph1 := 0; (* Utilisé pour autoriser le début de la phase '2' *)
	FOR i:= 1 TO 12 DO
		IF (TG_IN[NG_Intro].Vidange_Dry[i].Code_prod &lt;&gt; 0) THEN
			Est_Seq_Intro_Ph1 := (TG_IN[NG_Intro].Vidange_Dry[i].Code_synchro = 16#0FFF);
			CASE i OF
				1  : Statut_Pres_Vid_Dry.0 := TRUE;  Statut_Pres_Vid_Dry_Ph1.0 := Est_Seq_Intro_Ph1;
				2  : Statut_Pres_Vid_Dry.1 := TRUE;  Statut_Pres_Vid_Dry_Ph1.1 := Est_Seq_Intro_Ph1;
				3  : Statut_Pres_Vid_Dry.2 := TRUE;  Statut_Pres_Vid_Dry_Ph1.2 := Est_Seq_Intro_Ph1;
				4  : Statut_Pres_Vid_Dry.3 := TRUE;  Statut_Pres_Vid_Dry_Ph1.3 := Est_Seq_Intro_Ph1;
				5  : Statut_Pres_Vid_Dry.4 := TRUE;  Statut_Pres_Vid_Dry_Ph1.4 := Est_Seq_Intro_Ph1;
				6  : Statut_Pres_Vid_Dry.5 := TRUE;  Statut_Pres_Vid_Dry_Ph1.5 := Est_Seq_Intro_Ph1;
				7  : Statut_Pres_Vid_Dry.6 := TRUE;  Statut_Pres_Vid_Dry_Ph1.6 := Est_Seq_Intro_Ph1;
				8  : Statut_Pres_Vid_Dry.7 := TRUE;  Statut_Pres_Vid_Dry_Ph1.7 := Est_Seq_Intro_Ph1;
				9  : Statut_Pres_Vid_Dry.8 := TRUE;  Statut_Pres_Vid_Dry_Ph1.8 := Est_Seq_Intro_Ph1;
				10 : Statut_Pres_Vid_Dry.9 := TRUE;  Statut_Pres_Vid_Dry_Ph1.9 := Est_Seq_Intro_Ph1;
				11 : Statut_Pres_Vid_Dry.10 := TRUE; Statut_Pres_Vid_Dry_Ph1.10 := Est_Seq_Intro_Ph1;
				12 : Statut_Pres_Vid_Dry.11 := TRUE; Statut_Pres_Vid_Dry_Ph1.11 := Est_Seq_Intro_Ph1;
			END_CASE;
		END_IF; 
	END_FOR;

	(* Compter le nombre de tampons-pompe à introduire *)
	Nb_intros_tampons_ppe_restantes := 0; (* Init *)
	FOR i:= 1 TO 12 DO
		IF ((TG_IN[NG_Intro].Vidange_Dry[i].Code_prod AND 16#00FF) = 14) THEN
			Nb_intros_tampons_ppe_restantes := Nb_intros_tampons_ppe_restantes + 1;
		END_IF; 
	END_FOR;

	(* On liste le numéro de séquence d'introduction pour chaque différé, ce qui sera utile plus tard *)
	(* Modif R.C. 07/08/2012 : #0001737 Principe différent pour permettre un remplissage des différés dans un ordre quelconque dans la table de séquence des intro *)
	MOVE_INT_ARINT(IN := 0, OUT =&gt; liste_Seq_PPE);
	FOR i := 1 TO 12 DO
		IF ((TG_IN[NG_Intro].Vidange_dry[i].Code_prod AND 16#00FF) = 16#0008) THEN
		(* Dosage différé *)
			Idx_Dos_Dif := WORD_TO_INT(ROR(TG_IN[NG_Intro].Vidange_dry[i].Code_prod AND 16#FF00, 8));
			liste_Seq_PPE[Idx_Dos_Dif] := i;
		END_IF;
	END_FOR;

	(* Si le premier produit à introduire est un granulat, alors on attend que les *)
	(* granulats soient en cours d'introduction (skip haut par exemple) pour lancer le *)
	(* timer d'introduction des autres produits. *)
	IF (TG_IN[NG_Intro].Vidange_Dry[1].Code_prod = 1) (* Granulat 1 et/ou Granulat 2 *) THEN
		En_attente_du_debut_intro_gra := TRUE;
	ELSE
		En_attente_du_debut_intro_gra := FALSE;
	END_IF;
END_IF;

FM_Seq_Intro_en_cours(CLK := Intro_en_cours AND NOT Sequence_dry_en_cours AND Sequence_dry_init_fait);
IF FM_Seq_Intro_en_cours.Q THEN
	Sequence_dry_en_cours := TRUE;
END_IF;


(***************************************************************************)
(************************* GESTION DE LA SEQUENCE **************************)
(***************************************************************************)

(* Attention : *)
(* On traite 1 seul index de la table d'introduction par cycle API dans cette partie *)
(* (voir "Idx_SVD", qui est incrémenté en fin de section) *)


(********************** PREPARATION DES DONNEES ****************************)

(* Chronomètre d'introduction - Mesure du temps écoulé depuis le début de la séquence *)
CTU_1 (CU := Sequence_dry_en_cours AND NOT En_attente_du_debut_intro_gra AND %S5, (* %S5 = 100ms Timebase *)
	R := NOT Sequence_dry_init_fait,
	CV =&gt; Temps_dep_SVD); (* Temps en dizièmes de secondes, pour une précision correcte *)


(* Anticipation of aggregates FOR DRY ONLY *)
(* XX/11/2013 - P864 - artf1159803 *)
CTU_2 (CU := Sequence_dry_init_fait 
	AND Bit_Gachee_dry 						(* Production Dry-bach *)
	AND Conf_anticipation_gra_phase2				(* Configuration anticipation des granulats valide *)
	AND (Anticipation_phase2_valide OR Intros_ph1_terminees)	(* Anticipation phase2 valide ou que la phase 1 est terminée *)
	AND Conf_anticipation_phase2_dry 				(* Vérification que l'option d'anticipation phase 2 est active *)
	AND (Pesee_Gra1_terminee OR NOT Presence_prod_Gra1) 		(* Pour ne pas empecher l'introduction des granulats s'il n'y a pas de demande de produit gra sur la ligne gra1 *)
	AND (Pesee_Gra2_terminee OR NOT Presence_prod_Gra2)		(* Pour ne pas empecher l'introduction des granulats s'il n'y a pas de demande de produit gra sur la ligne gra2 *)
	AND (Presence_prod_Gra1 OR Presence_prod_Gra2)			(* Présence d'au moins une ligne granulat nécessaire pour la production en cours *)
	AND NOT (Pesee_Cim1_terminee AND Presence_prod_Cim1 AND NOT Presence_prod_Cim2)		(* On empeche l'anticipation des granulats si le dosage cim1 est terminé *)
	AND NOT (Pesee_Cim2_terminee AND Presence_prod_Cim2 AND NOT Presence_prod_Cim1)		(* On empeche l'anticipation des granulats si le dosage cim2 est terminé *)
	AND NOT (Pesee_Cim1_terminee AND Pesee_Cim2_terminee AND Presence_prod_Cim1 AND Presence_prod_Cim2)	(* On empeche l'anticipation des granulats si le dosage cim1 et cim2 sont terminés *)
	AND %S5, (* %S5 = 100ms Timebase *)
	R := NOT Sequence_dry_init_fait,
	CV =&gt; Temps_dep_gra_ph1); (* Temps en dizièmes de secondes, pour une précision correcte *)


(* Lecture et décodage des données de la table de séquence. *)
Seq_Vid_Code_ligne_pesage := WORD_TO_INT(TG_IN[NG_Intro].Vidange_Dry[Idx_SVD].Code_prod AND 16#00FF);
Seq_Vid_Num_element := WORD_TO_INT(TG_IN[NG_Intro].Vidange_Dry[Idx_SVD].Code_prod AND 16#FF00)/256;
	(* Le numéro d'élément correspond à : *)
	(*    - Code ligne pesage = 8 : Au numéro d'index dans "TG_IN[].Dos_dif_dry[]" du *)
	(*      dosage par pompe. *)
	(*    - Code ligne pesage = 14 : Au numéro du tampon pompe à vidanger. *)
Seq_Vid_Pourcentage_a_vidanger := TG_IN[NG_Intro].Vidange_dry[Idx_SVD].Qte;
Seq_Vid_Code_synchro_partie2 := WORD_TO_INT(TG_IN[NG_Intro].Vidange_dry[Idx_SVD].Code_synchro AND 16#0FFF);
Seq_Vid_Code_synchro_partie1 := UINT_TO_INT(WORD_TO_UINT(TG_IN[NG_Intro].Vidange_Dry[Idx_SVD].Code_synchro 
			AND 16#F000)/4096);



(* Index du produit de synchronisation *)
IF (Seq_Vid_Code_synchro_partie1 &gt; 0) THEN
	Idx_SVD_synchro := Idx_SVD - Seq_Vid_Code_synchro_partie1;
END_IF;


(* Gestion de l'attente du transfert des granulats *)
Intro_Gra_a_debute :=
	Intro_en_cours
	AND (	( (* Configurations du type Org. de pesage (-&gt; [...]) -&gt; Trémie tampon -&gt; Camion/Malaxeur : *)
			Conf_TT_granulat
			AND Info_TT_Gra_ouverte
		)
		OR ( (* Configurations du type Org. de pesage (-&gt; [...]) -&gt; Skip de transfert -&gt; Camion/Malaxeur *)
			(* ...ou Configuration du type Skip peseur -&gt; Camion/Malaxeur : *)
			NOT Conf_TT_granulat
			AND (Conf_skip_transfert OR Conf_granulat1_skip)
			AND Introduction_Gra_encours
			AND Info_skip_haut
		)
		OR ( (* Configurations du type Org. de pesage -&gt; Camion/Malaxeur : *)
			NOT Conf_TT_granulat
			AND NOT (Conf_skip_transfert OR Conf_granulat1_skip)
			AND NOT Conf_tapis_transfert
			AND (
				NOT Info_balance_Gra1_fermee
				OR NOT Info_balance_Gra2_fermee
			)
		)
		OR ( (* Configurations du type Org. de pesage -&gt; Tapis de transfert -&gt; Camion/Malaxeur : *)
			NOT Conf_TT_granulat
			AND NOT (Conf_skip_transfert OR Conf_granulat1_skip)
			AND Conf_tapis_transfert
			AND debut_intro_tapis_transfert
		)
	);
IF (Intro_Gra_a_debute)
AND (Intro_en_cours) THEN
	En_attente_du_debut_intro_gra := FALSE; (* On arrête d'attendre car les granulats *)
	(* sont en train de s'introduire physiquement. *)
END_IF;


(* Déclaration de la fin de la séquence DRY, si toutes les vidanges de la gachée sont terminées *)
Statut_Term_Vid_Dry := BIT_TO_WORD (
	BIT0 := TG_OUT[NG_Intro].CR_vidange_Dry[1].termine,
	BIT1 := TG_OUT[NG_Intro].CR_vidange_Dry[2].termine,
	BIT2 := TG_OUT[NG_Intro].CR_vidange_Dry[3].termine,
	BIT3 := TG_OUT[NG_Intro].CR_vidange_Dry[4].termine,
	BIT4 := TG_OUT[NG_Intro].CR_vidange_Dry[5].termine,
	BIT5 := TG_OUT[NG_Intro].CR_vidange_Dry[6].termine,
	BIT6 := TG_OUT[NG_Intro].CR_vidange_Dry[7].termine,
	BIT7 := TG_OUT[NG_Intro].CR_vidange_Dry[8].termine,
	BIT8 := TG_OUT[NG_Intro].CR_vidange_Dry[9].termine,
	BIT9 := TG_OUT[NG_Intro].CR_vidange_Dry[10].termine,
	BIT10 := TG_OUT[NG_Intro].CR_vidange_Dry[11].termine,
	BIT11 := TG_OUT[NG_Intro].CR_vidange_Dry[12].termine,
	BIT12 := 0,
	BIT13 := 0,
	BIT14 := 0,
	BIT15 := 0);
TG_OUT[NG_Intro].CR_Etat_vidange_Dry := Statut_Term_Vid_Dry; (* Ajout R.C. 03/02/2012 P856 *)
	(* On résume l'état "Terminé" des séquences d'intro/vidange dans un seul mot. *)


CASE Seq_Vid_Code_ligne_pesage OF
	(* On teste que la pesée est terminée sur la ligne à introduire *)
	(* (Cela est nécessaire pour ne pas débuter l'introduction phase 1 *)
	(* tant que la pesée n'est pas terminée). *)
	(* On teste que la pesée est terminée *)
	1 :	Ligne_prete_pour_intro := (Pesee_Gra1_terminee OR NOT Presence_prod_Gra1) 						(* XX/11/2013 - P864 - artf1159803 *)
					AND (Pesee_Gra2_terminee OR NOT Presence_prod_Gra2) 						(* XX/11/2013 - P864 - artf1159803 *)
					AND (Presence_prod_Gra1 OR Presence_prod_Gra2)							(* XX/11/2013 - P864 - artf1159803 *)
					AND (transfert_des_granulat_effectue OR (NOT Conf_TT_granulat AND NOT Conf_skip_transfert));	(* XX/11/2013 - P864 - artf1159803 *)
	2 :	Ligne_prete_pour_intro := FALSE; (* (Réserve) *)
	3 :	Ligne_prete_pour_intro := Pesee_Cim1_terminee AND (Transfert_C_terminee OR (NOT Conf_TT_Cim AND NOT Conf_bonbonne_cim));
	4 :	Ligne_prete_pour_intro := Pesee_Anh_terminee;
	5 :	Ligne_prete_pour_intro := Pesee_Eau1_terminee;
	6 :	Ligne_prete_pour_intro := Pesee_Adj_terminee AND (Transf_ds_bonbonne_termine OR NOT Conf_Bonbonne_Colorant);
	7 :	Ligne_prete_pour_intro := Pesee_Adj_terminee; (* Adj Compartiment 2 *)
	8 :	Ligne_prete_pour_intro := TRUE; (* Dosage différé par pompe *)(* On admet que la pompe est toujours prête pour la phase 1, car il n'y a pas d'organe intermédiaire (ni bascule, ni tampon) pour les dosages différés par pompe. *)(* Modif R.C. 10/04/2012 P857 *)
	9 :	Ligne_prete_pour_intro := FALSE; (* (Réserve) *)
	10 :	Ligne_prete_pour_intro := FALSE; (* (Réserve) *)
	11 :	Ligne_prete_pour_intro := Pesee_Cim2_terminee;
	12 :	Ligne_prete_pour_intro := Pesee_Eau2_terminee;
	13 :	Ligne_prete_pour_intro := Pesee_Add_terminee;
	14 :	Ligne_prete_pour_intro := Etape_385_040_Att_Demande_Intro[Seq_Vid_Num_element];
	ELSE
		Ligne_prete_pour_intro := FALSE; (* (Code ligne inconnu) *)
END_CASE;


(************************** TOPS DEPARTS ********************************)

(* On donne les "TOP DEPARTS" d'introduction (chaque cycle API *)
(* traite à 1 ligne différente de la table d'introduction). *)

(* Synchro type "1" : Introduction immédiate (t=0s) *)
Cond_Vid_Dry1 := (Seq_Vid_Code_synchro_partie1 = 0)
		AND (Seq_Vid_Code_synchro_partie2 = 0)
		AND (Seq_Vid_Code_ligne_pesage &lt;&gt; 0);
(* Synchro type "2" : Introduction retardée par rapport au début de l'introduction (t&gt;0s) *)
Cond_Vid_Dry2 := (Seq_Vid_Code_synchro_partie1 = 0) 
		AND (Seq_Vid_Code_synchro_partie2 &lt;= 16#0FFE)
		AND (Temps_dep_SVD &gt;= INT_TO_UDINT(10 * Seq_Vid_Code_synchro_partie2));
(* Synchro type "3" : Introduction dès la validation de présence camion, sans attendre la fin des autres dosages *)
Cond_Vid_Dry3 := (Seq_Vid_Code_synchro_partie1 = 0) 
		AND (Seq_Vid_Code_synchro_partie2 = 16#0FFF)
		AND Ligne_prete_pour_intro;
(* Synchro type "4" : Introduction retardée par rapport au début de l'introduction du *)
(* produit spécifié. Si l'introduction du produit spécifié se termine avant que le *)
(* retard soit écoulé, alors on déclenche l'introduction sans plus attendre. *)
Cond_Vid_Dry4 := (Seq_Vid_Code_synchro_partie1 &gt; 0)
		AND (Seq_Vid_Code_synchro_partie1 &lt;= 12)
		AND (Seq_Vid_Code_synchro_partie2 &lt;= 16#0FFE)
		AND (	(TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD_synchro].termine)
			OR (	(TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD_synchro].en_cours)
				AND (Temps_Vid_Dry[Idx_SVD_synchro] &gt;= INT_TO_DINT(10 * Seq_Vid_Code_synchro_partie2))
			));
(* Synchro type "5" : Introduction à la fin d'introduction du produit spécifié *)
Cond_Vid_Dry5 := (Seq_Vid_Code_synchro_partie1 &gt; 0)
		AND (Seq_Vid_Code_synchro_partie1 &lt;= 12)
		AND (Seq_Vid_Code_synchro_partie2 = 16#0FFF) 
		AND (TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD_synchro].termine);
(* XX/02/2016 - P869A - artf1491645 *)
(* Synchro type "6" : Introduction of RM into Mixer in % of a specific product

     Code_synchro_partie1      Code_synchro_partie2
		 \       / \                           /
		--------------------|--------------------
		| x x x x | x x x x | x x x x | x x x x |
		--------------------|--------------------
		            \               /   \     /
		            % of introduction   Specific
		                                Product
*)
Cond_Vid_Dry6 := FALSE;
IF (Seq_Vid_Code_synchro_partie1 = 13) THEN 
	CASE (Seq_Vid_Code_synchro_partie2 AND 16#000F) OF	(* Select "Specific product" in "Seq_Vid_Code_synchro_partie2" *)
	1 : IF (TG_OUT[NG_Intro].CR_Etat_Introduction AND 16#0003) &lt;&gt; 16#0000 THEN	(* Introduction of Gra1-2 in progress or Done *)
		(* the introduction of the product will start  when x% (setting) of Gra 1&amp;2 is introduced into the mixer *)
		Gra12_Total_Weight_Weighed := 	TG_OUT[NG_Intro].CR_Basc_Gra1[1].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Gra1[2].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Gra1[3].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Gra1[4].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Gra1[5].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Gra2[1].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Gra2[2].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Gra2[3].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Gra2[4].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Gra2[5].poids_reel_pese;
		Cond_Vid_Dry6 := Poids_instantane_Gra1 + Poids_instantane_Gra2 &lt;= 	Gra12_Total_Weight_Weighed  
								- DINT_TO_INT(	INT_TO_DINT(Gra12_Total_Weight_Weighed)
										* INT_TO_DINT(	Seq_Vid_Code_synchro_partie2 / 16)	(* RIGHT-SHIFT-BY-FOUR *)
										/100);
		END_IF;
	2 : (* Not used for the moment *);
	3 : IF (TG_OUT[NG_Intro].CR_Etat_Introduction AND 16#000C) &lt;&gt; 16#0000 THEN	(* Introduction of Cem1 in progress or Done *)
		(* the introduction of the product will start  when x% (setting) of Cement 1 is introduced into the mixer *)
		Cem1_Total_Weight_Weighed := 	TG_OUT[NG_Intro].CR_Basc_Cim1[1].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Cim1[2].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Cim1[3].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Cim1[4].poids_reel_pese;
		Cond_Vid_Dry6 := Poids_instantane_Cim1 &lt;= 	Cem1_Total_Weight_Weighed  
								- DINT_TO_INT(	INT_TO_DINT(Cem1_Total_Weight_Weighed)
										* INT_TO_DINT(	Seq_Vid_Code_synchro_partie2 / 16)	(* RIGHT-SHIFT-BY-FOUR *)
										/100);
		END_IF;
	4 : (* Not used for the moment *);
	5 : IF (TG_OUT[NG_Intro].CR_Etat_Introduction AND 16#0030) &lt;&gt; 16#0000 THEN	(* Introduction of Water1 in progress or Done *)
		(* the introduction of the product will start  when x% (setting) of Cement 2 is introduced into the mixer *)
		Water1_Total_Weight_Weighed := 	TG_OUT[NG_Intro].CR_Basc_Eau1[1].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Eau1[2].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Eau1[3].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Eau1[4].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Eau1[5].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Eau1[6].poids_reel_pese;
		Cond_Vid_Dry6 := Poids_instantane_Eau1 &lt;= 	Water1_Total_Weight_Weighed  
								- DINT_TO_INT(	INT_TO_DINT(Water1_Total_Weight_Weighed)
										* INT_TO_DINT(	Seq_Vid_Code_synchro_partie2 / 16)	(* RIGHT-SHIFT-BY-FOUR *)
								/100);
		END_IF;
	6 : (* Not used for the moment *);
	7 : (* Not used for the moment *);
	8 : (* Not used for the moment *);
	9 : (* Not used for the moment *); 
	10 : (* Not used for the moment *);
	11 : IF (TG_OUT[NG_Intro].CR_Etat_Introduction_2 AND 16#0003) &lt;&gt; 16#0000 THEN	(* Introduction of Cem2 in progress or Done *)
		(* the introduction of the product will start  when x% (setting) of Cement 2 is introduced into the mixer *)
		Cem2_Total_Weight_Weighed := 	TG_OUT[NG_Intro].CR_Basc_Cim2[1].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Cim2[2].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Cim2[3].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Cim2[4].poids_reel_pese;
		Cond_Vid_Dry6 := Poids_instantane_Cim2 &lt;= 	Cem2_Total_Weight_Weighed  
								- DINT_TO_INT(	INT_TO_DINT(Cem2_Total_Weight_Weighed)
										* INT_TO_DINT(	Seq_Vid_Code_synchro_partie2 / 16)	(* RIGHT-SHIFT-BY-FOUR *)
										/100);
		END_IF;
	12 : IF (TG_OUT[NG_Intro].CR_Etat_Introduction_2 AND 16#000C) &lt;&gt; 16#0000 THEN	(* Introduction of Water2 in progress or Done *)
		(* the introduction of the product will start  when x% (setting) of Cement 2 is introduced into the mixer *)
		Water2_Total_Weight_Weighed := 	TG_OUT[NG_Intro].CR_Basc_Eau2[1].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Eau2[2].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Eau2[3].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Eau2[4].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Eau2[5].poids_reel_pese
						+ TG_OUT[NG_Intro].CR_Basc_Eau2[6].poids_reel_pese;
		Cond_Vid_Dry6 := Poids_instantane_Eau2 &lt;= 	Water2_Total_Weight_Weighed  
								- DINT_TO_INT(	INT_TO_DINT(Water2_Total_Weight_Weighed)
										* INT_TO_DINT(	Seq_Vid_Code_synchro_partie2 / 16)	(* RIGHT-SHIFT-BY-FOUR *)
								/100);
		END_IF;
	13 : (* Not used for the moment *);
	14 : (* Not used for the moment *);
	END_CASE;
END_IF;
(* Synchro type "7" : Introduction en fonction de la valeur du chronomètre *)
(* de malaxage (produits différés). *)
(* Modif M.D. xx/01/2011 : Fusion Wet/dry : utilisation de la séquence de vidange *)
(* pour introduire les produits différés *)
Cond_Vid_Dry7 := (Seq_Vid_Code_synchro_partie1 = 14) (*"E"*)
		AND (
			(	destination_malaxeur_1
				AND (Temps_malax1 &gt;= Seq_Vid_Code_synchro_partie2)
			)
			OR
			(	destination_malaxeur_2 
				AND (Temps_malax2 &gt;= Seq_Vid_Code_synchro_partie2)
			)
		);
(* Synchro type "8" : Introduction à la fin d'introduction d'un ensemble de produits *)
(* (Conçu pour lancer la phase3 du dry-batch d'après la fin de la phase2.) *)
(* Modif M.D. 01/09/2008 : DRY - création synchro fin phase 2 *)
Cond_Vid_Dry8 := (Seq_Vid_Code_synchro_partie1 = 15) (*"F"*)
		AND ((Seq_Vid_Code_synchro_partie2 AND WORD_TO_INT(Statut_Term_Vid_Dry)) = Seq_Vid_Code_synchro_partie2);


Pret_pour_intro_produit_ph1 := Sequence_dry_init_fait 
		AND ( 	Cond_Vid_Dry3
		);

(* Anticipation of aggregates FOR DRY ONLY *)
(* XX/11/2013 - P864 - artf1159803 *)
Pret_pour_intro_anticip_gra_ph2 := Sequence_dry_init_fait
		AND ( 	(Temps_dep_gra_ph1 &gt; INT_TO_UDINT(10 * Conf_tps_retard_anticip_gra_ph2)) 	(* attendre le temps configuré dans BCmix pour introduire les granulats suite à l'introduction de la phase 1 *)
			AND Conf_anticipation_gra_phase2						(* Configuration anticipation des granulats valide *)
			AND Conf_anticipation_phase2_dry 						(* Vérification que l'option d'anticipation phase 2 est active *)
			AND (Seq_Vid_Code_ligne_pesage = 1) 						(* Pour les granulats *)
			AND Ligne_prete_pour_intro
		);

Pret_pour_intro_produit_ph2_ph3 := Sequence_dry_en_cours 
		AND ( 	Cond_Vid_Dry1 
			OR Cond_Vid_Dry2 
			OR Cond_Vid_Dry4
			OR Cond_Vid_Dry5
			OR Cond_Vid_Dry6
			OR Cond_Vid_Dry7
			OR Cond_Vid_Dry8
		)
		AND (	NOT En_attente_du_debut_intro_gra (* On bloque l'introduction si on est *)
				(* en cours d'attente de l'intro des granulats *)
			OR (Seq_Vid_Code_ligne_pesage = 1) (* Excepté pour les granulats, bien-sûr. *)
		);




(*Dans le cas, PPE il ne faut pas lancer le départ si la pompe est déja demandée (Start..) 
  ou si la pompe est en cours (PPE_en_cours)*)
IF Pret_pour_intro_produit_ph1
OR Pret_pour_intro_anticip_gra_ph2	(* XX/11/2013 - P864 - artf1159803 *)
OR Pret_pour_intro_produit_ph2_ph3 THEN
	CASE Seq_Vid_Code_ligne_pesage OF
	1 : IF NOT Vid_Gra_En_Cours AND NOT Vid_Gra_Terminee THEN Top_depart_Vid_Gra := TRUE; END_IF;
	2 : (* Non utilisé (anciennement prévu pour Gra2) *);
	3 : IF NOT Vid_Cim1_En_Cours AND NOT Vid_Cim1_Terminee THEN Top_depart_Vid_Cim1 := TRUE; END_IF;
	4 : IF NOT Vid_Anh_En_Cours AND NOT Vid_Anh_Terminee THEN Top_depart_Vid_Anh := TRUE; END_IF;
	5 : IF NOT TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD].en_cours AND NOT TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD].termine THEN
			TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD].en_cours := TRUE;
			IF (NOT Poids_avant_vidange_Eau1_Disp) THEN
				Poids_avant_vidange_Eau1 := Poids_instantane_Eau1;
				Poids_avant_vidange_Eau1_Disp := TRUE; (* Mémoriser que le "poids avant la première vidange" de cette ligne a été enregistré pour la gâchée en cours, afin de ne pas réenregistrer le poids au début d'une autre phase de vidange. *)
			END_IF;
		END_IF;
	6 : IF NOT Vid_Adj_En_Cours AND NOT Vid_Adj_Terminee THEN Top_depart_Vid_Adj := TRUE; END_IF;
	7 : IF NOT Vid_Adj_C2_En_Cours AND NOT Vid_Adj_C2_Terminee THEN Top_depart_Vid_Adj_C2 := TRUE; END_IF;
	8 : IF (
			(	NOT bit_dosage_parallele
				AND NOT Dosage_ppe_en_cours_Section392
			)
			OR (	bit_dosage_parallele
				AND NOT TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD].en_cours
				AND (	Pret_pour_intro_produit_ph1 (* Phase 1... *)
					OR Intros_ph1_terminees (* ...ou sinon, il faut *)
						(* d'abord attendre que la phase 1 *)
						(* soit terminée. *)
						(* Ajout R.C. 10/04/2012 P857 *)
				)
			)
		)
		AND NOT TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD].termine
		AND NOT Mem_Depart_Vid_Dry_Ppe (* Permet d'être sûr d'avoir un front sur "Top_depart_Vid_Ppe" *)
		AND Top_Depart_Eau_Avec_CHU[NG_Intro]	(* XX/11/2013 - P864 - artf1268357 *)
		THEN Top_depart_Vid_Ppe := TRUE; END_IF;
		(* Dans le cas des produits pompés, il ne faut pas lancer le départ si la *)
		(* pompe est déja en cours ou en attente de départ. *)
	9  : (* Non utilisé (anciennement prévu pour le Transfert Granulat) *); 
	10 : (* Non utilisé (anciennement prévu pour le Transfert Ciment) *);
	11 : IF NOT Vid_Cim2_En_Cours AND NOT Vid_Cim2_Terminee THEN Top_depart_Vid_Cim2 := TRUE; END_IF;
	12 : IF NOT Vid_Eau2_En_Cours AND NOT Vid_Eau2_Terminee THEN Top_depart_Vid_Eau2 := TRUE; END_IF;
	13 : IF NOT Vid_Add_En_Cours AND NOT Vid_Add_Terminee THEN Top_depart_Vid_Add := TRUE; END_IF;
	14 : IF NOT (	TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD].en_cours 
			OR TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD].termine
		) (* Top départ pas encore fait *)
		AND NOT Mem_Depart_Vid_Tampon_Ppe (* Permet d'être sûr d'avoir un front sur "Top_depart_Vid_Tampon_Ppe" *)
		THEN Top_depart_Vid_Tampon_Ppe := TRUE; END_IF;
	END_CASE;
END_IF;





(***************************************************************************)
(************* OUVERTURE DES BASCULES / DEMARRAGE DES POMPES ***************)
(***************************************************************************)
(* ...et mesure du temps écoulé depuis le début de l'introduction pour chaque organe *)

(* Attention : *)
(* On traite 1 seul index de la table d'introduction par cycle API dans cette partie *)
(* (voir "Idx_SVD", qui est incrémenté en fin de section) *)

(********************** GRANULAT 1 &amp; GRANULAT 2 ****************************)
IF (Seq_Vid_Code_ligne_pesage = 1) OR NOT Sequence_dry_init_fait THEN (* Note : Le "OR NOT Sequence_dry_init_fait" permet de maintenir les sorties du DFB rafraichies en dehors des phase d'introduction/vidange *)

	Vidange_Dry_Gra1 (Taux_vid := Seq_Vid_Pourcentage_a_vidanger,
	                  Demande_de_vidange := Top_depart_Vid_Gra,
	                  Idx_vid := Idx_SVD,
	                  Init := NOT Sequence_dry_init_fait,
	                  Derniere_vidange_terminee := Intro_Gra_terminee,
	                  Poids_i := INT_TO_REAL(Poids_instantane_Gra1),
	                  Pause_Tps_ecoule := En_attente_du_debut_intro_gra OR NOT Sequence_dry_en_cours,
	                  Pause_Vidange := pause_vidange_Gra,
	                  Permettre_VPF := FALSE,
	                  Index_produit =&gt; Idx_Vid_Dry_Gra,
	                  Vid_En_Cours =&gt; Vid_Gra_En_Cours,
	                  Vid_Terminee =&gt; Vid_Gra_Terminee,
	                  Tps_ecoule =&gt; Temps_vid_Dry_Gra);
	(* Mise a jour des informations pour vidange en cours *)
	(* Utilisation de "Top_depart_Vid_*" pour éviter de calculer un front sur vidange en cours *)
	IF RE(Vid_Gra_En_Cours) THEN
		(*Dire Introduction en cours*)
		TG_OUT[NG_Intro].CR_Etat_Introduction :=
			(TG_OUT[NG_Intro].CR_Etat_Introduction
			OR 16#0001) AND 16#fffd;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Gra].en_cours := TRUE; (* Voir Rem1 en debut de section *)
		(* Dire introduction glace en cours *)
		(* Modif R.C. 04/12/2009 Optimisation pour la glace *)
		(* On déclare le début de l'introduction de la glace en même temps que *)
		(* les granulats, s'ils sont transférés ensemble  *)
		IF Conf_Transfert_sur_Glace_Eau1 THEN
			TG_OUT[NG_Intro].CR_Etat_Introduction := 
			(TG_OUT[NG_Intro].CR_Etat_Introduction
			OR 16#0010) AND 16#ffdf;(* "En cours" et pas "Terminé" *)
		END_IF;
	        IF Conf_Transfert_sur_Glace_Eau2 THEN
			TG_OUT[NG_Intro].CR_Etat_Introduction_2 := 
			(TG_OUT[NG_Intro].CR_Etat_Introduction_2
			OR 16#0004) AND 16#fff7;(* "En cours" et pas "Terminé" *)
		END_IF;
		(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
		IF Conf_Transfert_ADD_Gra THEN
			TG_OUT[NG_Intro].CR_Etat_Introduction_2 := 
			(TG_OUT[NG_Intro].CR_Etat_Introduction_2
			OR 16#0010) AND 16#ffdf;(* "En cours" et pas "Terminé" *)
		END_IF;
		(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
		IF Conf_Tapis_Tr_ADD_Gra_sans_TT AND Conf_granulat_vidange_parallele THEN
			TG_OUT[NG_Intro].CR_Etat_Introduction_2 := 
			(TG_OUT[NG_Intro].CR_Etat_Introduction_2
			OR 16#0010) AND 16#ffdf;(* "En cours" et pas "Terminé" *)
			Lancer_transfert_Add_tapis_tr := TRUE;
		END_IF;	
	END_IF;
	IF Vid_Gra_En_Cours THEN 
		(* Mise à jour du temps de vidange *)
		Temps_Vid_Dry[Idx_Vid_Dry_Gra] := Temps_vid_Dry_Gra ;
		(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
		IF Conf_Tapis_Tr_ADD_Gra_sans_TT 
		AND NOT Conf_granulat_vidange_parallele 
		AND (Vidange_terminee_Gra1 OR NOT Presence_prod_Gra1)	
		AND (Vidange_terminee_Gra2 OR NOT Presence_prod_Gra2) THEN
			TG_OUT[NG_Intro].CR_Etat_Introduction_2 := 
			(TG_OUT[NG_Intro].CR_Etat_Introduction_2
			OR 16#0010) AND 16#ffdf;(* "En cours" et pas "Terminé" *)
			Lancer_transfert_Add_tapis_tr := TRUE;
		END_IF;		
	END_IF;
	IF Vid_Gra_Terminee THEN
		Intro_Gra_terminee := FALSE; (* Ce flag a été pris en compte, on peut le resetter. *)
	END_IF;

	Top_depart_Vid_Gra := FALSE;
END_IF;

(***************************** GRANULAT 2***********************************)
(*
IF (Vid_Dry_Code_Prod = 2) OR NOT Sequence_dry_init_fait THEN
	(* La section Introduction granulat gere les vidanges et le transfert des 
	deux bascules granulat. elle ne sont donc pas disociables pour le moment *)
END_IF;
*)

(***************************** CIMENT 1 ***********************************)
IF (Seq_Vid_Code_ligne_pesage = 3) OR NOT Sequence_dry_init_fait THEN
	Vidange_Dry_Cim1 (Taux_vid := Seq_Vid_Pourcentage_a_vidanger,
	                  Demande_de_vidange := Top_depart_Vid_Cim1,
	                  Idx_vid := Idx_SVD,
	                  Init := NOT Sequence_dry_init_fait,
	                  Derniere_vidange_terminee := Intro_Cim1_terminee,
	                  Poids_i := INT_TO_REAL(Poids_instantane_Cim1),
	                  Pause_Tps_ecoule := NOT Sequence_dry_en_cours,
	                  Pause_Vidange := pause_vidange_Cim1,
	                  Permettre_VPF := FALSE,
	                  Index_produit =&gt; Idx_Vid_Dry_Cim1,
	                  Vid_En_Cours =&gt; Vid_Cim1_En_Cours,
	                  Vid_Terminee =&gt; Vid_Cim1_Terminee,
	                  Tps_ecoule =&gt; Temps_vid_Dry_Cim1);

	IF RE(Vid_Cim1_En_Cours) THEN
		TG_OUT[NG_Intro].CR_Etat_Introduction :=
			(TG_OUT[NG_Intro].CR_Etat_Introduction
			OR 16#0004) AND 16#fff7;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Cim1].en_cours := TRUE; (* Voir Rem1 en debut de section *)
	END_IF;
	IF Vid_Cim1_En_Cours THEN 
		Temps_Vid_Dry[Idx_Vid_Dry_Cim1] := Temps_vid_Dry_Cim1;
	END_IF;
	IF Vid_Cim1_Terminee THEN
		Intro_Cim1_terminee := FALSE; (* Ce flag a été pris en compte, on peut le resetter. *)
	END_IF;

	Top_depart_Vid_Cim1 := FALSE;
END_IF;

(***************************** CIMENT 2 ***********************************)
IF (Seq_Vid_Code_ligne_pesage = 11) OR NOT Sequence_dry_init_fait THEN
	Vidange_Dry_Cim2 (Taux_vid := Seq_Vid_Pourcentage_a_vidanger,
	                  Demande_de_vidange := Top_depart_Vid_Cim2,
	                  Idx_vid := Idx_SVD,
	                  Init := NOT Sequence_dry_init_fait,
	                  Derniere_vidange_terminee := Intro_Cim2_terminee,
	                  Poids_i := INT_TO_REAL(Poids_instantane_Cim2),
	                  Pause_Tps_ecoule := NOT Sequence_dry_en_cours,
	                  Pause_Vidange := pause_vidange_Cim2,
	                  Permettre_VPF := FALSE,
	                  Index_produit =&gt; Idx_Vid_Dry_Cim2,
	                  Vid_En_Cours =&gt; Vid_Cim2_En_Cours,
	                  Vid_Terminee =&gt; Vid_Cim2_Terminee,
	                  Tps_ecoule =&gt; Temps_vid_Dry_Cim2);

	IF RE(Vid_Cim2_En_Cours) THEN
		TG_OUT[NG_Intro].CR_Etat_Introduction_2 := 
			(TG_OUT[NG_Intro].CR_Etat_Introduction_2
			OR 16#0001) AND 16#fffd;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Cim2].en_cours := TRUE; (* Voir Rem1 en debut de section *)
	END_IF;
	IF Vid_Cim2_En_Cours THEN
		Temps_Vid_Dry[Idx_Vid_Dry_Cim2] := Temps_vid_Dry_Cim2; (* Voir Rem2 en debut de section *) 
	END_IF;
	IF Vid_Cim2_Terminee THEN
		Intro_Cim2_terminee := FALSE; (* Ce flag a été pris en compte, on peut le resetter. *)
	END_IF;

	Top_depart_Vid_Cim2 := FALSE;
END_IF;

(***************************** EAU 1 ***********************************)
IF (Seq_Vid_Code_ligne_pesage = 5) OR NOT Sequence_dry_init_fait THEN
	Vidange_Dry_Eau1 (Taux_vid := Seq_Vid_Pourcentage_a_vidanger,
	                  Demande_de_vidange := TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD].en_cours,
	                  Idx_vid := Idx_SVD,
	                  Init := NOT Sequence_dry_init_fait,
	                  Derniere_vidange_terminee := Intro_Eau1_terminee,
	                  Poids_i := INT_TO_REAL(Poids_instantane_Eau1),
	                  Poids_avant_premiere_vidange := INT_TO_REAL(Poids_avant_vidange_Eau1),
	                  Pause_Tps_ecoule := NOT Sequence_dry_en_cours,
	                  Vidanger_partiellement := Vidange_Partielle_Eau1,
	                  Pause_Vidange := pause_vidange_Eau1,
	                  Permettre_VPF := TRUE,
	                  QdC_bascule := QdC_basc_moyenne_Eau1,
	                  Tps_ecoule =&gt; Temps_vid_Dry_Eau1);

	IF Vidange_Dry_Eau1.Vid_En_Cours THEN 
		Temps_Vid_Dry[Idx_SVD] := Temps_vid_Dry_Eau1;
	END_IF;

	IF Vidange_Dry_Eau1.Vid_Terminee THEN 
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD].termine := TRUE;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD].en_cours := FALSE;
	END_IF;
END_IF;

(***************************** EAU 2 ***********************************)
IF (Seq_Vid_Code_ligne_pesage = 12) OR NOT Sequence_dry_init_fait THEN
	Vidange_Dry_Eau2 (Taux_vid := Seq_Vid_Pourcentage_a_vidanger,
	                  Demande_de_vidange := Top_depart_Vid_Eau2,
	                  Idx_vid := Idx_SVD,
	                  Init := NOT Sequence_dry_init_fait,
	                  Derniere_vidange_terminee := Intro_Eau2_terminee,
	                  Poids_i := INT_TO_REAL(Poids_instantane_Eau2),
	                  Pause_Tps_ecoule := NOT Sequence_dry_en_cours,
	                  Pause_Vidange := pause_vidange_Eau2,
	                  Permettre_VPF := FALSE,
	                  Index_produit =&gt; Idx_Vid_Dry_Eau2,
	                  Vid_En_Cours =&gt; Vid_Eau2_En_Cours,
	                  Vid_Terminee =&gt; Vid_Eau2_Terminee,
	                  Tps_ecoule =&gt; Temps_vid_Dry_Eau2);

	IF RE(Vid_Eau2_En_Cours) THEN
		TG_OUT[NG_Intro].CR_Etat_Introduction_2 := 
			(TG_OUT[NG_Intro].CR_Etat_Introduction_2
			OR 16#0004) AND 16#fff7;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Eau2].en_cours := TRUE; (* Voir Rem1 en debut de section *)
	END_IF;
	IF Vid_Eau2_En_Cours THEN 
		Temps_Vid_Dry[Idx_Vid_Dry_Eau2] := Temps_vid_Dry_Eau2;
	END_IF;
	IF Vid_Eau2_Terminee THEN
		Intro_Eau2_terminee := FALSE; (* Ce flag a été pris en compte, on peut le resetter. *)
	END_IF;

	Top_depart_Vid_Eau2 := FALSE;
END_IF;

(***************************** ADJUVANT ***********************************)
IF (Seq_Vid_Code_ligne_pesage = 6) OR NOT Sequence_dry_init_fait THEN
	Vidange_Dry_Adj (Taux_vid := Seq_Vid_Pourcentage_a_vidanger,
	                 Demande_de_vidange := Top_depart_Vid_Adj,
	                 Idx_vid := Idx_SVD,
	                 Init := NOT Sequence_dry_init_fait,
	                 Derniere_vidange_terminee := Intro_Adj_terminee,
	                 Poids_i := INT_TO_REAL(Poids_instantane_Adj),
	                 Pause_Tps_ecoule := NOT Sequence_dry_en_cours,
	                 Pause_Vidange := pause_vidange_Adj,
	                 Permettre_VPF := FALSE,
	                 Index_produit =&gt; Idx_Vid_Dry_Adj,
	                 Vid_En_Cours =&gt; Vid_Adj_En_Cours,
	                 Vid_Terminee =&gt; Vid_Adj_Terminee,
	                 Tps_ecoule =&gt; Temps_vid_Dry_Adj);

	IF RE(Vid_Adj_En_Cours) THEN
		TG_OUT[NG_Intro].CR_Etat_Introduction :=
			(TG_OUT[NG_Intro].CR_Etat_Introduction
			OR 16#0040) AND 16#ff7f;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Adj].en_cours := TRUE; (* Voir Rem1 en debut de section *)
	END_IF;
	IF Vid_Adj_En_Cours THEN 
		Temps_Vid_Dry[Idx_Vid_Dry_Adj] := Temps_vid_Dry_Adj;
	END_IF;
	IF Vid_Adj_Terminee THEN
		Intro_Adj_terminee := FALSE; (* Ce flag a été pris en compte, on peut le resetter. *)
	END_IF;

	Top_depart_Vid_Adj := FALSE;
END_IF;

(***************************** ADJUVANT COMPARTIMENT 2 ***********************************)
IF (Seq_Vid_Code_ligne_pesage = 7) OR NOT Sequence_dry_init_fait THEN
	Vidange_Dry_Adj_C2 (Taux_vid := Seq_Vid_Pourcentage_a_vidanger,
	                    Demande_de_vidange := Top_depart_Vid_Adj_C2,
	                    Idx_vid := Idx_SVD,
	                    Init := NOT Sequence_dry_init_fait,
	                    Derniere_vidange_terminee := Intro_Comp_Adj_terminee,
	                    Poids_i := INT_TO_REAL(Poids_instantane_Adj),
	                    Pause_Tps_ecoule := NOT Sequence_dry_en_cours,
	                    Pause_Vidange := pause_vidange_Adj_C2,
	                    Permettre_VPF := FALSE,
	                    Index_produit =&gt; Idx_Vid_Dry_Adj_C2,
	                    Vid_En_Cours =&gt; Vid_Adj_C2_En_Cours,
	                    Vid_Terminee =&gt; Vid_Adj_C2_Terminee,
	                    Tps_ecoule =&gt; Temps_vid_Dry_Adj_C2);

	IF RE(Vid_Adj_C2_En_Cours) THEN
		TG_OUT[NG_Intro].CR_Etat_Introduction :=
			(TG_OUT[NG_Intro].CR_Etat_Introduction
			OR 16#4000) AND 16#7fff;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Adj_C2].en_cours := TRUE; (* Voir Rem1 en debut de section *)
	END_IF;
	IF Vid_Adj_C2_En_Cours THEN 
		Temps_Vid_Dry[Idx_Vid_Dry_Adj_C2] := Temps_vid_Dry_Adj_C2;
	END_IF;
	IF Vid_Adj_C2_Terminee THEN
		Intro_Comp_Adj_terminee := FALSE; (* Ce flag a été pris en compte, on peut le resetter. *)
	END_IF;

	Top_depart_Vid_Adj_C2 := FALSE;
END_IF;

(***************************** ANHYDRITE ***********************************)
IF (Seq_Vid_Code_ligne_pesage = 4) OR NOT Sequence_dry_init_fait THEN
	Vidange_Dry_Anh (Taux_vid := Seq_Vid_Pourcentage_a_vidanger,
	                 Demande_de_vidange := Top_depart_Vid_Anh,
	                 Idx_vid := Idx_SVD,
	                 Init := NOT Sequence_dry_init_fait,
	                 Derniere_vidange_terminee := Intro_Anh_terminee,
	                 Poids_i := INT_TO_REAL(Poids_instantane_Anh),
	                 Pause_Tps_ecoule := NOT Sequence_dry_en_cours,
	                 Pause_Vidange := pause_vidange_Anh,
	                 Permettre_VPF := FALSE,
	                 Index_produit =&gt; Idx_Vid_Dry_Anh,
	                 Vid_En_Cours =&gt; Vid_Anh_En_Cours,
	                 Vid_Terminee =&gt; Vid_Anh_Terminee,
	                 Tps_ecoule =&gt; Temps_vid_Dry_Anh);

	IF RE(Vid_Anh_En_Cours) THEN
		TG_OUT[NG_Intro].CR_Etat_Introduction :=
			(TG_OUT[NG_Intro].CR_Etat_Introduction
			OR 16#0100) AND 16#fdff;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Anh].en_cours := TRUE; (* Voir Rem1 en debut de section *)
	END_IF;
	IF Vid_Anh_En_Cours THEN 
		Temps_Vid_Dry[Idx_Vid_Dry_Anh] := Temps_vid_Dry_Anh;
	END_IF ;
	IF Vid_Anh_Terminee THEN
		Intro_Anh_terminee := FALSE; (* Ce flag a été pris en compte, on peut le resetter. *)
	END_IF;

	Top_depart_Vid_Anh := FALSE;
END_IF;

(***************************** LIGNE ADDITIONNELLE ***********************************)
IF (Seq_Vid_Code_ligne_pesage = 13) OR NOT Sequence_dry_init_fait THEN
	Vidange_Dry_Add (Taux_vid := Seq_Vid_Pourcentage_a_vidanger,
	                 Demande_de_vidange := Top_depart_Vid_Add,
	                 Idx_vid := Idx_SVD,
	                 Init := NOT Sequence_dry_init_fait,
	                 Derniere_vidange_terminee := Intro_Add_terminee,
	                 Poids_i := DINT_TO_REAL(Poids_instantane_Add),
	                 Pause_Tps_ecoule := NOT Sequence_dry_en_cours,
	                 Pause_Vidange := pause_vidange_Add,
	                 Permettre_VPF := FALSE,
	                 Index_produit =&gt; Idx_Vid_Dry_Add,
	                 Vid_En_Cours =&gt; Vid_Add_En_Cours,
	                 Vid_Terminee =&gt; Vid_Add_Terminee,
	                 Tps_ecoule =&gt; Temps_vid_Dry_Add);

	IF RE(Vid_Add_En_Cours) THEN
		TG_OUT[NG_Intro].CR_Etat_Introduction_2 :=
			(TG_OUT[NG_Intro].CR_Etat_Introduction_2
			OR 16#0010) AND 16#ffdf;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Add].en_cours := TRUE; (* Voir Rem1 en debut de section *)
	END_IF;
	IF Vid_Add_En_Cours THEN 
		Temps_Vid_Dry[Idx_Vid_Dry_Add] := Temps_vid_Dry_Add;
	END_IF ;
	IF Vid_Add_Terminee THEN
		Intro_Add_terminee := FALSE; (* Ce flag a été pris en compte, on peut le resetter. *)
	END_IF;

	Top_depart_Vid_Add := FALSE;
END_IF;

(***************************** TREMIE TAMPON GRANULAT ***********************************)
(*
IF (Seq_Vid_Code_ligne_pesage = 9) OR NOT Sequence_dry_init_fait THEN
	(* La section Introduction granulat gere les vidanges et le transfert des *)
	(* deux bascules granulat et de la tremie tampon. Ces organes ne sont donc *)
	(* pas disociables pour le moment *)
END_IF;
*)

(***************************** TREMIE TAMPON CIMENT ***********************************)
(*
IF (Seq_Vid_Code_ligne_pesage = 10) OR NOT Sequence_dry_init_fait THEN
	(* La section Introduction autre produits gere les vidanges et le transfert de *)
	(* la bascule ciment1 et de la trémie tampon ciment. Ces organes ne sont donc *)
	(* pas disociables pour le moment *)
END_IF;
*)

(***************************** TAMPONS-POMPE ***********************************)
IF (Seq_Vid_Code_ligne_pesage = 14) OR NOT Sequence_dry_init_fait THEN
	

	Pulse_Top_depart_Vid_Tampon_ppe := Top_depart_Vid_Tampon_ppe;
	IF RE(Pulse_Top_depart_Vid_Tampon_ppe) THEN (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)

		IF (Seq_Vid_Num_element &gt; 0)
		AND (Seq_Vid_Num_element &lt;= 20)
		THEN
			Dem_vidange_tampon_ppe[Seq_Vid_Num_element] := TRUE; (* Faire la demande de *)
					(* vidange pour le tampon-pompe. *)
			IndexSeqVid_Tampon_ppe[Seq_Vid_Num_element] := Idx_SVD; (* Mémoriser l'index *)
					(* de la séquence de vidange associée au tampon-pompe pour *)
					(* pouvoir retrouver plus tard l'index de la séquence *)
					(* à déclarer 'terminée' suivant l'état d'un tampon-pompe donné. *)
			TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD].en_cours := TRUE;
			TG_OUT[NG_Intro].CR_Etat_Introduction_2 :=
				(TG_OUT[NG_Intro].CR_Etat_Introduction_2
				OR 16#0040) AND 16#ff7f; (* Introductions tampons-ppe en cours *)
		END_IF;

	END_IF;
	Mem_Depart_Vid_Tampon_Ppe := Top_depart_Vid_Tampon_ppe; (* Ce bit empechera la remise à 1 du Top_Depart_Vid_Tampon_PPE au prochain cycle *)
		(* et permettra le calcul d'un front pour la prochaine séquence si c'est un tampon-pompe *)
	Top_depart_Vid_Tampon_ppe := FALSE;

END_IF;

(* Mesure du temps écoulé pour les tampons-pompes.*)
(* - Cette partie annexe gère de manière séparée le temps de vidange du produit considéré *)
(* On incrémente ici le temps de vidange correspondant *)
Pulse_S5_1 := %S5; (* %S5 = 100ms Timebase *)
	(* on passe par une variable interne pour ne pas risquer *)
	(* de problème avec l'instruction "RE()" *)
IF RE(Pulse_S5_1) THEN (* Temps en dizièmes de secondes, pour une précision correcte *)
(* Note : On met à jour les temps de tous les tampons-pompes en même temps *)
(* car si, à la place, on veut essayer mettre que l'introduction pointée à jour, *)
(* cela signifie que la modif est plus complexe (il faudrait mémoriser le Top100ms pour *)
(* chaque introduction de tampon-pompe par exemple), et cela pourrait poser problème *)
(* si la durée de parcours des 12 séquences s'approche des 100ms. *)
	FOR I1:=1 TO 12 BY 1 DO
		IF ((TG_IN[NG_Intro].Vidange_Dry[I1].Code_prod AND 16#00FF) = 14) (* Tampon-pompe *)
		AND TG_OUT[NG_Intro].CR_vidange_Dry[I1].en_cours (* Intro en cours *)
		THEN
			Temps_Vid_Dry[I1] := Temps_Vid_Dry[I1] +1(*1/10s*);
		END_IF;
	END_FOR;
END_IF;

(******************************** PRODUITS POMPES *************************************)
IF (Seq_Vid_Code_ligne_pesage = 8) OR NOT Sequence_dry_init_fait THEN
	(* Cette partie du code à été faite sur le modele du dosage eau (partie produits comptés). *)
	(* on effectue donc le lancement des dosages (start_CCR) *)
	(* on met et jour une table qui contient l'adresse du compte rendu et qui sera utilisé par la *)
	(* section "compte_rendu_CCR" pour écrire le compte rendu dans la table de gachée. *)
	(* on utilise alors la vieille structure de gachée. Ce mode de fonctionnement *)
	(* n'est pas le plus efficace ni le plus sur mais il permet de ne pas toucher à *)
	(* la gestion de CCR pour le moment. *)
	(* A la fin de la section j'ai ajouté une partie de code qui gere la notion ".En_Cours" et ".Terminé" *)

	(* On définit une table qui contient la position du dosage (1 à 6) dans la table de dosage DRY *)
	(* pour chaque ppe dry en cours*) 
	FM_Top_depart_Vid_Ppe(CLK := Top_depart_Vid_Ppe);
	IF FM_Top_depart_Vid_Ppe.q
	AND (Seq_Vid_Num_element &gt; 0)
	AND (Seq_Vid_Num_element &lt;= 6)
	THEN

		(* Lecture des informations de la table de dosage compté *)
		Dos_dif_Numero_Ppe := WORD_TO_INT(TG_IN[NG_Intro].Dos_dif_Dry[Seq_Vid_Num_element].Numero_produit);
		Dos_dif_Poids_demande := TG_IN[NG_Intro].Dos_dif_Dry[Seq_Vid_Num_element].Poids_demande;
		Dos_dif_Erreur_jetee := TG_IN[NG_Intro].Dos_dif_Dry[Seq_Vid_Num_element].Erreur_jettee;

		(* Ecriture du numéro de produit dans la table CR *)
		TG_OUT[NG_Intro].CR_Dos_Dif_Dry[Seq_Vid_Num_element].Numero_prod := TG_IN[NG_Intro].Dos_dif_Dry[Seq_Vid_Num_element].Numero_produit;

		(* Lancement du dosage *)
		(* XX/05/2014 - P864 - artf1268357 - Moisture Evolution *)
		(* Postulat : En Dry pour de l'eau pompee le premier element de la table Dos_Dif_Dry est de l'eau *)
		(* De plus, l'eau apparait au maximum deux fois dans toute la table Dos_Dif_Dry *)
		IF(	(Dos_dif_Numero_Ppe = WORD_TO_INT(TG_IN[NG_Intro].Dos_dif_Dry[1].Numero_produit))
			AND Bit_Gachee_dry 
			AND NOT Presence_prod_Eau1)THEN
				FOR i:=1 TO 6 BY 1 DO	(* Parcours de la table Dos_dif_Dry pour determiner l'emplacement de l'eau en phase 3 et ensuite de calculer le pourcentage eau phase 1 necessaire pour appliquer la CHU *)
					IF(TG_IN[NG_Intro].Dos_dif_Dry[1].Numero_produit = TG_IN[NG_Intro].Dos_dif_Dry[i].Numero_produit)THEN
						Pourcentage_eau_ph1 := DINT_TO_INT((INT_TO_DINT(TG_IN[NG_Intro].Dos_dif_Dry[1].Poids_demande) * 100)/(INT_TO_DINT(TG_IN[NG_Intro].Dos_dif_Dry[1].Poids_demande) + INT_TO_DINT(TG_IN[NG_Intro].Dos_dif_Dry[i].Poids_demande)));
					END_IF;
					IF i=1 THEN
						Pourcentage_eau_ph1:=100;
					END_IF;
				END_FOR;
				IF(Seq_Vid_Num_element = 1)THEN	(* Eau Phase 1 *)
					Consignes_ppes[Dos_dif_Numero_Ppe] := Dos_dif_Poids_demande - DINT_TO_INT(INT_TO_DINT (Ecart_CHU_Total_Eau[NG_Intro])* INT_TO_DINT(Conf_ppe_pulse_per_liter[Dos_dif_Numero_Ppe]) * INT_TO_DINT(Pourcentage_eau_ph1) / 100 ) - Dos_dif_Erreur_jetee;
					Poids_demande_Ppe[Dos_dif_Numero_Ppe]:= Dos_dif_Poids_demande - DINT_TO_INT(INT_TO_DINT (Ecart_CHU_Total_Eau[NG_Intro])* INT_TO_DINT(Conf_ppe_pulse_per_liter[Dos_dif_Numero_Ppe]) * INT_TO_DINT(Pourcentage_eau_ph1) / 100 );
					Ecart_CHU_Total_Eau_PH3[NG_Intro]:=Ecart_CHU_Total_Eau[NG_Intro];
				ELSE 	(* Eau Phase 3*)
					Consignes_ppes[Dos_dif_Numero_Ppe] := Dos_dif_Poids_demande - DINT_TO_INT(INT_TO_DINT (Ecart_CHU_Total_Eau_PH3[NG_Intro])* INT_TO_DINT(Conf_ppe_pulse_per_liter[Dos_dif_Numero_Ppe]) * INT_TO_DINT(100 - Pourcentage_eau_ph1) / 100 ) - Dos_dif_Erreur_jetee;
					Poids_demande_Ppe[Dos_dif_Numero_Ppe]:= Dos_dif_Poids_demande - DINT_TO_INT(INT_TO_DINT (Ecart_CHU_Total_Eau_PH3[NG_Intro])* INT_TO_DINT(Conf_ppe_pulse_per_liter[Dos_dif_Numero_Ppe]) * INT_TO_DINT(100 - Pourcentage_eau_ph1) / 100 );
					Ecart_CHU_Total_Eau_PH3[NG_Intro]:=0;
				END_IF;
		ELSE
			Consignes_ppes[Dos_dif_Numero_Ppe] := Dos_dif_Poids_demande - Dos_dif_Erreur_jetee;
			Poids_demande_Ppe[Dos_dif_Numero_Ppe]:= Dos_dif_Poids_demande;
		END_IF;
		TG_OUT[NG_Intro].CR_Dos_Dif_Dry[Seq_Vid_Num_element].poids_vise := Poids_demande_Ppe[Dos_dif_Numero_Ppe];
		
		Demande_debut_dosage_ppe[Dos_dif_Numero_Ppe] := TRUE;
		Dosages_ppe_en_cours_Section392[Dos_dif_Numero_Ppe] := TRUE; (* Liste des pompes DRY en cours *)
		Num_index_dos_diff_ppe[Dos_dif_Numero_Ppe] := Seq_Vid_Num_element; (* No du dosage ds la table (pour compte rendu) *)
		Dosages_ppe_en_cours[Dos_dif_Numero_Ppe] := TRUE; (* Utilisé dans l'ancienne section (quantum) ??? *)
		(* "Seq_ppe_vers_malax_en_cours" sert à incrémenter le temps de dosage pour les comptages *)
		Seq_ppe_vers_malax_en_cours[Seq_Vid_Num_element] := TRUE; (* Liste des dosage dry en cours (1à6 dosages) *)
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_SVD].en_cours := TRUE;(* On utilise l'index PVD pour dire en cours sur le produit *)

	END_IF;
	Mem_Depart_Vid_Dry_Ppe := Top_depart_Vid_Ppe; (* Ce bit empechera la remise à 1 du Top_Depart_Vid_Dry_PPE au prochain cycle *)
		(* et permettra le calcul d'un front pour la prochaine séquence si c'est une pompe *)


	Top_depart_Vid_Ppe := FALSE;

END_IF;

(* Mesure du temps écoulé pour les produits pompés.*)
(* - Cette partie annexe met à jour la table de dosage terminé pour les produits comptés *)
(* (toujours dû à l'utilisation de l'ancien codage pour les CCR) *)
(* gere aussi de manière séparée le temps de vidange du produit considéré *)
(* On incrémente ici le temps de vidange correspondant ... *)
Pulse_S5_2 := %S5; (* %S5 = 100ms Timebase *)
	(* on passe par une variable interne pour ne pas risquer *)
	(* de problème avec l'instruction "RE()" *)
IF RE(Pulse_S5_2) THEN (* Temps en dizièmes de secondes, pour une précision correcte *)
	FOR I1:=1 TO 6 BY 1 DO
		IF Seq_ppe_vers_malax_en_cours[I1]=1 THEN
			Temps_Vid_Dry[liste_Seq_PPE[I1]] := Temps_Vid_Dry[liste_Seq_PPE[I1]] +1(*1/10s*);
		END_IF;
	END_FOR;
END_IF;








(***************************************************************************)
(************* DECLARATIONS D'INTRODUCTION/VIDANGE EN COURS ****************)
(***************************************************************************)
(* On génère .CR_Etat_Introduction en aggrègant .CR_vidange_Dry[] *)

IF Sequence_dry_init_fait THEN
	FOR I5:=1 TO 14 BY 1 DO
	(* Pour chaque organe de pesage : *)
		(* Init *)
		CR_vidange_Dry_nb_en_cours[I5] := 0;
		CR_vidange_Dry_nb_termines[I5] := 0;
		CR_vidange_Dry_nb_total[I5] := 0;
	END_FOR;
	FOR I6:=1 TO 12 BY 1 DO
	(* Pour chaque séquence(demande) de vidange : *)
		(* Comptage des statuts *)
		Code_Prod_Decla_en_cours := WORD_TO_INT(TG_IN[NG_Intro].Vidange_Dry[I6].Code_prod AND 16#00FF);
		IF (Code_Prod_Decla_en_cours &lt;&gt; 0) THEN
			CR_vidange_Dry_nb_total[Code_Prod_Decla_en_cours] := CR_vidange_Dry_nb_total[Code_Prod_Decla_en_cours] + 1;
			IF (TG_OUT[NG_Intro].CR_vidange_Dry[I6].termine) THEN
				CR_vidange_Dry_nb_termines[Code_Prod_Decla_en_cours] := CR_vidange_Dry_nb_termines[Code_Prod_Decla_en_cours] + 1;
			ELSIF (TG_OUT[NG_Intro].CR_vidange_Dry[I6].en_cours) THEN
				CR_vidange_Dry_nb_en_cours[Code_Prod_Decla_en_cours] := CR_vidange_Dry_nb_en_cours[Code_Prod_Decla_en_cours] + 1;
			END_IF;
		END_IF;
	END_FOR;
	FOR I7:=1 TO 14 BY 1 DO
	(* Pour chaque organe de pesage : *)
		(* On écrit les statuts "En cours" ou "Terminé" aggrégés par organe *)
		IF (CR_vidange_Dry_nb_termines[I7] &gt;= CR_vidange_Dry_nb_total[I7]) THEN
		(* Déclaration de "Vidange terminée" pour l'organe *)
			CASE I7 OF
			5: (* Eau1 *)
				TG_OUT[NG_Intro].CR_Etat_Introduction :=
					(TG_OUT[NG_Intro].CR_Etat_Introduction
					OR 16#0020) AND 16#ffef; (* "Terminée" et pas "En cours" *)
				Intro_Eau1_terminee := FALSE; (* Ce flag a été pris en compte, on peut le resetter. *)
			END_CASE;
		ELSIF (CR_vidange_Dry_nb_en_cours[I7] &gt; 0) THEN
		(* Déclaration de "Vidange en cours" pour l'organe *) 
			CASE I7 OF
			5: (* Eau1 *)
				TG_OUT[NG_Intro].CR_Etat_Introduction :=
					(TG_OUT[NG_Intro].CR_Etat_Introduction
					OR 16#0010) AND 16#ffdf; (* "En cours" et pas "Terminée" *)
			END_CASE;
		ELSE
		(* Vidange pas en cours pour l'organe *)
			CASE I7 OF
			5: (* Eau1 *)
				TG_OUT[NG_Intro].CR_Etat_Introduction :=
					TG_OUT[NG_Intro].CR_Etat_Introduction
					AND 16#ffcf; (* ni "En cours", ni "Terminée" *)
			END_CASE;
		END_IF;

		(* On détermine si on est entre des vidanges (cas d'une vidange en plusieurs fois) *)
		Entre_vidanges := (CR_vidange_Dry_nb_en_cours[I7] = 0)
			AND (CR_vidange_Dry_nb_termines[I7] &gt;= 1)
			AND (CR_vidange_Dry_nb_termines[I7] &lt; CR_vidange_Dry_nb_total[I7]);
		CASE I7 OF
		5: (* Eau1 *)
			Entre_vidanges_Eau1 := Entre_vidanges;
		END_CASE;

		(* On détermine si on est en dans un mode de vidange partielle, ou au contraire *)
		(* dans un mode de dernière vidange. *)
		(* Cette information est utile pour savoir si le DFB doit utiliser l'information *)
		(* "Intro_*_terminee" (qui valide la fin de toutes les phases de vidanges), ou *)
		(* s'il doit se baser par rapport au poids de la bascule. *)
		(* Cette information est également utilisée pour ne mettre à TRUE "Intro_Eau1_terminee" *)
		(* que lors de la dernière phase de vidange, afin qu'elles soient bien toutes *)
		(* déroulées. *)
		(* Ajout R.C. 06/09/2012 Vidange en plusieurs fois *)
		Vidange_Partielle := (CR_vidange_Dry_nb_total[I7] - CR_vidange_Dry_nb_termines[I7] &gt; 1);
		CASE I7 OF
		5: (* Eau1 *)
			Vidange_Partielle_Eau1 := Vidange_Partielle;
		END_CASE;
		
	END_FOR;

	(* Cas particulier pour la glace *)
	(* + Cas particulier pour la centrale de Cogolin *)
	Conf_Transfert_sur_Glace_Eau1 (* Ajout R.C. 30/11/2009 *) :=
		(Conf_Eau_dest_basc[1] &lt;&gt; 0)
		AND (	Conf_skip_transfert
			OR Conf_TT_granulat
		); (* Dans le cas de la glace avec stockage intermédiaire granulat, il n'y a *)
		(* pas de demande d'introduction faite par BC-Mix. Dans ce cas, l'API génère *)
		(* tout de même un compte rendu pour que BC-Mix connaisse l'état de la ligne Eau1. *)
	(* =&gt; Déclarer que l'introduction de la ligne Eau1 est terminée *)
	IF (Conf_Transfert_sur_Glace_Eau1 AND Transfert_G_terminee)
	OR pas_vid_basc_eau (* Modif M.D. 26/10/2004 COGOLIN : Compteur Eau *)
	THEN
		TG_OUT[NG_Intro].CR_Etat_Introduction :=
			(TG_OUT[NG_Intro].CR_Etat_Introduction
			OR 16#0020) AND 16#ffef; (* "Terminée" et pas "En cours" *)
		Intro_Eau1_terminee := FALSE; (* Ce flag a été pris en compte, on peut le resetter. *)

		Attente_fin_vidange_Eau1 := FALSE; (* S'il n'y a pas de vidange de la bascule à eau, *)
			(* alors il faut faire un RESET sur ce flag, pour indiquer qu'il n'y a pas *)
			(* lieu d'attendre la dernière phase de vidange *)
	END_IF;
	
	(* Génération des états "Vid_*_En_cours" et "Vid_*_Terminee" à partir du mot d'état d'introduction *)
	Vid_Eau1_En_Cours := ((TG_OUT[NG_Intro].CR_Etat_Introduction AND 16#0010) &lt;&gt; 16#0000);
	Vid_Eau1_Terminee := ((TG_OUT[NG_Intro].CR_Etat_Introduction AND 16#0020) &lt;&gt; 16#0000);

	(* Déclarer que l'introduction de la ligne Additionnelle à destination de Eau1 est en cours *)
	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	IF (Conf_basc_add_dest = 13  AND Faire_vidange_Add) THEN
		TG_OUT[NG_Intro].CR_Etat_Introduction_2 := 
		(TG_OUT[NG_Intro].CR_Etat_Introduction_2
		OR 16#0010) AND 16#ffdf;(* "En cours" et pas "Terminée" *)
	END_IF;
END_IF;








(***************************************************************************)
(************** DECLARATIONS DE FIN D'INTRODUCTION/VIDANGE *****************)
(***************************************************************************)
(* Mise en jour dans informations de vidange terminée. *)
(* pour cela on utilise les données du mode Wet (incluant les transfert *)
(* il faudra donc modifier les "transferts" pour inclure un mode Dry : sans malaxeur... *)


(********************** GRANULAT 1 &amp; GRANULAT 2 ****************************)
(* Déclarer que l'introduction des granulats est terminée *)
IF Vid_Gra_Terminee THEN
	TG_OUT[NG_Intro].CR_Etat_Introduction := 
		(TG_OUT[NG_Intro].CR_Etat_Introduction
		OR 16#0002) AND 16#fffe;
	(* Mise a jour du bit Séquence X terminée *)
	IF (Idx_Vid_Dry_Gra &lt;&gt; 0) THEN
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Gra].termine := TRUE;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Gra].en_cours := FALSE;
	END_IF;

	IF NOT Stockage_inter_Gra_ACTIVE (* Correction #904 Wissous *)
		(* Cas d'un TP + Skip transfert + TT =&gt; Quand le skip est plein et en attente en *)
		(* position basse, et qu'au même moment on passe ici (en fin d'intro dans le malaxeur) *)
		(* alors on fait un reset de vidange_en_cours_G1 pour la gâchée suivante. *)
		(* Cela bloque le départ du skip pour la gâchée suivante. *)
		(* Correction : Ne pas faire de Reset dans cette section "Gestion_introduction" si *)
		(* le reset est déjà traité par la section "Strockage_intermédiaire_gra". *)
	THEN 
		Vidange_en_cours_Gra1 := FALSE;
		Vidange_terminee_Gra1 := FALSE;
		Vidange_en_cours_Gra2 := FALSE;
		Vidange_terminee_Gra2 := FALSE;
	END_IF;
	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	IF Conf_Transfert_ADD_Gra OR Conf_Tapis_Tr_ADD_Gra_sans_TT THEN
		TG_OUT[NG_Intro].CR_Etat_Introduction_2 := 
		(TG_OUT[NG_Intro].CR_Etat_Introduction_2
		OR 16#0020) AND 16#ffef;	(* "Terminée" et pas "En cours" *)
		Intro_add_terminee := FALSE; (* Ce flag a été pris en compte, on peut le resetter. *)
	END_IF;
END_IF;

(***************************** CIMENT 1 ***********************************)
(* Déclarer que l'introduction de la ligne Ciment1 est terminée *)
IF Vid_Cim1_Terminee THEN
	TG_OUT[NG_Intro].CR_Etat_Introduction :=
		(TG_OUT[NG_Intro].CR_Etat_Introduction
		OR 16#0008) AND 16#fffb;
	(* Mise a jour du bit Séquence X terminée *)
	IF (Idx_Vid_Dry_Cim1 &lt;&gt; 0) THEN
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Cim1].termine := TRUE;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Cim1].en_cours := FALSE;
	END_IF;
END_IF;

(***************************** CIMENT 2 ***********************************)
(* Déclarer que l'introduction de la ligne Ciment2 est terminée *)
IF Vid_Cim2_Terminee THEN
	TG_OUT[NG_Intro].CR_Etat_Introduction_2 := 
		(TG_OUT[NG_Intro].CR_Etat_Introduction_2
		OR 16#0002) AND 16#fffe;
	(* Mise a jour du bit Séquence X terminée *)
	IF (Idx_Vid_Dry_Cim2 &lt;&gt; 0) THEN
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Cim2].termine := TRUE;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Cim2].en_cours := FALSE;
	END_IF;
END_IF;

(***************************** EAU 2 ***********************************)
(* Déclarer que l'introduction de la ligne Eau2 est terminée *)
Conf_Transfert_sur_Glace_Eau2 (* Ajout R.C. 30/11/2009 *) :=
	(Conf_Eau_dest_basc[2] &lt;&gt; 0)
	AND(	Conf_skip_transfert
		OR Conf_TT_granulat);

IF (	Vid_Eau2_Terminee
	AND NOT Conf_Transfert_sur_Glace_Eau2
)
OR (	Transfert_G_terminee (* Modif R.C. 30/11/2009, il faut bénéficier des *)
		(* mêmes conditions que le transfert des granulats pour le cas *)
		(* de la glace transférée sur les chaines à granulat. *)
	AND Conf_Transfert_sur_Glace_Eau2
)
OR pas_vid_basc_eau (* Modif M.D. 26/10/2004 COGOLIN : Compteur Eau *)
THEN 
	TG_OUT[NG_Intro].CR_Etat_Introduction_2 :=
		(TG_OUT[NG_Intro].CR_Etat_Introduction_2
		OR 16#0008) AND 16#fffb;
	(* Mise a jour du bit Séquence X terminée *)
	IF (Idx_Vid_Dry_Eau2 &lt;&gt; 0) THEN
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Eau2].termine := TRUE;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_Eau2].en_cours := FALSE;
	END_IF;
END_IF;

(***************************** ADJUVANT ***********************************)
(* Déclarer que l'introduction du compartiment principal de la bascule adjuvant est terminée *)
IF (Conf_adjuvant_comp1_vers_malax AND Vid_Adj_Terminee)
OR (Conf_adjuvant_comp1_vers_eau1 AND fin_vidange_basc_adj) THEN
		(* Modif R.C. 06/07/2011 P852 : dans le cas d'une "destination eau", il faut déclarer l'introduction adjuvant terminée, sinon on bloque l'introduction. *)
	TG_OUT[NG_Intro].CR_Etat_Introduction :=
		(TG_OUT[NG_Intro].CR_Etat_Introduction
		OR 16#0080) AND 16#ffbf;
	(* Mise a jour du bit Séquence X terminée *)
	IF (Idx_Vid_Dry_adj &lt;&gt; 0) 
	AND NOT Conf_adjuvant_comp1_vers_eau1 (* Cas adj vers eau, il faut CR_Etat_Introduction *)
      		(* à "vid terminée" pour arreter la vidange de la bascule (section 410). Par contre *)
      		(* Le CR_vidange_Dry ne doit pas évoluer car la dite bascule n'est pas dans la table de vidange *)
	THEN
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_adj].termine := TRUE;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_adj].en_cours := FALSE;
	END_IF;

END_IF;

(***************************** ADJUVANT COMPARTIMENT 2 ***********************************)
(* Déclarer que l'introduction du compartiment secondaire de la bascule adjuvant est terminée *)
IF (Conf_adjuvant_comp2_vers_malax AND Vid_Adj_C2_Terminee)
OR (Conf_adjuvant_comp2_vers_eau1 AND fin_vidange_comp2_adj) THEN
		(* Modif R.C. 06/07/2011 P852 : dans le cas d'une "destination eau", il faut déclarer l'introduction adjuvant terminée, sinon on bloque l'introduction. *)
	TG_OUT[NG_Intro].CR_Etat_Introduction :=
		(TG_OUT[NG_Intro].CR_Etat_Introduction
		OR 16#8000) AND 16#bfff;
	(* Mise a jour du bit Séquence X terminée *)
	IF (Idx_Vid_Dry_adj_C2 &lt;&gt; 0) THEN
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_adj_C2].termine := TRUE;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_adj_C2].en_cours := FALSE;
	END_IF;

END_IF;

(***************************** ANHYDRITE ***********************************)
(* Déclarer que l'introduction de la ligne Anhydrite est terminée *)
IF Vid_Anh_Terminee THEN
	TG_OUT[NG_Intro].CR_Etat_Introduction :=
		(TG_OUT[NG_Intro].CR_Etat_Introduction
		OR 16#0200) AND 16#feff;
	(* Mise a jour du bit Séquence X terminée *)
	IF (Idx_Vid_Dry_anh &lt;&gt; 0) THEN
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_anh].termine := TRUE;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_anh].en_cours := FALSE;
	END_IF;      

END_IF;

(***************************** LIGNE ADDITIONNELLE ***********************************)
(* Déclarer que l'introduction de la ligne Additionnelle est terminée *)
(* ASM - Nov/2013 - Additional line *)
(* avec stockage intermediaire *)
Conf_Transfert_ADD_Gra :=
	(Conf_basc_add_dest = 5 OR Conf_basc_add_dest = 6 OR Conf_basc_add_dest = 7 OR Conf_basc_add_dest = 8)
	AND(Conf_skip_transfert
		OR Conf_TT_granulat);

(* sans stockage intermediaire à destination du Tapis de transfert*)
Conf_Tapis_Tr_ADD_Gra_sans_TT :=
	(Conf_basc_add_dest = 7)
	AND NOT(Conf_skip_transfert
		OR Conf_TT_granulat);

IF Vid_Add_Terminee THEN
	TG_OUT[NG_Intro].CR_Etat_Introduction_2 :=
		(TG_OUT[NG_Intro].CR_Etat_Introduction_2
		OR 16#0020) AND 16#ffef;
	(* Mise a jour du bit Séquence X terminée *)
	IF (Idx_Vid_Dry_add &lt;&gt; 0) THEN
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_add].termine := TRUE;
		TG_OUT[NG_Intro].CR_vidange_Dry[Idx_Vid_Dry_add].en_cours := FALSE;
	END_IF;      

END_IF;

(***************************** TAMPONS-POMPE ***********************************)
(* Déclarer que l'introduction des tampons-pompe est terminée *)
FOR Idx_Ppe := 1 TO 20 DO
	IF Vid_Tampon_ppe_terminee[Idx_Ppe] THEN
		IF (IndexSeqVid_Tampon_ppe[Idx_Ppe] &gt; 0)
		AND (IndexSeqVid_Tampon_ppe[Idx_Ppe] &lt;= 12)
		THEN (* L'index de séquence mémorisé est bien dans la plage *)
			TG_OUT[NG_Intro].CR_vidange_Dry[IndexSeqVid_Tampon_ppe[Idx_Ppe]].en_cours := FALSE;
			TG_OUT[NG_Intro].CR_vidange_Dry[IndexSeqVid_Tampon_ppe[Idx_Ppe]].termine := TRUE;
		END_IF;
		Vid_Tampon_ppe_terminee[Idx_Ppe] := FALSE;
		IndexSeqVid_Tampon_ppe[Idx_Ppe] := 0; (* Initialisation non obligatoire, faite pour éviter ça puisse perturber le débug *)
		Nb_intros_tampons_ppe_restantes := Nb_intros_tampons_ppe_restantes - 1;
	END_IF;
END_FOR;

(* Déclarer que l'introduction de tous les tampons-pompe est terminée *)
IF ((TG_OUT[NG_Intro].CR_Etat_Introduction_2 AND 16#0040) &lt;&gt; 0) (* Introductions tampons-ppe en cours *)
AND (Nb_intros_tampons_ppe_restantes = 0)
THEN
	TG_OUT[NG_Intro].CR_Etat_Introduction_2 :=
		(TG_OUT[NG_Intro].CR_Etat_Introduction_2
		OR 16#0080) AND 16#ffbf; (* Introductions tampons-ppe terminées *)
END_IF;


(******************************** PRODUITS POMPES *************************************)
(* Déclarer que l'introduction des produits pompés est terminée *)
(* C'est la section "M340_CCR" qui gere la fin des dosages et l'écriture des compte rendus *)
(* Ici, on a besoin de savoir quel dosage est terminé (pour synchroniser les dosages). *)
(* Modif M.D. 08/09/2008 : BC-Mix peut arreter une pompe et entrainer une pesée nulle. *)
(* la table "Seq_ppe_vers_malax_termine" présente la fin des dosage en fonction de la table de dosage. *)
(* (On utilisait avant la detection d'une valeur non nulle du CR de pesée) *)
RE_adj1(CLK:=Seq_ppe_vers_malax_termine[1]);
IF RE_adj1.Q THEN 
	TG_OUT[NG_Intro].CR_vidange_Dry[liste_Seq_PPE[1]].en_cours := FALSE;
	TG_OUT[NG_Intro].CR_vidange_Dry[liste_Seq_PPE[1]].termine := TRUE;
END_IF;

RE_adj2(CLK:=Seq_ppe_vers_malax_termine[2]);
IF RE_adj2.Q THEN
	TG_OUT[NG_Intro].CR_vidange_Dry[liste_Seq_PPE[2]].en_cours := FALSE;
	TG_OUT[NG_Intro].CR_vidange_Dry[liste_Seq_PPE[2]].termine := TRUE;
END_IF;

RE_adj3(CLK:=Seq_ppe_vers_malax_termine[3]);
IF RE_adj3.Q THEN
	TG_OUT[NG_Intro].CR_vidange_Dry[liste_Seq_PPE[3]].en_cours := FALSE;
	TG_OUT[NG_Intro].CR_vidange_Dry[liste_Seq_PPE[3]].termine := TRUE;
END_IF;

RE_adj4(CLK:=Seq_ppe_vers_malax_termine[4]);
IF RE_adj4.Q THEN
	TG_OUT[NG_Intro].CR_vidange_Dry[liste_Seq_PPE[4]].en_cours := FALSE;
	TG_OUT[NG_Intro].CR_vidange_Dry[liste_Seq_PPE[4]].termine := TRUE;
END_IF;

RE_adj5(CLK:=Seq_ppe_vers_malax_termine[5]);
IF RE_adj5.Q THEN
	TG_OUT[NG_Intro].CR_vidange_Dry[liste_Seq_PPE[5]].en_cours := FALSE;
	TG_OUT[NG_Intro].CR_vidange_Dry[liste_Seq_PPE[5]].termine := TRUE;
END_IF;

RE_adj6(CLK:=Seq_ppe_vers_malax_termine[6]);
IF RE_adj6.Q THEN
	TG_OUT[NG_Intro].CR_vidange_Dry[liste_Seq_PPE[6]].en_cours := FALSE;
	TG_OUT[NG_Intro].CR_vidange_Dry[liste_Seq_PPE[6]].termine := TRUE;
END_IF;




(***************************************************************************)
(****** MISE A JOUR DE VARIABLES INTERNES POUR LES AUTRES SECTIONS *********)
(***************************************************************************)

(* Mise à jour des bits d'état d'introduction, d'après le compte rendu de gachée *)
WORD_TO_BIT (IN:=TG_OUT[NG_Intro].CR_Etat_Introduction,
	BIT0 =&gt; Introduction_Gra_encours,
	BIT1 =&gt; Introduction_Gra_terminee,
	BIT2 =&gt; Introduction_Cim1_encours,
	BIT3 =&gt; Introduction_Cim1_terminee,

	BIT4 =&gt; Introduction_Eau1_encours,
	BIT5 =&gt; Introduction_Eau1_terminee,
	BIT6 =&gt; Introduction_Adj_encours,
	BIT7 =&gt; Introduction_Adj_terminee,

	BIT8 =&gt; Introduction_Anh_encours,
	BIT9 =&gt; Introduction_Anh_terminee,
(*	BIT10 =&gt; *)(* (ex. "introduction dif pompe en cours", cf ancienne section 420) *)
(*	BIT11 =&gt; *)(* (ex. "introduction dif pompe terminee", cf ancienne section 420) *)
	
(*	BIT12 =&gt; *)(* (ex. "introduction eau par pompe en cours", cf ancienne section 420) *)
(*	BIT13 =&gt; *)(* (ex. "introduction eau par pompe terminé", cf ancienne section 420) *)
	BIT14 =&gt; Introduction_Comp_Adj_encours, (* cf ancienne section prod dif *)
	BIT15 =&gt; Introduction_Comp_Adj_terminee); (* cf ancienne section prod dif *)

WORD_TO_BIT (IN:=TG_OUT[NG_Intro].CR_Etat_Introduction_2,
 	BIT0 =&gt; Introduction_Cim2_encours,
	BIT1 =&gt; Introduction_Cim2_terminee,
	BIT2 =&gt; Introduction_Eau2_encours,
	BIT3 =&gt; Introduction_Eau2_terminee,
	
	BIT4 =&gt; Introduction_Add_encours,
	BIT5 =&gt; Introduction_Add_terminee,
	BIT6 =&gt; Introduction_Tampon_ppe_encours,
	BIT7 =&gt; Introduction_Tampon_ppe_terminee);


(* Déterminer s'il y a un(des) produit(s) pompé(s) en cours d'introduction *)
Dosage_ppe_en_cours_Section392 := FALSE; (* par défaut *)
FOR I2:=1 TO 6 BY 1 DO
	IF (liste_Seq_PPE[I2] &lt;&gt; 0) THEN
		IF (TG_OUT[NG_Intro].CR_vidange_Dry[liste_Seq_PPE[I2]].en_cours) THEN
			Dosage_ppe_en_cours_Section392 := TRUE;
			EXIT;	
		END_IF;
	END_IF;
END_FOR;



(* Déterminer si les introductions 'phase 1' sont terminées *)
(* Cela permet de savoir si la phase '2' peut débuter. *)
(* Ici, nous testons uniquement que les introductions 'phase 1' demandées dans *)
(* la table d'introduction sont faites. *)
(* Pour savoir qu'un produit pompé (sans tampon-pompe) a bien été introduit, on *)
(* s'epargne de faire le test ici, car le test de "fin de dosage" est suffisant. *)
Intros_ph1_terminees := ((Statut_Term_Vid_dry AND Statut_Pres_Vid_Dry_Ph1) = Statut_Pres_Vid_Dry_Ph1);



(* Déterminer si toutes les introductions sont terminées *)
Intros_terminees := ((Statut_Term_Vid_dry AND Statut_Pres_Vid_Dry) = Statut_Pres_Vid_Dry);



(***************************************************************************)
(************ INIT EN FIN DE SEQUENCE D'INTRODUCTION/VIDANGE ***************)
(***************************************************************************)


IF Intros_terminees
AND Intros_ph1_terminees (* Modif M.D. xx/01/2011 Anticipation phase 2 *)
		(* Le test de cette condition s'inscrit dans le cadre de l'anticipation *)
		(* de la phase 2 : On s'assure ici que toutes les introductions 'phase 1' *)
		(* ont été faites, car ce test qui est normalement vérifié avant d'autoriser *)
		(* le départ de la phase 2 peut être désactivé pour permettre l'anticipation *)
		(* de la phase 2. *)
		(* Rappel : L'anticipation de la phase 2' permet d'introduire la *)
		(* phase 2 (= phase sèche en dry-batch : granulat et ciment) dès qu'un *)
		(* certain pourcentage de la phase 1 (= 1ère phase d'eau) a été atteint. *)
		(* + Modif R.C. 05/04/2012 P857 *)
AND Sequence_dry_en_cours 
THEN
	Sequence_dry_init_fait := FALSE;
	Sequence_dry_en_cours := FALSE;
	Sequence_dry_termine := TRUE;
	Introduction_terminee := TRUE; (*convergence vers le process de gestion gachée *)
		(* A la fin de la vidange dry, on met le mot d'état gachée à "introduction terminé" *)
		(* et "gachée terminée" *)
(*	TG_OUT[NG_VD].CR_Etat_Gachee := TG_OUT[NG_VD].CR_Etat_Gachee OR 16#0900;*)
	Intro_en_cours := FALSE; (* Modif M.D. xx/01/2011 remplacement de Depart_vidange_dry := FALSE *)
	debut_intro_tapis_transfert := FALSE;


	TG_OUT[NG_Intro].CR_Etat_Gachee := 
		TG_OUT[NG_Intro].CR_Etat_Gachee
		OR 16#0100 (* Intro terminee *);
		(* Ce code provient de la traduction en ST du code original en IL *) 

	(* Initialisation pour la prochaine gachee *)
	En_attente_du_debut_intro_gra := FALSE;
		(* Ce code provient de la traduction en ST du code original en IL *) 

	IF destination_sortie_seche THEN 
		TG_OUT[NG_Intro].CR_Etat_Gachee := TG_OUT[NG_Intro].CR_Etat_Gachee OR 16#0800 (* Gachee terminee *);

		(* XX/11/2013 - P864 - artf1159801 *)
		IF TG_IN[NG_Intro].Proprietes_gachee.0 THEN
			TG_OUT[NG_Intro].CR_Etat_Gachee_2 := TG_OUT[NG_Intro].CR_Etat_Gachee_2 OR 16#0004 (* Production terminee *);
		END_IF;

		IF destination_malaxeur_1 THEN
			declaration_malaxeur_1_vide := TRUE;
		END_IF;
		IF destination_malaxeur_2 THEN
			declaration_malaxeur_2_vide := TRUE;
		END_IF;

		TG_IN[NG_Intro].mot_destination := 0;
	(* Ce code provient de la traduction en ST du code original en IL *) 
	END_IF;

	IF Bit_Gachee_dry THEN
		(*Déclaration fin de gachée pour le DRY BATCH*)
		TG_OUT[NG_Intro].CR_Etat_Gachee :=
			TG_OUT[NG_Intro].CR_Etat_Gachee
			OR 16#0800 (* Gachee terminee *);

		IF TG_IN[NG_Intro].Proprietes_gachee.0 THEN (*derniere gâchée*)
			Bit_validation_camion_s_seche := FALSE;
			TG_OUT[NG_Intro].CR_Etat_Gachee_2 := TG_OUT[NG_Intro].CR_Etat_Gachee_2 OR 16#0004; (* XX/11/2013 - P864 - artf1159801 *)
		END_IF;
	END_IF;

	(* Sortie sèche par malaxeur grand ouvert : Demandes d'ouverture de la trappe *)
	IF destination_sortie_seche THEN
		IF destination_malaxeur_1 THEN
			IF Bit_validation_trappe1_malax1 THEN
				Malax_1_t1_ouvert_sortie_seche := TRUE;
			END_IF;
			IF Bit_validation_trappe2_malax1 THEN
				Malax_1_t2_ouvert_sortie_seche := TRUE;
			END_IF;
		END_IF;
		IF destination_malaxeur_2 THEN
			IF Bit_validation_trappe1_malax2 THEN
				Malax_2_t1_ouvert_sortie_seche := TRUE;
			END_IF;
			IF Bit_validation_trappe2_malax2 THEN
				Malax_2_t2_ouvert_sortie_seche := TRUE;
			END_IF;
		END_IF;
	END_IF;

END_IF;



(***************************************************************************)
(****************** PARCOURS DE LA TABLE D'INTRODUCTION ********************)
(***************************************************************************)




IF Sequence_dry_init_fait THEN
	(* Pointer sur le produit index de la table d'introduction au cycle API suivant *)
	(* Note : on traite un index par cycle API, pour ne alléger le temps de cycle API *)
	(* et car cela est suffisant. *)
	IF (Idx_SVD = 12) THEN
		Idx_SVD := 1;
	ELSIF (TG_IN[NG_Intro].Vidange_Dry[Idx_SVD+1].Code_prod = 0) THEN
		Idx_SVD := 1; (* On revient au premier index, si le suivant dans la table *)
		(* d'introduction est vide. *)
	ELSE
		Idx_SVD := Idx_SVD + 1;
	END_IF;
ELSE
	Idx_SVD := 1;
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="400_Intro_Gra" type="section" task="MAST"></identProgram>
		<LDSource nbColumns="25">
			<networkLD>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Intro_Gra_DEM_INIT"></contact>
					<HLink nbCells="11"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Intro_Gra_DEM_INIT"></coil>
					<HLink nbCells="10"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Gra1"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Introduction_Gra_encours"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Intro_Presence_Glace_Gra1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="7"></HLink>
					</shortCircuit>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="coil" coilVariableName="Ordre_intro_Gra1"></coil>
					<HLink nbCells="2"></HLink>
				</typeLine>
				<typeLine>
					<VLink></VLink>
					<emptyCell nbCells="7"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Intro_Presence_Glace_Gra1"></contact>
					<HLink nbCells="5"></HLink>
					<contact typeContact="openContact" contactVariableName="Intro_Glace_Prete_Gra1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Presence_prod_Gra1"></contact>
					<HLink nbCells="6"></HLink>
					<contact typeContact="openContact" contactVariableName="Intro_Presence_Glace_Gra1"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Intro_Glace_encours_Gra1"></contact>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Gra2"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Introduction_Gra_encours"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Intro_Presence_Glace_Gra2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="7"></HLink>
					</shortCircuit>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="coil" coilVariableName="Ordre_intro_Gra2"></coil>
					<HLink nbCells="2"></HLink>
				</typeLine>
				<typeLine>
					<VLink></VLink>
					<emptyCell nbCells="7"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Intro_Presence_Glace_Gra2"></contact>
					<HLink nbCells="5"></HLink>
					<contact typeContact="openContact" contactVariableName="Intro_Glace_Prete_Gra2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Presence_prod_Gra2"></contact>
					<HLink nbCells="6"></HLink>
					<contact typeContact="openContact" contactVariableName="Intro_Presence_Glace_Gra2"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Intro_Glace_encours_Gra2"></contact>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_atteint_Gra1"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_Vide_Glace_vers_Gra1"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_Add_vers_Gra1"></contact>
					<HLink nbCells="14"></HLink>
					<coil typeCoil="coil" coilVariableName="Seuils_vides_atteints_Gra1"></coil>
					<HLink nbCells="2"></HLink>
				</typeLine>
				<typeLine>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_atteint_Gra2"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_Vide_Glace_vers_Gra2"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_Add_vers_Gra2"></contact>
					<HLink nbCells="14"></HLink>
					<coil typeCoil="coil" coilVariableName="Seuils_vides_atteints_Gra2"></coil>
					<HLink nbCells="2"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_granulat_dans_skip"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="7"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<HLink nbCells="8"></HLink>
					<coil typeCoil="coil" coilVariableName="Vidanger_Gra_sans_ordre_intro"></coil>
					<HLink nbCells="2"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Conf_tapis_transfert"></contact>
					<contact typeContact="closedContact" contactVariableName="Defaut_tapis_transfert"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Info_tapis_transfert_en_marche"></contact>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Conf_TT_granulat"></contact>
					<contact typeContact="openContact" contactVariableName="Info_TT_Gra_fermee"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Discordance_vidange_TT_granulat"></contact>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Defaut_skip"></contact>
					<contact typeContact="openContact" contactVariableName="transfert_granulat_OK"></contact>
					<emptyCell nbCells="5"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="11"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="closedContact" contactVariableName="Conf_tapis_transfert"></contact>
					<HLink nbCells="3"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="11"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="anticipation_vidange_dans_tapis"></contact>
					<HLink nbCells="13"></HLink>
					<emptyCell nbCells="11"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="closedContact" contactVariableName="Conf_tapis_transfert"></contact>
					<contact typeContact="closedContact" contactVariableName="Conf_skip_transfert"></contact>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat"></contact>
					<contact typeContact="closedContact" contactVariableName="Conf_granulat1_skip"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="12"></HLink>
					<coil typeCoil="coil" coilVariableName="Vidanger_Gra_si_ordre_intro"></coil>
					<HLink nbCells="2"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Cde_marche_tapis_transfert"></contact>
					<contact typeContact="openContact" contactVariableName="Info_tapis_transfert_en_marche"></contact>
					<contact typeContact="closedContact" contactVariableName="Conf_skip_transfert"></contact>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat"></contact>
					<contact typeContact="closedContact" contactVariableName="Tapis_transfert_vitesse_rotation"></contact>
					<contact typeContact="closedContact" contactVariableName="fin_intro_tapis_transfert"></contact>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="8"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="8"></emptyCell>
					<VLink></VLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="PContact" contactVariableName="Ordre_intro_Gra1"></contact>
					</shortCircuit>
					<emptyCell nbCells="5"></emptyCell>
					<FFBBlock instanceName="TON_112" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="15" posY="23"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_granulat1_tps_vidange"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<contact typeContact="PContact" contactVariableName="Ordre_intro_Gra2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Conf_avec_tapis_et_skip"></contact>
					</shortCircuit>
					<emptyCell nbCells="14"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Lancement_transfert"></contact>
					<HLink nbCells="10"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Alarme_vidange_Gra1"></contact>
					<contact typeContact="closedContact" contactVariableName="Vidange_bloquee_Gra1"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Vidange_Gra1"></contact>
					<HLink nbCells="4"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Alarme_vidange_Gra1"></coil>
					<HLink nbCells="1"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidanger_Gra_si_ordre_intro"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Ordre_intro_Gra1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Seuils_vides_atteints_Gra1"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Vidange_terminee_Gra1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidanger_Gra_sans_ordre_intro"></contact>
					<HLink nbCells="5"></HLink>
					<emptyCell nbCells="5"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName="TOF_76_195" typeName="TOF" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="15" posY="28"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_Gra1_retard_ferm_balance"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Pres_Gra1_Skip_TT_anhCPC"></contact>
					</shortCircuit>
					<emptyCell nbCells="4"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Intro_Presence_Glace_Gra1"></contact>
					</shortCircuit>
					<VLink></VLink>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Faire_vidange_Gra1"></coil>
					<HLink nbCells="1"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Defaut_tapis_transfert"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Gra1"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Vidange_en_cours_Gra1"></coil>
					<HLink nbCells="1"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="18"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="19"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<emptyCell nbCells="3"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="13"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="9"></HLink>
					<coil typeCoil="coil" coilVariableName="bit_intermediaire_vid_G2A"></coil>
					<HLink nbCells="1"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="13"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="11"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="13"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<contact typeContact="closedContact" contactVariableName="Presence_prod_Gra1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Intro_Presence_Glace_Gra1"></contact>
					</shortCircuit>
					<emptyCell nbCells="7"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidanger_Gra_si_ordre_intro"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Ordre_intro_Gra2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Seuils_vides_atteints_Gra2"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Vidange_terminee_Gra2"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<compareBlock width="2">
							<expression>Conf_granulat2_nb_tremies&gt;0</expression>
						</compareBlock>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Conf_granulat_vidange_parallele"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Info_balance_Gra1_fermee"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Vidange_terminee_Gra1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="coil" coilVariableName="bit_intermediaire_vid_G2B"></coil>
					<HLink nbCells="1"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidanger_Gra_sans_ordre_intro"></contact>
					<HLink nbCells="5"></HLink>
					<emptyCell nbCells="6"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Conf_granulat_vidange_parallele"></contact>
					<HLink nbCells="5"></HLink>
					<emptyCell nbCells="7"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="15"></emptyCell>
					<FFBBlock instanceName="TON_910" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="15" posY="38"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_granulat2_tps_vidange"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<VLink></VLink>
					<contact typeContact="closedContact" contactVariableName="Alarme_vidange_Gra2"></contact>
					<contact typeContact="closedContact" contactVariableName="Vidange_bloquee_Gra2"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Vidange_Gra2"></contact>
					<HLink nbCells="4"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Alarme_vidange_Gra2"></coil>
					<HLink nbCells="1"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="bit_intermediaire_vid_G2B"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="9"></HLink>
					</shortCircuit>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName="TOF_76_886" typeName="TOF" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="15" posY="43"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_Gra2_retard_ferm_balance"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Pres_Gra2_Skip_TT_anhCPC"></contact>
					</shortCircuit>
					<emptyCell nbCells="4"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Intro_Presence_Glace_Gra2"></contact>
					</shortCircuit>
					<VLink></VLink>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Faire_vidange_Gra2"></coil>
					<HLink nbCells="1"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Defaut_tapis_transfert"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Gra2"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Vidange_en_cours_Gra2"></coil>
					<HLink nbCells="1"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="18"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="19"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<emptyCell nbCells="3"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="bit_intermediaire_vid_G2A"></contact>
					<HLink nbCells="20"></HLink>
					<coil typeCoil="coil" coilVariableName="fin_vidange_Gra"></coil>
					<HLink nbCells="1"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Gra1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="conf_Gra1_avec_sequence"></contact>
					<HLink nbCells="13"></HLink>
					<coil typeCoil="coil" coilVariableName="Vidange_Gra1"></coil>
					<HLink nbCells="7"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="8"></emptyCell>
					<FFBBlock instanceName="FBI_77_855" typeName="Seq_Vid_Basc" additionnalPinNumber="0" enEnO="true" width="16" height="10">
						<objPosition posX="10" posY="51"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN" effectiveParameter="conf_Gra1_avec_sequence"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Dem_seq_ouv"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Fin_ferm" effectiveParameter="Info_balance_Gra1_fermee"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Seq_ouv_OK" effectiveParameter="Seuils_vides_atteints_Gra1"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Tps_ouv" effectiveParameter="Conf_Gra1_tps_sequence_ouv"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Tps_att" effectiveParameter="Conf_Gra1_tps_sequence_att"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Defaut"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Nb_seq_max" effectiveParameter="Conf_Gra1_nb_sequence"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Dem_ouv_maint"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="DEF_CDE"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_FER"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_OUV"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="conf_Gra1_avec_sequence"></contact>
					<HLink nbCells="6"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Defaut_sequence_Gra1"></coil>
					<HLink nbCells="7"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="coil" coilVariableName="Vid_seq_Gra1"></coil>
					<HLink nbCells="7"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Defaut_sequence_Gra1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="6"></HLink>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Discordance_vidange_granulat1"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="21"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<FFBBlock instanceName="SR_fin_vid_Gra1" typeName="SR" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="5" posY="60"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="S1"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="R"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q1"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<VLink></VLink>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Gra1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="4"></HLink>
					<contact typeContact="openContact" contactVariableName="conf_Gra1_avec_sequence"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="coil" coilVariableName="Vid_seq_maint_Gra1"></coil>
					<HLink nbCells="7"></HLink>
				</typeLine>
				<typeLine>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Gra1"></contact>
					<HLink nbCells="1"></HLink>
					<compareBlock width="2">
						<expression>Poids_instantane_Gra1 &lt;= Conf_Gra1_seuil_arret_seq_vid</expression>
					</compareBlock>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="17"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Faire_vidange_Gra1"></contact>
					<HLink nbCells="1"></HLink>
					<compareBlock width="2">
						<expression>Poids_instantane_Gra1 &gt; Conf_Gra1_seuil_arret_seq_vid</expression>
					</compareBlock>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Gra2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="conf_Gra2_avec_sequence"></contact>
					<HLink nbCells="13"></HLink>
					<coil typeCoil="coil" coilVariableName="Vidange_Gra2"></coil>
					<HLink nbCells="7"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="8"></emptyCell>
					<FFBBlock instanceName="FBI_77_856" typeName="Seq_Vid_Basc" additionnalPinNumber="0" enEnO="true" width="16" height="10">
						<objPosition posX="10" posY="66"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN" effectiveParameter="conf_Gra2_avec_sequence"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Dem_seq_ouv"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Fin_ferm" effectiveParameter="Info_balance_Gra2_fermee"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Seq_ouv_OK" effectiveParameter="Seuils_vides_atteints_Gra2"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Tps_ouv" effectiveParameter="Conf_Gra2_tps_sequence_ouv"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Tps_att" effectiveParameter="Conf_Gra2_tps_sequence_att"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Defaut"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Nb_seq_max" effectiveParameter="Conf_Gra2_nb_sequence"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Dem_ouv_maint"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="DEF_CDE"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_FER"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_OUV"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="conf_Gra2_avec_sequence"></contact>
					<HLink nbCells="6"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Defaut_sequence_Gra2"></coil>
					<HLink nbCells="7"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="coil" coilVariableName="Vid_seq_Gra2"></coil>
					<HLink nbCells="7"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Defaut_sequence_Gra2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="6"></HLink>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Discordance_vidange_granulat2"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="21"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<FFBBlock instanceName="SR_fin_vid_Gra2" typeName="SR" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="5" posY="75"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="S1"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="R"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q1"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<VLink></VLink>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Gra2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="4"></HLink>
					<contact typeContact="openContact" contactVariableName="conf_Gra2_avec_sequence"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="coil" coilVariableName="Vid_seq_maint_Gra2"></coil>
					<HLink nbCells="7"></HLink>
				</typeLine>
				<typeLine>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Gra2"></contact>
					<HLink nbCells="1"></HLink>
					<compareBlock width="2">
						<expression>Poids_instantane_Gra2 &lt;= Conf_Gra2_seuil_arret_seq_vid</expression>
					</compareBlock>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="17"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Faire_vidange_Gra2"></contact>
					<HLink nbCells="1"></HLink>
					<compareBlock width="2">
						<expression>Poids_instantane_Gra2 &gt; Conf_Gra2_seuil_arret_seq_vid</expression>
					</compareBlock>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="3"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Conf_tapis_transfert"></contact>
					<contact typeContact="closedContact" contactVariableName="Defaut_tapis_transfert"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Info_tapis_transfert_en_marche"></contact>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Conf_TT_granulat"></contact>
					<contact typeContact="openContact" contactVariableName="Info_TT_Gra_fermee"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Discordance_vidange_TT_granulat"></contact>
					</shortCircuit>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="closedContact" contactVariableName="Conf_tapis_transfert"></contact>
					<HLink nbCells="3"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="PContact" contactVariableName="transfert_granulat_OK"></contact>
					<HLink nbCells="7"></HLink>
					<coil typeCoil="coil" coilVariableName="Lancement_transfert"></coil>
					<HLink nbCells="10"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="8"></emptyCell>
					<FFBBlock instanceName="TON_121" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="8" posY="85"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_skip_attente_depart"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Seuils_vides_atteints_Gra1"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Vidange_en_cours_Gra1"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Vidange_Gra1"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_skip_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Vidange_terminee_Gra1"></coil>
					<HLink nbCells="10"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="5"></emptyCell>
					<VLink></VLink>
					<VLink></VLink>
					<compareBlock width="2">
						<expression>Conf_Eau_dest_basc[1]=1</expression>
						<comment>Pas de glace vers Gra1</comment>
					</compareBlock>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Lancer_transfert_Glace_Eau1"></coil>
					<HLink nbCells="8"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_skip_transfert"></contact>
					<HLink nbCells="4"></HLink>
					<VLink></VLink>
					<compareBlock width="2">
						<expression>Conf_Eau_dest_basc[2]=1</expression>
						<comment>Pas de glace vers Gra1</comment>
					</compareBlock>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Lancer_transfert_Glace_Eau2"></coil>
					<HLink nbCells="8"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<compareBlock width="2">
						<expression>Conf_basc_add_dest =5</expression>
						<comment>Pas de glace vers Gra1</comment>
					</compareBlock>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Lancer_transfert_ADD_gra"></coil>
					<HLink nbCells="8"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="8"></emptyCell>
					<FFBBlock instanceName="TON_1146" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="8" posY="91"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_skip_attente_depart"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Seuils_vides_atteints_Gra2"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Vidange_en_cours_Gra2"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Vidange_Gra2"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_skip_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Vidange_terminee_Gra2"></coil>
					<HLink nbCells="10"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="5"></emptyCell>
					<VLink></VLink>
					<VLink></VLink>
					<compareBlock width="2">
						<expression>Conf_Eau_dest_basc[1]=2</expression>
						<comment>Pas de glace vers Gra1</comment>
					</compareBlock>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Lancer_transfert_Glace_Eau1"></coil>
					<HLink nbCells="8"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_skip_transfert"></contact>
					<HLink nbCells="4"></HLink>
					<VLink></VLink>
					<compareBlock width="2">
						<expression>Conf_Eau_dest_basc[2]=2</expression>
						<comment>Pas de glace vers Gra1</comment>
					</compareBlock>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Lancer_transfert_Glace_Eau2"></coil>
					<HLink nbCells="8"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<compareBlock width="2">
						<expression>Conf_basc_add_dest =6</expression>
						<comment>Pas de glace vers Gra1</comment>
					</compareBlock>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Lancer_transfert_ADD_gra"></coil>
					<HLink nbCells="8"></HLink>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Intro_Presence_Glace_Gra1"></contact>
					</shortCircuit>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Intro_Presence_Glace_Gra2"></contact>
					</shortCircuit>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Intro_Presence_Add_tapis_tr"></contact>
					</shortCircuit>
					<emptyCell nbCells="12"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Gra1"></contact>
					<HLink nbCells="3"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Vidange_terminee_Gra1"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Gra2"></contact>
					<HLink nbCells="3"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Vidange_terminee_Gra2"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Intro_Presence_Add_skip"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Intro_Add_terminee"></contact>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="coil" coilVariableName="Vidange_terminee_Gra"></coil>
					<HLink nbCells="6"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="closedContact" contactVariableName="Presence_prod_Gra1"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Intro_Presence_Glace_Gra1"></contact>
					<HLink nbCells="3"></HLink>
					<contact typeContact="closedContact" contactVariableName="Presence_prod_Gra2"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Intro_Presence_Glace_Gra2"></contact>
					<HLink nbCells="3"></HLink>
					<contact typeContact="closedContact" contactVariableName="Intro_Presence_Add_skip"></contact>
					<contact typeContact="closedContact" contactVariableName="Intro_Presence_Add_tapis_tr"></contact>
					<HLink nbCells="1"></HLink>
					<VLink></VLink>
					<compareBlock width="2">
						<expression>Conf_basc_add_dest =8</expression>
						<comment>Pas de glace vers Gra1</comment>
					</compareBlock>
					<coil typeCoil="resetCoil" coilVariableName="Lancer_transfert_ADD_skip"></coil>
					<HLink nbCells="6"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="16"></emptyCell>
					<compareBlock width="2">
						<expression>Conf_basc_add_dest =7</expression>
						<comment>Pas de glace vers Gra1</comment>
					</compareBlock>
					<coil typeCoil="resetCoil" coilVariableName="Lancer_transfert_Add_tapis_tr"></coil>
					<HLink nbCells="6"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<contact typeContact="openContact" contactVariableName="Ordre_intro_Gra1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="21"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_terminee_Gra"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Ordre_intro_Gra2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="10"></HLink>
					<coil typeCoil="coil" coilVariableName="fin_intro_tapis_transfert"></coil>
					<HLink nbCells="10"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="fin_intro_tapis_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="transfert_granulat_OK"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="21"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<FFBBlock instanceName="FBI_76_486" typeName="VIB_BAL" additionnalPinNumber="0" enEnO="true" width="16" height="11">
						<objPosition posX="10" posY="105"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="POIDS_I" effectiveParameter="Poids_instantane_Gra1"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="T_STAB" effectiveParameter="Conf_granulat1_tps_stabilisation"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="VALIDE"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PR_DEF"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TON_VIB" effectiveParameter="Conf_granulat1_TON_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TOFF_VIB" effectiveParameter="Conf_granulat1_TOFF_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="NB_VIB" effectiveParameter="Conf_granulat1_nb_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="E_STAB" effectiveParameter="Conf_granulat1_ecart_stabilite"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="mode_decomptage" effectiveParameter="FALSE"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_VIB"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ALARME"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="10"></HLink>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName="TON_912" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="3" posY="107"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_granulat1_temps_ecoulement"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="7"></emptyCell>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="coil" coilVariableName="Vibreur_balance_Gra1"></coil>
					<HLink nbCells="10"></HLink>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Vid_seq_maint_Gra1"></contact>
					</shortCircuit>
					<emptyCell nbCells="11"></emptyCell>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Vidange_bloquee_Gra1"></coil>
					<HLink nbCells="10"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_Gra1"></contact>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Gra1"></contact>
					<contact typeContact="closedContact" contactVariableName="Info_balance_Gra1_fermee"></contact>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="5"></HLink>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Discordance_vidange_granulat1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="5"></HLink>
					</shortCircuit>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_bloquee_Gra1"></contact>
					<HLink nbCells="5"></HLink>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="3"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<FFBBlock instanceName="FBI_76_493" typeName="VIB_BAL" additionnalPinNumber="0" enEnO="true" width="16" height="11">
						<objPosition posX="10" posY="116"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="POIDS_I" effectiveParameter="Poids_instantane_Gra2"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="T_STAB" effectiveParameter="Conf_granulat2_tps_stabilisation"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="VALIDE"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PR_DEF"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TON_VIB" effectiveParameter="Conf_granulat2_TON_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TOFF_VIB" effectiveParameter="Conf_granulat2_TOFF_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="NB_VIB" effectiveParameter="Conf_granulat2_nb_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="E_STAB" effectiveParameter="Conf_granulat2_ecart_stabilite"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="mode_decomptage" effectiveParameter="FALSE"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_VIB"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ALARME"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="10"></HLink>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName="TON_913" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="3" posY="118"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_granulat2_temps_ecoulement"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="7"></emptyCell>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="coil" coilVariableName="Vibreur_balance_Gra2"></coil>
					<HLink nbCells="10"></HLink>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Vid_seq_maint_Gra2"></contact>
					</shortCircuit>
					<emptyCell nbCells="11"></emptyCell>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Vidange_bloquee_Gra2"></coil>
					<HLink nbCells="10"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_Gra2"></contact>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Gra2"></contact>
					<contact typeContact="closedContact" contactVariableName="Info_balance_Gra2_fermee"></contact>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="5"></HLink>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Discordance_vidange_granulat2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="5"></HLink>
					</shortCircuit>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_bloquee_Gra2"></contact>
					<HLink nbCells="5"></HLink>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="3"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<FFBBlock instanceName="TON_455" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="11" posY="127"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_tap_trans_tps_vidange"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="12"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_terminee_Gra"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Ordre_intro_Gra1"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Defaut_tapis_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Tapis_transfert_vitesse_rotation"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Discordance_vidange_TT_granulat"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_tapis_transfert"></contact>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="tps_transfert_ecoule"></coil>
					<HLink nbCells="10"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Ordre_intro_Gra2"></contact>
					</shortCircuit>
					<emptyCell nbCells="22"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="openContact" contactVariableName="transfert_granulat_OK"></contact>
					<emptyCell nbCells="22"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="NContact" contactVariableName="anticipation_vidange_dans_tapis"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Ordre_intro_Gra1"></contact>
					<contact typeContact="closedContact" contactVariableName="Ordre_intro_Gra2"></contact>
					<HLink nbCells="10"></HLink>
					<coil typeCoil="setCoil" coilVariableName="interdiction_marche_tapis_trans"></coil>
					<HLink nbCells="10"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<VLink></VLink>
					<coil typeCoil="resetCoil" coilVariableName="interdiction_marche_tapis_trans"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Vid_Gra_En_Cours"></contact>
					</shortCircuit>
					<emptyCell nbCells="5"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName="TOF_76_439" typeName="TOF" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="15" posY="137"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_tap_trans_tps_max_de_marche"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Ordre_intro_Gra1"></contact>
					</shortCircuit>
					<emptyCell nbCells="5"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Conf_tapis_transfert"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Conf_skip_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Ordre_intro_Gra2"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Defaut_tapis_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="tps_transfert_ecoule"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="interdiction_marche_tapis_trans"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Defaut_tapis_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Marche_tapis_transfert_granulat"></coil>
					<HLink nbCells="1"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="openContact" contactVariableName="transfert_granulat_OK"></contact>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Cde_anti_talutage_G2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="13"></HLink>
					</shortCircuit>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Cde_anti_talutage_G1"></contact>
					<HLink nbCells="13"></HLink>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="anticipation_vidange_dans_tapis"></contact>
					<HLink nbCells="18"></HLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="5"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="anticipation_skip_TT"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Info_skip_attente"></contact>
					<coil typeCoil="setCoil" coilVariableName="memo_skip_attente"></coil>
					<HLink nbCells="21"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="anticipation_montee_skip"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="memo_skip_attente"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Position_inter_skip_par_tempo"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<emptyCell nbCells="18"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_skip_dans_TT"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="5"></HLink>
					</shortCircuit>
					<VLink></VLink>
					<emptyCell nbCells="18"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Conf_skip_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat"></contact>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Ordre_intro_Gra1"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					<contact typeContact="closedContact" contactVariableName="Info_skip_haut"></contact>
					<contact typeContact="closedContact" contactVariableName="Defaut_skip"></contact>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="memo_skip_haut"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Montee_skip"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Conf_granulat1_skip"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Ordre_intro_Gra2"></contact>
					<emptyCell nbCells="21"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_skip_dans_TT"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="memo_skip_attente"></coil>
					<HLink nbCells="18"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vid_Gra_Terminee"></contact>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="anticipation_montee_skip"></coil>
					<HLink nbCells="18"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="7"></emptyCell>
					<FFBBlock instanceName="TON_426" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="7" posY="156"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_skip_tps_vidange"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<VLink></VLink>
					<coil typeCoil="resetCoil" coilVariableName="anticipation_skip_TT"></coil>
					<HLink nbCells="14"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Info_skip_haut"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Conf_skip_transfert"></contact>
					</shortCircuit>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<coil typeCoil="coil" coilVariableName="Fin_vidange_skip_Gra"></coil>
					<HLink nbCells="14"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Conf_granulat1_skip"></contact>
					<emptyCell nbCells="5"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Conf_TT_granulat"></contact>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat_ctrl_poids"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<coil typeCoil="resetCoil" coilVariableName="Vidange_skip_dans_TT"></coil>
					<HLink nbCells="11"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="13"></emptyCell>
					<coil typeCoil="setCoil" coilVariableName="Dire_transfert_Gra_termine"></coil>
					<HLink nbCells="11"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Descente_skip"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="closedContact" contactVariableName="Vidange_skip_dans_TT"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Autorisation_descente_skip"></contact>
					<HLink nbCells="3"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Conf_TT_granulat_ctrl_poids"></contact>
					</shortCircuit>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Fin_vidange_skip_Gra"></contact>
					<HLink nbCells="3"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat_ctrl_poids"></contact>
					<contact typeContact="openContact" contactVariableName="Conf_skip_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="anticipation_skip_TT"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Conf_TT_granulat"></contact>
					</shortCircuit>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="closedContact" contactVariableName="Ordre_intro_Gra1"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Ordre_intro_Gra2"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="anticipation_montee_skip"></contact>
					</shortCircuit>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Descente_skip"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Conf_granulat1_skip"></contact>
					</shortCircuit>
					<emptyCell nbCells="3"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Fin_vidange_skip_Gra"></contact>
					<HLink nbCells="4"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_skip_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="anticipation_montee_skip"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat"></contact>
					<contact typeContact="closedContact" contactVariableName="Cde_montee_skip"></contact>
					<contact typeContact="closedContact" contactVariableName="Defaut_skip"></contact>
					<contact typeContact="closedContact" contactVariableName="memo_skip_bas"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="coil" coilVariableName="Descente_skip"></coil>
					<HLink nbCells="4"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="14"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="1"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<FFBBlock instanceName="TOF_76_1115" typeName="TOF" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="16" posY="169"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_skip_TON_ETOR_cable_mou"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
					</shortCircuit>
					<emptyCell nbCells="7"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="14"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="7"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="15"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Conf_granulat1_skip"></contact>
					<emptyCell nbCells="9"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="NContact" contactVariableName="Info_skip_haut"></contact>
					<contact typeContact="openContact" contactVariableName="Conf_skip_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Info_Plant_In_Auto"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Manu_logiciel"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="setCoil" coilVariableName="skip_transfert_vide"></coil>
					<HLink nbCells="16"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Info_skip_haut"></contact>
					<coil typeCoil="resetCoil" coilVariableName="Skip_pret_pour_vidange_dans_TT"></coil>
					<HLink nbCells="23"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="3"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<FFBBlock instanceName="TON_43" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="5" posY="180"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_TT_Gra_tps_filtre_ctrl_vide"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="18"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Info_TT_Gra_ctrl_vide"></contact>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="17"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Info_TT_Gra_ctrl_vide_filtr"></coil>
				</typeLine>
				<typeLine>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
					<FFBBlock instanceName="TON_45" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="7" posY="183"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_TT_Gra_tps_filtre_ctrl_vide"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<VLink></VLink>
					<emptyCell nbCells="24"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Info_TT_Gra_ctrl_vide"></contact>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="15"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Info_TT_Gra_ctrl_vide_filtr"></coil>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="16"></emptyCell>
					<FFBBlock instanceName="TOF_76_1031" typeName="TOF" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="16" posY="188"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_TT_Gra_retard_ferm"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="7"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<VLink></VLink>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Gra_ctrl_vide"></contact>
					<contact typeContact="closedContact" contactVariableName="Info_TT_Gra_ctrl_vide_filtr"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="9"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Conf_TT_granulat"></contact>
					<contact typeContact="closedContact" contactVariableName="tremie_tampon_granulat_vide"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Ordre_intro_Gra1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Discordance_vidange_TT_granulat"></contact>
					<contact typeContact="closedContact" contactVariableName="Defaut_vidange_TT_granulat"></contact>
					<contact typeContact="closedContact" contactVariableName="Alarme_vidange_TT_granulat"></contact>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Gra_pesee"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_TT_Gra"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="coil" coilVariableName="Vidange_TT_granulat"></coil>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Ordre_intro_Gra2"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<VLink></VLink>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="1"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Gra_pesee"></contact>
					<HLink nbCells="2"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="fin_TT_Gra"></contact>
					</shortCircuit>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="5"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Info_TT_Gra_ouverte"></contact>
					<HLink nbCells="8"></HLink>
					<coil typeCoil="coil" coilVariableName="Vibreur_TT_gra_non_pesee"></coil>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Gra_ctrl_vide"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<FFBBlock instanceName="TON_041" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="15" posY="196"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_TT_granulat_tps_vidange"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="ET" effectiveParameter="tps_ecoule_vidange_TT_granulat"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
					</shortCircuit>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="3"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="coil" coilVariableName="fin_TT_Gra"></coil>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Gra_pesee"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Gra_ctrl_vide"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Conf_TT_Gra_ctrl_vide"></contact>
					</shortCircuit>
					<HLink nbCells="4"></HLink>
					<coil typeCoil="setCoil" coilVariableName="tremie_tampon_granulat_vide"></coil>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="8"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Info_TT_Gra_ctrl_vide_filtr"></contact>
					<emptyCell nbCells="5"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="14"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="4"></emptyCell>
					<FFBBlock instanceName="TON_42" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="15" posY="201"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_TT_granulat_tps_vidange"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET" effectiveParameter="tps_ecoule_vidange_TT_granulat"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="14"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Vidange_TT_granulat"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Gra_pesee"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_TT_Gra"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Alarme_vidange_TT_granulat"></coil>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="19"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Gra_ctrl_vide"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Info_TT_Gra_ctrl_vide_filtr"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<FFBBlock instanceName="FBI_76_1057" typeName="STA_TT" additionnalPinNumber="0" enEnO="true" width="16" height="13">
						<objPosition posX="6" posY="207"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="FIN_TRSF" effectiveParameter="Fin_vidange_skip_Gra"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="POIDS_TT" effectiveParameter="Poids_instantane_TT_Gra"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TPS_STAB" effectiveParameter="Conf_TT_granulat_tps_stab"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TPS_INST" effectiveParameter="Conf_TT_granulat_tps_max_stab"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="ECH_STAB" effectiveParameter="Conf_TT_granulat_ecart_stab"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="VID_TT"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="ON_VIB" effectiveParameter="Conf_TT_granulat_TON_vibreur"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="OFF_VIB" effectiveParameter="Conf_TT_granulat_TOFF_vibreur"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="NB_VIBR" effectiveParameter="Conf_TT_granulat_nb_vibreur"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PRES_VIB" effectiveParameter="Conf_TT_granulat_pres_vibreur"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="DEFAUT" effectiveParameter="Defaut_vidange_TT_granulat"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="TT_STAB" effectiveParameter="TT_granulat_stable"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="TT_INSTA"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="DEF_ECOU"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="VIBREUR" effectiveParameter="Vibreur_TT_gra_pesee"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="17"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Gra_pesee"></contact>
					<HLink nbCells="5"></HLink>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="8"></emptyCell>
					<HLink nbCells="7"></HLink>
					<coil typeCoil="setCoil" coilVariableName="TT_granulat_instable"></coil>
					<HLink nbCells="9"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="8"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_TT_Gra"></contact>
					</shortCircuit>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Defaut_vidange_TT_granulat"></coil>
					<HLink nbCells="9"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Gra_ctrl_vide"></contact>
					<contact typeContact="closedContact" contactVariableName="Info_TT_Gra_ctrl_vide_filtr"></contact>
					<emptyCell nbCells="12"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Cde_vidange_TT_gra"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Info_TT_Gra_ouverte"></contact>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="6"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName=".76.1062" typeName="GE" additionnalPinNumber="0" enEnO="true" width="9" height="4">
						<objPosition posX="3" posY="221"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="Poids_instantane_TT_Gra"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="Seuil_a_depasser_TT_Gra"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="closedContact" contactVariableName="Poids_transfere_OK"></contact>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="22"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Fin_vidange_skip_Gra"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="TT_granulat_stable"></contact>
					<contact typeContact="closedContact" contactVariableName="TT_granulat_instable"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<coil typeCoil="coil" coilVariableName="Autorisation_descente_skip"></coil>
					<HLink nbCells="14"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<VLink></VLink>
					<coil typeCoil="resetCoil" coilVariableName="Vidange_skip_dans_TT"></coil>
					<HLink nbCells="14"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<VLink></VLink>
					<coil typeCoil="setCoil" coilVariableName="Dire_transfert_Gra_termine"></coil>
					<HLink nbCells="14"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<coil typeCoil="setCoil" coilVariableName="Poids_transfere_OK"></coil>
					<HLink nbCells="14"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="closedContact" contactVariableName="Info_skip_haut"></contact>
					<coil typeCoil="resetCoil" coilVariableName="Poids_transfere_OK"></coil>
					<HLink nbCells="23"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName=".76.1072" typeName="LT" additionnalPinNumber="0" enEnO="true" width="9" height="4">
						<objPosition posX="3" posY="230"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="Poids_instantane_TT_Gra"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="Seuil_a_depasser_TT_Gra"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="22"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Fin_vidange_skip_Gra"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Ordre_intro_Gra1"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Ordre_intro_Gra2"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="TT_granulat_stable"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_TT_granulat_ctrl_poids"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Skip_non_vide"></coil>
					<HLink nbCells="9"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="closedContact" contactVariableName="fin_vidange_Gra"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="tps_transfert_ecoule"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Defaut_tapis_transfert"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="transfert_granulat_OK"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Vidange_terminee_Gra"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Dire_transfert_Gra_termine"></coil>
					<HLink nbCells="9"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<contact typeContact="openContact" contactVariableName="Conf_skip_transfert"></contact>
					<contact typeContact="closedContact" contactVariableName="Defaut_skip"></contact>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Conf_tapis_transfert"></contact>
					<contact typeContact="closedContact" contactVariableName="Defaut_tapis_transfert"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="tps_transfert_ecoule"></contact>
					</shortCircuit>
					<emptyCell nbCells="5"></emptyCell>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="transfert_granulat_OK"></coil>
					<HLink nbCells="9"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Conf_skip_transfert"></contact>
					<contact typeContact="openContact" contactVariableName="Conf_TT_granulat"></contact>
					<contact typeContact="closedContact" contactVariableName="Discordance_vidange_TT_granulat"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_tapis_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Vidange_granulat_dans_skip"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_skip_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_TT_granulat"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Vidange_terminee_Gra"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Anhydrite_CPC"></contact>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Skip_pret_pour_vidange_dans_TT"></coil>
					<HLink nbCells="9"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="8"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Vid_terminee_Gra_Skip_TT_anhCPC"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="4"></emptyCell>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Vidange_granulat_dans_skip"></coil>
					<HLink nbCells="9"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="3"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_terminee_Gra"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_tapis_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_granulat1_skip"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_skip_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat"></contact>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Ordre_intro_Gra1"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Intro_Gra_terminee"></coil>
					<HLink nbCells="9"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Fin_vidange_skip_Gra"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="6"></HLink>
					</shortCircuit>
					<emptyCell nbCells="1"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Ordre_intro_Gra2"></contact>
					<emptyCell nbCells="14"></emptyCell>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Conf_TT_granulat"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Gra_pesee"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="fin_TT_Gra"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Gra_pesee"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Seuil_vide_atteint_TT_Gra"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_gra_ctrl_vide"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Vidange_TT_granulat"></contact>
					</shortCircuit>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Info_TT_Gra_ctrl_vide_filtr"></contact>
					<HLink nbCells="1"></HLink>
					<VLink></VLink>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="tps_transfert_ecoule"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_skip_transfert"></contact>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat"></contact>
					<contact typeContact="closedContact" contactVariableName="Defaut_skip"></contact>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<textBox width="3" height="1">Commande vidange bascule granulat
    <objPosition posX="0" posY="3"></objPosition>
				</textBox>
				<textBox width="3" height="1">Temps tapis de transfert écoulé
    <objPosition posX="0" posY="126"></objPosition>
				</textBox>
				<textBox width="3" height="1">Dire transfert terminé
    <objPosition posX="0" posY="234"></objPosition>
				</textBox>
				<textBox width="3" height="1">(Mettre les futures initialisations ici)
    <objPosition posX="9" posY="0"></objPosition>
				</textBox>
				<textBox width="4" height="1">Alarme skip non vide après temps de vidange
    <objPosition posX="0" posY="229"></objPosition>
				</textBox>
				<textBox width="3" height="1">Commande tapis transfert
    <objPosition posX="0" posY="133"></objPosition>
				</textBox>
				<textBox width="3" height="1">ASM - Nov/2013 - Seuil vide Add atteint-
    <objPosition posX="9" posY="12"></objPosition>
				</textBox>
				<textBox width="3" height="1">Vibreur bascule granulat 1
    <objPosition posX="0" posY="105"></objPosition>
				</textBox>
				<textBox width="2" height="2">On a dupliqué ce qui existe pour  "Defaut_balance_Anh".
    <objPosition posX="4" posY="58"></objPosition>
				</textBox>
				<textBox width="5" height="1">Reset de la demande d'init :
    <objPosition posX="11" posY="1"></objPosition>
				</textBox>
				<textBox width="3" height="1">ASM - Nov/2013 - Reset demande de transfert ADD vers GRA
    <objPosition posX="12" posY="100"></objPosition>
				</textBox>
				<textBox width="3" height="1">Commande Trémie tampon granulat
    <objPosition posX="0" posY="189"></objPosition>
				</textBox>
				<textBox width="3" height="1">ASM - Nov/2013 - Reset demande de transfert ADD vers GRA
    <objPosition posX="18" posY="96"></objPosition>
				</textBox>
				<textBox width="3" height="1">Commande skip granulat
    <objPosition posX="0" posY="148"></objPosition>
				</textBox>
				<textBox width="3" height="1">Dire granulat terminé
    <objPosition posX="0" posY="244"></objPosition>
				</textBox>
				<textBox width="5" height="1">Autorisation de descente skip si tout le poids a été transferé
    <objPosition posX="0" posY="220"></objPosition>
				</textBox>
				<textBox width="3" height="1">Vibreur bascule granulat 2
    <objPosition posX="0" posY="115"></objPosition>
				</textBox>
				<textBox width="2" height="1">Nov/2013 - P864-artf1347918
    <objPosition posX="2" posY="151"></objPosition>
				</textBox>
				<textBox width="4" height="1">TT Gra : Capteur TOR de contrôle de vide
(* Modif R.C. 14/04/2010 #793 *)
    <objPosition posX="0" posY="179"></objPosition>
				</textBox>
				<textBox width="3" height="1">ASM - Nov/2013 - Reset demande de transfert ADD vers GRA
    <objPosition posX="18" posY="90"></objPosition>
				</textBox>
				<textBox width="4" height="1">Stabilité et commande vibreur TT granulat
    <objPosition posX="0" posY="206"></objPosition>
				</textBox>
				<textBox width="3" height="1">Initialisation des variables locales de la section
    <objPosition posX="0" posY="0"></objPosition>
				</textBox>
				<textBox width="6" height="1">Dire transfert granulat dans skip terminé quand présence d'une trémie tampon
    <objPosition posX="0" posY="239"></objPosition>
				</textBox>
				<textBox width="2" height="2">On a dupliqué ce qui existe pour  "Defaut_balance_Anh".
    <objPosition posX="4" posY="73"></objPosition>
				</textBox>
				<textBox width="2" height="1">Nov/2013 - P864-artf1347918
    <objPosition posX="8" posY="154"></objPosition>
				</textBox>
			</networkLD>
		</LDSource>
	</program>
	<program>
		<identProgram name="410_Intro_autres_produits" type="section" task="MAST"></identProgram>
		<LDSource nbColumns="30">
			<networkLD>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Intro_autres_produits_DEM_INIT"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<HLink nbCells="8"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Vidange_Adj_dans_bonb_colorants"></coil>
					<HLink nbCells="15"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="24"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="24"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<HLink nbCells="8"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Intro_autres_produits_DEM_INIT"></coil>
					<HLink nbCells="15"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="3"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_Cim_dans_bonbonne"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Info_defaut_SAS"></contact>
					<contact typeContact="openContact" contactVariableName="Info_autorisation_chargement_SAS"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Cim1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<emptyCell nbCells="1"></emptyCell>
					<FFBBlock instanceName="TOF_77_223" typeName="TOF" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="11" posY="8"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_Cim1_retard_ferm_balance"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="17"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<contact typeContact="PContact" contactVariableName="Introduction_Cim1_encours"></contact>
					<HLink nbCells="4"></HLink>
					<contact typeContact="openContact" contactVariableName="FALSE"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="3"></emptyCell>
					<VLink></VLink>
					<contact typeContact="closedContact" contactVariableName="Introduction_Cim1_encours"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<contact typeContact="closedContact" contactVariableName="Conf_bonbonne_cim"></contact>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Cim"></contact>
					<contact typeContact="openContact" contactVariableName="Introduction_Cim1_encours"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Cim1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Cim1"></contact>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					<contact typeContact="openContact" contactVariableName="Introduction_Cim1_encours"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Faire_vidange_Cim1"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="4"></emptyCell>
					<FFBBlock instanceName="TON_24" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="11" posY="13"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_cim1_tps_vidange"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="17"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="7"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Alarme_vidange_Cim1"></contact>
					<contact typeContact="closedContact" contactVariableName="Vidange_bloquee_Cim1"></contact>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Cim1"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Cde_vidange_bascule_Cim1"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Alarme_vidange_Cim1"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Cim1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="conf_Cim1_avec_sequence"></contact>
					<HLink nbCells="13"></HLink>
					<coil typeCoil="coil" coilVariableName="Vidange_Cim1"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="8"></emptyCell>
					<FFBBlock instanceName="FBI_77_853" typeName="Seq_Vid_Basc" additionnalPinNumber="0" enEnO="true" width="16" height="10">
						<objPosition posX="10" posY="19"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN" effectiveParameter="conf_Cim1_avec_sequence"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Dem_seq_ouv"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Fin_ferm" effectiveParameter="Info_balance_Cim1_fermee"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Seq_ouv_OK" effectiveParameter="Seuil_vide_atteint_Cim1"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Tps_ouv" effectiveParameter="Conf_Cim1_tps_sequence_ouv"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Tps_att" effectiveParameter="Conf_Cim1_tps_sequence_att"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Defaut"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Nb_seq_max" effectiveParameter="Conf_Cim1_nb_sequence"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Dem_ouv_maint"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="DEF_CDE"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_FER"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_OUV"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="18"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="28"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="conf_Cim1_avec_sequence"></contact>
					<HLink nbCells="6"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Defaut_sequence_Cim1"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="coil" coilVariableName="Vid_seq_Cim1"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Defaut_sequence_Cim1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="6"></HLink>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Discordance_vidange_cim1"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<FFBBlock instanceName="SR_fin_vid_Cim1" typeName="SR" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="5" posY="28"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="S1"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="R"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q1"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<VLink></VLink>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Cim1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="4"></HLink>
					<contact typeContact="openContact" contactVariableName="conf_Cim1_avec_sequence"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="coil" coilVariableName="Vid_seq_maint_Cim1"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Cim1"></contact>
					<HLink nbCells="1"></HLink>
					<compareBlock width="2">
						<expression>Poids_instantane_Cim1 &lt;= Conf_Cim1_seuil_arret_seq_vid</expression>
					</compareBlock>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="22"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Faire_vidange_Cim1"></contact>
					<HLink nbCells="1"></HLink>
					<compareBlock width="2">
						<expression>Poids_instantane_Cim1 &gt; Conf_Cim1_seuil_arret_seq_vid</expression>
					</compareBlock>
					<emptyCell nbCells="25"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="3"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<FFBBlock instanceName="TOF_77_225" typeName="TOF" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="11" posY="35"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_Cim2_retard_ferm_balance"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="17"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="13"></emptyCell>
					<VLink></VLink>
					<contact typeContact="closedContact" contactVariableName="Introduction_Cim2_encours"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Introduction_Cim2_encours"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Cim2"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Cim2"></contact>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					<contact typeContact="openContact" contactVariableName="Introduction_Cim2_encours"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Faire_vidange_Cim2"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="4"></emptyCell>
					<FFBBlock instanceName="TON_26" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="11" posY="40"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_cim2_tps_vidange"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="17"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="7"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Alarme_vidange_Cim2"></contact>
					<contact typeContact="closedContact" contactVariableName="Vidange_bloquee_Cim2"></contact>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Cim2"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Cde_vidange_bascule_Cim2"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Alarme_vidange_Cim2"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Cim2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="conf_Cim2_avec_sequence"></contact>
					<HLink nbCells="13"></HLink>
					<coil typeCoil="coil" coilVariableName="Vidange_Cim2"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="8"></emptyCell>
					<FFBBlock instanceName="FBI_77_854" typeName="Seq_Vid_Basc" additionnalPinNumber="0" enEnO="true" width="16" height="10">
						<objPosition posX="10" posY="46"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN" effectiveParameter="conf_Cim2_avec_sequence"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Dem_seq_ouv"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Fin_ferm" effectiveParameter="Info_balance_Cim2_fermee"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Seq_ouv_OK" effectiveParameter="Seuil_vide_atteint_Cim2"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Tps_ouv" effectiveParameter="Conf_Cim2_tps_sequence_ouv"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Tps_att" effectiveParameter="Conf_Cim2_tps_sequence_att"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Defaut"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Nb_seq_max" effectiveParameter="Conf_Cim2_nb_sequence"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Dem_ouv_maint"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="DEF_CDE"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_FER"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_OUV"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="18"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="28"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="conf_Cim2_avec_sequence"></contact>
					<HLink nbCells="6"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Defaut_sequence_Cim2"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="coil" coilVariableName="Vid_seq_Cim2"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Defaut_sequence_Cim2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="6"></HLink>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Discordance_vidange_Cim2"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<FFBBlock instanceName="SR_fin_vid_Cim2" typeName="SR" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="5" posY="55"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="S1"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="R"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q1"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<VLink></VLink>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Cim2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="4"></HLink>
					<contact typeContact="openContact" contactVariableName="conf_Cim2_avec_sequence"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="coil" coilVariableName="Vid_seq_maint_Cim2"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Cim2"></contact>
					<HLink nbCells="1"></HLink>
					<compareBlock width="2">
						<expression>Poids_instantane_Cim2 &lt;= Conf_Cim2_seuil_arret_seq_vid</expression>
					</compareBlock>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="22"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Faire_vidange_Cim2"></contact>
					<HLink nbCells="1"></HLink>
					<compareBlock width="2">
						<expression>Poids_instantane_Cim2 &gt; Conf_Cim2_seuil_arret_seq_vid</expression>
					</compareBlock>
					<emptyCell nbCells="25"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="3"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<FFBBlock instanceName="FBI_77_497" typeName="VIB_BAL" additionnalPinNumber="0" enEnO="true" width="16" height="11">
						<objPosition posX="4" posY="62"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="POIDS_I" effectiveParameter="Poids_instantane_Cim1"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="T_STAB" effectiveParameter="Conf_cim1_tps_stabilisation"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="VALIDE"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PR_DEF"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TON_VIB" effectiveParameter="Conf_cim1_TON_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TOFF_VIB" effectiveParameter="Conf_cim1_TOFF_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="NB_VIB" effectiveParameter="Conf_cim1_nb_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="E_STAB" effectiveParameter="Conf_cim1_ecart_stabilite"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="mode_decomptage" effectiveParameter="FALSE"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_VIB"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ALARME"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="24"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<coil typeCoil="coil" coilVariableName="Vibreur_balance_Cim1"></coil>
					<HLink nbCells="23"></HLink>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Vid_seq_maint_Cim1"></contact>
					</shortCircuit>
					<emptyCell nbCells="5"></emptyCell>
					<coil typeCoil="setCoil" coilVariableName="Vidange_bloquee_Cim1"></coil>
					<HLink nbCells="23"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_Cim1"></contact>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Cim1"></contact>
					<contact typeContact="closedContact" contactVariableName="Info_balance_Cim1_fermee"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Discordance_vidange_cim1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_bloquee_Cim1"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="28"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="5"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="7"></emptyCell>
					<FFBBlock instanceName="FBI_77_500" typeName="VIB_BAL" additionnalPinNumber="0" enEnO="true" width="16" height="11">
						<objPosition posX="7" posY="74"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="POIDS_I" effectiveParameter="Poids_instantane_Cim2"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="T_STAB" effectiveParameter="Conf_cim2_tps_stabilisation"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="VALIDE"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PR_DEF"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TON_VIB" effectiveParameter="Conf_cim2_TON_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TOFF_VIB" effectiveParameter="Conf_cim2_TOFF_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="NB_VIB" effectiveParameter="Conf_cim2_nb_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="E_STAB" effectiveParameter="Conf_cim2_ecart_stabilite"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="mode_decomptage" effectiveParameter="FALSE"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_VIB"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ALARME"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="21"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="7"></HLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Vibreur_balance_Cim2"></coil>
					<HLink nbCells="19"></HLink>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Vid_seq_maint_Cim2"></contact>
					</shortCircuit>
					<emptyCell nbCells="8"></emptyCell>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Vidange_bloquee_Cim2"></coil>
					<HLink nbCells="19"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_Cim2"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Cim2"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="closedContact" contactVariableName="Info_balance_Cim2_fermee"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Discordance_vidange_Cim2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_bloquee_Cim2"></contact>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="5"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="13"></emptyCell>
					<FFBBlock instanceName="TP_1" typeName="TP" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="13" posY="86"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_Cem_Hopper_Empty_Time"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Conf_bonbonne_cim"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Transfert_bonbonne_dans_TT"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Discordance_vidange_TT_cim"></contact>
					<contact typeContact="openContact" contactVariableName="Info_pressostat_presence_air"></contact>
					<contact typeContact="openContact" contactVariableName="Info_TT_Cim_fermee"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Cde_autorisation_trans_cim"></contact>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<contact typeContact="closedContact" contactVariableName="memo_transfert_termine"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Info_defaut_SAS"></contact>
					</shortCircuit>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Cde_autorisation_trans_cim"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="memo_transfert_termine"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Ordre_transfert_cim"></coil>
					<HLink nbCells="10"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Cim"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Introduction_Cim1_encours"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="5"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Cim"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="12"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<FFBBlock instanceName="TON_904" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="13" posY="90"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_bonbonne_tps_max_transfert"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Temps_max_transfert_cim"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="4"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Temps_max_transfert_cim"></coil>
					<HLink nbCells="10"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="PContact" contactVariableName="Ordre_transfert_cim"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Transfert_bonbonne_en_cours"></coil>
					<HLink nbCells="27"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Transfert_bonbonne_dans_TT"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Cde_autorisation_trans_cim"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Info_defaut_SAS"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<coil typeCoil="resetCoil" coilVariableName="Cde_autorisation_trans_cim"></coil>
					<HLink nbCells="23"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<VLink></VLink>
					<contact typeContact="closedContact" contactVariableName="Info_TT_Cim_fermee"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="24"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Info_pressostat_presence_air"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="24"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Transfert_bonbonne_dans_TT"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Info_defaut_SAS"></contact>
					<contact typeContact="openContact" contactVariableName="Info_TT_Cim_fermee"></contact>
					<contact typeContact="closedContact" contactVariableName="Discordance_vidange_TT_cim"></contact>
					<contact typeContact="openContact" contactVariableName="Info_pressostat_presence_air"></contact>
					<contact typeContact="closedContact" contactVariableName="memo_transfert_termine"></contact>
					<coil typeCoil="setCoil" coilVariableName="Cde_autorisation_trans_cim"></coil>
					<HLink nbCells="22"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<FFBBlock instanceName=".77.925" typeName="GE" additionnalPinNumber="0" enEnO="true" width="9" height="4">
						<objPosition posX="4" posY="104"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="Poids_instantane_TT_Cim"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="Seuil_a_depasser_TT_cim"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="24"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<contact typeContact="openContact" contactVariableName="TT_cim_stable"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="memo_transfert_termine"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="TT_cim_instable"></contact>
					</shortCircuit>
					<coil typeCoil="resetCoil" coilVariableName="memo_transfert_termine"></coil>
					<HLink nbCells="18"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<coil typeCoil="resetCoil" coilVariableName="bonbonne_prete_pour_transfert"></coil>
					<HLink nbCells="18"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Cim_ctrl_poids"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="6"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<coil typeCoil="resetCoil" coilVariableName="Transfert_bonbonne_dans_TT"></coil>
					<HLink nbCells="18"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Cim"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="8"></emptyCell>
					<VLink></VLink>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Cim"></contact>
					<coil typeCoil="setCoil" coilVariableName="Dire_transfert_Cim_termine"></coil>
					<HLink nbCells="17"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<coil typeCoil="setCoil" coilVariableName="Bonbonne_cim_vide"></coil>
					<HLink nbCells="18"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<coil typeCoil="resetCoil" coilVariableName="Cde_autorisation_trans_cim"></coil>
					<HLink nbCells="18"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<coil typeCoil="resetCoil" coilVariableName="Transfert_bonbonne_en_cours"></coil>
					<HLink nbCells="18"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName=".77.929" typeName="LT" additionnalPinNumber="0" enEnO="true" width="9" height="4">
						<objPosition posX="3" posY="114"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN1" effectiveParameter="Poids_instantane_TT_Cim"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN2" effectiveParameter="Seuil_a_depasser_TT_cim"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="25"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Cim"></contact>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="27"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<contact typeContact="openContact" contactVariableName="memo_transfert_termine"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="TT_cim_stable"></contact>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Cim_ctrl_poids"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Transfert_cim_non_termine"></coil>
					<HLink nbCells="19"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="16"></emptyCell>
					<FFBBlock instanceName="TOF_77_955" typeName="TOF" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="16" posY="119"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_TT_Cim_retard_ferm"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="12"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Cim"></contact>
					<contact typeContact="closedContact" contactVariableName="TT_cim_vide"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Introduction_Cim1_encours"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Discordance_vidange_TT_cim"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Cim_pesee"></contact>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_TT_Cim"></contact>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<coil typeCoil="coil" coilVariableName="Vidange_TT_cim"></coil>
					<HLink nbCells="10"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="11"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Cim_pesee"></contact>
					<HLink nbCells="2"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="TT_cim_vide"></contact>
					</shortCircuit>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="11"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="4"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Info_TT_Cim_ouverte"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Cim_pesee"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Vibreur_TT_cim_non_pesee"></coil>
					<HLink nbCells="9"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="1"></emptyCell>
					<FFBBlock instanceName="TON_958" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="12" posY="125"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_TT_Cim_tps_vidange"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET" effectiveParameter="tps_ecoule_vidange_TT_cim"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="3"></emptyCell>
					<VLink></VLink>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Cim_pesee"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="setCoil" coilVariableName="TT_cim_vide"></coil>
					<HLink nbCells="11"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Alarme_vidange_TT_cim"></contact>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Cim_pesee"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Vidange_TT_cim"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_TT_Cim"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Alarme_vidange_TT_cim"></coil>
					<HLink nbCells="7"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName="FBI_77_1007" typeName="STA_TT" additionnalPinNumber="0" enEnO="true" width="16" height="13">
						<objPosition posX="3" posY="130"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="FIN_TRSF" effectiveParameter="memo_transfert_termine"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="POIDS_TT" effectiveParameter="Poids_instantane_TT_Cim"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TPS_STAB" effectiveParameter="Conf_TT_cim_tps_stab"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TPS_INST" effectiveParameter="Conf_TT_cim_tps_max_stab"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="ECH_STAB" effectiveParameter="Conf_TT_Cim_ecart_stab"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="VID_TT"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="ON_VIB" effectiveParameter="Conf_TT_cim_TON_vibreur"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="OFF_VIB" effectiveParameter="Conf_TT_cim_TOFF_vibreur"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="NB_VIBR" effectiveParameter="Conf_TT_Cim_nb_vibreur"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PRES_VIB" effectiveParameter="Conf_TT_cim_pres_vibreur"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="DEFAUT" effectiveParameter="Defaut_vidange_TT_cim"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="TT_STAB" effectiveParameter="TT_cim_stable"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="TT_INSTA"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="DEF_ECOU"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="VIBREUR" effectiveParameter="Vibreur_TT_cim_pesee"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="25"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Cim"></contact>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Cim_pesee"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="27"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="setCoil" coilVariableName="TT_cim_instable"></coil>
					<HLink nbCells="21"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_TT_Cim"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Defaut_vidange_TT_cim"></coil>
					<HLink nbCells="21"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Cde_vidange_TT_Cim"></contact>
					<contact typeContact="openContact" contactVariableName="Info_TT_Cim_ouverte"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="27"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="7"></emptyLine>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Introduction_Cim1_encours"></contact>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Conf_bonbonne_cim"></contact>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Cim"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Cim_pesee"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_atteint_TT_Cim"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Intro_Cim1_terminee"></coil>
					<HLink nbCells="16"></HLink>
				</typeLine>
				<typeLine>
					<VLink></VLink>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Cim_pesee"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="TT_cim_vide"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<VLink></VLink>
					<emptyCell nbCells="1"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Cim"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Info_transfert_cim_termine"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="5"></HLink>
					</shortCircuit>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Conf_bonbonne_cim"></contact>
					<contact typeContact="closedContact" contactVariableName="Conf_TT_Cim"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Cim1"></contact>
					<HLink nbCells="3"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_atteint_Cim1"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Introduction_Cim2_encours"></contact>
					<HLink nbCells="3"></HLink>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Cim2"></contact>
					<HLink nbCells="3"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_atteint_Cim2"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Intro_Cim2_terminee"></coil>
					<HLink nbCells="16"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_Cim_dans_bonbonne"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_bonbonne_cim"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_atteint_Cim1"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Vidange_Cim1"></contact>
					</shortCircuit>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Cde_autorisation_trans_cim"></coil>
					<HLink nbCells="16"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Cde_bascule_Cim1_vide___old"></coil>
					<HLink nbCells="16"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="3"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_TT_Cim"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Vidange_Cim_dans_bonbonne"></coil>
					<HLink nbCells="16"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="7"></emptyCell>
					<contact typeContact="openContact" contactVariableName="info_2_5_bars"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Conf_TT_Cim"></contact>
					</shortCircuit>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Dire_transfert_Cim_termine"></coil>
					<HLink nbCells="16"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Vidange_Cim_dans_bonbonne"></coil>
					<HLink nbCells="16"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName="TON_99" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="3" posY="160"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="t#2s"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="25"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Cde_autorisation_trans_cim"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Info_balance_Cim1_fermee"></contact>
					<emptyCell nbCells="2"></emptyCell>
					<coil typeCoil="setCoil" coilVariableName="bonbonne_prete_pour_transfert"></coil>
					<HLink nbCells="24"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="3"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="15"></emptyCell>
					<FFBBlock instanceName="TOF_77_244" typeName="TOF" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="15" posY="166"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_Eau1_retard_ferm_balance"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<VLink></VLink>
					<HLink nbCells="1"></HLink>
					<contact typeContact="PContact" contactVariableName="Introduction_Eau1_encours"></contact>
					<HLink nbCells="7"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="FALSE"></contact>
					</shortCircuit>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Conf_skip_transfert"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat"></contact>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Introduction_Eau1_encours"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Presence_prod_Eau1"></contact>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Introduction_Gra_encours"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Introduction_Gra_encours"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Eau1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Entre_vidanges_Eau1"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Vidange_Eau1"></coil>
					<HLink nbCells="8"></HLink>
				</typeLine>
				<typeLine>
					<VLink></VLink>
					<compareBlock width="2">
						<expression>Conf_Eau_dest_basc[1]=0</expression>
						<comment>Pas de glace vers Gra1</comment>
					</compareBlock>
					<emptyCell nbCells="2"></emptyCell>
					<compareBlock width="2">
						<expression>Conf_Eau_dest_basc[1]&lt;&gt;1</expression>
						<comment>Pas de glace vers Gra1</comment>
					</compareBlock>
					<shortCircuit>
						<VLink></VLink>
						<compareBlock width="2">
							<expression>Conf_Eau_dest_basc[1]&lt;&gt;2</expression>
							<comment>Pas de glace vers Gra2</comment>
						</compareBlock>
					</shortCircuit>
					<VLink></VLink>
					<emptyCell nbCells="3"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<VLink></VLink>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<VLink></VLink>
					<contact typeContact="PContact" contactVariableName="Introduction_Eau1_encours"></contact>
					<contact typeContact="closedContact" contactVariableName="Vidange_Partielle_Eau1"></contact>
					<compareBlock width="2">
						<expression>Conf_Eau1_retard_ferm_balance &gt; t#0s</expression>
					</compareBlock>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Conf_skip_transfert"></contact>
					</shortCircuit>
					<HLink nbCells="3"></HLink>
					<contact typeContact="openContact" contactVariableName="Lancer_transfert_Glace_Eau1"></contact>
					<HLink nbCells="2"></HLink>
					<VLink></VLink>
					<emptyCell nbCells="5"></emptyCell>
					<FFBBlock instanceName="TON_243" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="15" posY="171"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_eau1_tps_vidange"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Conf_TT_granulat"></contact>
					</shortCircuit>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Conf_tapis_transfert"></contact>
					<emptyCell nbCells="7"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Alarme_vidange_Eau1"></contact>
					<contact typeContact="closedContact" contactVariableName="Vidange_bloquee_Eau1"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Entre_vidanges_Eau1"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Eau1"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Cde_vidange_bascule_Eau1"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Alarme_vidange_Eau1"></coil>
					<HLink nbCells="8"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="4"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="15"></emptyCell>
					<FFBBlock instanceName="TOF_77_245" typeName="TOF" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="15" posY="178"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_Eau2_retard_ferm_balance"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Conf_skip_transfert"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Conf_TT_granulat"></contact>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Introduction_Eau2_encours"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Presence_prod_Eau2"></contact>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Introduction_Gra_encours"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Introduction_Gra_encours"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Eau2"></contact>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="2"></HLink>
					<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Vidange_Eau2"></coil>
					<HLink nbCells="8"></HLink>
				</typeLine>
				<typeLine>
					<VLink></VLink>
					<compareBlock width="2">
						<expression>Conf_Eau_dest_basc[2]=0</expression>
						<comment>Pas de glace vers Gra1</comment>
					</compareBlock>
					<emptyCell nbCells="2"></emptyCell>
					<compareBlock width="2">
						<expression>Conf_Eau_dest_basc[2]&lt;&gt;1</expression>
						<comment>Pas de glace vers Gra1</comment>
					</compareBlock>
					<shortCircuit>
						<VLink></VLink>
						<compareBlock width="2">
							<expression>Conf_Eau_dest_basc[2]&lt;&gt;2</expression>
							<comment>Pas de glace vers Gra2</comment>
						</compareBlock>
					</shortCircuit>
					<VLink></VLink>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<VLink></VLink>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<VLink></VLink>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Conf_skip_transfert"></contact>
					</shortCircuit>
					<HLink nbCells="3"></HLink>
					<contact typeContact="openContact" contactVariableName="Lancer_transfert_Glace_Eau2"></contact>
					<HLink nbCells="2"></HLink>
					<VLink></VLink>
					<emptyCell nbCells="5"></emptyCell>
					<FFBBlock instanceName="TON_244" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="15" posY="183"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_eau2_tps_vidange"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Conf_TT_granulat"></contact>
					</shortCircuit>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Conf_tapis_transfert"></contact>
					<emptyCell nbCells="7"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Alarme_vidange_Eau2"></contact>
					<contact typeContact="closedContact" contactVariableName="Vidange_bloquee_Eau2"></contact>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Eau2"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Cde_vidange_bascule_Eau2"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Alarme_vidange_Eau2"></coil>
					<HLink nbCells="8"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="3"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Introduction_Eau1_encours"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Eau1"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_atteint_Eau1"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Vidange_Partielle_Eau1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<coil typeCoil="setCoil" coilVariableName="Intro_Eau1_terminee"></coil>
					<HLink nbCells="17"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<coil typeCoil="resetCoil" coilVariableName="Attente_fin_vidange_Eau1"></coil>
					<HLink nbCells="17"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Introduction_Eau2_encours"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Eau2"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_atteint_Eau2"></contact>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Intro_Eau2_terminee"></coil>
					<HLink nbCells="17"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="7"></emptyCell>
					<FFBBlock instanceName="FBI_77_503" typeName="VIB_BAL" additionnalPinNumber="0" enEnO="true" width="16" height="11">
						<objPosition posX="7" posY="194"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="POIDS_I" effectiveParameter="Poids_instantane_Eau1"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="T_STAB" effectiveParameter="Conf_eau1_tps_stabilisation"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="VALIDE"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PR_DEF"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TON_VIB" effectiveParameter="Conf_eau_TON_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TOFF_VIB" effectiveParameter="Conf_eau_TOFF_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="NB_VIB" effectiveParameter="Conf_eau_nb_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="E_STAB" effectiveParameter="Conf_eau1_ecart_stabilite"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="mode_decomptage" effectiveParameter="FALSE"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_VIB"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ALARME"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="21"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="7"></HLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Vibreur_balance_Eau1"></coil>
					<HLink nbCells="19"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Vidange_bloquee_Eau1"></coil>
					<HLink nbCells="19"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_Eau1"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Eau1"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="closedContact" contactVariableName="Info_balance_eau1_fermee"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Discordance_vidange_eau1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_bloquee_Eau1"></contact>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="5"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="7"></emptyCell>
					<FFBBlock instanceName="FBI_77_502" typeName="VIB_BAL" additionnalPinNumber="0" enEnO="true" width="16" height="11">
						<objPosition posX="7" posY="206"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="POIDS_I" effectiveParameter="Poids_instantane_Eau2"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="T_STAB" effectiveParameter="Conf_eau2_tps_stabilisation"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="VALIDE"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PR_DEF"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TON_VIB" effectiveParameter="Conf_eau2_TON_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TOFF_VIB" effectiveParameter="Conf_eau2_TOFF_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="NB_VIB" effectiveParameter="Conf_eau2_nb_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="E_STAB" effectiveParameter="Conf_eau2_ecart_stabilite"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="mode_decomptage" effectiveParameter="FALSE"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_VIB"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ALARME"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="21"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="7"></HLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Vibreur_balance_Eau2"></coil>
					<HLink nbCells="19"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Vidange_bloquee_Eau2"></coil>
					<HLink nbCells="19"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_Eau2"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Eau2"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="closedContact" contactVariableName="Info_balance_Eau2_fermee"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Discordance_vidange_Eau2"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_bloquee_Eau2"></contact>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="6"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<FFBBlock instanceName="FBI_77_250" typeName="STABILI" additionnalPinNumber="0" enEnO="true" width="13" height="8">
						<objPosition posX="2" posY="219"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="POIDS_I" effectiveParameter="Poids_instantane_Adj"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="T_STAB" effectiveParameter="Conf_adjuvant_basc_tps_stab"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="VALIDE" effectiveParameter="Vidange_Adj"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PR_DEF" effectiveParameter="Defaut_Adj"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="E_STAB" effectiveParameter="Conf_adjuvant_ecart_stabilite"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="BAS_STAB"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="28"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_basc_compartimente"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Adjuvant_stable"></coil>
					<HLink nbCells="23"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="6"></emptyLine>
				</typeLine>
				<typeLine>
					<HLink nbCells="6"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Wip"></coil>
					<HLink nbCells="23"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<FFBBlock instanceName="FBI_2" typeName="TON" additionnalPinNumber="0" enEnO="true" width="10" height="4">
						<objPosition posX="6" posY="229"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN" effectiveParameter="TRUE"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="t#100ms"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="22"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Pesee_Adj_terminee"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Adj"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="pas_de_gachee_en_cours"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_comp1_vers_eau1"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="closedContact" contactVariableName="Introduction_Adj_terminee"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="setCoil" coilVariableName="bit_ouverture_premier_comp"></coil>
					<HLink nbCells="11"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_comp2_vers_eau1"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="closedContact" contactVariableName="Introduction_Comp_Adj_terminee"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="setCoil" coilVariableName="bit_ouverture_deuxieme_comp"></coil>
					<HLink nbCells="11"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Pesee_Adj_terminee"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Presence_prod_Adj"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="bit_ouverture_premier_comp"></coil>
					<HLink nbCells="22"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="bit_ouverture_deuxieme_comp"></coil>
					<HLink nbCells="22"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<HLink nbCells="2"></HLink>
					<contact typeContact="PContact" contactVariableName="Intro_Adj_dans_Eau1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="12"></HLink>
					</shortCircuit>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_Adj_dans_bonb_colorants"></contact>
					<HLink nbCells="3"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_bonbonne_Colorant"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Info_Machine_Colorant_OK"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Alarme_coffret_non_pret"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Adj"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<VLink></VLink>
					<contact typeContact="PContact" contactVariableName="Introduction_Adj_encours"></contact>
					<HLink nbCells="8"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<emptyCell nbCells="1"></emptyCell>
					<FFBBlock instanceName="TOF_77_265" typeName="TOF" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="18" posY="239"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_Adj_retard_ferm_balance"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<VLink></VLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Conf_bonbonne_Colorant"></contact>
					</shortCircuit>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_comp1_vers_malax"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_bonbonne_Colorant"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Introduction_Adj_encours"></contact>
					<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Introduction_Adj_terminee"></contact>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_basc_compartimente"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="fin_tpo_vidange_adjuvant"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<emptyCell nbCells="3"></emptyCell>
					<VLink></VLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Intro_Adj_dans_Eau1"></contact>
					</shortCircuit>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<VLink></VLink>
					<VLink></VLink>
					<contact typeContact="closedContact" contactVariableName="Conf_adjuvant_basc_compartimente"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Adj"></contact>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					<coil typeCoil="coil" coilVariableName="Vidange_Adj"></coil>
					<HLink nbCells="7"></HLink>
				</typeLine>
				<typeLine>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Intro_Adj_dans_Eau1"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="closedContact" contactVariableName="fin_vidange_basc_adj"></contact>
					<HLink nbCells="4"></HLink>
					<VLink></VLink>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName="TON_266" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="14" posY="244"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_adjuvant_basc_tps_vidange"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<VLink></VLink>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_basc_compartimente"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<coil typeCoil="coil" coilVariableName="fin_tpo_vidange_adjuvant"></coil>
					<HLink nbCells="8"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="10"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="5"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="4"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Adjuvant_stable"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<emptyCell nbCells="5"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Vidange_Adj"></contact>
					<contact typeContact="closedContact" contactVariableName="Alarme_vidange_Adj"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="2"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_adjuvant_basc_compartimente"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Cde_vidange_bascule_Adj"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Adj"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Alarme_vidange_Adj"></coil>
					<HLink nbCells="4"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<HLink nbCells="11"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Wip"></coil>
					<HLink nbCells="18"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<FFBBlock instanceName="FBI_3" typeName="TON" additionnalPinNumber="0" enEnO="true" width="10" height="4">
						<objPosition posX="11" posY="250"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN" effectiveParameter="TRUE"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="t#100ms"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="17"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<contact typeContact="openContact" contactVariableName="bit_ouverture_premier_comp"></contact>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_comp1_vers_eau1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Pesee_Eau1_terminee"></contact>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_basc_pres_bascule"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Pesee_Adj_terminee"></contact>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Adj"></contact>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="coil" coilVariableName="Intro_Adj_dans_Eau1"></coil>
					<HLink nbCells="13"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Conf_adjuvant_basc_pres_bascule"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="24"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<contact typeContact="closedContact" contactVariableName="Conf_adjuvant_basc_pres_bascule"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="25"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="bit_ouverture_premier_comp"></contact>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_comp1_vers_eau1"></contact>
					<contact typeContact="openContact" contactVariableName="Pesee_Eau1_terminee"></contact>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_basc_pres_bascule"></contact>
					<contact typeContact="openContact" contactVariableName="Pesee_Adj_terminee"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Presence_prod_Adj"></contact>
					</shortCircuit>
					<emptyCell nbCells="14"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Intro_Adj_terminee"></coil>
					<HLink nbCells="6"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Introduction_Adj_encours"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_comp1_vers_malax"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_basc_compartimente"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="fin_tpo_vidange_adjuvant"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Conf_bonbonne_Colorant"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="8"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="fin_vidange_basc_adj"></coil>
					<HLink nbCells="6"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="7"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Conf_adjuvant_basc_compartimente"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_atteint_Adj"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="bit_ouverture_premier_comp"></coil>
					<HLink nbCells="6"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Introduction_Adj_encours"></contact>
					<HLink nbCells="3"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Transfert_Adj_Termine"></contact>
					<HLink nbCells="4"></HLink>
					<contact typeContact="openContact" contactVariableName="Conf_bonbonne_Colorant"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="8"></emptyCell>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Transfert_Adj_Termine"></coil>
					<HLink nbCells="6"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="4"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Conf_bonbonne_Colorant"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="PContact" contactVariableName="Etape_386_030_Autoris_Vidange"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="6"></HLink>
					</shortCircuit>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Vidange_Adj_dans_bonb_colorants"></coil>
					<HLink nbCells="17"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="8"></emptyCell>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Attente_Autoris_Vidange_Colorant"></coil>
					<HLink nbCells="17"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="28"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Vidange_Adj_dans_bonb_colorants"></contact>
					<HLink nbCells="5"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_atteint_Adj"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Vidange_Adj_dans_bonb_colorants"></coil>
					<HLink nbCells="17"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="5"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="8"></emptyCell>
					<FFBBlock instanceName="TOF_77_290" typeName="TOF" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="8" posY="273"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_Anh_retard_ferm_balance"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<contact typeContact="PContact" contactVariableName="Introduction_Anh_encours"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Introduction_Anh_encours"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Anh"></contact>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="coil" coilVariableName="Faire_vidange_Anh"></coil>
					<HLink nbCells="17"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="25"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="25"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="25"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName="TON_89" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="8" posY="279"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_anhydrite_tps_vidange"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="25"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Alarme_vidange_Anh"></contact>
					<contact typeContact="closedContact" contactVariableName="Vidange_bloquee_Anh"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Anh"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Cde_vidange_bascule_Anh"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Alarme_vidange_Anh"></coil>
					<HLink nbCells="15"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Anh"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="conf_anhydrite_avec_sequence"></contact>
					<HLink nbCells="13"></HLink>
					<coil typeCoil="coil" coilVariableName="Vidange_Anh"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="8"></emptyCell>
					<FFBBlock instanceName="FBI_77_852" typeName="Seq_Vid_Basc" additionnalPinNumber="0" enEnO="true" width="16" height="10">
						<objPosition posX="10" posY="285"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN" effectiveParameter="conf_anhydrite_avec_sequence"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Dem_seq_ouv"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Fin_ferm" effectiveParameter="Info_balance_Anh_fermee"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Seq_ouv_OK" effectiveParameter="Info_balance_Anh_ouvert"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Tps_ouv" effectiveParameter="Conf_anhydrite_tps_sequence_ouv"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Tps_att" effectiveParameter="Conf_anhydrite_tps_sequence_att"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Defaut"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Nb_seq_max" effectiveParameter="Conf_anhydrite_nb_sequence"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Dem_ouv_maint"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="DEF_CDE"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_FER"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_OUV"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="18"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="28"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="conf_anhydrite_avec_sequence"></contact>
					<HLink nbCells="6"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Defaut_sequence_Anh"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="coil" coilVariableName="Fermeture_Anh"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="coil" coilVariableName="Vid_seq_Anh"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Defaut_sequence_Anh"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="6"></HLink>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Discordance_vidange_anhydrite"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<FFBBlock instanceName="SR_fin_vid_Anh" typeName="SR" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="5" posY="294"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="S1"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="R"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q1"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<VLink></VLink>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Anh"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="20"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="7"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="4"></HLink>
					<contact typeContact="openContact" contactVariableName="conf_anhydrite_avec_sequence"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="coil" coilVariableName="Vid_seq_maint_Anh"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Anh"></contact>
					<HLink nbCells="1"></HLink>
					<compareBlock width="2">
						<expression>Poids_instantane_Anh &lt;= Conf_Anh_seuil_arret_seq_vid</expression>
					</compareBlock>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="22"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Faire_vidange_Anh"></contact>
					<HLink nbCells="1"></HLink>
					<compareBlock width="2">
						<expression>Poids_instantane_Anh &gt; Conf_Anh_seuil_arret_seq_vid</expression>
					</compareBlock>
					<emptyCell nbCells="25"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="3"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Introduction_Anh_encours"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_atteint_Anh"></contact>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Intro_Anh_terminee"></coil>
					<HLink nbCells="21"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<FFBBlock instanceName="FBI_77_498" typeName="VIB_BAL" additionnalPinNumber="0" enEnO="true" width="16" height="11">
						<objPosition posX="4" posY="303"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="POIDS_I" effectiveParameter="Poids_instantane_Anh"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="T_STAB" effectiveParameter="Conf_anhydrite_tps_stabilisation"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="VALIDE"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PR_DEF"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TON_VIB" effectiveParameter="Conf_anhydrite_TON_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TOFF_VIB" effectiveParameter="Conf_anhydrite_TOFF_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="NB_VIB" effectiveParameter="Conf_anhydrite_nb_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="E_STAB" effectiveParameter="Conf_anhydrite_ecart_stab"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="mode_decomptage" effectiveParameter="FALSE"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_VIB" effectiveParameter="Vibreur_balance_Anh"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ALARME"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="24"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Vid_seq_maint_Anh"></contact>
					</shortCircuit>
					<emptyCell nbCells="5"></emptyCell>
					<coil typeCoil="setCoil" coilVariableName="Vidange_bloquee_Anh"></coil>
					<HLink nbCells="23"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_Anh"></contact>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Anh"></contact>
					<contact typeContact="closedContact" contactVariableName="Info_balance_Anh_fermee"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Discordance_vidange_anhydrite"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_bloquee_Anh"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="28"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="7"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Lancer_transfert_Add_Eau1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="6"></HLink>
					</shortCircuit>
					<emptyCell nbCells="8"></emptyCell>
					<FFBBlock instanceName="TOF_77_246" typeName="TOF" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="19" posY="317"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_basc_add_retard_ferm"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="9"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Lancer_transfert_add_gra"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="6"></HLink>
					</shortCircuit>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Introduction_Add_encours"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Add"></contact>
					<HLink nbCells="1"></HLink>
					<compareBlock width="2">
						<expression>Conf_basc_add_dest=0 OR Conf_basc_add_dest=1 OR Conf_basc_add_dest=2 OR Conf_basc_add_dest=3 OR Conf_basc_add_dest=4</expression>
						<comment>Pas de glace vers Gra1</comment>
					</compareBlock>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_add_dispo"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Add"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Faire_vidange_Add"></coil>
					<HLink nbCells="7"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Lancer_transfert_Add_tapis_tr"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="6"></HLink>
					</shortCircuit>
					<VLink></VLink>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="13"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Lancer_transfert_Add_skip"></contact>
					<HLink nbCells="6"></HLink>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<contact typeContact="closedContact" contactVariableName="Basc_Add_vide"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="4"></emptyCell>
					<FFBBlock instanceName="TON_246" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="21" posY="321"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_basc_add_tps_vidange"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="7"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="15"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_add_dispo"></contact>
					<HLink nbCells="7"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Basc_Add_vide"></coil>
					<HLink nbCells="5"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="4"></emptyCell>
					<FFBBlock instanceName="TON_245" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="16" posY="324"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_basc_add_tps_vidange"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="12"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="11"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="5"></emptyCell>
					<VLink></VLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_add_dispo"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Basc_Add_vide"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="8"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Lancer_transfert_Add_tapis_tr"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<emptyCell nbCells="4"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Alarme_vidange_Add"></contact>
					<contact typeContact="closedContact" contactVariableName="Vidange_bloquee_Add"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_add_dispo"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Add"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Cde_vidange_bascule_Add"></contact>
					<coil typeCoil="setCoil" coilVariableName="Alarme_vidange_Add"></coil>
					<HLink nbCells="5"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Lancer_transfert_Add_skip"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<emptyCell nbCells="22"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Lancer_transfert_Add_Eau1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<emptyCell nbCells="22"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Lancer_transfert_add_gra"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<emptyCell nbCells="22"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Introduction_Add_encours"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Add"></contact>
					<HLink nbCells="1"></HLink>
					<compareBlock width="2">
						<expression>Conf_basc_add_dest=0 OR Conf_basc_add_dest=1 OR Conf_basc_add_dest=2 OR Conf_basc_add_dest=3 OR Conf_basc_add_dest=4</expression>
						<comment>Pas de glace vers Gra1</comment>
					</compareBlock>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_atteint_Add"></contact>
					<HLink nbCells="7"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Intro_Add_terminee"></coil>
					<HLink nbCells="11"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Add"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="conf_Add_avec_sequence"></contact>
					<HLink nbCells="13"></HLink>
					<coil typeCoil="coil" coilVariableName="Vidange_Add"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="10"></emptyCell>
					<FFBBlock instanceName="FBI_77_857" typeName="Seq_Vid_Basc" additionnalPinNumber="0" enEnO="true" width="16" height="10">
						<objPosition posX="12" posY="333"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN" effectiveParameter="conf_Add_avec_sequence"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Dem_seq_ouv"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Fin_ferm" effectiveParameter="Info_balance_Add_fermee"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Seq_ouv_OK" effectiveParameter="Seuil_vide_atteint_Add"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Tps_ouv" effectiveParameter="Conf_Add_tps_sequence_ouv"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Tps_att" effectiveParameter="Conf_Add_tps_sequence_att"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Defaut"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Nb_seq_max" effectiveParameter="Conf_Add_nb_sequence"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="Dem_ouv_maint"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="DEF_CDE"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_FER"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_OUV"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="28"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="conf_Add_avec_sequence"></contact>
					<HLink nbCells="8"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Defaut_sequence_Add"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="14"></emptyCell>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="coil" coilVariableName="Vid_seq_Add"></coil>
					<HLink nbCells="12"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Defaut_sequence_Add"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<HLink nbCells="8"></HLink>
					<emptyCell nbCells="18"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Discordance_vidange_basc_add"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="8"></emptyCell>
					<shortCircuit>
						<VLink></VLink>
						<FFBBlock instanceName="SR_fin_vid_Cim1_0" typeName="SR" additionnalPinNumber="0" enEnO="false" width="10" height="4">
							<objPosition posX="8" posY="342"></objPosition>
							<descriptionFFB execAfter="">
								<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="S1"></inputVariable>
								<inputVariable invertedPin="false" formalParameter="R"></inputVariable>
								<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
								<outputVariable invertedPin="false" formalParameter="Q1"></outputVariable>
							</descriptionFFB>
						</FFBBlock>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Faire_vidange_Add"></contact>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="18"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="1"></emptyCell>
					<HLink nbCells="4"></HLink>
					<contact typeContact="openContact" contactVariableName="conf_Add_avec_sequence"></contact>
					<HLink nbCells="2"></HLink>
					<coil typeCoil="coil" coilVariableName="Vid_seq_maint_Add"></coil>
					<HLink nbCells="11"></HLink>
				</typeLine>
				<typeLine>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Faire_vidange_Add"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="conf_basc_add_mode_decomptage"></contact>
					<HLink nbCells="1"></HLink>
					<compareBlock width="2">
						<expression>Poids_instantane_Add &lt;= Conf_Add_seuil_arret_seq_vid</expression>
					</compareBlock>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="22"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Faire_vidange_Add"></contact>
					<HLink nbCells="3"></HLink>
					<compareBlock width="2">
						<expression>Poids_instantane_Add &gt; Conf_Add_seuil_arret_seq_vid</expression>
					</compareBlock>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="22"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="6"></HLink>
					</shortCircuit>
					<emptyCell nbCells="24"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="24"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName=".1" typeName="DINT_TO_INT" additionnalPinNumber="0" enEnO="true" width="12" height="3">
						<objPosition posX="3" posY="350"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN" effectiveParameter="Poids_instantane_Add"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="OUT"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<VLink></VLink>
					<emptyCell nbCells="5"></emptyCell>
					<FFBBlock instanceName="FBI_77_504" typeName="VIB_BAL" additionnalPinNumber="0" enEnO="true" width="16" height="11">
						<objPosition posX="11" posY="350"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="POIDS_I"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="T_STAB" effectiveParameter="Conf_Basc_Add_tps_stabilisation"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="VALIDE"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PR_DEF"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TON_VIB" effectiveParameter="Conf_Basc_Add_TON_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="TOFF_VIB" effectiveParameter="Conf_Basc_Add_TOFF_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="NB_VIB" effectiveParameter="Conf_Basc_Add_nb_vibreur_bal"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="E_STAB" effectiveParameter="Conf_Basc_Add_ecart_stabilite"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="mode_decomptage" effectiveParameter="conf_basc_add_mode_decomptage"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="CDE_VIB"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ALARME"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="17"></emptyCell>
				</typeLine>
				<typeLine>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="3"></emptyCell>
					<HLink nbCells="5"></HLink>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="13"></emptyCell>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="coil" coilVariableName="Vibreur_balance_Add"></coil>
					<HLink nbCells="13"></HLink>
				</typeLine>
				<typeLine>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Vid_seq_maint_Add"></contact>
					</shortCircuit>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_add_dispo"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Basc_Add_vide"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="6"></emptyCell>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Vidange_bloquee_Add"></coil>
					<HLink nbCells="13"></HLink>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_Add"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_add_dispo"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Add"></contact>
					<HLink nbCells="2"></HLink>
					<contact typeContact="closedContact" contactVariableName="Info_balance_Add_fermee"></contact>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<HLink nbCells="4"></HLink>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Discordance_vidange_Basc_Add"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Vidange_bloquee_Add"></contact>
					<HLink nbCells="3"></HLink>
					<emptyCell nbCells="26"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="5"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<FFBBlock instanceName="TOF_77_330" typeName="TOF" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="12" posY="363"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_Adj_retard_ferm_balance"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="3"></emptyCell>
					<VLink></VLink>
					<contact typeContact="PContact" contactVariableName="Introduction_Comp_Adj_encours"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="6"></HLink>
					</shortCircuit>
					<emptyCell nbCells="19"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_comp2_vers_malax"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Introduction_Comp_Adj_encours"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="closedContact" contactVariableName="Defaut_Intro"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Adj"></contact>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="coil" coilVariableName="Vidange_Comp_Adj"></coil>
					<HLink nbCells="14"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="21"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="openContact" contactVariableName="bit_ouverture_deuxieme_comp"></contact>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_comp2_vers_eau1"></contact>
					<HLink nbCells="1"></HLink>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Pesee_Eau1_terminee"></contact>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_basc_pres_bascule"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Pesee_Adj_terminee"></contact>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="openContact" contactVariableName="Presence_prod_Adj"></contact>
					</shortCircuit>
					<emptyCell nbCells="21"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Conf_adjuvant_basc_pres_bascule"></contact>
					<HLink nbCells="1"></HLink>
					<VLink></VLink>
					<emptyCell nbCells="3"></emptyCell>
					<FFBBlock instanceName="TON_29" typeName="TON" additionnalPinNumber="0" enEnO="false" width="10" height="4">
						<objPosition posX="12" posY="368"></objPosition>
						<descriptionFFB execAfter="">
							<inputVariable invertedPin="false" formalParameter="EN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="IN"></inputVariable>
							<inputVariable invertedPin="false" formalParameter="PT" effectiveParameter="Conf_adjuvant_basc_tps_vid_comp2"></inputVariable>
							<outputVariable invertedPin="false" formalParameter="ENO"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="Q"></outputVariable>
							<outputVariable invertedPin="false" formalParameter="ET"></outputVariable>
						</descriptionFFB>
					</FFBBlock>
					<emptyCell nbCells="16"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="8"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="21"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="9"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Alarme_vidange_Comp_Adj"></contact>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="closedContact" contactVariableName="Seuil_vide_atteint_Adj"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Cde_vidange_bascule_Adj_Comp"></contact>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Alarme_vidange_Comp_Adj"></coil>
					<HLink nbCells="11"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<VLink></VLink>
					<contact typeContact="closedContact" contactVariableName="Conf_adjuvant_basc_pres_bascule"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<emptyCell nbCells="25"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="bit_ouverture_deuxieme_comp"></contact>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_comp2_vers_eau1"></contact>
					<contact typeContact="openContact" contactVariableName="Pesee_Eau1_terminee"></contact>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_basc_pres_bascule"></contact>
					<contact typeContact="openContact" contactVariableName="Pesee_Adj_terminee"></contact>
					<contact typeContact="openContact" contactVariableName="Presence_prod_Adj"></contact>
					<shortCircuit>
						<VLink></VLink>
						<contact typeContact="closedContact" contactVariableName="Vidange_Comp_Adj"></contact>
					</shortCircuit>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="6"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="23"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="Conf_adjuvant_comp2_vers_malax"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Introduction_Comp_Adj_encours"></contact>
					<HLink nbCells="4"></HLink>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Seuil_vide_atteint_Adj"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="3"></HLink>
					</shortCircuit>
					<coil typeCoil="setCoil" coilVariableName="Intro_Comp_Adj_terminee"></coil>
					<HLink nbCells="16"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="12"></emptyCell>
					<VLink></VLink>
					<coil typeCoil="coil" coilVariableName="fin_vidange_comp2_adj"></coil>
					<HLink nbCells="16"></HLink>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="13"></emptyCell>
					<coil typeCoil="resetCoil" coilVariableName="bit_ouverture_deuxieme_comp"></coil>
					<HLink nbCells="16"></HLink>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<linkFB>
					<linkSource parentObjectName=".1" pinName="OUT">
						<objPosition posX="4" posY="352"></objPosition>
					</linkSource>
					<linkDestination parentObjectName="FBI_77_504" pinName="POIDS_I">
						<objPosition posX="11" posY="352"></objPosition>
					</linkDestination>
				</linkFB>
				<textBox width="3" height="1">Alarme transfert ciment non terminé
    <objPosition posX="0" posY="113"></objPosition>
				</textBox>
				<textBox width="5" height="1">Autorisation fin de transfert si tout le poids a été transferé
    <objPosition posX="0" posY="103"></objPosition>
				</textBox>
				<textBox width="5" height="1">Spécificité de la bascule Anh par rapport aux autres bascules : La commande de la bascule se fait en bistable (il y a 1 cde d'ouverture et 1 cde de fermeture)
    <objPosition posX="18" posY="290"></objPosition>
				</textBox>
				<textBox width="3" height="3">On peut prendre la valeur en INT (16 bits) au lieu de DINT (32 bits) car on utilise ce DFB qu'en mode "à comptage" et "pesage globale (1 ligne de poids)". Dans ce cas, le poids tient toujours sur 16 bits.
    <objPosition posX="0" posY="349"></objPosition>
				</textBox>
				<textBox width="4" height="1">Commande vidange bascule additionnelle
    <objPosition posX="0" posY="315"></objPosition>
				</textBox>
				<textBox width="3" height="1">(Mettre les futures initialisations ici)
    <objPosition posX="11" posY="2"></objPosition>
				</textBox>
				<textBox width="3" height="1">Commande vidange bascule ciment 2
    <objPosition posX="0" posY="34"></objPosition>
				</textBox>
				<textBox width="5" height="1">Quick-fix pour le bug #1202 de vidange intempestive de la bascule adjuvant à destination de la bascule eau.
    <objPosition posX="12" posY="249"></objPosition>
				</textBox>
				<textBox width="3" height="1">Vibreur bascule anhydrite
    <objPosition posX="0" posY="304"></objPosition>
				</textBox>
				<textBox width="3" height="1">Vibreur bascule additionnelle
    <objPosition posX="0" posY="347"></objPosition>
				</textBox>
				<textBox width="3" height="1">Transfert bonbonne colorants
    <objPosition posX="0" posY="262"></objPosition>
				</textBox>
				<textBox width="4" height="1">Stabilité et commande vibreur TT ciment
    <objPosition posX="0" posY="129"></objPosition>
				</textBox>
				<textBox width="6" height="1">Note R.C. 03/11/2011 : Il me semble que cela permettait de vidanger des faibles contenus (ne permettant pas de dépasser le seuil vide).
    <objPosition posX="4" posY="167"></objPosition>
				</textBox>
				<textBox width="4" height="1">Commande vidange bascule compartiment adjuvant
    <objPosition posX="0" posY="362"></objPosition>
				</textBox>
				<textBox width="3" height="1">Commande Trémie tampon ciment
    <objPosition posX="0" posY="118"></objPosition>
				</textBox>
				<textBox width="2" height="1">Attendre départ tapis peseur si dest = Gra2
    <objPosition posX="7" posY="170"></objPosition>
				</textBox>
				<textBox width="4" height="2">.
.
.
Ce flag ne devrait passer à TRUE que si on a Attente_Autoris_Vidange_Colorant déjà à TRUE.
    <objPosition posX="3" posY="264"></objPosition>
				</textBox>
				<textBox width="2" height="2">On a dupliqué ce qui existe pour  "Defaut_balance_Anh".
    <objPosition posX="4" posY="340"></objPosition>
				</textBox>
				<textBox width="3" height="1">Commande vidange bascule anhydrite
    <objPosition posX="0" posY="272"></objPosition>
				</textBox>
				<textBox width="3" height="1">ASM - Dec2013- ARTF1347731
    <objPosition posX="23" posY="322"></objPosition>
				</textBox>
				<textBox width="3" height="1">ASM - Dec2013- ARTF1347731
    <objPosition posX="5" posY="327"></objPosition>
				</textBox>
				<textBox width="4" height="3">-


A la dernière phase de vidange, on veille à bien ouvrir la bascule pendant le retard de fermeture, même si le seuil vide avait déjà été atteint. Cela permet d'éviter des problèmes si on est instable à hauteur du seuil vide suite à la première phase de vidange. Ajout R.C. 07/09/2012 Vidange en plusieurs fois.
    <objPosition posX="10" posY="170"></objPosition>
				</textBox>
				<textBox width="3" height="1">Initialisation des variables locales de la section
    <objPosition posX="0" posY="0"></objPosition>
				</textBox>
				<textBox width="7" height="1">On ajoute le mode "ouverture maintenue" sur la bascule Anh en P857 (Modif. R.C. 22/03/2012). Historiquement, il n'y avait pas d'ouverture maintenue en fin de vidange.
    <objPosition posX="10" posY="296"></objPosition>
				</textBox>
				<textBox width="3" height="1">Note R.C. 03/11/2011 : Il me semble que cela permettait de vidanger des faibles contenus (ne permettant pas de dépasser le seuil vide).
    <objPosition posX="5" posY="9"></objPosition>
				</textBox>
				<textBox width="3" height="1">Vibreur bascule eau 1
    <objPosition posX="0" posY="193"></objPosition>
				</textBox>
				<textBox width="2" height="1">Attendre départ tapis peseur si dest = Gra1
    <objPosition posX="5" posY="170"></objPosition>
				</textBox>
				<textBox width="3" height="1">Stabilité bascule adjuvant
    <objPosition posX="0" posY="218"></objPosition>
				</textBox>
				<textBox width="3" height="1">Vibreur bascule ciment
    <objPosition posX="0" posY="61"></objPosition>
				</textBox>
				<textBox width="2" height="1">ASM-Nov 2013 - artf1347731
    <objPosition posX="8" posY="361"></objPosition>
				</textBox>
				<textBox width="2" height="1">ASM - Nov 2013- ARTF1347731
    <objPosition posX="3" posY="343"></objPosition>
				</textBox>
				<textBox width="2" height="2">On a dupliqué ce qui existe pour  "Defaut_balance_Anh".
    <objPosition posX="4" posY="53"></objPosition>
				</textBox>
				<textBox width="3" height="1">Transfert bonbonne ciment
    <objPosition posX="0" posY="85"></objPosition>
				</textBox>
				<textBox width="3" height="1">Commande vidange bascule Eau1
    <objPosition posX="0" posY="165"></objPosition>
				</textBox>
				<textBox width="5" height="1">Spécificité de la bascule Anh par rapport aux autres bascules : il y a un capteur "ouvert" que l'on utilise pour détecter la fin des séquences de vidange
    <objPosition posX="3" posY="289"></objPosition>
				</textBox>
				<textBox width="3" height="1">Commande vidange bascule adjuvant
    <objPosition posX="0" posY="227"></objPosition>
				</textBox>
				<textBox width="2" height="1">ASM-Nov 2013 - artf1347731
    <objPosition posX="3" posY="355"></objPosition>
				</textBox>
				<textBox width="2" height="1">Attendre départ tapis peseur si dest = Gra1
    <objPosition posX="5" posY="182"></objPosition>
				</textBox>
				<textBox width="2" height="2">On a dupliqué ce qui existe pour  "Defaut_balance_Anh".
    <objPosition posX="4" posY="26"></objPosition>
				</textBox>
				<textBox width="11" height="1">ATTENTION : la bacule ciment 2 ne peut pas être utilisée avec la bonbonne ciment ni avec la trémie tampon
    <objPosition posX="0" posY="144"></objPosition>
				</textBox>
				<textBox width="3" height="1">Vibreur bascule ciment 2
    <objPosition posX="0" posY="73"></objPosition>
				</textBox>
				<textBox width="3" height="1">Commande vidange bascule Eau2
    <objPosition posX="0" posY="177"></objPosition>
				</textBox>
				<textBox width="5" height="1">Reset de la demande d'init :
    <objPosition posX="11" posY="4"></objPosition>
				</textBox>
				<textBox width="2" height="1">Attendre départ tapis peseur si dest = Gra2
    <objPosition posX="7" posY="182"></objPosition>
				</textBox>
				<textBox width="2" height="1">ASM - Dec/2013 - vers Eau 1 &amp; tapis/bascule
    <objPosition posX="4" posY="315"></objPosition>
				</textBox>
				<textBox width="5" height="1">Quick-fix pour le bug #1202 de vidange intempestive de la bascule adjuvant à destination de la bascule eau.
    <objPosition posX="7" posY="228"></objPosition>
				</textBox>
				<textBox width="3" height="1">Commande vidange bascule ciment
    <objPosition posX="0" posY="6"></objPosition>
				</textBox>
				<textBox width="3" height="1">Vibreur bascule eau 2
    <objPosition posX="0" posY="205"></objPosition>
				</textBox>
			</networkLD>
		</LDSource>
	</program>
	<program>
		<identProgram name="440_Rampe_Eau_Aspi" type="section" task="MAST"></identProgram>
		<STSource>(*
on démarre ces equipements en même temps que la vidange Gra ou Cim.
On défini un temps d'attente apres le début de la vidange Gra.
Les systèmes "Rampe à Eau" et "Aspirateur" ont un fonctionnement identique. 
*)

(* Initialisation des variables locales de la section *)
IF Rampe_Eau_Aspi_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Rampe_Eau_Aspi_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(****************** ASPIRATEUR ******************************)
(*TON Marche*)
TON_Demarrage_ASPI (IN := Vid_Gra_En_Cours,
		PT := Conf_tps_retard_Aspi,
		ET =&gt; TON_Demarrage_ASPI_ET);
(*TOF Arret*)
TOF_Arret_ASPI (IN := Vid_Cim1_En_Cours
			OR Vid_Cim2_En_Cours 
			OR TON_Demarrage_ASPI.Q,
		PT := Conf_tps_retard_Aspi,
		ET =&gt; TOF_Arret_ASPI_ET);
(* Commande *)
Cde_Marche_Aspi := TON_Demarrage_ASPI.Q OR Vid_Cim1_En_Cours OR Vid_Cim2_En_Cours OR TOF_Arret_ASPI.Q; 
(*Alarme*)
TON_Discordance_ASPI (IN := (Cde_Marche_Aspi AND NOT Info_Marche_Aspi) and Conf_presence_capt_Aspi
			OR
			(Arret_Aspi AND Info_Marche_Aspi) and Conf_presence_capt_Aspi ,
		PT := Conf_tps_rep_Aspi,
		ET =&gt; TON_DISCORD_ASPI_ET);
IF TON_Discordance_ASPI.Q THEN
	Alarme_Aspi := 1;
END_IF;


(****************** RAMPE ******************************)
(* TON Marche*)
TON_Demarrage_RAMPE (IN := Vid_Gra_En_Cours, 
		PT := Conf_tps_retard_RAMPE,
		ET =&gt; TON_Demarrage_RAMPE_ET);
(*TOF Arret*)
TOF_Arret_RAMPE (IN := Vid_Cim1_En_Cours 
			OR Vid_Cim2_En_Cours 
			OR TON_Demarrage_RAMPE.Q,
		PT := Conf_tps_retard_RAMPE,
		ET =&gt; TOF_Arret_RAMPE_ET);
(*Commande*)
Cde_Marche_RAMPE := TON_Demarrage_RAMPE.Q OR Vid_Cim1_En_Cours OR Vid_Cim2_En_Cours OR TOF_Arret_RAMPE.Q; 
(*Alarme*)
TON_Discordance_RAMPE (IN := (Cde_Marche_RAMPE AND NOT Info_Marche_RAMPE) and Conf_presence_capt_RAMPE
			OR
			(Arret_RAMPE AND Info_Marche_RAMPE) and Conf_presence_capt_RAMPE ,
		PT := Conf_tps_rep_RAMPE,
		ET =&gt; TON_Discordance_RAMPE_ET);
IF TON_Discordance_RAMPE.Q THEN
	Alarme_RAMPE := 1;
END_IF;


(****************** SIMULATION ******************************)
IF Entrees_Simulees THEN
	Info_Marche_ASPI := DO_Vacuum_Machine_ON ;
	Info_Marche_RAMPE := DO_Water_Ramp_ON ;
END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="450_Malaxeur1" type="section" task="MAST"></identProgram>
		<ILSource>
(* Initialisation des variables locales de la section *)
LD Malaxeur1_DEM_INIT
ST Malaxeur1_INIT_EN_COURS
JMPCN Init_Malaxeur1__Fin
Init_Malaxeur1:

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	LD TRUE
	R Malaxeur1_DEM_INIT (* L'init de la section a bien été prise en compte. *)
Init_Malaxeur1__Fin:


LD index_sortie_buffer 
ST suite_index_malaxeur1



debut_malaxeur_1:


(* Extraction de mots d'etat à partir du compte-rendu de gâchée *)
WORD_TO_BIT (IN := TG_OUT[suite_index_malaxeur1].CR_Etat_Gachee,
		BIT8 =&gt; Introduction_terminee_Mal1,
		BIT11 =&gt; Gachee_terminee_Mal1) 
WORD_TO_BIT (IN := TG_OUT[suite_index_malaxeur1].CR_Etat_Malax1,
		BIT0 =&gt; Malaxage_encours_Mal1,
		BIT1 =&gt; Malaxage_termine_Mal1,
		BIT2 =&gt; Pret_pour_vidange_Mal1,
		BIT3 =&gt; Vidange_terminee_Mal1) 


(* Mise à jour du klaxon de fin de prod. La nouvelle variable ne dépend *)
(* pas de l'utilisation du wattmètre de plus, cette variable est mise à jour en *)
(* utilisant le même index que "vidange terminé". *)
(* Ainsi, on s'assure de le MAJ de ces variable sur la même base et dans le même *)
(* cycle : évitant la mise à 1 du klaxon 2 fois sur la dernière gachée d'une *)
(* production enchainée.*)
(* Ajout M.D. 04/10/2008 (PR610) *)
WORD_TO_BIT (IN := TG_IN[suite_index_malaxeur1].Proprietes_gachee,
		BIT0 =&gt; Klaxon_fin_prod_mal1)


LD suite_index_malaxeur1
ST NG_Mal1 (* Ajout M.D. 01/09/2008 BC-Mix a besoin de connaitre le numéro de la gachée *)
(* dans le malaxeur. *)


(* Arrêt du Malaxeur 1 (Type "Roumanie") *)
(* Modif M.D. 28/02/2008 : On déplace cette partie de code (initialement en fin de *)
(* section) car il arrivait que le bit "vidange_terminee_malax1" ne soit pas vu à 1. *)
(* Modif M.D. 20/01/2009 P700 : Différenciation entre les arrêts type "Roumanie" et type "Inde" *)

LD Info_malaxeur1_en_marche
AND Info_Plant_In_Auto
AND Conf_Mixer_RO_Stop
ANDN Vidange_en_cours_Mal1
ANDN Malaxage_encours_Mal1
ANDN Conf_inhib_arret_auto_mals
ST TON_ARRET_MAL1.IN
CAL TON_ARRET_MAL1 (PT := Conf_tps_av_arret_mals,
			Q =&gt; Auto_arret_mal1_RO) 



(* Gestion des feux rouges Malaxeur 1 *)
(* Modif M.D. 28/02/2008 : Modification du fonctionnement *)
(* Modif M.D. 01/10/2008 : On utilise "Klaxon_fin_prod_mal1" à la place de "Derniere_gachee_malaxeur1" *)

LD Info_Plant_In_Auto
ANDN Manu_Logiciel
AND Klaxon_fin_prod_mal1
AND Vidange_terminee_Mal1
AND Bit_validation_trappe1_malax1
ST TOF_FEU_TRAPPE1_MAL1.IN
CAL TOF_FEU_TRAPPE1_MAL1 (PT := Conf_temps_marche_feu_rouge)
LD TOF_feu_trappe1_mal1.Q
ST cde_feu_rouge_trappe1_Mal1

LD Info_Plant_In_Auto
ANDN Manu_Logiciel
AND Klaxon_fin_prod_mal1
AND Vidange_terminee_Mal1
AND Bit_validation_trappe2_malax1
ST TOF_FEU_TRAPPE2_MAL1.IN
CAL TOF_FEU_TRAPPE2_MAL1 (PT := Conf_temps_marche_feu_rouge)
LD TOF_feu_trappe2_mal1.Q
ST cde_feu_rouge_trappe2_Mal1 



(* Gestion du klaxon de fin de gachée *)
(* Modif M.D. 04/10/2008 : On modifie le fonctionnement Klaxon : sur la dernière *)
(* gachée enchainée, le klaxon était mis en route 2 fois (une fois à la fin de la *)
(* gâchée d'avant, et une fois à la fin de la derniere gachée). On utilise ici une *)
(* nouvelle information "dernière gachée" calculée spécifiquement pour le klaxon. *)
(* Modif M.D. 21/10/2009 : On désactive ce code *)
(*

LD Info_Plant_In_Auto
ANDN Manu_Logiciel
AND Klaxon_fin_prod_mal1
AND vidange_terminee_malax1
AND Bit_validation_trappe1_malax1
ST TOF_klaxon_TRAPPE1_MAL1.IN
CAL TOF_klaxon_TRAPPE1_MAL1 (PT := Conf_klaxon_tps_marche)
LD TOF_klaxon_trappe1_mal1.Q
ST cde_klaxon_trappe1_Mal1

LD Info_Plant_In_Auto
ANDN Manu_Logiciel
AND Klaxon_fin_prod_mal1
AND vidange_terminee_malax1
AND Bit_validation_trappe2_malax1
ST TOF_klaxon_TRAPPE2_MAL1.IN
CAL TOF_klaxon_TRAPPE2_MAL1 (PT := Conf_klaxon_tps_marche)
LD TOF_klaxon_trappe2_mal1.Q
ST cde_klaxon_trappe2_Mal1

*)



(* Exclusion des trappes communes de 2 malaxeurs *)

(* Modif R.C. 02/10/2003 Point Silicomp P349 *)
LD FALSE
OR (	Bit_validation_trappe1_malax1
	AND Bit_validation_trappe1_malax2
	AND conf_trappes1_communes
)
OR (	Bit_validation_trappe2_malax1
	AND Bit_validation_trappe2_malax2
	AND conf_trappes2_communes
)
ST exclusion_trappes_malaxeurs

LD Pret_pour_vidange_Mal1 
ANDN (	Vidange_en_cours_Mal2
	AND exclusion_trappes_malaxeurs
)
ST Vidange_en_cours_Mal1




(* Si vidange terminée pour cette gachée recherche de la gachée suivante *)

GET_BIT (IN := TG_IN[suite_index_malaxeur1].mot_destination, NO := 2) (* "Destination Malaxeur 1" *)
ST Extract_dest_Mal1
AND (	Vidange_terminee_Mal1
	OR Gachee_terminee_Mal1
)
ORN Extract_dest_Mal1
JMPCN malaxeur1_1
	 
	LD suite_index_malaxeur1
	ADD 1
	ST suite_index_malaxeur1
	LE 4
	JMPC malaxeur1_2
		LD 1
		ST suite_index_malaxeur1
	malaxeur1_2:

	LD suite_index_malaxeur1
	EQ index_entree_buffer
	JMPC pas_de_malaxage_encours_mal1
	
	JMP debut_malaxeur_1
	
malaxeur1_1:		


(* Déclaration du malaxage en cours *)
(* + Lancement du chrono de malaxage *)
(* Modif M.D. xx/01/2011 : On lance le chrono de malaxage lorsque les introductions *)
(*   indiquées par BC-Mix (dans le Code_debut_malaxage) sont terminées. *)
(* Modif R.C. 03/02/2012 : Suite à des problèmes d'interaction entre les 2 malaxeurs dans *)
(*   certains cas, liés à la modification du xx/01/2011 : *)
(*   - On vérifie bien que le numéro du malaxeur correspond. *)
(*   - On utilise TG_OUT[].CR_Etat_vidange_Dry au lieu d'utiliser la valeur correspondante *)
(*   de la gâchée en cours d'introduction. (On fait cela pour être sûr qu'on utilise la statut *)
(*   de la bonne gâchée.) *)

(* ASM : Pour test bascule ADD destination autre que Malax/Camion, ex:skip transfert : ecriture code synchro *)
	LD Conf_basc_add_dest 
		GT 4
	JMPCN attente_supp_code_synchro_bcmix
	LD 7
	ST TG_IN[suite_index_malaxeur1].Code_debut_malaxage
	attente_supp_code_synchro_bcmix:
(* ASM : Pour test bascule ADD destination skip transfert : ecriture code synchro *)

LD Extract_dest_Mal1
AND (	TG_OUT[suite_index_malaxeur1].CR_Etat_vidange_Dry
	AND TG_IN[suite_index_malaxeur1].Code_debut_malaxage
	EQ TG_IN[suite_index_malaxeur1].Code_debut_malaxage
)
AND (	TG_IN[suite_index_malaxeur1].CR_code_fin
	EQ TG_IN[suite_index_malaxeur1].Numero_gachee
) (* On vérifie que la TG est bien remplie pour être sur que "Code_debut_malaxage" *)
	(* soit bien à la valeur requise. *)
ST Depart_malax1
ANDN Malaxage_termine_Mal1
ANDN Malaxage_encours_Mal1 (* On utilise cette condition pour ne faire la déclaration *)
	(* "malaxage en cours" qu'une seule fois. *)
JMPCN pas_de_malaxage_encours_mal1
	
	(* Dire malaxage en cours *)
	LD TG_OUT[suite_index_malaxeur1].CR_Etat_Malax1
	OR 16#0001
	AND 16#fff1
	ST TG_OUT[suite_index_malaxeur1].CR_Etat_Malax1
	
	(* Initialiser les chronomètres de malaxage *)
	(* Modif R.C. 06/02/2012 Etait initialisé sur un front sur "Malaxage_encours_Mal1" *)
	(*   ce qui posait problème car cette variable peut osciller entre TRUE et FALSE *)
	(*   lorsqu'on utilise 2 malaxeurs (lié à la manière dont sont scrutés les pointeurs *)
	(*   de gâchée dans cette section) *)
	LD 0
	ST temps_malax1
	LD 0
	ST Temps_malax1_avec_prod_dif
	
pas_de_malaxage_encours_mal1:



(* Lecture du temps mini de malaxage dans la table de gachée *)
LD TG_IN[suite_index_malaxeur1].Temps_mini_malax
INT_TO_WORD
ST mot1_temps_mini_malaxage1
LD TG_IN[suite_index_malaxeur1].Temps_mini_malax_suite
INT_TO_WORD
ST mot2_temps_mini_malaxage1
LD mot1_temps_mini_malaxage1
WORD_AS_TIME mot2_temps_mini_malaxage1
ST Temps_mini_malaxage1

(* Lecture de la consigne puissance malaxeur dans la table de gachée *)
LD TG_IN[suite_index_malaxeur1].Val_wathmetre
ST Valeur_wattmetre1

(* Lecture du temps de malaxage dans la table de gachée *)
LD TG_IN[suite_index_malaxeur1].Temps_malax
INT_TO_WORD
ST mot1_temps_malaxage1
LD TG_IN[suite_index_malaxeur1].Temps_malax_suite 
INT_TO_WORD
ST mot2_temps_malaxage1
LD mot1_temps_malaxage1
WORD_AS_TIME mot2_temps_malaxage1
ST Temps_malaxage1

(* Lecture du code de plasticité *)
LD TG_IN[suite_index_malaxeur1].Code_plasticite 
WORD_TO_INT
ST code_plasticite_malax1

(* Lecture du bit dernière gachée pour ouverture de la trappe le temps grand ouvert *)
LD TG_IN[suite_index_malaxeur1].Proprietes_gachee
AND 16#0001 (* Dernière gâchée de la fabrication *)
NE 0
AND conf_mal1_presence_wattmetre
ST Derniere_gachee_malaxeur1



(* Gestion des tempos de malaxage *)

(* - Arret de la tempo malaxage pendant l'intro différé *)
(* Modif M.D. xx/01/2011 : Utilisation de la sequence de vidange pour *)
(* doser les adjuvants différés. *)
LD Malaxage_encours_Mal1
AND destination_malaxeur_1
AND (	Dosage_ppe_en_cours_Section392
	OR Vid_Adj_C2_En_Cours
)
ST pause_temps_malaxage

(* - Lancement des tempos de malaxage *)
CAL TON_malaxage_mal1 (IN := Malaxage_encours_Mal1,
			PT := Temps_malaxage1,
			PAUSE := pause_temps_malaxage)

LD Malaxage_encours_Mal1
AND util_watt_mal1_plasticite
ST TON_mini_malaxage_mal1.IN
CAL TON_mini_malaxage_mal1 (PT := Temps_mini_malaxage1,
			PAUSE := pause_temps_malaxage) 

(* - Vérification puissance absorbée et stabilisation *)
LD TON_mini_malaxage_mal1.Q
AND (	valeur_instantanee_wattmetre1
	LE Valeur_wattmetre1
)
ST TON_wattmetre_mal1.IN
CAL TON_wattmetre_mal1 (PT := Conf_mal1_tps_stab_watt_plast) 

(* - Calcul du temps de malaxage pour le compte-rendu, et l'affichage sur le synoptique du malaxeur *)
LD Malaxage_encours_Mal1
AND top_sec
ANDN pause_temps_malaxage (* Modif M.D. 11/07/2003 *)
JMPCN suite_malaxage1
	LD temps_malax1
	ADD 1
	ST temps_malax1
suite_malaxage1:

(* - Calcul du temps de malaxage pour le départ des produits différés *)
LD Malaxage_encours_Mal1
AND top_sec
JMPCN suite_malaxage11
	LD Temps_malax1_avec_prod_dif
	ADD 1
	ST Temps_malax1_avec_prod_dif
suite_malaxage11:



(* Déclaration de la fin du malaxage *)
(* On déclare le malaxage terminé si l'intro différée est terminée, *)
(* et : *)
(*	- que la "tempo de malaxage" est terminée *)
(*	- ou que la "tempo mini de malaxage" est terminée et que puissance malaxeur est inférieure au seuil vide *)
(* Modif M.D. xx/01/11 : Les différés sont integrés à la vidange, on vérifie que ceux-ci sont *)
(* terminés pour déclarer la fin du le malaxage. *)
(* XX/12/2015 - P868C - ARTF1346498 *)
LD Malaxage_encours_Mal1
ANDN Info_Gate_Mode_Auto
AND Bit_validation_camion_mal1
AND (	TRUE
	AND(	Bit_validation_trappe1_malax1
		ANDN Info_trappe1_fermee_mal1
	)
	OR(	Bit_validation_trappe2_malax1
		ANDN Info_trappe2_fermee_mal1
	)
)
JMPC malaxage1_termine

LD Bit_validation_camion_mal1
AND Introduction_terminee_Mal1 
AND (Info_Gate_Mode_Auto
	OR Cde_interdiction_trappes_mal1 (*ALE 28/11/2016 résoud le problème de trappe bloquée en manu*)
	)
AND (	Bit_validation_trappe1_malax1
	OR Bit_validation_trappe2_malax1
)
AND (	TON_wattmetre_mal1.Q
	OR TON_malaxage_mal1.Q
)
JMPCN pas_de_vidange_mal1
malaxage1_termine: 

	(* Dire malaxage terminee et Dire vidange en cours *)
	LD TG_OUT[suite_index_malaxeur1].CR_Etat_Malax1
	AND 16#fff6
	OR 16#0006
	ST TG_OUT[suite_index_malaxeur1].CR_Etat_Malax1
	
	LD TG_OUT[suite_index_malaxeur1].CR_Etat_Gachee
	OR 16#0200
	ST TG_OUT[suite_index_malaxeur1].CR_Etat_Gachee

	(* Ecriture du temps de malaxage dans le compte-rendu *)
	LD temps_malax1
	ST TG_OUT[suite_index_malaxeur1].CR_temps_malaxage
	
	LD 0
	ST temps_malax1
	LD 0
	ST Temps_malax1_avec_prod_dif
	
	LD valeur_instantanee_wattmetre1
	ST TG_OUT[suite_index_malaxeur1].CR_val_wathmetre

pas_de_vidange_mal1:



(* Lecture de la séquence de trappe (dans "Malax1") selon la plasticité du béton (ferme / plastique / très plastique / fluide) *)

LD code_plasticite_malax1
EQ 1
JMPC ferme_malax1
LD code_plasticite_malax1
EQ 2
JMPC plastique_malax1
LD code_plasticite_malax1
EQ 3
JMPC tres_plastique_malax1
LD code_plasticite_malax1
EQ 4
JMPC fluide_malax1
JMP fin_plasticité_mal1 (* (Sécurité en cas de code mauvais) *)

ferme_malax1:
	LD Malax_ferme
	ST Malax1
JMP fin_plasticité_mal1 
plastique_malax1:
	LD Malax_plastique
	ST Malax1
JMP fin_plasticité_mal1
tres_plastique_malax1:
	LD Malax_tres_plast
	ST Malax1
JMP fin_plasticité_mal1
fluide_malax1:
	LD Malax_fluide
	ST Malax1
fin_plasticité_mal1:



(* Détermination de l'état "Ouvert"/"Fermé" de la trappe suivant la trappe utilisée *)

LD TRUE
AND (	Bit_validation_trappe1_malax1
	AND Info_trappe1_ouverte_mal1
)
OR (	Bit_validation_trappe2_malax1
	AND Info_trappe2_ouverte_mal1
)
ST trappe_mal1_ouverte

LD TRUE
AND (	Bit_validation_trappe1_malax1
	AND Info_trappe1_fermee_mal1
)
OR (	Bit_validation_trappe2_malax1
	AND Info_trappe2_fermee_mal1
)
ST trappe_mal1_fermee


(* Bloc fonction pour la séquence de vidange *)

CAL Vidange_malaxeur1 (VID_MALA := Vidange_en_cours_Mal1,
			MALAX := Malax1,
			GD_OUV := Conf_malaxeur1_tps_mal_gd_ouvert,
			TPS_FER := Conf_malaxeur1_tps_fermeture,
			DEF_MAL := Defaut_Mal1,
			TRAP_OUV := trappe_mal1_ouverte,
			TRAP_FER := trappe_mal1_fermee,
			AUTO_TRA := Info_Gate_Mode_Auto,
			INIT := Malaxeur1_INIT_EN_COURS,
			S_VIDE := Vid_Mal1_OK,
			DER_GACH := Derniere_gachee_malaxeur1,
			CFG_Wm := conf_mal1_presence_wattmetre)
LD Vidange_malaxeur1.ouv_trap
ST ouverture_trappe_mal1
LD Vidange_malaxeur1.fer_trap
ST Fermeture_Mal1
LD Vidange_malaxeur1.fin_ouv
ST fin_malaxeur1_ouvert
LD Vidange_malaxeur1.def_vid
AND Vidange_en_cours_Mal1 (* Modif M.D. 19/05/2005 : On masque l'alarme si on n'est pas en cours de vidange (Problème vu à HYERES) *)
ST Defaut_ouv_trappe_Mal1
LD Vidange_malaxeur1.fin_vid
AND Vidange_en_cours_Mal1
JMPCN pas_vidange_terminee_mal1
vidange_mal1_termine:
	
	(* Déclarer la vidange terminée *)
	LD TG_OUT[suite_index_malaxeur1].CR_Etat_Malax1
	AND 16#fffb
	OR 16#0008
	ST TG_OUT[suite_index_malaxeur1].CR_Etat_Malax1
	
	(* Déclarer la vidange terminée + la gâchée terminée *)
	LD TG_OUT[suite_index_malaxeur1].CR_Etat_Gachee
	OR 16#0C00
	ST TG_OUT[suite_index_malaxeur1].CR_Etat_Gachee
	
	LD TRUE 
	S declaration_malaxeur_1_vide

	(* XX/11/2013 - P864 - artf1159801 *)
	LD TG_IN[suite_index_malaxeur1].Proprietes_gachee.0 (*derniere gâchée*)
	JMPCN pas_vidange_terminee_mal1

	LD TG_IN[suite_index_malaxeur1].Proprietes_gachee
	OR 16#0004
	ST TG_OUT[suite_index_malaxeur1].CR_Etat_Gachee_2
	
pas_vidange_terminee_mal1:



(* Anticipation (du départ du skip ou du tapis de transfert) *)
(* =&gt; On lance le transfert des granulats un certain temps (= "temps d'anticipation") avant *)
(* la fin de vidange théorique du malaxeur. *)

(* - Calcul du temps théorique avant la fin de vidange du malaxeur *)
(* Note : La fin de vidange théorique du malaxeur est déterminée en sommant les *)
(* temps des séquences de trappes + le temps "grand ouvert" + le temps maximal *)
(* de fermeture de la trappe. *)

LD Malax1[1]
ADD Malax1[2]
ADD Malax1[3]
ADD Malax1[4]
ADD Malax1[5]
ADD Malax1[6]
ADD Conf_malaxeur1_tps_mal_gd_ouvert
ADD Conf_malaxeur1_tps_fermeture
ST Temps_vidange_malax1
CAL TON_tps_vidange (IN := Vidange_en_cours_Mal1,
			PT := Temps_vidange_malax1)


(* - Anticipation skip possible *)

LD Temps_vidange_malax1
ADD t#2s0ms
SUB TON_tps_vidange.ET
LE Conf_skip_tps_bas_attente
ST anticipation_skip


(* - Anticipation tapis transfert *)

LD Conf_tap_trans_tps_vidange 
SUB t#1s0ms (* (Sécurité d'1s en cas de défaut du malaxeur) *)
ST tps_vidange_tapis_transfert

LDN malaxeur_1_vide
AND Pesee_Gra1_terminee
ANDN Ordre_intro_Gra1
AND (
	LDN Conf_granulat2_pres_balance
	OR (	Conf_granulat2_pres_balance
		AND Pesee_Gra2_terminee
		ANDN Ordre_intro_Gra2
	)
)
AND Conf_tapis_trans_anticipation
AND Conf_tapis_transfert
ANDN Conf_skip_transfert
ANDN Conf_TT_granulat
ANDN Introduction_Gra_terminee
AND (	Temps_vidange_malax1
	SUB TON_tps_vidange.ET
	LE Conf_tap_trans_tps_anticipation
)
ST TP_anticipation_tapis_trans.IN

CAL TP_anticipation_tapis_trans (PT := tps_vidange_tapis_transfert,
				Q =&gt; anticipation_vidange_dans_tapis)
</ILSource>
	</program>
	<program>
		<identProgram name="460_Malaxeur2" type="section" task="MAST"></identProgram>
		<ILSource>
(* Initialisation des variables locales de la section *)
LD Malaxeur2_DEM_INIT
ST Malaxeur2_INIT_EN_COURS
JMPCN Init_Malaxeur2__Fin
Init_Malaxeur2:

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	LD TRUE
	R Malaxeur2_DEM_INIT (* L'init de la section a bien été prise en compte. *)
Init_Malaxeur2__Fin:


LD index_sortie_buffer 
ST suite_index_malaxeur2



debut_malaxeur_2:


(* Extraction de mots d'etat à partir du compte-rendu de gâchée *)
WORD_TO_BIT (IN := TG_OUT[suite_index_malaxeur2].CR_Etat_Gachee,
		BIT8 =&gt; Introduction_terminee_Mal2, 
		BIT11 =&gt; Gachee_terminee_Mal2)
WORD_TO_BIT (IN := TG_OUT[suite_index_malaxeur2].CR_Etat_Malax2,
		BIT0 =&gt; Malaxage_encours_Mal2,
		BIT1 =&gt; Malaxage_termine_Mal2,
		BIT2 =&gt; Pret_pour_vidange_Mal2,
		BIT3 =&gt; Vidange_terminee_Mal2)


(* Mise à jour du klaxon de fin de prod. La nouvelle variable ne dépend *)
(* pas de l'utilisation du wattmètre de plus, cette variable est mise à jour en *)
(* utilisant le même index que "vidange terminé". *)
(* Ainsi, on s'assure de le MAJ de ces variable sur la même base et dans le même *)
(* cycle : évitant la mise à 1 du klaxon 2 fois sur la dernière gachée d'une *)
(* production enchainée.*)
(* Ajout M.D. 04/10/2008 (PR610) *)
WORD_TO_BIT (IN := TG_IN[suite_index_malaxeur2].Proprietes_gachee,
		BIT0 =&gt; Klaxon_fin_prod_mal2)


LD suite_index_malaxeur2
ST NG_Mal2 (* Ajout M.D. 01/09/2008 BC-Mix a besoin de connaitre le numéro de la gachée *)
(* dans le malaxeur. *)


(* Arrêt du Malaxeur 2 (Type "Roumanie") *)
(* Modif M.D. 28/02/2008 : On déplace cette partie de code (initialement en fin de *)
(* section) car il arrivait que le bit "vidange_terminee_malax1" ne soit pas vu à 1. *)
(* Modif M.D. 20/01/2009 P700 : Différenciation entre les arrêts type "Roumanie" et type "Inde" *)

LD Info_malaxeur2_en_marche
AND Info_Plant_In_Auto
AND Conf_Mixer_RO_Stop
ANDN Vidange_en_cours_Mal2
ANDN Malaxage_encours_Mal2
ANDN Conf_inhib_arret_auto_mals (* Ajout R.C. 06/02/2012 : cette condition manquait par rapport à Mal1 *)
ST TON_ARRET_MAL2.IN
CAL TON_ARRET_MAL2 (PT := Conf_tps_av_arret_mals,
			Q =&gt; Auto_arret_mal2_RO)



(* Gestion des feux rouges Malaxeur 2 *)
(* Modif M.D. 28/02/2008 : Modification du fonctionnement *)
(* Modif M.D. 01/10/2008 : On utilise "Klaxon_fin_prod_mal2" à la place de "Derniere_gachee_malaxeur1" *)

LD Info_Plant_In_Auto
ANDN Manu_Logiciel
AND Klaxon_fin_prod_mal2
AND Vidange_terminee_Mal2
AND Bit_validation_trappe1_malax2
ST TOF_FEU_TRAPPE1_MAL2.IN
CAL TOF_FEU_TRAPPE1_MAL2 (PT := Conf_temps_marche_feu_rouge)
LD TOF_feu_trappe1_mal2.Q
ST cde_feu_rouge_trappe1_Mal2

LD Info_Plant_In_Auto
ANDN Manu_Logiciel
AND Klaxon_fin_prod_mal2
AND Vidange_terminee_Mal2
AND Bit_validation_trappe2_malax2
ST TOF_FEU_TRAPPE2_MAL2.IN
CAL TOF_FEU_TRAPPE2_MAL2 (PT := Conf_temps_marche_feu_rouge)
LD TOF_feu_trappe2_mal2.Q
ST cde_feu_rouge_trappe2_Mal2



(* Gestion du klaxon de fin de gachée *)
(* Modif M.D. 04/10/2008 : On modifie le fonctionnement Klaxon : sur la dernière *)
(* gachée enchainée, le klaxon était mis en route 2 fois (une fois à la fin de la *)
(* gâchée d'avant, et une fois à la fin de la derniere gachée). On utilise ici une *)
(* nouvelle information "dernière gachée" calculée spécifiquement pour le klaxon. *)
(* Modif M.D. 21/10/2009 : On désactive ce code *)
(*

LD Info_Plant_In_Auto
ANDN Manu_Logiciel
AND Klaxon_fin_prod_mal2
AND vidange_terminee_malax2
AND Bit_validation_trappe1_malax2
ST TOF_klaxon_TRAPPE1_MAL2.IN
CAL TOF_klaxon_TRAPPE1_MAL2 (PT := Conf_klaxon_tps_marche)
LD TOF_klaxon_trappe1_mal2.Q
ST cde_klaxon_trappe1_Mal2

LD Info_Plant_In_Auto
ANDN Manu_Logiciel
AND Klaxon_fin_prod_mal2
AND vidange_terminee_malax2
AND Bit_validation_trappe2_malax2
ST TOF_klaxon_TRAPPE2_MAL2.IN
CAL TOF_klaxon_TRAPPE2_MAL2 (PT := Conf_klaxon_tps_marche)
LD TOF_klaxon_trappe2_mal2.Q
ST cde_klaxon_trappe2_Mal2

*)



(* Exclusion des trappes communes de 2 malaxeurs *)

LD Pret_pour_vidange_Mal2
ANDN (	Vidange_en_cours_Mal1
	AND exclusion_trappes_malaxeurs
)
ST Vidange_en_cours_Mal2




(* Si vidange terminée pour cette gachée recherche de la gachée suivante *)

GET_BIT (IN := TG_IN[suite_index_malaxeur2].mot_destination, NO := 3) (* "Destination Malaxeur 2" *)
ST Extract_dest_Mal2 
AND (	Vidange_terminee_Mal2
	OR Gachee_terminee_Mal2
)
ORN Extract_dest_Mal2
JMPCN malaxeur2_1
	
	LD suite_index_malaxeur2
	ADD 1
	ST suite_index_malaxeur2
	LE 4
	JMPC malaxeur2_2
		LD 1
		ST suite_index_malaxeur2
	malaxeur2_2:

	LD suite_index_malaxeur2
	EQ index_entree_buffer
	JMPC pas_de_malaxage_encours_mal2
	
	JMP debut_malaxeur_2
	
malaxeur2_1:		


(* Déclaration du malaxage en cours *)
(* + Lancement du chrono de malaxage *)
(* Modif M.D. xx/01/2011 : On lance le chrono de malaxage lorsque les introductions *)
(* indiquées par BC-Mix (dans le Code_debut_malaxage) sont terminées. *)
(* Modif R.C. 03/02/2012 : Suite à des problèmes d'interaction entre les 2 malaxeurs dans *)
(*   certains cas, liés à la modification du xx/01/2011 : *)
(*   - On vérifie bien que le numéro du malaxeur correspond. *)
(*   - On utilise TG_OUT[].CR_Etat_vidange_Dry au lieu d'utiliser la valeur correspondante *)
(*   de la gâchée en cours d'introduction. (On fait cela pour être sûr qu'on utilise la statut *)
(*   de la bonne gâchée.) *)
LD Extract_dest_Mal2
AND (	TG_OUT[suite_index_malaxeur2].CR_Etat_vidange_Dry
	AND TG_IN[suite_index_malaxeur2].Code_debut_malaxage
	EQ TG_IN[suite_index_malaxeur2].Code_debut_malaxage
)
AND (	TG_IN[suite_index_malaxeur2].CR_code_fin
	EQ TG_IN[suite_index_malaxeur2].Numero_gachee
) (* On vérifie que la TG est bien remplie pour être sur que "Code_debut_malaxage" *)
	(* soit bien à la valeur requise. *)
ST Depart_malax2
ANDN Malaxage_termine_Mal2
ANDN Malaxage_encours_Mal2 (* On utilise cette condition pour ne faire la déclaration *)
	(* "malaxage en cours" qu'une seule fois. *)
JMPCN pas_de_malaxage_encours_mal2

	(* Dire malaxage en cours *)
	LD TG_OUT[suite_index_malaxeur2].CR_Etat_Malax2
	OR 16#0001
	AND 16#fff1
	ST TG_OUT[suite_index_malaxeur2].CR_Etat_Malax2
	
	(* Initialiser les chronomètres de malaxage *)
	(* Modif R.C. 06/02/2012 Etait initialisé sur un front sur "Malaxage_encours_Mal1" *)
	(*   ce qui posait problème car cette variable peut osciller entre TRUE et FALSE *)
	(*   lorsqu'on utilise 2 malaxeurs (lié à la manière dont sont scrutés les pointeurs *)
	(*   de gâchée dans cette section) *)
	LD 0
	ST temps_malax2
	LD 0
	ST Temps_malax2_avec_prod_dif
	
pas_de_malaxage_encours_mal2:



(* Lecture du temps mini de malaxage dans la table de gachée *)
LD TG_IN[suite_index_malaxeur2].Temps_mini_malax
INT_TO_WORD
ST mot1_temps_mini_malaxage2
LD TG_IN[suite_index_malaxeur2].Temps_mini_malax_suite
INT_TO_WORD
ST mot2_temps_mini_malaxage2
LD mot1_temps_mini_malaxage2
WORD_AS_TIME mot2_temps_mini_malaxage2
ST Temps_mini_malaxage2

(* Lecture de la consigne puissance malaxeur dans la table de gachée *)
LD TG_IN[suite_index_malaxeur2].Val_wathmetre
ST Valeur_wattmetre2

(* Lecture du temps de malaxage dans la table de gachée *)
LD TG_IN[suite_index_malaxeur2].Temps_malax
INT_TO_WORD
ST mot1_temps_malaxage2
LD TG_IN[suite_index_malaxeur2].Temps_malax_suite
INT_TO_WORD
ST mot2_temps_malaxage2
LD mot1_temps_malaxage2
WORD_AS_TIME mot2_temps_malaxage2
ST Temps_malaxage2

(* Lecture du code de plasticité *)
LD TG_IN[suite_index_malaxeur2].Code_plasticite
WORD_TO_INT
ST code_plasticite_malax2

(* Lecture du bit dernière gachée pour ouverture de la trappe le temps grand ouvert *)
LD TG_IN[suite_index_malaxeur2].Proprietes_gachee
AND 16#0001 (* Dernière gâchée de la fabrication *) 
NE 0
AND conf_mal2_presence_wattmetre
ST Derniere_gachee_malaxeur2



(* Gestion des tempos de malaxage *)

(* - Arret de la tempo malaxage pendant l'intro différé *)
(* Modif M.D. xx/01/2011 : Utilisation de la sequence de vidange pour *)
(* doser les adjuvants différés. *)
LD Malaxage_encours_Mal2
AND destination_malaxeur_2
AND (	Dosage_ppe_en_cours_Section392
	OR Vid_Adj_C2_En_Cours
)
ST pause_temps_malaxage_2

(* - Lancement des tempos de malaxage *)
CAL TON_malaxage_mal2 (IN := Malaxage_encours_Mal2,
			PT := Temps_malaxage2,
			PAUSE := pause_temps_malaxage_2)

LD Malaxage_encours_Mal2
AND util_watt_mal2_plasticite
ST TON_mini_malaxage_mal2.IN
CAL TON_mini_malaxage_mal2 (PT := Temps_mini_malaxage2,
			PAUSE := pause_temps_malaxage_2) 
  
(* - Vérification puissance absorbée et stabilisation *)
LD TON_mini_malaxage_mal2.Q
AND (	valeur_instantanee_wattmetre2
	LE Valeur_wattmetre2
)
ST TON_wattmetre_mal2.IN
CAL TON_wattmetre_mal2 (PT := Conf_mal2_tps_stab_watt_plast) 

(* - Calcul du temps de malaxage pour le compte-rendu, et l'affichage sur le synoptique du malaxeur *)
LD Malaxage_encours_Mal2
AND top_sec
ANDN pause_temps_malaxage_2 (* Modif M.D. 11/07/2003 *)
JMPCN suite_malaxage2
	LD temps_malax2
	ADD 1
	ST temps_malax2
suite_malaxage2:

(* - Calcul du temps de malaxage pour le départ des produits différés *)
LD Malaxage_encours_Mal2
AND top_sec
JMPCN suite_malaxage21
	LD Temps_malax2_avec_prod_dif
	ADD 1
	ST Temps_malax2_avec_prod_dif
suite_malaxage21:



(* Déclaration de la fin du malaxage *)
(* On déclare le malaxage terminé si l'intro différée est terminée, *)
(* et : *)
(*	- que la "tempo de malaxage" est terminée *)
(*	- ou que la "tempo mini de malaxage" est terminée et que puissance malaxeur est inférieure au seuil vide *)
(* Modif M.D. xx/01/11 : Les différés sont integrés à la vidange, on vérifie que ceux-ci sont *)
(* terminés pour déclarer la fin du le malaxage. *)
(* XX/12/2015 - P868C - ARTF1346498 *)
LD Malaxage_encours_Mal2
ANDN Info_Gate_Mode_Auto
AND Bit_validation_camion_mal2
AND (	TRUE
	AND(	Bit_validation_trappe1_malax2
		ANDN Info_trappe1_fermee_mal2
	)
	OR(	Bit_validation_trappe2_malax2
		ANDN Info_trappe2_fermee_mal2
	)
)
JMPC malaxage2_termine

LD Bit_validation_camion_mal2
AND Introduction_terminee_Mal2 
AND (Info_Gate_Mode_Auto
	OR Cde_interdiction_trappes_mal2 (*ALE 28/11/2016 résoud le problème de trappe bloquée en manu*)
	)
AND (	Bit_validation_trappe1_malax2
	OR Bit_validation_trappe2_malax2
)
AND (	TON_wattmetre_mal2.Q
	OR TON_malaxage_mal2.Q
)
JMPCN pas_de_vidange_mal2
malaxage2_termine:

	(* Dire malaxage terminee et Dire vidange en cours *)
	LD TG_OUT[suite_index_malaxeur2].CR_Etat_Malax2
	AND 16#fff6
	OR 16#0006
	ST TG_OUT[suite_index_malaxeur2].CR_Etat_Malax2
	
	LD TG_OUT[suite_index_malaxeur2].CR_Etat_Gachee
	OR 16#0200
	ST TG_OUT[suite_index_malaxeur2].CR_Etat_Gachee
	
	(* Ecriture du temps de malaxage dans le compte-rendu *)
	LD temps_malax2
	ST TG_OUT[suite_index_malaxeur2].CR_temps_malaxage
	
	LD 0
	ST temps_malax2
	LD 0
	ST Temps_malax2_avec_prod_dif
	
	LD valeur_instantanee_wattmetre2
	ST TG_OUT[suite_index_malaxeur2].CR_val_wathmetre

pas_de_vidange_mal2:



(* Lecture de la séquence de trappe (dans "Malax2") selon la plasticité du béton (ferme / plastique / très plastique / fluide) *)

LD code_plasticite_malax2
EQ 1
JMPC ferme_malax2
LD code_plasticite_malax2
EQ 2
JMPC plastique_malax2
LD code_plasticite_malax2
EQ 3
JMPC tres_plastique_malax2
LD code_plasticite_malax2
EQ 4
JMPC fluide_malax2
JMP fin_plasticité_mal2 (* (Sécurité en cas de code mauvais) *)

ferme_malax2:
	LD Malax_ferme
	ST Malax2
JMP fin_plasticité_mal2 
plastique_malax2:
	LD Malax_plastique
	ST Malax2
JMP fin_plasticité_mal2
tres_plastique_malax2:
	LD Malax_tres_plast
	ST Malax2
JMP fin_plasticité_mal2
fluide_malax2:
	LD Malax_fluide
	ST Malax2
fin_plasticité_mal2:



(* Détermination de l'état "Ouvert"/"Fermé" de la trappe suivant la trappe utilisée *)

LD TRUE
AND (	Bit_validation_trappe1_malax2
	AND Info_trappe1_ouverte_mal2
)
OR (	Bit_validation_trappe2_malax2
	AND Info_trappe2_ouverte_mal2
)
ST trappe_mal2_ouverte

LD TRUE
AND (	Bit_validation_trappe1_malax2
	AND Info_trappe1_fermee_mal2
)
OR (	Bit_validation_trappe2_malax2
	AND Info_trappe2_fermee_mal2
)
ST trappe_mal2_fermee



(* Bloc fonction pour la séquence de vidange *)

CAL Vidange_malaxeur2 (VID_MALA := Vidange_en_cours_Mal2,
			MALAX := Malax2,
			GD_OUV := Conf_malaxeur2_tps_mal_gd_ouvert,
			TPS_FER := Conf_malaxeur2_tps_fermeture,
			DEF_MAL := Defaut_Mal2,
			TRAP_OUV := trappe_mal2_ouverte,
			TRAP_FER := trappe_mal2_fermee,
			AUTO_TRA := Info_Gate_Mode_Auto,
			INIT := Malaxeur2_INIT_EN_COURS,
			S_VIDE := Vid_Mal2_OK,
			DER_GACH := Derniere_gachee_malaxeur2,
			CFG_Wm := conf_mal2_presence_wattmetre)
LD Vidange_malaxeur2.ouv_trap
ST ouverture_trappe_mal2
LD Vidange_malaxeur2.fer_trap
ST Fermeture_Mal2
LD Vidange_malaxeur2.fin_ouv
ST fin_malaxeur2_ouvert
LD Vidange_malaxeur2.def_vid
AND Vidange_en_cours_Mal2 (* Modif M.D. 19/05/2005 : On masque l'alarme si on n'est pas en cours de vidange (Problème vu à HYERES) *)
ST Defaut_ouv_trappe_Mal2
LD Vidange_malaxeur2.fin_vid
AND Vidange_en_cours_Mal2
JMPCN pas_vidange_terminee_mal2
vidange_mal2_termine:
	
	(* Déclarer la vidange terminée *)
	LD TG_OUT[suite_index_malaxeur2].CR_Etat_Malax2
	AND 16#fffb
	OR 16#0008
	ST TG_OUT[suite_index_malaxeur2].CR_Etat_Malax2
	
	(* Déclarer la vidange terminée + la gâchée terminée *)
	LD TG_OUT[suite_index_malaxeur2].CR_Etat_Gachee
	OR 16#0C00
	ST TG_OUT[suite_index_malaxeur2].CR_Etat_Gachee
	
	LD TRUE 
	S declaration_malaxeur_2_vide

	(* XX/11/2013 - P864 - artf1159801 *)
	LD TG_IN[suite_index_malaxeur2].Proprietes_gachee.0 (*derniere gâchée*)
	JMPCN pas_vidange_terminee_mal2

	LD TG_IN[suite_index_malaxeur2].Proprietes_gachee
	OR 16#0004
	ST TG_OUT[suite_index_malaxeur2].CR_Etat_Gachee_2
	
pas_vidange_terminee_mal2:
</ILSource>
	</program>
	<program>
		<identProgram name="470_Trappes_malaxeurs" type="section" task="MAST"></identProgram>
		<ILSource>
(* Initialisation des variables locales de la section *)
LD Trappes_malaxeurs_DEM_INIT
JMPCN Init_Trappes_malaxeurs__Fin
Init_Trappes_malaxeurs:

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	LD TRUE
	R Trappes_malaxeurs_DEM_INIT (* L'init de la section a bien été prise en compte. *)
Init_Trappes_malaxeurs__Fin:



(********************* MALAXEUR 1 **************************)


(* Modif M.D. 21/01/2009 : gestion du mode "sans pupitre" *)
(* =&gt; On gère l'actionnement des trappes par des boutons poussoir sur des ETORs *)

LD BP_ouverture_trappe1_mal1
OR Pup_Cde_Ouverture_trappe1_mal1
ST BI_Ouverture_trappe1_mal1

LD BP_fermeture_trappe1_mal1
OR Pup_Cde_fermeture_trappe1_mal1
ST BI_fermeture_trappe1_mal1 

(* XX/12/2015 - P868C - ARTF1346498 *)
LD BP_ouverture_trappe2_mal1
OR Pup_Cde_Ouverture_trappe2_mal1
ST BI_Ouverture_trappe2_mal1

LD BP_fermeture_trappe2_mal1
OR Pup_Cde_fermeture_trappe2_mal1
ST BI_fermeture_trappe2_mal1 

LD BP_ouverture_trappe1_mal2
OR Pup_Cde_Ouverture_trappe1_mal2
ST BI_Ouverture_trappe1_mal2

LD BP_fermeture_trappe1_mal2
OR Pup_Cde_fermeture_trappe1_mal2
ST BI_fermeture_trappe1_mal2 

LD BP_ouverture_trappe2_mal2
OR Pup_Cde_Ouverture_trappe2_mal2
ST BI_Ouverture_trappe2_mal2

LD BP_fermeture_trappe2_mal2
OR Pup_Cde_fermeture_trappe2_mal2
ST BI_fermeture_trappe2_mal2 

(* Commande et discordance trappe 1 malaxeur 1 *)

CAL trappe_1_malaxeur_1 (Dest_mal := destination_malaxeur_1,
			Dest_sec := destination_sortie_seche,
			mal_vid := malaxeur_1_vide,
			val_tra := Bit_validation_trappe1_malax1,
			manu := Manu_logiciel,
			tra1_ouv := Info_trappe1_ouverte_mal1,
			tra2_fer := Info_trappe2_fermee_mal1,
			tra_auto := Info_Gate_Mode_Auto,
			auto_pup := Auto_pupitre_sans_Arret_prod,
			tra_bloq := Trappe1_malaxeur1_bloquee,
			manu_ouv := Manu_cde_ouverture_trappe_1_mal1,
			manu_fer := Manu_cde_fermeture_trappe_1_mal1,
			manu_tem := Manu_temporise,
			t_manu_o := Manu_Tps_ouv_trappe,
			ouv_tra := ouverture_trappe_mal1,
			vidange := Vidange_en_cours_Mal1,
			ouv_sech := Malax_1_t1_ouvert_sortie_seche,
			tra1_fer := Info_trappe1_fermee_mal1,
			fer_tra := Fermeture_Mal1,
			tps_ret := Conf_malaxeur1_retard_s_seche,
			t_manu_f := Manu_Tps_ferm_trappe,
			pres_tra := 1,
			tps_rep := Conf_trappe1_mal1_tps_reponse,
			tps_fer := Conf_malaxeur1_tps_fermeture,
			def_ouv := Defaut_ouv_trappe_Mal1,
			g_ouv_C8:= bit_mal_grand_ouv_conf_anhy_8,
			pup_ouv := BI_Ouverture_trappe1_mal1, (* ROUMANIE : modif DFB*)
			pup_fer := BI_fermeture_trappe1_mal1) (* ROUMANIE : modif DFB*)
LD trappe_1_malaxeur_1.cde_ouv
ST Cde_ouverture_trappe1_mal1
LD trappe_1_malaxeur_1.r_manu_o
R Manu_cde_ouverture_trappe_1_mal1
LD trappe_1_malaxeur_1.cde_fer
ST Cde_fermeture_trappe1_mal1
LD trappe_1_malaxeur_1.r_manu_f
R Manu_cde_fermeture_trappe_1_mal1
LD trappe_1_malaxeur_1.r_ouv_ss
R Malax_1_t1_ouvert_sortie_seche
LD trappe_1_malaxeur_1.def_bloq
S Trappe1_malaxeur1_bloquee



(* Commande et discordance trappe 2 malaxeur 1 *)

CAL trappe_2_malaxeur_1 (Dest_mal := destination_malaxeur_1,
			Dest_sec := destination_sortie_seche,
			mal_vid := malaxeur_1_vide,
			val_tra := Bit_validation_trappe2_malax1,
			manu := Manu_logiciel,
			tra1_ouv := Info_trappe2_ouverte_mal1,
			tra2_fer := Info_trappe1_fermee_mal1,
			tra_auto := Info_Gate_Mode_Auto,
			auto_pup := Auto_pupitre_sans_Arret_prod,
			tra_bloq := Trappe2_malaxeur1_bloquee,
			manu_ouv := Manu_cde_ouverture_trappe_2_mal1,
			manu_fer := Manu_cde_fermeture_trappe_2_mal1,
			manu_tem := Manu_temporise,
			t_manu_o := Manu_Tps_ouv_trappe,
			ouv_tra := ouverture_trappe_mal1,
			vidange := Vidange_en_cours_Mal1,
			ouv_sech := Malax_1_t2_ouvert_sortie_seche,
			tra1_fer := Info_trappe2_fermee_mal1,
			fer_tra := Fermeture_Mal1,
			tps_ret := Conf_malaxeur1_retard_s_seche,
			t_manu_f := Manu_Tps_ferm_trappe,
			pres_tra := conf_mal1_presence_trappe2,
			tps_rep := Conf_trappe2_mal1_tps_reponse,
			tps_fer := Conf_malaxeur1_tps_fermeture,
			def_ouv := Defaut_ouv_trappe_Mal1,
			g_ouv_C8:= bit_mal_grand_ouv_conf_anhy_8,
			pup_ouv := BI_Ouverture_trappe2_mal1, (* XX/12/2015 - P868C - ARTF1346498 *)
			pup_fer := BI_fermeture_trappe2_mal1) (* XX/12/2015 - P868C - ARTF1346498 *)
LD trappe_2_malaxeur_1.cde_ouv
ST Cde_ouverture_trappe2_mal1
LD trappe_2_malaxeur_1.r_manu_o
R Manu_cde_ouverture_trappe_2_mal1
LD trappe_2_malaxeur_1.cde_fer
ST Cde_fermeture_trappe2_mal1
LD trappe_2_malaxeur_1.r_manu_f
R Manu_cde_fermeture_trappe_2_mal1
LD trappe_2_malaxeur_1.r_ouv_ss
R Malax_1_t2_ouvert_sortie_seche
LD trappe_2_malaxeur_1.def_bloq
S Trappe2_malaxeur1_bloquee



(* Interdiction d'actionnement des trappes malaxeur 1 *)

LD TG_IN[suite_index_malaxeur1].Proprietes_gachee
AND 16#0004 (* Masque sur bit 3 : "Obligation de respecter le temps de malaxage" *)
NE 0
ST Obliger_tps_malaxage_mal1
AND Malaxage_encours_Mal1
ST Cde_interdiction_trappes_mal1 (* Ajout R.C. 19/01/2012 P856 : On interdit l'actionnement des *)
		(* trappes si le malaxage est en cours (dépend du chrono de malaxage) et *)
		(* qu'on a obligation de respecter le temps de malaxage. *)



(* Alarme "Défaut de vidange" malaxeur 1 *)

LD  fin_malaxeur1_ouvert
AND Vidange_malaxeur1.fin_vid
ANDN Seuil_vide_atteint_Mal1 
AND conf_mal1_presence_wattmetre
AND Info_Gate_Mode_Auto
S Alarme_vidange_Mal1



(* Alarme "Dépassement de puissance" malaxeur 1 *)

LD conf_mal1_presence_wattmetre
AND (valeur_instantanee_wattmetre1
	GT Conf_malaxeur1_puissance_max
)
S Depas_puissance_max_malaxeur1



(* Alarme "Malaxeur arrêté" malaxeur 1 *)
(* Modif M.D. 12/08/2003 &amp; R.C. 04/09/2003 *)

LD Camion_OK_Dosages_OK
ANDN destination_malaxeur_2
ANDN destination_sortie_seche
ST temp1

LDN Info_malaxeur1_en_marche
AND (
	LD Vidange_en_cours_Mal1
	OR Malaxage_encours_Mal1
	OR temp1
)
S alarme_malaxeur1_arrete (* Ajouté en P348/P349 *)



(* Défaut malaxeur 1 *)

LD Trappe1_malaxeur1_bloquee
OR Trappe2_malaxeur1_bloquee
OR Alarme_vidange_Mal1
OR Depas_puissance_max_malaxeur1
OR alarme_malaxeur1_arrete
ST Defaut_Mal1



(* Alarme "Puissance supérieure au seuil vide" avant introduction dans le malaxeur 1 *)

LDN Malaxage_encours_Mal1
ANDN Vidange_en_cours_Mal1
ANDN Intro_en_cours
ANDN Introduction_terminee
AND conf_mal1_presence_wattmetre
ANDN destination_sortie_seche
AND (valeur_instantanee_wattmetre1
	GT Conf_malaxeur1_seuil_vide
)
ST TON_sup_seuil_vid_mal1.IN                            

CAL TON_sup_seuil_vid_mal1 (PT := Conf_malaxeur1_tps_stab_watt)

LD TON_sup_seuil_vid_mal1.Q
S Puissance_sup_seuil_vide_Mal1



(* Alarme "Malaxeur non vide" malaxeur 1 *)
(* Apparait si le malaxeur est vu "non vide" alors qu'on revient du mode "Trappes manu" au mode "Trappes auto" *)

CAL fm_trappe_vidange_auto (CLK := Info_Gate_Mode_Auto)

LD fm_trappe_vidange_auto.Q
AND Vidange_en_cours_Mal1
ANDN Seuil_vide_atteint_Mal1
S msg_mal1_non_vide_vid_auto







(********************* MALAXEUR 2 **************************)


LDN Conf_malaxeur2_present
JMPC fin_trappes_malaxeur_2



(* Commande et discordance trappe 1 malaxeur 2 *)

CAL trappe_1_malaxeur_2 (Dest_mal := destination_malaxeur_2,
			Dest_sec := destination_sortie_seche,
			mal_vid := malaxeur_2_vide,
			val_tra := Bit_validation_trappe1_malax2,
			manu := Manu_logiciel,
			tra1_ouv := Info_trappe1_ouverte_mal2,
			tra2_fer := Info_trappe2_fermee_mal2,
			tra_auto := Info_Gate_Mode_Auto,
			auto_pup := Auto_pupitre_sans_Arret_prod,
			tra_bloq := Trappe1_malaxeur2_bloquee,
			manu_ouv := Manu_cde_ouverture_trappe_1_mal2,
			manu_fer := Manu_cde_fermeture_trappe_1_mal2,
			manu_tem := Manu_temporise,
			t_manu_o := Manu_Tps_ouv_trappe,
			ouv_tra := ouverture_trappe_mal2,
			vidange := Vidange_en_cours_Mal2,
			ouv_sech := Malax_2_t1_ouvert_sortie_seche,
			tra1_fer := Info_trappe1_fermee_mal2,
			fer_tra := Fermeture_Mal2,
			tps_ret := Conf_malaxeur2_retard_s_seche,
			t_manu_f := Manu_Tps_ferm_trappe,
			pres_tra := 1,
			tps_rep := Conf_trappe1_mal2_tps_reponse,
			tps_fer := Conf_malaxeur2_tps_fermeture,
			def_ouv := Defaut_ouv_trappe_Mal2,
			pup_ouv := BI_Ouverture_trappe1_mal2, (* XX/12/2015 - P868C - ARTF1346498 *)
			pup_fer := BI_fermeture_trappe1_mal2) (* XX/12/2015 - P868C - ARTF1346498 *)
LD trappe_1_malaxeur_2.cde_ouv
ST Cde_ouverture_trappe1_mal2
LD trappe_1_malaxeur_2.r_manu_o
R Manu_cde_ouverture_trappe_1_mal2
LD trappe_1_malaxeur_2.cde_fer
ST Cde_fermeture_trappe1_mal2
LD trappe_1_malaxeur_2.r_manu_f
R Manu_cde_fermeture_trappe_1_mal2
LD trappe_1_malaxeur_2.r_ouv_ss
R Malax_2_t1_ouvert_sortie_seche
LD trappe_1_malaxeur_2.def_bloq
S Trappe1_malaxeur2_bloquee



(* Commande et discordance trappe 2 malaxeur 2 *)

CAL trappe_2_malaxeur_2 (Dest_mal := destination_malaxeur_2,
			Dest_sec := destination_sortie_seche,
			mal_vid := malaxeur_2_vide,
			val_tra := Bit_validation_trappe2_malax2,
			manu := Manu_logiciel,
			tra1_ouv := Info_trappe2_ouverte_mal2,
			tra2_fer := Info_trappe1_fermee_mal2,
			tra_auto := Info_Gate_Mode_Auto,
			auto_pup := Auto_pupitre_sans_Arret_prod,
			tra_bloq := Trappe2_malaxeur2_bloquee,
			manu_ouv := Manu_cde_ouverture_trappe_2_mal2,
			manu_fer := Manu_cde_fermeture_trappe_2_mal2,
			manu_tem := Manu_temporise,
			t_manu_o := Manu_Tps_ouv_trappe,
			ouv_tra := ouverture_trappe_mal2,
			vidange := Vidange_en_cours_Mal2,
			ouv_sech := Malax_2_t2_ouvert_sortie_seche,
			tra1_fer := Info_trappe2_fermee_mal2,
			fer_tra := Fermeture_Mal2,
			tps_ret := Conf_malaxeur2_retard_s_seche,
			t_manu_f := Manu_Tps_ferm_trappe,
			pres_tra := conf_mal2_presence_trappe2,
			tps_rep := Conf_trappe2_mal2_tps_reponse,
			tps_fer := Conf_malaxeur2_tps_fermeture,
			def_ouv := Defaut_ouv_trappe_Mal2,
			pup_ouv := BI_Ouverture_trappe2_mal2, (* XX/12/2015 - P868C - ARTF1346498 *)
			pup_fer := BI_fermeture_trappe2_mal2) (* XX/12/2015 - P868C - ARTF1346498 *)
LD trappe_2_malaxeur_2.cde_ouv
ST Cde_ouverture_trappe2_mal2
LD trappe_2_malaxeur_2.r_manu_o
R Manu_cde_ouverture_trappe_2_mal2
LD trappe_2_malaxeur_2.cde_fer
ST Cde_fermeture_trappe2_mal2
LD trappe_2_malaxeur_2.r_manu_f
R Manu_cde_fermeture_trappe_2_mal2
LD trappe_2_malaxeur_2.r_ouv_ss
R Malax_2_t2_ouvert_sortie_seche
LD trappe_2_malaxeur_2.def_bloq
S Trappe2_malaxeur2_bloquee



(* Interdiction d'actionnement des trappes malaxeur 2 *)

LD TG_IN[suite_index_malaxeur2].Proprietes_gachee
AND 16#0004 (* Masque sur bit 3 : "Obligation de respecter le temps de malaxage" *)
NE 0
ST Obliger_tps_malaxage_mal2
AND Malaxage_encours_Mal2
ST Cde_interdiction_trappes_mal2 (* Ajout R.C. 19/01/2012 P856 : On interdit l'actionnement des *)
		(* trappes si le malaxage est en cours (dépend du chrono de malaxage) et *)
		(* qu'on a obligation de respecter le temps de malaxage. *)



(* Alarme "Défaut de vidange" malaxeur 2 *)

LD fin_malaxeur2_ouvert
ANDN Seuil_vide_atteint_Mal2
AND conf_mal2_presence_wattmetre
AND trappe_mal2_ouverte
S Alarme_vidange_Mal2



(* Alarme "Dépassement de puissance" malaxeur 2 *)

LD Conf_malaxeur2_present
AND conf_mal2_presence_wattmetre
AND (valeur_instantanee_wattmetre2
	GT Conf_malaxeur2_puissance_max
)
S Depas_puissance_max_malaxeur2



(* Alarme "Malaxeur arrêté" malaxeur 2 *)
(* Modif M.D. 12/08/2003 &amp; R.C. 04/09/2003 *)

LDN Info_malaxeur2_en_marche
AND (Camion_OK_Dosages_OK
	ANDN destination_malaxeur_1	
	OR Vidange_en_cours_Mal2
	OR Malaxage_encours_Mal2
)
S alarme_malaxeur2_arrete (* Ajouté en P348/P349 *)



(* Défaut malaxeur 2 *)

LD Trappe1_malaxeur2_bloquee
OR Trappe2_malaxeur2_bloquee
OR Alarme_vidange_Mal2
OR Depas_puissance_max_malaxeur2
OR alarme_malaxeur2_arrete
ST Defaut_Mal2



(* Alarme "Puissance supérieure au seuil vide" avant introduction dans le malaxeur 2 *)

LDN Malaxage_encours_Mal2
ANDN Vidange_en_cours_Mal2
ANDN Intro_en_cours
ANDN Introduction_terminee
AND conf_mal2_presence_wattmetre
ANDN destination_sortie_seche
AND (valeur_instantanee_wattmetre2
	GT Conf_malaxeur2_seuil_vide
)
ST TON_sup_seuil_vid_mal2.IN                            

CAL TON_sup_seuil_vid_mal2 (PT := Conf_malaxeur2_tps_stab_watt)

LD TON_sup_seuil_vid_mal2.Q
S Puissance_sup_seuil_vide_Mal2



(* Alarme "Malaxeur non vide" malaxeur 2 *)
(* Apparait si le malaxeur est vu "non vide" alors qu'on revient du mode "Trappes manu" au mode "Trappes auto" *)

LD fm_trappe_vidange_auto.Q
AND Vidange_en_cours_Mal2
ANDN Seuil_vide_atteint_Mal2
S msg_mal2_non_vide_vid_auto



fin_trappes_malaxeur_2 :






(********************* COMMUN MALAXEURS 1 &amp; 2 **************************)


(* Donner autorisation intro dans malaxeur s'il est prêt *)
(* Modif R.C. 05/09/2003 *)
(* Tout à la fin de cette section car doit être lancé si on saute à *)
(* l'étiquette fin_trappes_malaxeur_2 dans le cas où il n'y a *)
(* qu'un seul malaxeur utilisé avec la CPU 113.03 *)

LDN alarme_malaxeur1_arrete
ANDN (alarme_malaxeur2_arrete
	AND Conf_malaxeur2_present
)
ST Malaxeur_OK

LD Camion_OK
AND Malaxeur_OK
ST Camion_OK_Malaxeur_OK (* Donne autorisation intro phase 1 dans malaxeur *)

LD Camion_OK_Dosages_OK
AND Malaxeur_OK
ORN Info_Plant_In_Auto (* Modif M.D. 28/10/2004 : Ne pas lever d'alarme "Malaxeur arrêté" en mode manu pupitre *)
ST Camion_OK_Dosages_OK_Malaxeur_OK (* Donne autorisation intro phases 2 et 3 dans malaxeur *)
R Camion_OK_Dosages_OK
</ILSource>
	</program>
	<program>
		<identProgram name="480_Commandes_pupitre" type="section" task="MAST"></identProgram>
		<STSource>(*
MD 14/
!!!!! "cde_dosage_cim" sont écrites dans différentes sections (suivant le mode AUTO, MANU ...)
cette écriture n'est pas propre, il faudrait fusionner ces différentes écritures dans une seule section
*)


(* Initialisation des variables locales de la section *)
IF Commandes_pupitre_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Commandes_pupitre_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(* Modif Cim2 M.D. 26/03/09 Ajout Bascule Ciment 2 *)
(* Pour chaque commande de dosage, il faut vérifier la destination du silo!!! *)
IF NOT Info_Plant_In_Auto THEN
	(* Ajout des commandes pupitre de dosage *)
	(* Dans le programme les autres commandes sont indexées. *)
	(* On crée ici les commandes pupitre qui seront utilisées pour écrire les sorties*)


	(********************** GRANULAT 1 &amp; GRANULAT 2 ****************************)

	(* "Numero_manu_pup_*" contient le numero de l'organe de stockage surlequel *)
	(* un dosage est autorisé. On n'autorise qu'un dosage par bascule pour pouvoir *)
	(* déterminer les consommations par organe de stockage. *)
	(* On n'autorise le changement d'organe ou la vidange de la bascule qu'une fois *)
	(* le cumul fait. Dans ce but, on passe "Numero_manu_pup_*" à 0 pour savoir que *)
	(* le cumul est fait. *)
	FOR idx_P1:=1 TO (Conf_granulat1_nb_tremies + Conf_granulat2_nb_tremies) BY 1 DO
		IF (Pup_Cde_dos_Gra[idx_P1] = TRUE) THEN (* Demande de dosage par le pupitre *)
			IF (idx_P1 &lt;= Conf_granulat1_nb_tremies) THEN (* Ligne Gra1 *)
				IF (Numero_manu_pup_Gra1 = 0) (* Basc Gra1 dispo pour un dosage (le cumul conso a été mis à jour après le dosage précédent) *)
				AND TON_fin_vidange_dans_Gra1.Q (*    Pas de bascule en cours de vidange vers l’organe de pesage Gra1 *)
				AND (Numero_manu_pup_Gra2 = 0) THEN (* Nécessaire car la section gérant les cumuls ne sait pas traiter des dosages simultanés sur les 2 lignes *)
					Numero_manu_pup_Gra1 := idx_P1;
				END_IF;
			ELSE (* Ligne Gra2 *)
				IF (Numero_manu_pup_Gra2 = 0) (* Basc Gra2 dispo pour un dosage (le cumul conso a été mis à jour après le dosage précédent) *)
				AND TON_fin_vidange_dans_Gra2.Q (*    Pas de bascule en cours de vidange vers l’organe de pesage Gra2 *)
				AND (Numero_manu_pup_Gra1 = 0) THEN (* Nécessaire car la section gérant les cumuls ne sait pas traiter des dosages simultanés sur les 2 lignes *)
					Numero_manu_pup_Gra2 := idx_P1;
				END_IF;
			END_IF;
		END_IF;
	END_FOR;

	(* FAIRE LE DOSAGE *)
	FOR Idx_P1:=1 TO 14 BY 1 DO
		Cde_dosage_Gra[Idx_P1] := 
			NOT Info_Plant_In_Auto
			AND Pup_Cde_dos_Gra[Idx_P1]
			AND ((
				(Numero_manu_pup_Gra1 = idx_P1)
				AND (Info_balance_Gra1_fermee OR (Conf_Granulat1_tapis OR Conf_Granulat1_skip))
				AND (NOT Cde_vidange_bascule_Gra1 OR NOT Conf_Granulat1_tapis)
				AND (Cable_skip_mou OR NOT Conf_granulat1_skip)
				AND NOT Alarme_poids_max_Gra1
				AND NOT Alarme_Com_HMS_Profibus_Gra1
			) OR (
				(Numero_manu_pup_Gra2 = idx_P1)
				AND (Info_balance_Gra2_fermee OR NOT Conf_granulat2_bascule)
				AND (NOT Cde_vidange_bascule_Gra2 OR NOT Conf_Granulat2_tapis)
				AND NOT Alarme_poids_max_Gra2
				(*AND NOT Alarme_Com_HMS_Profibus_Gra2*) (*Pas encore implémenté*)
			))
			AND NOT Alarme_Com_API_ModbusTCP_1 (* TOUTES BASCULES SUR HMS ... *)
			AND NOT Alarme_Controle_Tension;

(*
			AND (FALSE
				OR (Conf_granulat1_skip
					AND Cable_skip_mou)
				OR (Conf_granulat1_tapis
					AND NOT Cde_vidange_bascule_granulat1
					AND ( Conf_granulat1_pres_capteur_rot
						AND tempo_ctrle_rotation_G1.Q
						OR NOT Conf_granulat1_pres_capteur_rot)
				)
				OR (NOT Conf_granulat1_skip
					AND NOT Conf_granulat1_tapis
					AND Info_balance_granulat1_fermee)
			);
 *)
	END_FOR;


	(********************** CIMENT 1 &amp; CIMENT 2 ****************************)

	(* "Numero_manu_pup_*" contient le numero de l'organe de stockage surlequel *)
	(* un dosage est autorisé. On n'autorise qu'un dosage par bascule pour pouvoir *)
	(* déterminer les consommations par organe de stockage. *)
	(* On n'autorise le changement d'organe ou la vidange de la bascule qu'une fois *)
	(* le cumul fait. Dans ce but, on passe "Numero_manu_pup_*" à 0 pour savoir que *)
	(* le cumul est fait. *)
	FOR idx_P1:=1 TO (Conf_Cim1_nb_silos + Conf_Cim2_nb_silos) BY 1 DO
		IF (Pup_Cde_dos_Cim[idx_P1] = TRUE) THEN (* Demande de dosage par le pupitre *)
			IF (idx_P1 &lt;= Conf_Cim1_nb_silos) THEN (* Ligne Cim1 *)
				IF (Numero_manu_pup_Cim1 = 0) THEN (* Basc Cim1 dispo pour un dosage (le cumul conso a été mis à jour après le dosage précédent) *)
					Numero_manu_pup_Cim1 := idx_P1;
				END_IF;
			ELSE (* Ligne Cim2 *)
				IF (Numero_manu_pup_Cim2 = 0) THEN (* Basc Cim2 dispo pour un dosage (le cumul conso a été mis à jour après le dosage précédent) *)
					Numero_manu_pup_Cim2 := idx_P1;
				END_IF;
			END_IF;
		END_IF;
	END_FOR;

	(* FAIRE LE DOSAGE *)
	FOR Idx_P1:=1 TO 6 BY 1 DO
		Cde_dosage_Cim[Idx_P1] := 
			NOT Info_Plant_In_Auto
			AND Pup_Cde_dos_Cim[Idx_P1]
			AND ((
				(Numero_manu_pup_Cim1 = idx_P1)
				AND Info_balance_Cim1_fermee
				AND NOT Alarme_poids_max_Cim1
				AND NOT Alarme_Com_HMS_Profibus_Cim1
			) OR (
				(Numero_manu_pup_Cim2 = idx_P1)
				AND NOT Alarme_poids_max_Cim2
				AND Info_balance_Cim2_fermee
				(*AND NOT Alarme_Com_HMS_Profibus_Cim2*) (*Pas encore implémenté*)
			))
			AND NOT Alarme_Com_API_ModbusTCP_1 (* TOUTES BASCULES SUR HMS ... *)
			AND NOT Alarme_Controle_Tension;
	END_FOR;


	(********************** EAU 1 &amp; EAU 2 ****************************)

	(* "Numero_manu_pup_*" contient le numero de l'organe de stockage surlequel *)
	(* un dosage est autorisé. On n'autorise qu'un dosage par bascule pour pouvoir *)
	(* déterminer les consommations par organe de stockage. *)
	(* On n'autorise le changement d'organe ou la vidange de la bascule qu'une fois *)
	(* le cumul fait. Dans ce but, on passe "Numero_manu_pup_*" à 0 pour savoir que *)
	(* le cumul est fait. *)
	FOR idx_P1:=1 TO 4 BY 1 DO (* Rappel : le nombre de cuves à eau utilisées ne peut être déterminé d'après "Conf_eau1_nb_cuves" et "Conf_eau2_nb_cuves" *)
		IF (Pup_Cde_dos_Eau[idx_P1] = TRUE) THEN (* Demande de dosage par le pupitre *)
			IF (Conf_Eau_dest_cuves[Idx_P1] = 0) THEN (* Cuve Eau pesée *)
				IF (idx_P1 &lt;= Conf_Eau1_nb_cuves) THEN (* Ligne Eau1 *)
					IF (Numero_manu_pup_Eau1 = 0) (* Basc Eau1 dispo pour un dosage (le cumul conso a été mis à jour après le dosage précédent) *)
					AND TON_fin_dosage_ppe_vers_Eau1.Q (*    Pas de pompe en cours de dosage vers la bascule Eau1 *)
					AND TON_fin_vidange_dans_Eau1.Q THEN (*    Pas de bascule en cours de vidange dans la bascule Eau1 *)
						Numero_manu_pup_Eau1 := idx_P1;
					END_IF;
				ELSE (* Ligne Eau2 *)
					IF (Numero_manu_pup_Eau2 = 0) THEN (* Basc Eau2 dispo pour un dosage (le cumul conso a été mis à jour après le dosage précédent) *)
						Numero_manu_pup_Eau2 := idx_P1;
					END_IF;
				END_IF;
			END_IF;
		END_IF;
	END_FOR;

	(* FAIRE LE DOSAGE *)
	FOR Idx_P1:=1 TO 4 BY 1 DO
		Cde_dosage_Eau[Idx_P1] := 
			NOT Info_Plant_In_Auto
			AND Pup_Cde_dos_Eau[Idx_P1]
			AND ((
				(Conf_Eau_dest_cuves[Idx_P1] = 0) (* Cuve Eau pesée *)
				AND (Numero_manu_pup_Eau1 = idx_P1) (* Eau1 *)
				AND Info_balance_Eau1_fermee
				AND NOT Alarme_poids_max_Eau1
				AND NOT Alarme_Com_HMS_Profibus_Eau1
			) OR (
				(Conf_Eau_dest_cuves[Idx_P1] = 0) (* Cuve Eau pesée *)
				AND (Numero_manu_pup_Eau2 = idx_P1) (* Eau2 *)
				AND Info_balance_Eau2_fermee
				AND NOT Alarme_poids_max_Eau2
				(*AND NOT Alarme_Com_HMS_Profibus_Eau2*) (*Pas encore implémenté*)
			) OR (
				(Conf_Eau_dest_cuves[Idx_P1] &lt;&gt; 0) (* Cuve Eau comptée *)
			))
			AND NOT Alarme_Com_API_ModbusTCP_1 (* TOUTES BASCULES SUR HMS ... *)
			AND NOT Alarme_Controle_Tension;
	END_FOR;


	(********************** ADJUVANT ****************************)

	(* "Numero_manu_pup_*" contient le numero de l'organe de stockage surlequel *)
	(* un dosage est autorisé. On n'autorise qu'un dosage par bascule pour pouvoir *)
	(* déterminer les consommations par organe de stockage. *)
	(* On n'autorise le changement d'organe ou la vidange de la bascule qu'une fois *)
	(* le cumul fait. Dans ce but, on passe "Numero_manu_pup_*" à 0 pour savoir que *)
	(* le cumul est fait. *)
	FOR idx_P1:=1 TO Conf_Adj1_nb_cuves BY 1 DO
		IF (Pup_Cde_dos_Adj[idx_P1] = TRUE) THEN (* Demande de dosage par le pupitre *)
			IF (Conf_Adj_dest_cuves[Idx_P1] = 0) THEN (* Cuve Adj pesée *)
				IF (Numero_manu_pup_Adj = 0) THEN (* Basc Adj dispo pour un dosage (le cumul conso a été mis à jour après le dosage précédent) *)
					Numero_manu_pup_Adj := idx_P1;
				END_IF;
			END_IF;
		END_IF;
	END_FOR;

	(* FAIRE LE DOSAGE *)
	FOR Idx_P1:=1 TO 20 BY 1 DO
		(* - Détermination de la destination de la pompe, si la cuve est comptée *)
		IF (Conf_Adj_dest_cuves[Idx_P1] &gt;= 1)
		AND (Conf_Adj_dest_cuves[Idx_P1] &lt;= 20) THEN (* Cuve Adj comptée *)
			Dest_ppe_Adj := Conf_ppe_dest[Conf_Adj_dest_cuves[Idx_P1]];
		ELSE
			Dest_ppe_Adj := 0;
		END_IF;

		Cde_dosage_Adj[Idx_P1] := 
			NOT Info_Plant_In_Auto
			AND Pup_Cde_dos_Adj[Idx_P1]
			AND NOT Tble_Alarme_Niv_haut_ADJ_Comp[No_Comp_ADJ[Idx_P1]]
			AND ((
				(Conf_Adj_dest_cuves[Idx_P1] = 0) (* Cuve Adj pesée *)
				AND (Numero_manu_pup_Adj = idx_P1)
				AND Info_balance_Adj_fermee (* AND NOT Vidange_basc_adj_PPE) (*Cas ou l'on à pas de capteur*) *)
				AND NOT Alarme_poids_max_Adj
				AND NOT Alarme_Com_HMS_Profibus_Adj
			) OR (
				(Dest_ppe_Adj = 13) (* Cuve Adj comptée, destination bascule Eau1 *)
				AND (Numero_manu_pup_Eau1 = 0) (* Pas de cuve pesée en cours de dosage vers la bascule Eau1 *)
				AND Info_balance_Eau1_fermee
				AND NOT Alarme_poids_max_Eau1
				AND NOT Alarme_Com_HMS_Profibus_Eau1
			) OR (
				(Conf_Adj_dest_cuves[Idx_P1] &lt;&gt; 0) (* Cuve Adj comptée *)
				AND (Dest_ppe_Adj &lt;&gt; 13) (* ...mais pas vers Eau1 *)
			))
			AND NOT Alarme_Com_API_ModbusTCP_1 (* TOUTES BASCULES SUR HMS ... *)
			AND NOT Alarme_Controle_Tension
			AND NOT Alarme_prot_mot_Dos_ADJ;   (* Modif Inde *)
	END_FOR;


	(********************** ADDITIONNELLE ****************************)

	(* "Numero_manu_pup_*" contient le numero de l'organe de stockage surlequel *)
	(* un dosage est autorisé. On n'autorise qu'un dosage par bascule pour pouvoir *)
	(* déterminer les consommations par organe de stockage. *)
	(* On n'autorise le changement d'organe ou la vidange de la bascule qu'une fois *)
	(* le cumul fait. Dans ce but, on passe "Numero_manu_pup_*" à 0 pour savoir que *)
	(* le cumul est fait. *)
	FOR idx_P1:=1 TO Conf_basc_add_nb_organes BY 1 DO
		IF (Pup_Cde_dos_Add[idx_P1] = TRUE) THEN (* Demande de dosage par le pupitre *)
			IF (Numero_manu_pup_Add = 0) THEN (* Basc Add dispo pour un dosage (le cumul conso a été mis à jour après le dosage précédent) *)
				Numero_manu_pup_Add := idx_P1;
			END_IF;
		END_IF;
	END_FOR;

	(* FAIRE LE DOSAGE *)
	FOR Idx_P1:=1 TO 4 BY 1 DO
		Cde_dosage_Add[Idx_P1] := 
			NOT Info_Plant_In_Auto
			AND Pup_Cde_dos_Add[Idx_P1]
			AND (Numero_manu_pup_Add = idx_P1)
			AND Info_balance_Add_fermee
			AND NOT Alarme_poids_max_Add
			AND NOT Alarme_capot_ouvert_stock_add[Idx_P1] (* ASM Jan 2014 -P864 : artf 1347731 : Additional balance  *)
(*			AND NOT Alarme_Com_HMS_Profibus_Add*)(* On ne gère pas les bascules Add profibus pour le moment. *)
			AND NOT Alarme_Com_API_ModbusTCP_1 (* TOUTES BASCULES SUR HMS ... *)
			AND NOT Alarme_Controle_Tension;
	END_FOR;

END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="490_Cumul_pesee" type="section" task="MAST"></identProgram>
		<ILSource>
(* Initialisation des variables locales de la section *)
LD Cumul_pesee_DEM_INIT
JMPCN Init_Cumul_pesee__Fin
Init_Cumul_pesee:

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	LD TRUE
	R Cumul_pesee_DEM_INIT (* L'init de la section a bien été prise en compte. *)
Init_Cumul_pesee__Fin:



(* Mode Auto *)
LD Info_Plant_In_Auto
ANDN manu_logiciel
ST Stock_Gra1_auto
ST Stock_Gra2_auto
ST Stock_Cim1_auto
ST Stock_Cim2_auto
ST Stock_Eau1_auto
ST Stock_Eau2_auto
ST Stock_Adj_auto
ST Stock_Anh_auto
ST Stock_Add_auto
  
(* Mode Manu logiciel et pupitre *)
LD TRUE
AND (Info_Plant_In_Auto
	AND manu_logiciel
)
ORN Info_Plant_In_Auto
ST Stock_Gra_manu
ST Stock_Cim_manu
ST Stock_Eau_manu
ST Stock_Adj_manu
ST Stock_Anh_manu
ST Stock_Add_manu


  
(******************************************************************************************)
(*******************************     GRANULAT     *****************************************)
(******************************************************************************************)
  
(*********************    Mode centrale en auto          *********************************)
(* GRANULAT 1 *)
  
(* Doser=1 si on à une cde de dosage auto------------------------------------------*)
LD Cde_dosage_Gra[Numero_produit_Gra1]
AND Stock_Gra1_auto
ST Doser_Gra1_auto
   
CAL fm_doser_Gra1_auto(CLK := Doser_Gra1_auto)
LD fm_doser_Gra1_auto.Q
ST test_fm_dos_granulat1_auto
JMPCN pas_mise_a_jour_granulat1_auto
	LD Numero_produit_Gra1
	ST Numero_produit_Gra1_cumul (* Mémoire pour utiliser le n° granulat pour le cumul *)
pas_mise_a_jour_granulat1_auto: 
  
CAL Cumul_Gra1_auto (mode := Stock_Gra1_auto,
		cd_do_g1 := Doser_Gra1_auto,
		p_instan := Poids_instantane_Gra1,
		t_stab := Conf_granulat1_tps_stabilisation,
		t_m_stab := Conf_granulat1_tps_max_pesage,
		e_stab := Conf_granulat1_ecart_stabilite,
		fin_dos := Pesee_suivante_Gra1)
LD Cumul_Gra1_auto.stable
S Cumul_Gra1_auto_stable
LD Cumul_Gra1_auto.deptstab
ST Cumul_Gra1_auto_deptstab
   
LD Numero_produit_Gra1_cumul
EQ 0
JMPC ne_pas_stocker_auto_granulat1
	CAL fm_cumul_Gra1_auto_stable (CLK := Cumul_Gra1_auto_stable)
	LD fm_cumul_Gra1_auto_stable.Q
	JMPCN ne_pas_stocker_auto_granulat1
		LD Cumul_Gra1_auto.p_encour
		INT_TO_UDINT
		ADD Pese_Gra_auto[Numero_produit_Gra1_cumul]
		ST Pese_Gra_auto[Numero_produit_Gra1_cumul]
ne_pas_stocker_auto_granulat1:
LD TRUE
R Cumul_Gra1_auto_stable
    
(* GRANULAT 2 *)
  
(* Doser=1 si on à une cde de dosage auto------------------------------------------*)
LD Cde_dosage_Gra[Numero_produit_Gra2]
AND Stock_Gra2_auto
ST Doser_Gra2_auto
   
CAL fm_doser_Gra2_auto(CLK := Doser_Gra2_auto)
LD fm_doser_Gra2_auto.Q
ST test_fm_dos_granulat2_auto
JMPCN pas_mise_a_jour_granulat2_auto
	LD Numero_produit_Gra2
	ST Numero_produit_Gra2_cumul (* Mémoire pour utiliser le n° granulat pour le cumul *)
pas_mise_a_jour_granulat2_auto:
   
  
CAL Cumul_Gra2_auto (mode := Stock_Gra2_auto,
		cd_do_g1 := Doser_Gra2_auto,
		p_instan := Poids_instantane_Gra2,
		t_stab := Conf_granulat2_tps_stabilisation,
		t_m_stab := Conf_granulat2_tps_max_pesage,
		e_stab := Conf_granulat2_ecart_stabilite,
		fin_dos := Pesee_suivante_Gra1)
LD Cumul_Gra2_auto.stable
S Cumul_Gra2_auto_stable
LD Cumul_Gra2_auto.deptstab
ST Cumul_Gra2_auto_deptstab
   
LD Numero_produit_Gra2_cumul
EQ 0
JMPC ne_pas_stocker_auto_granulat2
	CAL fm_cumul_Gra2_auto_stable (CLK := Cumul_Gra2_auto_stable)
	LD fm_cumul_Gra2_auto_stable.Q
	JMPCN ne_pas_stocker_auto_granulat2
		LD Cumul_Gra2_auto.p_encour
		INT_TO_UDINT
		ADD Pese_Gra_auto[Numero_produit_Gra2_cumul]
		ST Pese_Gra_auto[Numero_produit_Gra2_cumul]
ne_pas_stocker_auto_granulat2:
LD TRUE
R Cumul_Gra2_auto_stable
    
(****************          Mode centrale en MANU LOGICIEL et PUPITRE        ***********************)
(* Modif M.D. 13/10/2008 : Suivi stock avec Pupitre communiquant 
Il faut que le suivi de conso prenne en compte les commande API
pour les pupitre Inde et Roumain (dans ce cas, la validation BN est
toujours active) *) 
LD BP_dosage_Gra_1
OR Cde_dosage_Gra[1]
ST Stock_manu_Gra_1

LD BP_dosage_Gra_2
OR Cde_dosage_Gra[2]
ST Stock_manu_Gra_2 

LD BP_dosage_Gra_3 
OR Cde_dosage_Gra[3]
ST Stock_manu_Gra_3  

LD BP_dosage_Gra_4
OR Cde_dosage_Gra[4] 
ST Stock_manu_Gra_4 

LD BP_dosage_Gra_5 
OR Cde_dosage_Gra[5]
ST Stock_manu_Gra_5   

LD BP_dosage_Gra_6 
OR Cde_dosage_Gra[6]
ST Stock_manu_Gra_6

LD BP_dosage_Gra_7 
OR Cde_dosage_Gra[7]  
ST Stock_manu_Gra_7

LD BP_dosage_Gra_8 
OR Cde_dosage_Gra[8]  
ST Stock_manu_Gra_8  

LD BP_dosage_Gra_9 
OR Cde_dosage_Gra[9]
ST Stock_manu_Gra_9
  
LD BP_dosage_Gra_10 
OR Cde_dosage_Gra[10]
ST Stock_manu_Gra_10 

LD BP_dosage_Gra_11 
OR Cde_dosage_Gra[11]
ST Stock_manu_Gra_11 

LD BP_dosage_Gra_12 
OR Cde_dosage_Gra[12]
ST Stock_manu_Gra_12 

LD BP_dosage_Gra_13 
OR Cde_dosage_Gra[13]
ST Stock_manu_Gra_13 

LD BP_dosage_Gra_14 
OR Cde_dosage_Gra[14]
ST Stock_manu_Gra_14

CAL Numero_Gra_pupitre (BP_1  := Stock_manu_Gra_1,
			BP_2  := Stock_manu_Gra_2,
			BP_3  := Stock_manu_Gra_3,
			BP_4  := Stock_manu_Gra_4,
			BP_5  := Stock_manu_Gra_5,
			BP_6  := Stock_manu_Gra_6,
			BP_7  := Stock_manu_Gra_7,
			BP_8  := Stock_manu_Gra_8,
			BP_9  := Stock_manu_Gra_9,
			BP_10 := Stock_manu_Gra_10,
			BP_11 := Stock_manu_Gra_11,
			BP_12 := Stock_manu_Gra_12,
			BP_13 := Stock_manu_Gra_13,
			BP_14 := Stock_manu_Gra_14,
			valid_bn := Cde_validation_boite_noire)
LD Numero_Gra_pupitre.numero
ST Numero_pupitre_Gra_cumul
LD Numero_Gra_pupitre.commande
ST Presence_cde_pupitre_Gra
(* Fin Modif M.D. 13/10/2008 : Pupitre communiquant *)

  
(* Doser=1 si on à une cde de dosage MANU LOGICIEL---------------------------------------*)
LD TRUE
AND (Cde_dosage_Gra[Numero_manu_Gra]
	OR Presence_cde_pupitre_Gra
)
AND Stock_Gra_manu
ST Doser_Gra_manu
  
(* Sur un front montant de la commande de dosage, on interdit le dosage suivant*)
CAL fd_doser_Gra_manu(CLK := Doser_Gra_manu)
LD fd_doser_Gra_manu.Q
S Stabilite_Gra_en_cours
  
(* Sur un front montant de la commande de dosage, on mémorise le numéro de l'organe utilisé*)
CAL fm_doser_Gra_manu(CLK := Doser_Gra_manu)
LD fm_doser_Gra_manu.Q
ANDN Stabilite_Gra_en_cours (* Interdire le chg numero si stabilité en cours*)
ST test_fm_dos_manu
JMPCN pas_mise_a_jour_granulat
	LD Info_Plant_In_Auto
	AND manu_logiciel
	JMPCN test_pupitre_granulat
		LD Numero_manu_Gra
		ST Numero_manu_Gra_cumul (* Mémoire pour utiliser le n° granulat pour le cumul *)
		JMP pas_mise_a_jour_granulat
	test_pupitre_granulat:
	LDN Info_Plant_In_Auto
	JMPCN pas_mise_a_jour_granulat
		LD Numero_pupitre_Gra_cumul
		ST Numero_manu_Gra_cumul
pas_mise_a_jour_granulat:
  
(* Déterminer le n° des trémies sur les chaines granulat *)
LD Numero_manu_Gra_cumul
le Conf_granulat1_nb_tremies
JMPCN tremie_sur_chaine_2
	(* Conf pour dosage sur chaine granulat 1*)
	LD Poids_instantane_Gra1
	ST manu_Poids_instantane_Gra
	LD Conf_granulat1_tps_stabilisation
	ST Manu_Gra_tps_stabilisation
	LD Conf_granulat1_tps_max_pesage
	ST Manu_Gra_tps_max_pesage
	LD Conf_granulat1_ecart_stabilite
	ST Manu_Gra_ecart_stabilite
	LD 1
	ST numero_chaine_en_cours_manu_gra
	JMP fin_calcul_de_chaine
tremie_sur_chaine_2:
	(* Conf pour dosage sur chaine granulat 2*)
	LD Poids_instantane_Gra2  
	ST manu_Poids_instantane_Gra
	LD Conf_granulat2_tps_stabilisation
	ST Manu_Gra_tps_stabilisation
	LD Conf_granulat2_tps_max_pesage
	ST Manu_Gra_tps_max_pesage
	LD Conf_granulat2_ecart_stabilite
	ST Manu_Gra_ecart_stabilite
	LD 2
	ST numero_chaine_en_cours_manu_gra
fin_calcul_de_chaine:

CAL Cumul_Gra_manu (mode := Stock_Gra_manu,
		mode_m := Stock_Gra_manu,
		cd_do_g1 := Doser_Gra_manu,
		p_instan := manu_Poids_instantane_Gra,
		t_stab := Manu_Gra_tps_stabilisation,
		t_m_stab := Manu_Gra_tps_max_pesage,
		e_stab := Manu_Gra_ecart_stabilite,
		boite_n := deval_bn,
		p_entree := Pese_Gra_manu[Numero_manu_Gra_cumul])
LD Cumul_Gra_manu.deptstab
ST Cumul_Gra_manu_deptstab
S Cumul_Gra_manu_stable (* Ligne ajoutée car il n'y a pas d'alarme en manu *)
LD Cumul_Gra_manu.stable
S Cumul_Gra_manu_stable
    
LD Numero_manu_Gra_cumul
EQ 0
JMPC ne_pas_stocker_manu_granulat
	CAL fm_cumul_Gra_manu_stable (CLK := Cumul_Gra_manu_stable)
	LD fm_cumul_Gra_manu_stable.Q
	JMPCN ne_pas_stocker_manu_granulat
		LD Cumul_Gra_manu.p_encour
		INT_TO_UDINT
		ADD Pese_Gra_manu[Numero_manu_Gra_cumul]
		ST Pese_Gra_manu[Numero_manu_Gra_cumul]
		LD numero_chaine_en_cours_manu_gra
		EQ 1
		JMPC RaZ_num_manu_pup_Gra1
		LD numero_chaine_en_cours_manu_gra
		EQ 2
		JMPC RaZ_num_manu_pup_Gra2
		JMP RaZ_num_manu_pup_Gra__fin
		RaZ_num_manu_pup_Gra1 :
			LD 0
			ST Numero_manu_pup_Gra1
			JMP RaZ_num_manu_pup_Gra__fin
		RaZ_num_manu_pup_Gra2 :
			LD 0
			ST Numero_manu_pup_Gra2
			JMP RaZ_num_manu_pup_Gra__fin
		RaZ_num_manu_pup_Gra__fin :
ne_pas_stocker_manu_granulat:
LD Cumul_Gra_manu_stable
R Stabilite_Gra_en_cours
LD TRUE
R Cumul_Gra_manu_stable

(* Vidange d'une bascule dans le tapis peseur Gra1 : Il faut attendre la fin des *)
(* vidanges à destination du tapis pour autoriser le dosage d'une trémie pesée en *)
(* manuel logiciel, pour ne pas que le cumul du tapis soit faussé. *)
(* On utilisera la sortie de la temporisation pour autoriser un dosage. *)
LD FALSE
OR (	TRUE
	AND (	Cde_vidange_bascule_Eau1
		OR Cde_vid_basc_Eau1_Ppe
	)
	AND (	Conf_Eau_dest_basc[1]
		EQ 1 (*Eau 1 vers Gra1 *)
	)
)
OR (	TRUE
	AND (	Cde_vidange_bascule_Eau2
		OR Cde_vid_basc_Eau2_Ppe
	)
	AND (	Conf_Eau_dest_basc[2]
		EQ 1 (*Eau 2 vers Gra1 *)
	)
)
STN TON_fin_vidange_dans_Gra1.IN
CAL TON_fin_vidange_dans_Gra1(PT:=Conf_granulat1_tps_max_stab)

(* Vidange d'une bascule dans le tapis peseur Gra2 : Il faut attendre la fin des *)
(* vidanges à destination du tapis pour autoriser le dosage d'une trémie pesée en *)
(* manuel logiciel, pour ne pas que le cumul du tapis soit faussé. *)
(* On utilisera la sortie de la temporisation pour autoriser un dosage. *)
LD FALSE
OR (	TRUE
	AND (	Cde_vidange_bascule_Eau1
		OR Cde_vid_basc_Eau1_Ppe
	)
	AND (	Conf_Eau_dest_basc[1]
		EQ 2 (*Eau 1 vers Gra2 *)
	)
)
OR (	TRUE
	AND (	Cde_vidange_bascule_Eau2
		OR Cde_vid_basc_Eau2_Ppe
	)
	AND (	Conf_Eau_dest_basc[2]
		EQ 2 (*Eau 2 vers Gra2 *)
	)
)
STN TON_fin_vidange_dans_Gra2.IN
CAL TON_fin_vidange_dans_Gra2(PT:=Conf_granulat2_tps_max_stab)



(******************************************************************************************)
(*******************************     CIMENT       *****************************************)
(******************************************************************************************)  

(*********************    Mode centrale en auto          *********************************)
(* CIMENT 1 *)
(* Doser=1 si on à une cde de dosage auto------------------------------------------*)
LD Cde_dosage_Cim[Numero_produit_Cim1]
AND Stock_Cim1_auto
ST Doser_cim1_auto

CAL fm_doser_Cim1_auto( CLK := Doser_cim1_auto)
LD fm_doser_Cim1_auto.Q
JMPCN pas_mise_a_jour_ciment1_auto
	LD Numero_produit_Cim1
	ST Numero_produit_Cim1_cumul (* Mémoire pour utiliser le n° ciment pour le cumul *)
pas_mise_a_jour_ciment1_auto: 

CAL Cumul_Cim1_auto (mode := Stock_Cim1_auto,
		cd_do_g1 := Doser_cim1_auto,
		p_instan := Poids_instantane_Cim1,
		t_stab := Conf_cim1_tps_stabilisation,
		t_m_stab := Conf_cim1_tps_max_pesage,
		e_stab := Conf_cim1_ecart_stabilite,
		fin_dos := Pesee_suivante_Cim1)
LD Cumul_Cim1_auto.stable
S Cumul_Cim1_auto_stable
LD Cumul_Cim1_auto.deptstab
ST Cumul_Cim1_auto_deptstab

LD Numero_produit_Cim1_cumul
EQ 0
JMPC ne_pas_stocker_auto_ciment1

CAL fm_cumul_Cim1_auto_stable (CLK := Cumul_Cim1_auto_stable)
LD fm_cumul_Cim1_auto_stable.Q
JMPCN ne_pas_stocker_auto_ciment1
	LD Cumul_Cim1_auto.p_encour
	INT_TO_UDINT
	ADD Pese_Cim_auto[Numero_produit_Cim1_cumul]
	ST Pese_Cim_auto[Numero_produit_Cim1_cumul]
ne_pas_stocker_auto_ciment1:
LD TRUE
R Cumul_Cim1_auto_stable

(* CIMENT 2 *)
(* Doser=1 si on à une cde de dosage auto------------------------------------------*)
LD Cde_dosage_Cim[Numero_produit_Cim2]
AND Stock_Cim2_auto
ST Doser_cim2_auto

CAL fm_doser_Cim2_auto( CLK := Doser_cim2_auto)
LD fm_doser_Cim2_auto.Q
JMPCN pas_mise_a_jour_ciment2_auto
	LD Numero_produit_Cim2
	ST Numero_produit_Cim2_cumul (* Mémoire pour utiliser le n° ciment pour le cumul *)
pas_mise_a_jour_ciment2_auto: 

CAL Cumul_Cim2_auto (mode := Stock_Cim2_auto,
		cd_do_g1 := Doser_cim2_auto,
		p_instan := Poids_instantane_Cim2,
		t_stab := Conf_cim2_tps_stabilisation,
		t_m_stab := Conf_cim2_tps_max_pesage,
		e_stab := Conf_cim2_ecart_stabilite,
		fin_dos := Pesee_suivante_Cim2)
LD Cumul_Cim2_auto.stable
S Cumul_Cim2_auto_stable
LD Cumul_Cim2_auto.deptstab
ST Cumul_Cim2_auto_deptstab

LD Numero_produit_Cim2_cumul
EQ 0
JMPC ne_pas_stocker_auto_ciment2

CAL fm_cumul_Cim2_auto_stable (CLK := Cumul_Cim2_auto_stable)
LD fm_cumul_Cim2_auto_stable.Q
JMPCN ne_pas_stocker_auto_ciment2
	LD Cumul_Cim2_auto.p_encour
	INT_TO_UDINT
	ADD Pese_Cim_auto[Numero_produit_Cim2_cumul]
	ST Pese_Cim_auto[Numero_produit_Cim2_cumul]
ne_pas_stocker_auto_ciment2:
LD TRUE
R Cumul_Cim2_auto_stable


(****************          Mode centrale en MANU LOGICIEL et PUPITRE        ***********************)
(* Modif M.D. 13/10/2008 : Suivi stock avec Pupitre comuniquant 
Il faut que le suivi de conso prenne en compte les commande API
pour les pupitre Inde et Roumane (dans ce cas, la validation BN est
toujours active) *) 
LD BP_dosage_Cim_1
OR Cde_dosage_Cim[1]
ST Stock_manu_Cim_1

LD BP_dosage_Cim_2
OR Cde_dosage_Cim[2]
ST Stock_manu_Cim_2

LD BP_dosage_Cim_3
OR Cde_dosage_Cim[3]
ST Stock_manu_Cim_3

LD BP_dosage_Cim_4
OR Cde_dosage_Cim[4]
ST Stock_manu_Cim_4

LD BP_dosage_Cim_5
OR Cde_dosage_Cim[5]
ST Stock_manu_Cim_5

LD BP_dosage_Cim_6
OR Cde_dosage_Cim[6]
ST Stock_manu_Cim_6

CAL Numero_Cim_pupitre (BP_1 := Stock_manu_Cim_1,
			BP_2 := Stock_manu_Cim_2,
			BP_3 := Stock_manu_Cim_3,
			BP_4 := Stock_manu_Cim_4,
			BP_5 := Stock_manu_Cim_5,
			BP_6 := Stock_manu_Cim_6,
			valid_bn := Cde_validation_boite_noire)
LD Numero_Cim_pupitre.numero
ST Numero_pupitre_cim_cumul
LD Numero_Cim_pupitre.commande
ST Presence_cde_pupitre_Cim
(* Modif M.D. 13/10/2008 : Suivi stock avec Pupitre communiquant *)

(* Doser=1 si on à une cde de dosage MANU LOGICIEL---------------------------------------*)
LD TRUE
AND (Cde_dosage_Cim[Numero_manu_Cim]
	OR Presence_cde_pupitre_Cim
)
AND Stock_Cim_manu
ST Doser_cim_manu

(* Sur un front montant de la commande de dosage, on interdit le dosage suivant *)
CAL fd_doser_Cim_manu(CLK := Doser_cim_manu)
LD fd_doser_Cim_manu.Q
S Stabilite_Cim_en_cours

(* Sur un front montant de la commande de dosage, on mémorise le numéro de l'organe utilisé *)
CAL fm_doser_Cim_manu(CLK := Doser_cim_manu)
LD fm_doser_Cim_manu.Q
ANDN Stabilite_Cim_en_cours (* Interdire le chg numero si stabilité en cours *)
JMPCN pas_mise_a_jour_ciment
	LD Info_Plant_In_Auto
	AND manu_logiciel
	JMPCN test_pupitre_ciment
		LD Numero_manu_Cim
		ST Numero_manu_Cim_cumul (* Mémoire pour utiliser le n° ciment pour le cumul *)
		JMP pas_mise_a_jour_ciment
	test_pupitre_ciment:
	LDN Info_Plant_In_Auto
	JMPCN pas_mise_a_jour_ciment
		LD Numero_pupitre_cim_cumul
		ST Numero_manu_Cim_cumul
pas_mise_a_jour_ciment:

(* Déterminer le n° des silos sur les chaines ciments *)

LD Numero_manu_cim_cumul
le Conf_cim1_nb_silos
JMPCN silo_sur_chaine_2
	(* Conf pour dosage sur chaine granulat 1*)
	LD Poids_instantane_Cim1
	ST manu_Poids_instantane_Cim
	LD Conf_cim1_tps_stabilisation
	ST Manu_Cim_tps_stabilisation
	LD Conf_cim1_tps_max_pesage
	ST Manu_Cim_tps_max_pesage
	LD Conf_cim1_ecart_stabilite
	ST Manu_Cim_ecart_stabilite
	LD 1
	ST numero_chaine_en_cours_manu_Cim
	JMP fin_calcul_de_chaine_ciment
silo_sur_chaine_2:
	(* Conf pour dosage sur chaine granulat 2*)
	LD Poids_instantane_Cim2  
	ST manu_Poids_instantane_Cim
	LD Conf_Cim2_tps_stabilisation
	ST Manu_Cim_tps_stabilisation
	LD Conf_Cim2_tps_max_pesage
	ST Manu_Cim_tps_max_pesage
	LD Conf_Cim2_ecart_stabilite
	ST Manu_Cim_ecart_stabilite
	LD 2
	ST numero_chaine_en_cours_manu_Cim
fin_calcul_de_chaine_ciment:

CAL Cumul_Cim_manu (mode := Stock_Cim_manu,
		mode_m := Stock_Cim_manu,
		cd_do_g1 := Doser_cim_manu,
		p_instan := manu_Poids_instantane_Cim,
		t_stab := Manu_Cim_tps_stabilisation,
		t_m_stab := Manu_Cim_tps_max_pesage,
		e_stab := Manu_Cim_ecart_stabilite,
		boite_n := deval_bn,
		p_entree := Pese_Cim_manu[Numero_manu_Cim_cumul])
LD Cumul_Cim_manu.deptstab
ST Cumul_Cim_manu_deptstab
S Cumul_Cim_manu_stable (* Ligne ajoutée car il n'y a pas d'alarme en manu *)
LD Cumul_Cim_manu.stable
S Cumul_Cim_manu_stable

LD Numero_manu_Cim_cumul
EQ 0
JMPC ne_pas_stocker_manu_ciment
	CAL fm_cumul_Cim_manu_stable (CLK := Cumul_Cim_manu_stable)
	LD fm_cumul_Cim_manu_stable.Q
	JMPCN ne_pas_stocker_manu_ciment
		LD Cumul_Cim_manu.p_encour
		INT_TO_UDINT
		ADD Pese_Cim_manu[Numero_manu_Cim_cumul]
		ST Pese_Cim_manu[Numero_manu_Cim_cumul]
		LD numero_chaine_en_cours_manu_Cim
		EQ 1
		JMPC RaZ_num_manu_pup_Cim1
		LD numero_chaine_en_cours_manu_gra
		EQ 2
		JMPC RaZ_num_manu_pup_Cim2
		JMP RaZ_num_manu_pup_Cim_fin
		RaZ_num_manu_pup_Cim1 :
			LD 0
			ST Numero_manu_pup_Cim1
			JMP RaZ_num_manu_pup_Cim_fin
		RaZ_num_manu_pup_Cim2 :
			LD 0
			ST Numero_manu_pup_Cim2
			JMP RaZ_num_manu_pup_Cim_fin
		RaZ_num_manu_pup_Cim_fin :
ne_pas_stocker_manu_ciment:
LD Cumul_Cim_manu_stable
R Stabilite_Cim_en_cours
LD TRUE
R Cumul_Cim_manu_stable


(******************************************************************************************)
(*******************************         EAU      *****************************************)
(******************************************************************************************)

(*********************    Mode centrale en auto          *********************************)

(* Eau 1 *)

(* Doser=1 si on à une cde de dosage auto------------------------------------------*)
LD Cde_dosage_Eau[Numero_produit_Eau1]
AND Stock_Eau1_auto
AND (Conf_Eau_dest_cuves[Numero_produit_Eau1] (* Mettre à jour le cumul uniquement si pesé / Les sections "*cumul_CCR*" géreront les produits comptés *)(* Ajout R.C. 19/08/2011 P852 *)
	EQ 0
)
ST Doser_eau1_auto

CAL fm_doser_Eau1_auto(CLK := Doser_eau1_auto)
LD fm_doser_Eau1_auto.Q
JMPCN pas_mise_a_jour_eau1_auto
	LD Numero_produit_Eau1
	ST Numero_produit_Eau1_cumul (* Mémoire pour utiliser le n° eau pour le cumul *)
pas_mise_a_jour_eau1_auto: 

CAL Cumul_Eau1_auto (mode :=Stock_Eau1_auto,
		cd_do_g1 := Doser_eau1_auto,
		p_instan :=Poids_instantane_Eau1,
		t_stab := Conf_eau1_tps_stabilisation,
		t_m_stab :=Conf_eau1_tps_max_pesage,
		e_stab :=Conf_eau1_ecart_stabilite,
		fin_dos := Pesee_suivante_Eau1)
LD Cumul_Eau1_auto.stable
S Cumul_Eau1_auto_stable
LD Cumul_Eau1_auto.deptstab
ST Cumul_Eau1_auto_deptstab

LD Numero_produit_Eau1_cumul
EQ 0
JMPC ne_pas_stocker_auto_eau1
	CAL fm_cumul_Eau1_auto_stable (CLK := Cumul_Eau1_auto_stable)
	LD fm_cumul_Eau1_auto_stable.Q
	JMPCN ne_pas_stocker_auto_eau1
		LD Cumul_Eau1_auto.p_encour
		INT_TO_UDINT
		ADD Pese_Eau_auto[Numero_produit_Eau1_cumul]
		ST Pese_Eau_auto[Numero_produit_Eau1_cumul]
ne_pas_stocker_auto_eau1:
LD TRUE
R Cumul_Eau1_auto_stable

(* Eau 2 *)

(* Doser=1 si on à une cde de dosage auto------------------------------------------*)
LD Cde_dosage_Eau[Numero_produit_Eau2]
AND Stock_Eau2_auto
AND (Conf_Eau_dest_cuves[Numero_produit_Eau2] (* Mettre à jour le cumul uniquement si pesé / Les sections "*cumul_CCR*" géreront les produits comptés *)(* Ajout R.C. 19/08/2011 P852 *)
	EQ 0
)
ST Doser_eau2_auto

CAL fm_doser_Eau2_auto(CLK := Doser_eau2_auto)
LD fm_doser_Eau2_auto.Q
JMPCN pas_mise_a_jour_eau2_auto
	LD Numero_produit_Eau2
	ST Numero_produit_Eau2_cumul (* Mémoire pour utiliser le n° eau pour le cumul *)
pas_mise_a_jour_eau2_auto: 

CAL Cumul_Eau2_auto (mode :=Stock_Eau2_auto,
		cd_do_g1 := Doser_eau2_auto,
		p_instan :=Poids_instantane_Eau2,
		t_stab := Conf_eau2_tps_stabilisation,
		t_m_stab :=Conf_eau2_tps_max_pesage,
		e_stab :=Conf_eau2_ecart_stabilite,
		fin_dos := Pesee_suivante_Eau2)
LD Cumul_Eau2_auto.stable
S Cumul_Eau2_auto_stable
LD Cumul_Eau2_auto.deptstab
ST Cumul_Eau2_auto_deptstab

LD Numero_produit_Eau2_cumul
EQ 0
JMPC ne_pas_stocker_auto_eau2
	CAL fm_cumul_Eau2_auto_stable (CLK := Cumul_Eau2_auto_stable)
	LD fm_cumul_Eau2_auto_stable.Q
	JMPCN ne_pas_stocker_auto_eau2
		LD Cumul_Eau2_auto.p_encour
		INT_TO_UDINT
		ADD Pese_Eau_auto[Numero_produit_Eau2_cumul]
		ST Pese_Eau_auto[Numero_produit_Eau2_cumul]
ne_pas_stocker_auto_eau2:
LD TRUE
R Cumul_Eau2_auto_stable


(****************          Mode centrale en MANU LOGICIEL et PUPITRE        ***********************)
(* Modif M.D. 13/10/2008 : Suivi stock avec Pupitre communiquant 
Il faut que le suivi de conso prenne en compte les commande API
pour les pupitre Inde et Roumain (dans ce cas, la validation BN est
toujours active) *) 
LD BP_dosage_Eau_1
OR Cde_dosage_Eau[1]
ST Stock_manu_Eau_1

LD BP_dosage_Eau_2
OR Cde_dosage_Eau[2]
ST Stock_manu_Eau_2

LD BP_dosage_Eau_3
OR Cde_dosage_Eau[3]
ST Stock_manu_Eau_3

LD BP_dosage_Eau_4
OR Cde_dosage_Eau[4]
ST Stock_manu_Eau_4

CAL Numero_Eau_pupitre (BP_1  :=Stock_manu_Eau_1,
			BP_2  := Stock_manu_Eau_2,
			BP_3  := Stock_manu_Eau_3,
			BP_4  := Stock_manu_Eau_4,
			valid_bn := Cde_validation_boite_noire)
LD Numero_Eau_pupitre.numero
ST Numero_pupitre_eau_cumul
LD Numero_Eau_pupitre.commande
ST Presence_cde_pupitre_Eau
(* Modif M.D. 13/10/2008 : Suivi stock avec Pupitre communiquant *)  
(* Doser=1 si on à une cde de dosage MANU LOGICIEL---------------------------------------*)
LD TRUE
AND (Cde_dosage_Eau[Numero_manu_Eau]
	OR Presence_cde_pupitre_Eau
)
AND Stock_Eau_manu
AND (Conf_Eau_dest_cuves[Numero_manu_Eau] (* Mettre à jour le cumul uniquement si pesé / Les sections "*cumul_CCR*" géreront les produits comptés *)(* Ajout R.C. 19/08/2011 P852 *)
	EQ 0
)
ST Doser_eau_manu

(* Sur un front montant de la commande de dosage, on interdit le dosage suivant*)
CAL fd_doser_Eau_manu(CLK := Doser_eau_manu)
LD fd_doser_Eau_manu.Q
S Stabilite_Eau_en_cours

(* Sur un front montant de la commande de dosage, on mémorise le numéro de l'organne utilisé*)
CAL fm_doser_Eau_manu(CLK := Doser_eau_manu)
LD fm_doser_Eau_manu.Q
ANDN Stabilite_Eau_en_cours (* Interdire le chg numero si stabilité en cours *)
JMPCN pas_mise_a_jour_eau
	LD Info_Plant_In_Auto
	AND manu_logiciel
	JMPCN test_pupitre_eau
		LD Numero_manu_Eau
		ST Numero_manu_Eau_cumul (* Mémoire pour utiliser le n° eau pour le cumul *)
		JMP pas_mise_a_jour_eau
	test_pupitre_eau:
	LDN Info_Plant_In_Auto
	JMPCN pas_mise_a_jour_eau
		LD Numero_pupitre_eau_cumul
		ST Numero_manu_Eau_cumul
pas_mise_a_jour_eau:

(* Déterminer le n° des cuves sur les chaines eaux *)
LD Numero_manu_Eau_cumul
le Conf_eau1_nb_cuves
JMPCN cuve_sur_chaine_2
	(* Conf pour dosage sur chaine eau 1*)
	LD Poids_instantane_Eau1
	ST manu_Poids_instantane_Eau
	LD Conf_Eau1_tps_stabilisation
	ST Manu_Eau_tps_stabilisation
	LD Conf_Eau1_tps_max_pesage
	ST Manu_Eau_tps_max_pesage
	LD Conf_Eau1_ecart_stabilite
	ST Manu_Eau_ecart_stabilite
	LD 1
	ST numero_chaine_en_cours_manu_eau
	JMP fin_calcul_de_chaine_eau
cuve_sur_chaine_2:
	(* Conf pour dosage sur chaine eau 2*)
	LD Poids_instantane_Eau2  
	ST manu_Poids_instantane_Eau
	LD Conf_Eau2_tps_stabilisation
	ST Manu_Eau_tps_stabilisation
	LD Conf_Eau2_tps_max_pesage
	ST Manu_Eau_tps_max_pesage
	LD Conf_Eau2_ecart_stabilite
	ST Manu_Eau_ecart_stabilite
	LD 2
	ST numero_chaine_en_cours_manu_eau
fin_calcul_de_chaine_eau:

CAL Cumul_Eau_manu (mode := Stock_Eau_manu,
		mode_m := Stock_Eau_manu,
		cd_do_g1 := Doser_eau_manu,
		p_instan := manu_Poids_instantane_Eau,
		t_stab := Manu_Eau_tps_stabilisation,
		t_m_stab := Manu_Eau_tps_max_pesage,
		e_stab := Manu_Eau_ecart_stabilite,
		boite_n := deval_bn,
		p_entree := Pese_Eau_manu[Numero_manu_Eau_cumul])
LD Cumul_Eau_manu.deptstab
ST Cumul_Eau_manu_deptstab
S Cumul_Eau_manu_stable (* Ligne ajoutée car il n'y a pas d'alarme en manu *)
LD Cumul_Eau_manu.stable
S Cumul_Eau_manu_stable

LD Numero_manu_Eau_cumul
EQ 0
JMPC ne_pas_stocker_manu_eau
	CAL fm_cumul_Eau_manu_stable (CLK := Cumul_Eau_manu_stable)
	LD fm_cumul_Eau_manu_stable.Q
	JMPCN ne_pas_stocker_manu_eau
		LD Cumul_Eau_manu.p_encour
		INT_TO_UDINT
		ADD Pese_Eau_manu[Numero_manu_Eau_cumul]
		ST Pese_Eau_manu[Numero_manu_Eau_cumul]
		LD numero_chaine_en_cours_manu_eau
		EQ 1
		JMPC RaZ_num_manu_pup_Eau1
		LD numero_chaine_en_cours_manu_eau
		EQ 2
		JMPC RaZ_num_manu_pup_Eau2
		JMP RaZ_num_manu_pup_Eau_fin
		RaZ_num_manu_pup_Eau1 :
			LD 0
			ST Numero_manu_pup_Eau1
			JMP RaZ_num_manu_pup_Eau_fin
		RaZ_num_manu_pup_Eau2 :
			LD 0
			ST Numero_manu_pup_Eau2
			JMP RaZ_num_manu_pup_Eau_fin
		RaZ_num_manu_pup_Eau_fin :
ne_pas_stocker_manu_eau:
LD Cumul_Eau_manu_stable
R Stabilite_Eau_en_cours
LD TRUE
R Cumul_Eau_manu_stable


(* Cuve comptée à destination de Eau1 : Il faut attendre la fin des dosages *)
(* par pompe à destination de la bascule Eau1 pour autoriser le dosage d'une *)
(* cuve pesée en manuel logiciel, pour ne pas que le cumul de la bascule Eau1 *)
(* soit faussé. *)
(* On utilisera la sortie de la temporisation pour autoriser un dosage. *)
(* - Détecter s'il y a un dosage compté vers Eau1 *)
LD TRUE
R Detect_pompe_vers_Eau1 (* Init *)
LD 0
ST idx_ppe (* Init *)
detect_pompe_vers_eau1_1:
	LD idx_ppe
	ADD 1
	ST idx_ppe
	GT Conf_ppe_nb_ppes
	JMPC detect_pompe_vers_eau1__fin
		LD Conf_ppe_dest[idx_ppe]
		EQ 13
		JMPCN detect_pompe_vers_eau1_1
		(* La pompe est à destination de la bascule Eau1 *)
		LD TRUE
		AND (Conf_Adj_origine_pompes[idx_ppe]
			GE 1
		)
		AND (Conf_Adj_origine_pompes[idx_ppe]
			LT 20
		)
		JMPCN detect_pompe_vers_eau1_1
		(* La pompe est associée à une cuve *)
		LD Cde_dosage_Ppe[idx_ppe]
		OR Cde_dosage_Adj[Conf_Adj_origine_pompes[idx_ppe]] (* Note : en manu pupitre, on ne passe pas forcément par "Cde_dosage_Ppe[]" *)
		S Detect_pompe_vers_Eau1 (* La pompe est commandée *)
		JMPC detect_pompe_vers_eau1__fin (* Inutile de parcourir les autres pompes *)
	JMP detect_pompe_vers_eau1_1 (* Pompe suivante *)
detect_pompe_vers_eau1__fin:
(* - Attendre l'après coulant de la pompe et la stabilisation de la bascule *)
LDN Detect_pompe_vers_Eau1
ST TON_fin_dosage_ppe_vers_Eau1.IN
LD conf_ppe_apres_coulant
INT_TO_TIME
MUL 1000 (* conversion de seconde en millisecondes *)
ADD Conf_eau1_tps_max_stab
ST TON_fin_dosage_ppe_vers_Eau1.PT
CAL TON_fin_dosage_ppe_vers_Eau1

(* Vidange d'une bascule dans la bascule Eau1 : Il faut attendre la fin des *)
(* vidanges à destination de la bascule Eau1 pour autoriser le dosage d'une *)
(* cuve pesée en manuel logiciel, pour ne pas que le cumul de la bascule Eau1 *)
(* soit faussé. *)
(* On utilisera la sortie de la temporisation pour autoriser un dosage. *)
LD FALSE
OR (	Cde_vidange_bascule_Adj
	AND Conf_adjuvant_comp1_vers_eau1
)
OR (	Cde_vidange_bascule_Adj_Comp
	AND Conf_adjuvant_comp2_vers_eau1
)
STN TON_fin_vidange_dans_Eau1.IN
CAL TON_fin_vidange_dans_Eau1(PT:=Conf_eau1_tps_max_stab)




(******************************************************************************************)
(*******************************     ADJUVANT     *****************************************)
(******************************************************************************************)

(*********************    Mode centrale en auto          *********************************)

(* Doser=1 si on à une cde de dosage auto------------------------------------------*)
LD Cde_dosage_Adj[Numero_produit_Adj]
AND Stock_Adj_auto
AND (Conf_Adj_dest_cuves[Numero_produit_Adj] (* Mettre à jour le cumul uniquement si pesé / Les sections "*cumul_CCR*" géreront les produits comptés *)(* Ajout R.C. 19/08/2011 P852 *)
	EQ 0
)
ST Doser_Adj_auto

CAL fm_doser_Adj_auto(CLK := Doser_Adj_auto)
LD fm_doser_Adj_auto.Q
JMPCN pas_mise_a_jour_adjuvant_auto
	LD Numero_produit_Adj
	ST Numero_produit_Adj_cumul (* Mémoire pour utiliser le n° adjuvant pour le cumul *)
pas_mise_a_jour_adjuvant_auto: 

CAL Cumul_Adj_auto (mode := Stock_Adj_auto,
		cd_do_g1 := Doser_Adj_auto,
		p_instan := Poids_instantane_Adj,
		t_stab := Conf_adjuvant_basc_tps_stab,
		t_m_stab := Conf_adjuvant_basc_tps_max_stab,
		e_stab := Conf_adjuvant_ecart_stabilite,
		fin_dos := Pesee_suivante_Adj)
LD Cumul_Adj_auto.stable
S Cumul_Adj_auto_stable
LD Cumul_Adj_auto.deptstab
ST Cumul_Adj_auto_deptstab

LD Numero_produit_Adj_cumul
EQ 0
JMPC ne_pas_stocker_auto_adjuvant

CAL fm_cumul_Adj_auto_stable(CLK := Cumul_Adj_auto_stable)
LD fm_cumul_Adj_auto_stable.Q
JMPCN ne_pas_stocker_auto_adjuvant
	LD Cumul_Adj_auto.p_encour
	INT_TO_UDINT
	ADD Pese_Adj_auto[Numero_produit_Adj_cumul]
	ST Pese_Adj_auto[Numero_produit_Adj_cumul]
ne_pas_stocker_auto_adjuvant:

LD TRUE
R Cumul_Adj_auto_stable

(****************          Mode centrale en MANU LOGICIEL et PUPITRE        ***********************)
(* Modif M.D. 13/10/2008 : Suivi stock avec Pupitre communiquant 
Il faut que le suivi de conso prenne en compte les commande API
pour les pupitre Inde et Roumain (dans ce cas, la validation BN est
toujours active) *) 
LD BP_dosage_Adj_1
OR Cde_dosage_Adj[1]
ST Stock_manu_Adj_1

LD BP_dosage_Adj_2
OR Cde_dosage_Adj[2]
ST Stock_manu_Adj_2

LD BP_dosage_Adj_3
OR Cde_dosage_Adj[3]
ST Stock_manu_Adj_3

LD BP_dosage_Adj_4
OR Cde_dosage_Adj[4]
ST Stock_manu_Adj_4

LD BP_dosage_Adj_5
OR Cde_dosage_Adj[5]
ST Stock_manu_Adj_5

LD BP_dosage_Adj_6
OR Cde_dosage_Adj[6]
ST Stock_manu_Adj_6

LD BP_dosage_Adj_7
OR Cde_dosage_Adj[7]
ST Stock_manu_Adj_7

LD BP_dosage_Adj_8
OR Cde_dosage_Adj[8]
ST Stock_manu_Adj_8

LD BP_dosage_Adj_9
OR Cde_dosage_Adj[9]
ST Stock_manu_Adj_9

LD BP_dosage_Adj_10
OR Cde_dosage_Adj[10]
ST Stock_manu_Adj_10

LD BP_dosage_Adj_11
OR Cde_dosage_Adj[11]
ST Stock_manu_Adj_11

LD BP_dosage_Adj_12
OR Cde_dosage_Adj[12]
ST Stock_manu_Adj_12

LD BP_dosage_Adj_13
OR Cde_dosage_Adj[13]
ST Stock_manu_Adj_13

LD BP_dosage_Adj_14
OR Cde_dosage_Adj[14]
ST Stock_manu_Adj_14

LD BP_dosage_Adj_15
OR Cde_dosage_Adj[15]
ST Stock_manu_Adj_15

LD BP_dosage_Adj_16
OR Cde_dosage_Adj[16]
ST Stock_manu_Adj_16

LD BP_dosage_Adj_17
OR Cde_dosage_Adj[17]
ST Stock_manu_Adj_17

LD BP_dosage_Adj_18
OR Cde_dosage_Adj[18]
ST Stock_manu_Adj_18

LD BP_dosage_Adj_19
OR Cde_dosage_Adj[19]
ST Stock_manu_Adj_19

LD BP_dosage_Adj_20
OR Cde_dosage_Adj[20]
ST Stock_manu_Adj_20

CAL Numero_Adj_pupitre (BP_1 := Stock_manu_Adj_1,
			BP_2 := Stock_manu_Adj_2,
			BP_3 := Stock_manu_Adj_3,
			BP_4 := Stock_manu_Adj_4,
			BP_5 := Stock_manu_Adj_5,
			BP_6 := Stock_manu_Adj_6,
			BP_7 := Stock_manu_Adj_7,
			BP_8 := Stock_manu_Adj_8,
			BP_9 := Stock_manu_Adj_9,
			BP_10 := Stock_manu_Adj_10,
			BP_11 := Stock_manu_Adj_11,
			BP_12 := Stock_manu_Adj_12,
			BP_13 := Stock_manu_Adj_13,
			BP_14 := Stock_manu_Adj_14,
			BP_15 := Stock_manu_Adj_15,
			BP_16 := Stock_manu_Adj_16,
			BP_17 := Stock_manu_Adj_17,
			BP_18 := Stock_manu_Adj_18,
			BP_19 := Stock_manu_Adj_19,
			BP_20 := Stock_manu_Adj_20,
			valid_bn := Cde_validation_boite_noire)
LD Numero_Adj_pupitre.numero
ST Numero_pupitre_adjuvant_cumul
LD Numero_Adj_pupitre.commande
ST Presence_cde_pupitre_Adj
(* Modif M.D. 13/10/2008 : Suivi stock avec Pupitre communiquant *)


(* Doser=1 si on à une cde de dosage MANU LOGICIEL---------------------------------------*)
LD TRUE
AND (Cde_dosage_Adj[Numero_manu_Adj]
	OR Presence_cde_pupitre_Adj
)
AND Stock_Adj_manu
AND (Conf_Adj_dest_cuves[Numero_manu_Adj] (* Mettre à jour le cumul uniquement si pesé / Les sections "*cumul_CCR*" géreront les produits comptés *)(* Ajout R.C. 19/08/2011 P852 *)
	EQ 0
)
ST Doser_Adj_manu

(* Sur un front montant de la commande de dosage, on interdit le dosage suivant*)
CAL fd_doser_Adj_manu(CLK := Doser_Adj_manu)
LD fd_doser_Adj_manu.Q
S Stabilite_Adj_en_cours

(* Sur un front montant de la commande de dosage, on mémorise le numéro de l'organe utilisé*)
CAL fm_doser_Adj_manu(CLK := Doser_Adj_manu)
LD fm_doser_Adj_manu.Q
ANDN Stabilite_Adj_en_cours (* Interdire le chg numero si stabilité en cours*)
JMPCN pas_mise_a_jour_adjuvant
	LD Info_Plant_In_Auto
	AND manu_logiciel
	JMPCN test_pupitre_adjuvant
		LD Numero_manu_Adj
		ST Numero_manu_Adj_cumul (* Mémoire pour utiliser le n° adjuvant pour le cumul *)
		JMP pas_mise_a_jour_adjuvant
	test_pupitre_adjuvant:
	LDN Info_Plant_In_Auto
	JMPCN pas_mise_a_jour_adjuvant
		LD Numero_pupitre_adjuvant_cumul
		ST Numero_manu_Adj_cumul
pas_mise_a_jour_adjuvant:



CAL Cumul_Adj_manu (mode := Stock_Adj_manu,
		mode_m := Stock_Adj_manu,
		cd_do_g1 := Doser_Adj_manu,
		p_instan := Poids_instantane_Adj,
		t_stab := Conf_adjuvant_basc_tps_stab,
		t_m_stab := Conf_adjuvant_basc_tps_max_stab,
		e_stab := Conf_adjuvant_ecart_stabilite,
		boite_n := deval_bn,
		p_entree := Pese_Adj_manu[Numero_manu_Adj_cumul])
LD Cumul_Adj_manu.deptstab
ST Cumul_Adj_manu_deptstab
S Cumul_Adj_manu_stable (* Ligne ajoutée car il n'y a pas d'alarme en manu *)
LD Cumul_Adj_manu.stable
S Cumul_Adj_manu_stable

LD Numero_manu_Adj_cumul
EQ 0
JMPC ne_pas_stocker_manu_adjuvant

CAL fm_cumul_Adj_manu_stable (CLK := Cumul_Adj_manu_stable)
LD fm_cumul_Adj_manu_stable.Q
JMPCN ne_pas_stocker_manu_adjuvant
	LD Cumul_Adj_manu.p_encour
	INT_TO_UDINT
	ADD Pese_Adj_manu[Numero_manu_Adj_cumul]
	ST Pese_Adj_manu[Numero_manu_Adj_cumul]
	LD 0
	ST Numero_manu_pup_Adj
ne_pas_stocker_manu_adjuvant:

LD Cumul_Adj_manu_stable
R Stabilite_Adj_en_cours
LD TRUE
R Cumul_Adj_manu_stable

(* Alarme bascule non stable :" pese bloquée" en manu logiciel*)
(* Les alarmes ne sont pas reportées en pupitre = partie SUPPRIMEE *)
(*LD Info_Plant_In_Auto
AND manu_logiciel
JMPCN gr_pas_sur_chaine2
LD cumul_adjuvant_manu_deptstab
S  Pesee_bloquee_adjuvant
LD cumul_eau_manu_deptstab
S  Pesee_bloquee_eau1 
LD cumul_cim_manu_deptstab
S  Pesee_bloquee_cim1
LD numero_chaine_en_cours_manu
EQ 1
JMPCN gr_sur_chaine2
	LD cumul_granulat_manu_deptstab
	S  Pesee_bloquee_granulat1
	JMP gr_pas_sur_chaine2
gr_sur_chaine2 :
	LD cumul_granulat_manu_deptstab
	S  Pesee_bloquee_granulat2
gr_pas_sur_chaine2 :*)



(******************************************************************************************)
(*******************************     ANHYDRITE       *****************************************)
(******************************************************************************************)  

(*********************    Mode centrale en auto          *********************************)

(* Doser=1 si on à une cde de dosage auto------------------------------------------*)
LD Cde_dosage_Anh
AND Stock_Anh_auto
ST Doser_Anh_auto

CAL Cumul_Anh_auto (mode := Stock_Anh_auto,
		cd_do_g1 := Doser_Anh_auto,
		p_instan := Poids_instantane_Anh,
		t_stab := Conf_anhydrite_tps_stabilisation,
		t_m_stab := Conf_anhydrite_tps_max_pesage,
		e_stab := Conf_anhydrite_ecart_stab,
		fin_dos := Pesee_suivante_Anh)
LD Cumul_Anh_auto.stable
S Cumul_Anh_auto_stable
LD Cumul_Anh_auto.deptstab
ST Cumul_Anh_auto_deptstab


CAL fm_cumul_Anh_auto_stable (CLK := Cumul_Anh_auto_stable)
LD fm_cumul_Anh_auto_stable.Q
JMPCN ne_pas_stocker_auto_anhydrite
	LD Cumul_Anh_auto.p_encour
	INT_TO_UDINT
	ADD Pese_Anh_auto
	ST Pese_Anh_auto
ne_pas_stocker_auto_anhydrite:

LD TRUE
R Cumul_Anh_auto_stable

(****************          Mode centrale en MANU LOGICIEL et PUPITRE        ***********************)

LD BP_dosage_Anh
OR Cde_dosage_Anh  (* L'anh n'est pas pris en compte par BC-Mix *)
ST Presence_cde_pupitre_Anh

(* Doser=1 si on à une cde de dosage MANU LOGICIEL---------------------------------------*)
LD TRUE
AND (Cde_dosage_Anh
	OR Presence_cde_pupitre_Anh
)
AND Stock_Anh_manu
ST Doser_Anh_manu

(* Sur un front montant de la commande de dosage, on interdit le dosage suivant*)
CAL fd_doser_Anh_manu(CLK := Doser_Anh_manu)
LD fd_doser_Anh_manu.Q
S Stabilite_Anh_en_cours

CAL Cumul_Anh_manu (mode := Stock_Anh_manu,
		mode_m := Stock_Anh_manu,
		cd_do_g1 := Doser_Anh_manu,
		p_instan := Poids_instantane_Anh,
		t_stab := Conf_anhydrite_tps_stabilisation,
		t_m_stab := Conf_anhydrite_tps_max_pesage,
		e_stab := Conf_anhydrite_ecart_stab,
		boite_n := deval_bn,
		p_entree := Pese_Anh_manu)
LD Cumul_Anh_manu.deptstab
ST Cumul_Anh_manu_deptstab
S Cumul_Anh_manu_stable (* Ligne ajoutée car il n'y a pas d'alarme en manu *)
LD Cumul_Anh_manu.stable
S Cumul_Anh_manu_stable

CAL fm_cumul_Anh_manu_stable (CLK := Cumul_Anh_manu_stable)
LD fm_cumul_Anh_manu_stable.Q
JMPCN ne_pas_stocker_manu_anhydrite
	LD Cumul_Anh_manu.p_encour
	INT_TO_UDINT
	ADD Pese_Anh_manu
	ST Pese_Anh_manu
	LD 0
	ST Numero_manu_pup_Anh
ne_pas_stocker_manu_anhydrite:

LD Cumul_Anh_manu_stable
R Stabilite_Anh_en_cours
LD TRUE
R Cumul_Anh_manu_stable



(******************************************************************************************)
(******************************     ADDITIONNELLE     *************************************)
(******************************************************************************************)

(* Spécificité pour la ligne additionnelle pour pouvoir gérer les 'n lignes de poids' : *)
(* On génère "Poids_instantane_Add_Cumuls[]" qui contient la valeur de poids correspondante *)
(* à chaque organe de stockage, sur 16 bits. *)
(* Cela est nécessaire car les DFB de cumuls utilisent des valeurs en 16 bits, et *)
(* la valeur "Poids_instantane_Add" est sur 32 bits. *)
LD 0
ST Idx_org
Recopie_poids_Add_cumul_1:
	LD Idx_org
	ADD 1
	ST Idx_org
(*	GT Conf_basc_add_nb_organes*)
	GT 4
	JMPC Recopie_poids_Add_cumul__fin
		LD Conf_basc_add_pesage_individuel
		JMPC Recopie_poids_Add_cumul_3
		Recopie_poids_Add_cumul_2 :
		(* Pesage global = '1 ligne de poids' *)
			(* On associe le même 'poids instantané' à tous les organes de stockage *)
			LD conf_basc_add_mode_decomptage
			JMPC Mode_decomptage
			LD Poids_instantane_Add
			DINT_TO_INT
			ST Poids_instantane_Add_Cumuls[Idx_org]
			JMP Recopie_poids_Add_cumul_1
		Mode_decomptage :					(* XX/11/2013 - P864 - artf1347731 : Additional balance *)
			LD Doser_Add_manu				(* Modification necessaire pour gerer l'affichage du poids en manu et en mode decomptage*)
			OR Stabilite_Add_en_cours 
			JMPC pas_maj_poids_depart
			LD Poids_instantane_Add
			DINT_TO_INT
			ST Poids_de_depart_Add_Decompt_manu[Idx_org]
			LD Poids_basc_add_decomptage
			ST Poids_basc_add_decomptage_Memo
		Pas_maj_poids_depart :
			LD Poids_de_depart_Add_Decompt_manu[Idx_org]
			INT_TO_DINT
			SUB Poids_instantane_Add
			DINT_TO_INT
			ADD Poids_basc_add_decomptage_Memo
			ST Poids_instantane_Add_Cumuls[Idx_org]
			ST Poids_basc_add_decomptage
			JMP Recopie_poids_Add_cumul_1		
		Recopie_poids_Add_cumul_3 :
		(* Pesage individuel = 'n lignes de poids' *)
			(* On associe à chaque organe de stockage la ligne de poids correspondante *)
			LD conf_basc_add_mode_decomptage
			JMPC Mode_decomptage_n
			LD BCMix_Pds_Add[Idx_org]
			ST Poids_instantane_Add_Cumuls[Idx_org]
			JMP Recopie_poids_Add_cumul_1
		Mode_decomptage_n:					(* XX/11/2013 - P864 - artf1347731 : Additional balance *)
			LD Numero_pupitre_Add_cumul			(* Modification necessaire pour gerer l'affichage du poids en manu et en mode decomptage*)
			EQ Idx_org
			AND (	Doser_Add_manu
				OR Stabilite_Add_en_cours
			)
			JMPC pas_maj_poids_depart_n
			LD BCMix_Pds_Add[Idx_org]
			ST Poids_de_depart_Add_Decompt_manu[Idx_org]
			LD Doser_Add_manu
			OR Stabilite_Add_en_cours
			JMPC pas_maj_poids_depart_n
			LD Poids_basc_add_decomptage
			ST Poids_basc_add_decomptage_Memo
		Pas_maj_poids_depart_n :
			LD Poids_de_depart_Add_Decompt_manu[Idx_org]	
			SUB BCMix_Pds_Add[Idx_org]
			ST Poids_instantane_Add_Cumuls[Idx_org]
			LD Idx_org
			EQ 4
			JMPCN Recopie_poids_Add_cumul_1
			LD Poids_instantane_Add_Cumuls[1]
			ADD Poids_instantane_Add_Cumuls[2]
			ADD Poids_instantane_Add_Cumuls[3]
			ADD Poids_instantane_Add_Cumuls[4]
			ADD Poids_basc_add_decomptage_Memo
			ST Poids_basc_add_decomptage
			JMP Recopie_poids_Add_cumul_1
	Recopie_poids_Add_cumul__fin:
  
(*********************    Mode centrale en auto          *********************************)
(* Doser=1 si on à une cde de dosage auto------------------------------------------*)
LD Cde_dosage_Add[Numero_produit_Add]
AND Stock_Add_auto
ST Doser_Add_auto
   
CAL fm_doser_Add_auto(CLK := Doser_Add_auto)
LD fm_doser_Add_auto.Q
ST test_fm_dos_Add_auto
JMPCN pas_mise_a_jour_Add_auto
	LD Numero_produit_Add
	ST Numero_produit_Add_cumul (* Mémoire pour utiliser le n° d'Organe Add pour le cumul *)
pas_mise_a_jour_Add_auto: 
  
CAL Cumul_Add_auto (mode := Stock_Add_auto,
		cd_do_g1 := Doser_Add_auto,
		p_instan := Poids_instantane_Add_Cumuls[Numero_produit_Add_cumul],
		t_stab := Conf_basc_add_tps_stabilisation,
		t_m_stab := Conf_basc_add_tps_max_pesage,
		e_stab := Conf_basc_add_ecart_stabilite,
		fin_dos := Pesee_suivante_Add)
LD Cumul_Add_auto.stable
S Cumul_Add_auto_stable
LD Cumul_Add_auto.deptstab
ST Cumul_Add_auto_deptstab
   
LD Numero_produit_Add_cumul
EQ 0
JMPC ne_pas_stocker_auto_Add
	CAL fm_cumul_Add_auto_stable (CLK := Cumul_Add_auto_stable)
	LD fm_cumul_Add_auto_stable.Q
	JMPCN ne_pas_stocker_auto_Add
		LD Cumul_Add_auto.p_encour
		INT_TO_UDINT
		ADD Pese_Add_auto[Numero_produit_Add_cumul]
		ST Pese_Add_auto[Numero_produit_Add_cumul]
ne_pas_stocker_auto_Add:
LD TRUE
R Cumul_Add_auto_stable
    
(****************          Mode centrale en MANU LOGICIEL et PUPITRE        ***********************)
LD BP_dosage_Add_1
OR Cde_dosage_Add[1]
ST Stock_manu_Add_1

LD BP_dosage_Add_2
OR Cde_dosage_Add[2]
ST Stock_manu_Add_2

LD BP_dosage_Add_3 
OR Cde_dosage_Add[3]
ST Stock_manu_Add_3

LD BP_dosage_Add_4
OR Cde_dosage_Add[4] 
ST Stock_manu_Add_4

CAL Numero_Add_pupitre (BP_1  := Stock_manu_Add_1,
			BP_2  := Stock_manu_Add_2,
			BP_3  := Stock_manu_Add_3,
			BP_4  := Stock_manu_Add_4,
			valid_bn := Cde_validation_boite_noire)
LD Numero_Add_pupitre.numero
ST Numero_pupitre_Add_cumul
LD Numero_Add_pupitre.commande
ST Presence_cde_pupitre_Add

  
(* Doser=1 si on à une cde de dosage MANU LOGICIEL---------------------------------------*)
LD TRUE
AND (Cde_dosage_Add[Numero_manu_Add]
	OR Presence_cde_pupitre_Add
)
AND Stock_Add_manu
ST Doser_Add_manu
  
(* Sur un front montant de la commande de dosage, on interdit le dosage suivant*)
CAL fd_doser_Add_manu(CLK := Doser_Add_manu)
LD fd_doser_Add_manu.Q
S Stabilite_Add_en_cours
  
(* Sur un front montant de la commande de dosage, on mémorise le numéro de l'organe utilisé*)
CAL fm_doser_Add_manu(CLK := Doser_Add_manu)
LD fm_doser_Add_manu.Q
ANDN Stabilite_Add_en_cours (* Interdire le chg numero si stabilité en cours*)
JMPCN pas_mise_a_jour_Add
	LD Info_Plant_In_Auto
	AND manu_logiciel
	JMPCN test_pupitre_Add
		LD Numero_manu_Add
		ST Numero_manu_Add_cumul (* Mémoire pour utiliser le n° d'organe de stockage pour le cumul *)
		JMP pas_mise_a_jour_Add
	test_pupitre_Add:
	LDN Info_Plant_In_Auto
	JMPCN pas_mise_a_jour_Add
		LD Numero_pupitre_Add_cumul
		ST Numero_manu_Add_cumul
pas_mise_a_jour_Add:
  
CAL Cumul_Add_manu (mode := Stock_Add_manu,
		mode_m := Stock_Add_manu,
		cd_do_g1 := Doser_Add_manu,
		p_instan := Poids_instantane_Add_Cumuls[Numero_manu_Add_cumul],
		t_stab := Conf_Basc_add_tps_stabilisation,
		t_m_stab := Conf_Basc_add_tps_max_pesage,
		e_stab := Conf_Basc_add_ecart_stabilite,
		boite_n := deval_bn,
		p_entree := Pese_Add_manu[Numero_manu_Add_cumul])
LD Cumul_Add_manu.deptstab
ST Cumul_Add_manu_deptstab
S Cumul_Add_manu_stable (* Ligne ajoutée car il n'y a pas d'alarme en manu *)
LD Cumul_Add_manu.stable
S Cumul_Add_manu_stable
    
LD Numero_manu_Add_cumul
EQ 0
JMPC ne_pas_stocker_manu_Add
	CAL fm_cumul_Add_manu_stable (CLK := Cumul_Add_manu_stable)
	LD fm_cumul_Add_manu_stable.Q
	JMPCN ne_pas_stocker_manu_Add
		LD Cumul_Add_manu.p_encour
		INT_TO_UDINT
		ADD Pese_Add_manu[Numero_manu_Add_cumul]
		ST Pese_Add_manu[Numero_manu_Add_cumul]
		LD 0
		ST Numero_manu_pup_Add
ne_pas_stocker_manu_Add:
LD Cumul_Add_manu_stable
R Stabilite_Add_en_cours
LD TRUE
R Cumul_Add_manu_stable
</ILSource>
	</program>
	<program>
		<identProgram name="500_Cumul_ppe" type="section" task="MAST"></identProgram>
		<STSource>(* Initialisation des variables locales de la section *)
IF Cumul_ppe_DEM_INIT THEN

	FOR Idx_RUN := 1 TO 20 DO

		Tempo_apres_coulant_manu[Idx_RUN] := 0;
		Memo_FE_DO_Admix_Dosage[Idx_RUN] := FALSE;
		Memo_Cpt_manu_PPE[Idx_RUN] := 0;
		Adj_ppe_en_cours[Idx_RUN] := FALSE;

	END_FOR;

	(* Reset de la demande d'init *)
	Cumul_ppe_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(******************************************************************************************)
(*********************************     POMPES     *****************************************)
(******************************************************************************************)
  
(**********************    Mode centrale en auto          *********************************)
(* Pompes qui ne sont pas à destination de la bascule ADJ *)

IF Info_Plant_In_Auto 
AND NOT manu_logiciel THEN

	FOR Idx_RUN := 1 TO (Conf_adj1_nb_cuves + Conf_adj2_nb_cuves) DO	(* Rappel : "Conf_adj1_nb_cuves" représente l'ensemble des cuves adj pesées et comptées *)

		IF (Conf_Adj_dest_cuves[Idx_RUN] &lt;&gt; 0) THEN	(* - Pour cuves à adjuvant pompé *)
		
			IF Adj_ppe_en_cours[Idx_RUN]	(* - Detection de front descendant des Flags "dosage en cours" des pompes*)
			AND NOT Ppe_en_cours[Conf_Adj_dest_cuves[Idx_RUN]] THEN
	
				Pese_Adj_auto[Idx_RUN]	:= Pese_Adj_auto[Idx_RUN] + INT_TO_UDINT(Compteur_ppe[Conf_Adj_dest_cuves[Idx_RUN]]); 

			END_IF;

			Adj_ppe_en_cours[Idx_RUN] := Ppe_en_cours[Conf_Adj_dest_cuves[Idx_RUN]];	(* - Redistribution des Flags "dosage en cours" des pompes pour les cuve à adjuvant *)

		END_IF;

	END_FOR;

END_IF;



(******************************************************************************************)
(*********************************     POMPES     *****************************************)
(******************************************************************************************)
  
(***************        Mode centrale en manu &amp; manu logiciel        **********************)
(* Pompes qui ne sont pas à destination de la bascule ADJ *)


IF (Info_Plant_In_Auto AND manu_logiciel) 
OR NOT Info_Plant_In_Auto THEN

	FOR Idx_RUN := 1 TO (Conf_adj1_nb_cuves + Conf_adj2_nb_cuves) DO	(* Rappel : "Conf_adj1_nb_cuves" représente l'ensemble des cuves adj pesées et comptées *)


		IF (Conf_Adj_dest_cuves[Idx_RUN] &lt;&gt; 0) THEN	(* - Pour cuves à adjuvant pompé *)

			IF NOT DO_Admix_Tank_Open[Idx_RUN]	(* - Detection de front montant des cmd dosage adjuvant *)
			AND (Cde_dosage_Adj[Idx_RUN] OR Cde_dosage_Adj_ppe[Idx_RUN]) THEN	

				Memo_Cpt_manu_PPE[Idx_RUN] := Compteur_ppe[Conf_Adj_dest_cuves[Idx_RUN]];
				Tempo_apres_coulant_manu[Conf_Adj_dest_cuves[Idx_RUN]] := 0;

			END_IF;	

			IF DO_Admix_Tank_Open[Idx_RUN] 	(* - Detection de front descendant des cmd dosage adjuvant *)
			AND NOT (Cde_dosage_Adj[Idx_RUN] OR Cde_dosage_Adj_ppe[Idx_RUN]) THEN	

				Memo_FE_DO_Admix_Dosage[Idx_RUN] := 1;

			END_IF;

			DO_Admix_Tank_Open[Idx_RUN] := Cde_dosage_Adj[Idx_RUN] OR Cde_dosage_Adj_ppe[Idx_RUN];	
	
			IF Memo_FE_DO_Admix_Dosage[Idx_RUN] 	(* - Sur mémo de Front Descendant des cmd dosage adjuvant on lance la tempo après coulant *)
			AND top_sec THEN
	 
				Tempo_apres_coulant_manu[Conf_Adj_dest_cuves[Idx_RUN]] := Tempo_apres_coulant_manu[Conf_Adj_dest_cuves[Idx_RUN]] + 1;
	
			END_IF;

			(*    ...Déclaration de la fin de la phase d'après-coulant *)
			IF (Tempo_apres_coulant_manu[Conf_Adj_dest_cuves[Idx_RUN]] &gt;= conf_ppe_apres_coulant) THEN
	
				Pese_Adj_manu[Idx_RUN]	:= Pese_Adj_manu[Idx_RUN] + INT_TO_UDINT(Compteur_ppe[Conf_Adj_dest_cuves[Idx_RUN]]) - INT_TO_UDINT(Memo_Cpt_manu_PPE[Idx_RUN]);
				Memo_FE_DO_Admix_Dosage[Idx_RUN] := 0;
				Tempo_apres_coulant_manu[Conf_Adj_dest_cuves[Idx_RUN]] := 0;

			END_IF;

		END_IF;

	END_FOR;

END_IF;
</STSource>
	</program>
	<program>
		<identProgram name="510_Auto_Calibration_Check" type="section" task="MAST"></identProgram>
		<STSource>(* Initialisation des variables locales de la section *)
IF Calib_Check_DEM_INIT THEN

		Cde_BCMix_Verif_Calib_Gra1 := FALSE;
		Cde_BCMix_Verif_Calib_Gra2 := FALSE;
		Cde_BCMix_Verif_Calib_Cim1 := FALSE;
		Cde_BCMix_Verif_Calib_Cim2 := FALSE;
		Cde_BCMix_Verif_Calib_Eau1 := FALSE;
		Cde_BCMix_Verif_Calib_Eau2 := FALSE;
		Cde_BCMix_Verif_Calib_Adj  := FALSE;
		Cde_BCMix_Verif_Calib_Anh  := FALSE;
		Cde_BCMix_Verif_Calib_Add  := FALSE;
		Fin_Verif_Calib_Gra1 := FALSE;
		Fin_Verif_Calib_Gra2 := FALSE;
		Fin_Verif_Calib_Cim1 := FALSE;
		Fin_Verif_Calib_Cim2 := FALSE;
		Fin_Verif_Calib_Eau1 := FALSE;
		Fin_Verif_Calib_Eau2 := FALSE;
		Fin_Verif_Calib_Adj  := FALSE;
		Fin_Verif_Calib_Anh  := FALSE;
		Fin_Verif_Calib_Add  := FALSE;
		Poids_Verif_Calib_Gra1 := 0;
		Poids_Verif_Calib_Gra2 := 0;
		Poids_Verif_Calib_Cim1 := 0;
		Poids_Verif_Calib_Cim2 := 0;
		Poids_Verif_Calib_Eau1 := 0;
		Poids_Verif_Calib_Eau2 := 0;
		Poids_Verif_Calib_Adj  := 0;
		Poids_Verif_Calib_Anh  := 0;
		Poids_Verif_Calib_Add  := 0;

	(* Reset de la demande d'init *)
	Calib_Check_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;


(******************************************************************************************)
(*************************     Auto Calibration Check     *********************************)
(******************************************************************************************)
(* Le Principe est de faire lever des poids pendant un temps donné "Conf_Tps_Calibration" pour verifier la calibration d'une bascule *)
(* Une fois le test terminé, le poids mesuré par l'API est récupéré par BCmix  *)
(* XX/12/2014 - P865 - artf1517141 *)

Auto_Calibration_Check_Gra1 (IDFB_Activation := Cde_BCMix_Verif_Calib_Gra1,
                             IDFB_Poids_Instantane := Poids_instantane_Gra1,
                             IDFB_Tps_Verif_Calib := Conf_Calib_Check_Time,
                             ODFB_Test_Termine =&gt; Fin_Verif_Calib_Gra1,
                             ODFB_Poids_Retenu =&gt; Poids_Verif_Calib_Gra1,
                             ODFB_Cde_Verif_Calib =&gt; Cde_Verif_Calib_Gra1);

Auto_Calibration_Check_Gra2 (IDFB_Activation := Cde_BCMix_Verif_Calib_Gra2,
                             IDFB_Poids_Instantane := Poids_instantane_Gra2,
                             IDFB_Tps_Verif_Calib := Conf_Calib_Check_Time,
                             ODFB_Test_Termine =&gt; Fin_Verif_Calib_Gra2,
                             ODFB_Poids_Retenu =&gt; Poids_Verif_Calib_Gra2,
                             ODFB_Cde_Verif_Calib =&gt; Cde_Verif_Calib_Gra2);

Auto_Calibration_Check_Cim1 (IDFB_Activation := Cde_BCMix_Verif_Calib_Cim1,
                             IDFB_Poids_Instantane := Poids_instantane_Cim1,
                             IDFB_Tps_Verif_Calib := Conf_Calib_Check_Time,
                             ODFB_Test_Termine =&gt; Fin_Verif_Calib_Cim1,
                             ODFB_Poids_Retenu =&gt; Poids_Verif_Calib_Cim1,
                             ODFB_Cde_Verif_Calib =&gt; Cde_Verif_Calib_Cim1);

Auto_Calibration_Check_Cim2 (IDFB_Activation := Cde_BCMix_Verif_Calib_Cim2,
                             IDFB_Poids_Instantane := Poids_instantane_Cim2,
                             IDFB_Tps_Verif_Calib := Conf_Calib_Check_Time,
                             ODFB_Test_Termine =&gt; Fin_Verif_Calib_Cim2,
                             ODFB_Poids_Retenu =&gt; Poids_Verif_Calib_Cim2,
                             ODFB_Cde_Verif_Calib =&gt; Cde_Verif_Calib_Cim2);

Auto_Calibration_Check_Eau1 (IDFB_Activation := Cde_BCMix_Verif_Calib_Eau1,
                             IDFB_Poids_Instantane := Poids_instantane_Eau1,
                             IDFB_Tps_Verif_Calib := Conf_Calib_Check_Time,
                             ODFB_Test_Termine =&gt; Fin_Verif_Calib_Eau1,
                             ODFB_Poids_Retenu =&gt; Poids_Verif_Calib_Eau1,
                             ODFB_Cde_Verif_Calib =&gt; Cde_Verif_Calib_Eau1);

Auto_Calibration_Check_Eau2 (IDFB_Activation := Cde_BCMix_Verif_Calib_Eau2,
                             IDFB_Poids_Instantane := Poids_instantane_Eau2,
                             IDFB_Tps_Verif_Calib := Conf_Calib_Check_Time,
                             ODFB_Test_Termine =&gt; Fin_Verif_Calib_Eau2,
                             ODFB_Poids_Retenu =&gt; Poids_Verif_Calib_Eau2,
                             ODFB_Cde_Verif_Calib =&gt; Cde_Verif_Calib_Eau2);

Auto_Calibration_Check_Adj (IDFB_Activation := Cde_BCMix_Verif_Calib_Adj,
                            IDFB_Poids_Instantane := Poids_instantane_Adj,
                            IDFB_Tps_Verif_Calib := Conf_Calib_Check_Time,
                            ODFB_Test_Termine =&gt; Fin_Verif_Calib_Adj,
                            ODFB_Poids_Retenu =&gt; Poids_Verif_Calib_Adj,
                            ODFB_Cde_Verif_Calib =&gt; Cde_Verif_Calib_Adj);

Auto_Calibration_Check_Anh (IDFB_Activation := Cde_BCMix_Verif_Calib_Anh,
                            IDFB_Poids_Instantane := Poids_instantane_Anh,
                            IDFB_Tps_Verif_Calib := Conf_Calib_Check_Time,
                            ODFB_Test_Termine =&gt; Fin_Verif_Calib_Anh,
                            ODFB_Poids_Retenu =&gt; Poids_Verif_Calib_Anh,
                            ODFB_Cde_Verif_Calib =&gt; Cde_Verif_Calib_Anh);

Auto_Calibration_Check_Add (IDFB_Activation := Cde_BCMix_Verif_Calib_Add,
                            IDFB_Poids_Instantane := DINT_TO_INT(Poids_instantane_Add),
                            IDFB_Tps_Verif_Calib := Conf_Calib_Check_Time,
                            ODFB_Test_Termine =&gt; Fin_Verif_Calib_Add,
                            ODFB_Poids_Retenu =&gt; Poids_Verif_Calib_Add,
                            ODFB_Cde_Verif_Calib =&gt; Cde_Verif_Calib_Add);
</STSource>
	</program>
	<program>
		<identProgram name="530_Commandes" type="section" task="MAST"></identProgram>
		<STSource>(*Modif M.D. 12/12/2007 : Création de la section pour implantation roumaine
  du MANU PUPITRE PAR API*)

(*Modif M.D. 23/07/2008  : Modification suite Bug Vibreur
  La mise à 0 de la demande BC-Mix était faite sur une détection de front sur la
  commande -&gt; Disfonctionnement si les sécurité ou si une conf à 0seconde empêche 
  la mise à 1 de a commande.
  Correction : lorsque la pulse est lancé, on remet à 0 la demande directement*)

(*Modif M.D. 15/10/2008 : Intégration de la trémie tampon granulat
  Enchainement 1 : tapis peseur (bascule) -&gt; TT_GRa -&gt; Malax1
  Enchainement 2 : tapis transfert        -&gt; TT_GRa -&gt; Malax1*)



(* Initialisation des variables locales de la section *)
IF Commandes_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Commandes_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;



(*** VIDANGE DE BASCULES ***)

(* Etat du malaxeur 1 (Utilisé pour la vidange de toutes les bascules))*)
(* Etat du malaxeur 2 non traité pour le moment*)
(* partie pouvant être transféré dans "ETAT_EQUIPEMENT"
   utilisation posible dans le reste du programme à définir ...*)
Malax1_marche_ferme :=	      
   Info_malaxeur1_en_marche
   AND ( Info_trappe1_fermee_mal1
         AND ( conf_mal1_presence_trappe2
	       AND Info_trappe1_fermee_mal2
	       OR NOT conf_mal1_presence_trappe2)
	      );

(*Commande vidange bascule granulat 1*)
(*La vidange de la bascule ou tapis peseur vers :
   - bascule vers malaxeur (pas skip trans)
   - bascule vers tapis transfert
   - bascule vers skip transfert*)
(*ATTENTION : 
- On ne traite pas le cas trémie tampon 
- On ne traite pas la configuration Tapis trans + skip trans (gar 1 uniquement)
- On ne traite pas la configuration 2 malaxeur*)

(*GRA1 - Destination prête *)
Dest_Gra1_Prete :=
   ( (* Conf balance -&gt; Malax  *)
	 NOT Conf_tapis_transfert 
	 AND NOT Conf_skip_transfert
	 AND NOT Conf_TT_granulat(*MODIF M.D. 15/10/2008 intégration TT_GRA *)
	 AND Malax1_marche_ferme 
   )
   OR ( (* Conf balance -&gt; tapis transfert  *)
	 Conf_tapis_transfert
	 AND Info_tapis_transfert_en_marche
	 AND (Conf_tap_trans_pres_capt_rot
		 AND tempo_ctrle_rotation_tapis_trans.Q
		 OR NOT Conf_tap_trans_pres_capt_rot
	 )
   )
   OR ( (* Conf balance -&gt; skip tansfert  *)
	 Conf_skip_transfert
	 AND Info_skip_bas
   )
   OR ( (* M.D. 15/10/2008 : la condition suivante me semble étrange
	         mais doit avoir une utilité : rechercher dans les doc *)
	 Conf_granulat1_skip
	 AND Cable_skip_mou
   )
   OR ( (* Conf balance -&gt; TT_granulat  *)
	 (*MODIF M.D. 15/10/2008 intégration TT_GRA *)
	 NOT Conf_tapis_transfert 
	 AND NOT Conf_skip_transfert
	 AND Conf_TT_granulat
	 AND NOT Conf_granulat1_skip
	 AND Info_TT_Gra_fermee 
   );

(*GRA1 - AUTO*)
Auto_ouv_basc_gra1 := 
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND ( Alarme_vidange_Gra1
	 OR Vidange_Gra1
	 OR Vid_seq_Gra1
	 OR ( Cde_anti_talutage_G1 AND Conf_granulat1_tapis )
        );
(*GRA1 - MANU LOGICIEL*)
Manu_Log_ouv_basc_Gra1 := 
   Manu_logiciel
   AND Manu_cde_vidange_basc_granulat1;
(*GRA1 - MANU PUPITRE (Sur API)*)
Manu_Pup_ouv_basc_Gra1 :=
   NOT Info_Plant_In_Auto
   AND Pup_Cde_vid_basc_Gra1
   AND Dest_Gra1_Prete
   AND (Numero_manu_pup_Gra1 = 0); (* Interdire l'ouverture de la bascule ou la vidange *)
   			(* du tapis si un produit est en cours de dosage et que son poids *)
   			(* n'a pas été cumulé. *) 
(*GRA1 - Calcul de la commande*)
Cde_vidange_bascule_Gra1 := 
(*    NOT Tapis_peseur1_vitesse_rotation
   AND *) NOT Discordance_vidange_granulat1
   AND NOT Alarme_prot_tapis_pes_Gra (*générique pour les deux tapis (a vérifier)*)
   AND ( Auto_ouv_basc_gra1 
	   OR Manu_Log_ouv_basc_Gra1
	   OR Manu_Pup_ouv_basc_Gra1);


(*GRA1 - Commandes spécifiques pour les bascules à plusieurs sorties *)
(* - Init du seuil de passage à la sortie 2 *)
IF (Seuil_vide_atteint_Gra1)
AND (TG_OUT[NG_Gra1].CR_Etat_Basc_Gra1 &lt;&gt; 1)
THEN
	Memo_Seuil_passage_sortie_2_Gra1 := 0; (* Reset *)
END_IF;
(* - Détermination de la phase de vidange (Sortie 1 / Sortie 2 / Sortie 1&amp;2) *)
IF NOT Cde_vidange_bascule_Gra1
THEN
	Phase_vid_basc_Gra1_a_N_sorties := 1; (* Sortie de vidange 1 seule s'ouvre *)
ELSIF (Poids_instantane_Gra1 &lt;= Conf_Gra1_seuil_ouv_ttes_sorties)
OR (Seuil_vide_atteint_Gra1 AND (Conf_Gra1_retard_ferm_balance &gt; t#0s)) (* On ouvre les 2 sorties en grand pendant le retard de fermeture de la bascule *)
THEN
	Phase_vid_basc_Gra1_a_N_sorties := 99; (* Toutes les sorties de vidange s'ouvrent *)
ELSIF (Poids_instantane_Gra1 &lt;= Memo_Seuil_passage_sortie_2_Gra1)
AND (Phase_vid_basc_Gra1_a_N_sorties &lt;= 1) (* Limite les 'rebonds' : On empèche de revenir à la 'phase de vidange' 2 si le poids lu remonte (par instabilité ou bruit de mesure). *)
THEN
	Phase_vid_basc_Gra1_a_N_sorties := 2; (* Sortie de vidange 2 seule s'ouvre *)
END_IF;
(* - Calcul de la commande de la sortie de vidange 1 *)
Cde_vidange_bascule_Gra1_1 :=
	NOT Discordance_vidange_granulat1
(*	AND NOT Tapis_peseur1_vitesse_rotation*)
	AND NOT Alarme_prot_tapis_pes_Gra (*générique pour les deux tapis (a vérifier)*)
	AND (
		(
			Auto_pupitre_sans_Arret_prod
			AND NOT Manu_logiciel
			AND Cde_vidange_bascule_Gra1
			AND (
				(Phase_vid_basc_Gra1_a_N_sorties = 1) OR (Phase_vid_basc_Gra1_a_N_sorties = 99)
				OR (Pup_Cde_vid_basc_Gra1_1 AND Dest_Gra1_Prete) (* On permet l'utilisation du bouton "pupitre" dans le mode automatique *)
			)
		)
		OR (
			Manu_logiciel
			AND Manu_cde_vidange_basc_gra1_1
		)
		OR (
			NOT Info_Plant_In_Auto
			AND Pup_Cde_vid_basc_Gra1_1
			AND Dest_Gra1_Prete
			AND (Numero_manu_pup_Gra1 = 0) (* Interdire l'ouverture de la bascule si un produit *)
   				(* est en cours de dosage et que son poids n'a pas été cumulé. *)
		)
   	);
(* - Calcul de la commande de la sortie de vidange 1 *)
Cde_vidange_bascule_Gra1_2 :=
	NOT Discordance_vidange_granulat1
(*	AND NOT Tapis_peseur1_vitesse_rotation*)
	AND NOT Alarme_prot_tapis_pes_Gra (*générique pour les deux tapis (a vérifier)*)
	AND (
		(
			Auto_pupitre_sans_Arret_prod
			AND NOT Manu_logiciel
			AND Cde_vidange_bascule_Gra1
			AND (
				(Phase_vid_basc_Gra1_a_N_sorties = 2) OR (Phase_vid_basc_Gra1_a_N_sorties = 99)
				OR (Pup_Cde_vid_basc_Gra1_2 AND Dest_Gra1_Prete) (* On permet l'utilisation du bouton "pupitre" dans le mode automatique *)
			)
		)
		OR (
			Manu_logiciel
			AND Manu_cde_vidange_basc_gra1_2
		)
		OR (
			NOT Info_Plant_In_Auto
			AND Pup_Cde_vid_basc_Gra1_2
			AND Dest_Gra1_Prete
			AND (Numero_manu_pup_Gra1 = 0) (* Interdire l'ouverture de la bascule si un produit *)
   				(* est en cours de dosage et que son poids n'a pas été cumulé. *)
		)
   	);




		 (*Commande vidange bascule granulat 2*)
                 (*PUPITRE NON TRAITE*)
		 Cde_vidange_bascule_Gra2:=
		    Auto_pupitre_sans_Arret_prod
		    AND NOT Discordance_vidange_granulat2
 		    AND (FALSE
		         OR ( NOT Manu_logiciel
		               AND ( Alarme_vidange_Gra2
		                     OR Vidange_Gra2
				     OR Vid_seq_Gra2
		                     OR (Cde_anti_talutage_G2
		                         AND Conf_granulat2_tapis)
		                    )
		              )
		         OR (Manu_logiciel
		             AND Manu_cde_vidange_basc_granulat2)
		        );

(*Commande vidange bascule ciment 1*)
(*ATTENTION mode pupitre :
- On ne traite pas le transfert ciment (bonbonne) donc la bascule est 
à destination du malaxeur 
- On ne traite qu'un seul malaxeur (pas de bipasse)
- On traite par contre la config 1 ou 2 trappes malaxeur.*)
(*CIM1 - AUTO*)
Auto_ouv_basc_Cim1 := 
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND ( Alarme_vidange_Cim1
         OR Vidange_Cim1
         OR Vid_seq_Cim1);
(*CIM1 - MANU LOGICIEL*)
Manu_Log_ouv_basc_Cim1 := 
   Auto_pupitre_sans_Arret_prod
   AND Manu_logiciel
   AND Manu_cde_vidange_basc_cim1;
(*CIM1 - MANU PUPITRE (Sur API)*)
Manu_Pup_ouv_basc_Cim1 :=
   NOT Info_Plant_In_Auto
   AND Pup_Cde_vid_basc_Cim1
   (*AND Malax1_marche_fermé*)
   AND (Numero_manu_pup_Cim1 = 0); (* Interdire l'ouverture de la bascule si un produit *)
   			(* est en cours de dosage et que son poids n'a pas été cumulé. *)
(*CIM1 - Calcul de commande*)
Cde_vidange_bascule_Cim1 :=
         NOT Discordance_vidange_cim1
	 AND ( Auto_ouv_basc_Cim1
	   	 OR Manu_Log_ouv_basc_Cim1
	   	 OR Manu_Pup_ouv_basc_Cim1);

(*Commande vidange bascule ciment2*)
(*ATTENTION mode pupitre :
- On ne traite pas le transfert ciment (bonbonne) donc la bascule est 
à destination du malaxeur 
- On ne traite qu'un seul malaxeur (pas de bipasse)
- On traite par contre la config 1 ou 2 trappes malaxeur.*)
(*CIM2 - AUTO*)
Auto_ouv_basc_Cim2 := 
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND ( Alarme_vidange_Cim2
         OR Vidange_Cim2
         OR Vid_seq_Cim2);
(*CIM2 - MANU LOGICIEL*)
Manu_Log_ouv_basc_Cim2 := 
   Auto_pupitre_sans_Arret_prod
   AND Manu_logiciel
   AND Manu_cde_vidange_basc_Cim2;
(*CIM2 - MANU PUPITRE (Sur API)*)
Manu_Pup_ouv_basc_Cim2 :=
   NOT Info_Plant_In_Auto
   AND Pup_Cde_vid_basc_Cim2
   (*AND Malax1_marche_fermé*)
   AND (Numero_manu_pup_Cim2 = 0); (* Interdire l'ouverture de la bascule si un produit *)
   			(* est en cours de dosage et que son poids n'a pas été cumulé. *)
(*CIM2 - Calcul de commande*)
Cde_vidange_bascule_Cim2 :=
         NOT Discordance_vidange_Cim2
	 AND ( Auto_ouv_basc_Cim2
	   	 OR Manu_Log_ouv_basc_Cim2
	   	 OR Manu_Pup_ouv_basc_Cim2);

			(*Modif M.D. 15/11/2007 Ajout de la bonbonne Adjuvant *) 
			(*PUPITRE NON TRAITE*)
			Cde_Ouv_XV2 :=
			   Auto_pupitre_sans_Arret_prod
			   AND NOT Manu_logiciel			
			   AND Ouv_XV2 				
			   OR ( Manu_logiciel
			        AND BCMIX_Ouv_EV2
			       );
			
			Cde_Ouv_XV3 :=
			   Auto_pupitre_sans_Arret_prod
			   AND NOT Manu_logiciel
			   AND Ouv_XV3 
			   OR ( Manu_logiciel
			        AND BCMIX_Ouv_EV3
			        AND TON_XV2_Ferme.Q
			       );
			(* FIN Modif M.D. 15/11/2007 Ajout de la bonbonne Adjuvant *)

(*Commande vidange bascule eau 1*)
(*ATTENTION mode pupitre: 
- On ne traite pas la configuration 2 malaxeur (pas de bipasse)
- On traite par contre la config 1 ou 2 trappes malaxeur.*)

(*EAU1 - AUTO*)
Auto_ouv_basc_Eau1 := 
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND ( Alarme_vidange_Eau1
         OR Vidange_Eau1);

(*EAU1 - MANU LOGICIEL*)
Manu_Log_ouv_basc_Eau1 := 
   Auto_pupitre_sans_Arret_prod
   AND Manu_logiciel
   AND Manu_cde_vidange_basc_eau1;
(*EAU1 - MANU PUPITRE (Sur API)*)
Manu_Pup_ouv_basc_Eau1 :=
   NOT Info_Plant_In_Auto
   AND Pup_Cde_vid_basc_Eau1
   AND Malax1_marche_ferme
   AND (Numero_manu_pup_Eau1 = 0) (* Interdire l'ouverture de la bascule si un produit *)
   			(* est en cours de dosage et que son poids n'a pas été cumulé. *)
   AND(	(Numero_manu_pup_Gra1 = 0) (* Autoriser la vidange si pas de granulat en train de se doser dans Gra1 *)
   	OR (Conf_Eau_dest_basc[1] &lt;&gt; 1)) (* ou que la bascule ne va pas vers la ligne Gra1 *)
   AND( (Numero_manu_pup_Gra2 = 0) (* Autoriser la vidange si pas de granulat en train de se doser dans Gra2 *)
   	OR (Conf_Eau_dest_basc[1] &lt;&gt; 2)); (* ou que la bascule ne va pas vers la ligne Gra2 *)

(*EAU1 - Calcul de commande*)
(* - Sélection du moyen de vidange (pour config avec pompe de vidange) *) 
(* Modif J. BOUVET Inde. Reporté par R.C. 24/05/2012 P857 : Mémorisation + Hystérésis pour éviter que des impulsions *) 
(* apparaissent sur les commandes de vidange en cas d'instabilité du poids. *) 
(* Le "+ 20" permet également de limiter l'apparition de 'bagottements' si le seuil est laissé à 0 par *) 
(* inadvertance, ou si le "seuil vide" et le "seuil de vidange par pompe" sont proches. *) 
IF (Poids_instantane_Eau1 &gt; Conf_eau1_seuil_vid_ppe + 20) THEN 
   Mem_vid_basc_Eau1_Ppe := TRUE; (* Vidange par pompe *) 
ELSIF (Poids_instantane_Eau1 &lt;= Conf_eau1_seuil_vid_ppe) THEN 
   Mem_vid_basc_Eau1_Ppe := FALSE; (* Vidange par gravité *) 
END_IF; 
(* - Commande "par gravité" (commande ‘classique’) *) 
Cde_vidange_bascule_Eau1:=
   NOT Discordance_vidange_eau1
   AND (  Conf_Water_Weigher_FR (* Pas de pompe *)
          OR (NOT Conf_Water_Weigher_FR (* Avec pompe *)
	      AND NOT Mem_vid_basc_Eau1_Ppe) (* En fin de vidange : On utilise la commande de vidange "par gravité" seule *)
        )
   AND (Auto_ouv_basc_Eau1
   	OR Manu_Log_ouv_basc_Eau1
   	OR Manu_Pup_ouv_basc_Eau1);
(* - Commande "par pompe" (commande supplémentaire) *) 
Cde_vid_basc_Eau1_Ppe:=
   NOT Alarme_prot_mot_vid_PPE_EAU
   AND Mem_vid_basc_Eau1_Ppe (* En début de vidange : On utilise la commande de vidange "par pompe" seule *)
   AND (Auto_ouv_basc_Eau1
   	OR Manu_Log_ouv_basc_Eau1
   	OR Manu_Pup_ouv_basc_Eau1);




(*Commande vidange bascule eau2*)
(*ATTENTION mode pupitre :
- On ne traite qu'un seul malaxeur (pas de bipasse)
- On traite par contre la config 1 ou 2 trappes malaxeur.*)
(*EAU2 - AUTO*)
Auto_ouv_basc_Eau2 := 
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND ( Alarme_vidange_Eau2
         OR Vidange_Eau2);
(*EAU2 - MANU LOGICIEL*)
Manu_Log_ouv_basc_Eau2 := 
   Auto_pupitre_sans_Arret_prod
   AND Manu_logiciel
   AND Manu_cde_vidange_basc_Eau2;
(*EAU2 - MANU PUPITRE (Sur API)*)
Manu_Pup_ouv_basc_Eau2 :=
   NOT Info_Plant_In_Auto
   AND Pup_Cde_vid_basc_Eau2
   AND Malax1_marche_ferme
   AND (Numero_manu_pup_Eau2 = 0) (* Interdire l'ouverture de la bascule si un produit *)
   			(* est en cours de dosage et que son poids n'a pas été cumulé. *)
   AND(	(Numero_manu_pup_Gra1 = 0) (* Autoriser la vidange si pas de granulat en train de se doser dans Gra1 *)
   	OR (Conf_Eau_dest_basc[2] &lt;&gt; 1)) (* ou que la bascule ne va pas vers la ligne Gra1 *)
   AND( (Numero_manu_pup_Gra2 = 0) (* Autoriser la vidange si pas de granulat en train de se doser dans Gra2 *)
   	OR (Conf_Eau_dest_basc[2] &lt;&gt; 2)); (* ou que la bascule ne va pas vers la ligne Gra2 *)

(*EAU2 - Calcul de commande*)
(* - Sélection du moyen de vidange (pour config avec pompe de vidange) *) 
(* Modif J. BOUVET Inde - Reporté par R.C. 22/05/2012 P857 *) 
(* Voir commentaires pour la commande de la ligne Eau1 *) 
IF (Poids_instantane_Eau2 &gt; Conf_eau2_seuil_vid_ppe + 20) THEN 
   Mem_vid_basc_Eau2_Ppe := TRUE; (* Vidange par pompe *) 
ELSIF (Poids_instantane_Eau2 &lt;= Conf_eau2_seuil_vid_ppe) THEN 
   Mem_vid_basc_Eau2_Ppe := FALSE; (* Vidange par gravité *) 
END_IF; 
(* - Commande "par gravité" (commande ‘classique’) *) 
Cde_vidange_bascule_Eau2 :=
         NOT Discordance_vidange_Eau2
	 AND (  Conf_Water_Weigher_FR (* Pas de pompe *)
	   OR (NOT Conf_Water_Weigher_FR (* Avec pompe *)
	       AND NOT Mem_vid_basc_Eau2_Ppe) (* En fin de vidange : On utilise la commande de vidange "par gravité" seule *) 
	 )
	 AND ( Auto_ouv_basc_Eau2
	   	 OR Manu_Log_ouv_basc_Eau2
	   	 OR Manu_Pup_ouv_basc_Eau2);
(* - Commande "par pompe" (commande supplémentaire) *) 
Cde_vid_basc_Eau2_Ppe:=
   (*NOT X_Alarme_prot_mot_vid_PPE_EAU2  // Protection non encore gérée sur bascule eau2
   AND *)Mem_vid_basc_Eau2_Ppe (* En début de vidange : On utilise la commande de vidange "par pompe" seule *)
   AND (Auto_ouv_basc_Eau2
   	OR Manu_Log_ouv_basc_Eau2
   	OR Manu_Pup_ouv_basc_Eau2);




(*Commande vidange bascule adjuvant (COMP 1 UNIQUEMENT)*)
(*ATTENTION mode pupitre: 
- On ne traite pas la configuration 2 malaxeur (pas de bipasse)
- On ne traite pas le config bonbonne colorant
- On traite la contre la config 1 ou 2 trappes malaxeur.
- On traite la config de bascule à destinition malaxeur
- On traite la config de bascule à destination bascule à eau*)
(*ADJ - AUTO*)
Auto_ouv_basc_Adj := 
   Auto_pupitre_sans_Arret_prod
   AND NOT Discordance_vidange_adjuvant
   AND NOT Manu_logiciel
   AND ( Alarme_vidange_Adj
         OR Vidange_Adj)
   AND ( Info_XV2_ouvert
         OR NOT Conf_Bonbonne_Colorant);
(*ADJ - MANU LOGICIEL*)
Manu_Log_ouv_basc_Adj := 
   Auto_pupitre_sans_Arret_prod
   AND Manu_logiciel
   AND Manu_cde_vidange_basc_adjuvant
   AND ( Info_XV2_ouvert
         OR NOT Conf_Bonbonne_Colorant);
(*ADJ - MANU PUPITRE (Sur API)*)
Manu_Pup_ouv_basc_Adj :=
   NOT Info_Plant_In_Auto
   AND (   Pup_Cde_vid_basc_Adj_comp[1]
	OR Pup_Cde_vid_basc_Adj_comp[2]
	OR Pup_Cde_vid_basc_Adj_comp[3]
	OR Pup_Cde_vid_basc_Adj_comp[4]
	OR Pup_Cde_vid_basc_Adj_comp[5]
	OR Pup_Cde_vid_basc_Adj_comp[6]
	OR Pup_Cde_vid_basc_Adj_comp[7]
	OR Pup_Cde_vid_basc_Adj_comp[8]
	OR Pup_Cde_vid_basc_Adj_comp[9]
	OR Pup_Cde_vid_basc_Adj_comp[10])
   AND ( FALSE
         OR ( Conf_adjuvant_comp1_vers_malax
	      AND Malax1_marche_ferme)
	 OR ( Conf_adjuvant_comp1_vers_eau1
	      AND Info_balance_Eau1_fermee)
	)
   AND (Numero_manu_pup_Adj = 0) (* Interdire l'ouverture de la bascule si un produit *)
   			(* est en cours de dosage et que son poids n'a pas été cumulé. *)
   AND(	(Numero_manu_pup_Eau1 = 0) (* Autoriser la vidange si pas d'eau en train de se doser dans Eau1 *)
   	OR (NOT Conf_adjuvant_comp1_vers_eau1)); (* ou que la bascule ne va pas vers la bascule Eau1 *)


(*ADJ - Calcul de commande*)
Cde_vidange_bascule_Adj:=
   NOT Alarme_prot_mot_Vid_ADJ_PPE
   AND NOT Discordance_vidange_adjuvant
   AND (Auto_ouv_basc_Adj
   	OR Manu_Log_ouv_basc_Adj
   	OR Manu_Pup_ouv_basc_Adj);



(* Modifs Jérémie BOUVET "Inde" 15/02/2010 *)
(* SIMEM plants / Adjuvants avec flotteur *)
IF Conf_Admix_Empty_Limit_Simen THEN
	IF BCMix_Pds_Adj[1]&lt;=0 THEN
		Mem_cde_dos_adj[1]:=0;
	END_IF;
	IF BCMix_Pds_Adj[2]&lt;=0 THEN
		Mem_cde_dos_adj[2]:=0;
	END_IF;

	Pulse_Cde_ppe_vidange_comp_adj1 := Cde_ppe_vidange_Comp_Adj[1];
	decalage_ppe_adj1 := FE(Pulse_Cde_ppe_vidange_comp_adj1); (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
	TOF_Mem_vidange_adj1 (IN := decalage_ppe_adj1,
				PT := Conf_Admix_Empty_Filter_Ti_Simen,
				Q =&gt; Mem_vidange_Adj1);

	Pulse_Cde_ppe_vidange_comp_adj2 := Cde_ppe_vidange_Comp_Adj[2];
	decalage_ppe_adj2 := FE(Pulse_Cde_ppe_vidange_comp_adj2); (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
	TOF_Mem_vidange_adj2(IN := decalage_ppe_adj2,
  				PT := Conf_Admix_Empty_Filter_Ti_Simen,
  				Q =&gt; Mem_vidange_Adj2);
END_IF;

(*ROUMANIE : GESTION ADJUVANTS Memorisation des dosages pour activation de pompe de vidange*)
(* En roumanie, on défini 1 seul compartiment avec 1 à 10 sorties ...*)
FOR Idx_adj:=1 TO Conf_adj1_nb_cuves DO
    IF Cde_dosage_Adj[Idx_adj] THEN
       Mem_cde_dos_adj[Idx_adj] := TRUE;
    END_IF;
END_FOR;
(**)
IF Etat_balance_Adj THEN
   MOVE_BOOL_AREBOOL (IN := FALSE, OUT =&gt; Mem_cde_dos_adj);
   MOVE_BOOL_AREBOOL (IN := FALSE, OUT =&gt; Cde_ppe_vidange_Comp_Adj);
END_IF;

MOVE_BOOL_AREBOOL (IN := FALSE,  OUT =&gt; Cde_ppe_vidange_Comp_Adj);
IF Info_Plant_In_Auto THEN
	(*Mode AUTO ou Manu Logiciel*)
	FOR Idx_adj:=1 TO Conf_adj1_nb_cuves DO
    	    IF Cde_vidange_bascule_Adj 
	       AND Mem_cde_dos_adj[Idx_adj] THEN
	          Cde_ppe_vidange_Comp_Adj[No_Comp_ADJ[Idx_adj]] := TRUE;
	    END_IF;
	END_FOR;
   ELSE
	(*Mode Manu Pupitre*)
	FOR Idx_Comp:=1 TO 10 DO
	    Cde_ppe_vidange_Comp_Adj[Idx_Comp] := NOT Alarme_prot_mot_Vid_ADJ_PPE
					   AND Pup_Cde_vid_basc_Adj_comp[Idx_Comp]
					   AND Malax1_marche_ferme
					   AND (Numero_manu_pup_Adj = 0); (* Interdire l'ouverture de la bascule si un produit *)
					   	(* est en cours de dosage et que son poids n'a pas été cumulé. *)
        END_FOR;
END_IF;
(*Mode PUPITRE : dans le pupitre Roumain, on commande directement la sortie demandé par BP*)


(*FIN GESTION ADJUVANTS Memorisation des dosages pour activation de pompe de vidange*)















			 (*Commande vidange bascule adjuvant COMP 2 *)
			 (*PUPITRE NON TRAITE*)
 
			 Cde_vidange_bascule_Adj_comp :=
			    Auto_pupitre_sans_Arret_prod
			    AND NOT Discordance_vidange_comp_adj
			    AND (FALSE
			         OR ( NOT Manu_logiciel
			               AND ( Alarme_vidange_Comp_Adj
			                     OR Vidange_Comp_Adj)
			              )
			         OR ( Manu_logiciel
			              AND Manu_cde_vidange_comp_adjuvant)
			        ); 

			 (*Commande vidange bascule anhydrite*)
			 (*PUPITRE NON TRAITE*)
			 Cde_vidange_bascule_Anh :=
			    Auto_pupitre_sans_Arret_prod
			    AND NOT Discordance_vidange_anhydrite
			    AND NOT Info_balance_Anh_ouvert
			    AND (FALSE
			         OR ( NOT Manu_logiciel
			               AND (Alarme_vidange_Anh
			                    OR Vidange_Anh
			                    OR Vid_seq_Anh)
			              )
			         OR ( Manu_logiciel
			              AND Manu_cde_vidange_basc_anhydrite)
			        );
  
			 (*Commande fermeture bascule anhydrite*)
			 (*PUPITRE NON TRAITE*)
			 Cde_fermeture_bascule_anhydrite :=
			    Auto_pupitre_sans_Arret_prod
			 AND NOT Discordance_vidange_anhydrite
			 AND NOT Info_balance_Anh_fermee
			 AND (FALSE
			      OR ( Fermeture_Anh
			           AND NOT Manu_logiciel)
			      OR ( Manu_logiciel
			           AND Manu_fermeture_basc_anhydrite)
			     );  


(*Commande vidange bascule additionnelle *)
(*ADD - AUTO*)
Auto_ouv_basc_Add := 
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND (Alarme_vidange_Add
         OR Vidange_Add
	 OR Vid_seq_Add);
(*ADD - MANU LOGICIEL*)
Manu_Log_ouv_basc_Add := 
   Auto_pupitre_sans_Arret_prod
   AND Manu_logiciel
   AND Manu_cde_vidange_basc_Add;
(*ADD - MANU PUPITRE (Sur API)*)
Manu_Pup_ouv_basc_Add :=
   NOT Info_Plant_In_Auto
   AND Pup_Cde_vid_basc_Add
   AND (Numero_manu_pup_Add = 0); (* Interdire l'ouverture de la bascule si un produit *)
   			(* est en cours de dosage et que son poids n'a pas été cumulé. *)
(*ADD - Calcul de commande*)
Cde_vidange_bascule_Add :=
         NOT Discordance_vidange_Basc_Add
	 AND (Auto_ouv_basc_Add
	   	 OR Manu_Log_ouv_basc_Add
	   	 OR Manu_Pup_ouv_basc_Add);
(*Commandes par organe de stockage *)
(* pour n'ouvrir que les compartiments dans lesquels il y a eu un dosage *)
(* pour éviter une possible pollution d'un compartiment inutilisé. *)
Vidange_Add_finie := (NOT Vidange_Add AND NOT Manu_Log_ouv_basc_Add AND NOT Manu_Pup_ouv_basc_Add);
Pulse_Vidange_Add_finie := Vidange_Add_finie; (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
FOR Idx_Org_Add:=1 TO Conf_basc_add_nb_organes BY 1 DO
	Pulse_Cde_dosage_add[Idx_Org_Add] := Cde_dosage_add[Idx_Org_Add]; (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
	IF RE(Pulse_Vidange_Add_finie) OR seuil_vide_atteint_add THEN
		(* Initialiser la mémoire permettant de se souvenir qu'un dosage a eu lieu dans le compartiment *)
		Memo_compartiment_Add_non_vide[Idx_Org_Add] := FALSE;	(* ASM Nov 2013 -P864 : artf 1347731 : Additional balance  *)
	ELSIF RE(Pulse_Cde_dosage_add[Idx_Org_Add]) THEN
		(* Mémoriser qu'un dosage à eu lieu dans le compartiment *)
		Memo_compartiment_Add_non_vide[Idx_Org_Add] := TRUE;
	END_IF;
	Cde_vidange_bascule_Add_Organe[Idx_Org_Add] :=
		Cde_vidange_bascule_Add
		AND Memo_compartiment_Add_non_vide[Idx_Org_Add];
END_FOR;



(*Commande vidange trémie tampon granulat*)
(*TT_GRA1 - AUTO*)
Auto_ouv_TT_Gra := 
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND Vidange_TT_granulat;

(*TT_GRA1 - MANU LOGICIEL*)
Manu_Log_ouv_TT_gra := 
   Manu_logiciel
   AND Manu_cde_vidange_TT_granulat;

(*TT_GRA1 - MANU PUPITRE (Sur API)*)
Manu_Pup_ouv_TT_gra :=
   NOT Info_Plant_In_Auto
   AND Pup_Cde_ouv_TT_gra
   AND Malax1_marche_ferme;
       (* Conf malaxeur 2 non gérée *) 
       (* Conf Bipass non gérée *)
       (* Conf sans malaxeur non gérée *)

(*TT_GRA1 - Calcul de la commande*)
Cde_vidange_TT_gra := 
   NOT Discordance_vidange_TT_granulat
   AND (    Auto_ouv_TT_gra 
	 OR Manu_Log_ouv_TT_gra
	 OR Manu_Pup_ouv_TT_gra);
(* 
(*Commande vidange trémie tampon granulat*)
Cde_vidange_TT_granulat :=
auto_pupitre_sans_arret_cycle
AND NOT Discordance_vidange_TT_granulat
AND (FALSE
     OR ( (Vidange_TT_granulat
           OR Ouverture_TT_Gra_DRY)
	   AND NOT Manu_logiciel)
     OR ( Manu_cde_vidange_TT_granulat
	  AND Manu_logiciel)
     );  
*)






























			(*Commande vidange trémie tampon ciment*)
			(*PUPITRE NON TRAITE*)
			Cde_vidange_TT_cim := 
			   Auto_pupitre_sans_Arret_prod
			   AND NOT Discordance_vidange_TT_cim
			   AND ( FALSE
			         OR ( Vidange_TT_cim
			              AND NOT Manu_logiciel)
			         OR ( Manu_cde_vidange_TT_cim
			              and Manu_logiciel)
			        );


			(* Commande vidange tampons-pompe *)
			(*PUPITRE NON TRAITE*)
			FOR Idx_Ppe := 1 TO Conf_ppe_nb_ppes DO
				Cde_vidange_tampon_ppe[Idx_Ppe] :=
					Auto_pupitre_sans_Arret_prod
					AND Vidange_tampon_ppe[Idx_Ppe];
			END_FOR;


(*** TRANSFERTS ***)
(*Commande tapis transfert*)
(*La du tapis vers :
   - Malaxeur*)
(*ATTENTION :
- La conf "tapis trans &amp; skip trans n'existe pas" (à vérifier par Yves le Bail) 
- On ne triate pas la configuration Témie tampon.
- On ne traite pas la configuration 2 malaxeur (pas de bipasse)
- On traite la config 1 ou 2 trappes malaxeur.*)

(*Tapis transfert - AUTO*)
Auto_Marche_Tapis_Trans := 
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND Conf_tapis_transfert
   AND Marche_tapis_transfert_granulat;
(*Tapis transfert - MANU LOGICIEL*)
(* XX/02/2016 - P869A - artf1541747 *)
Pulse_Manu_logiciel := Manu_logiciel;
IF RE(Pulse_Manu_logiciel) (* /!\ Warning : We recommend to use an temporary variable "Pulse_*" in order to use fonction "RE" or "FE". *)
   THEN
   IF Info_tapis_transfert_en_marche 
      AND (Info_malaxeur1_en_marche
      	   AND destination_malaxeur_1
           OR NOT Conf_malaxeur1_present)
      AND (Info_malaxeur2_en_marche
      	   AND destination_malaxeur_2
           OR NOT Conf_malaxeur2_present)
      AND (Info_TT_Gra_fermee OR NOT Conf_TT_granulat)
      AND (destination_malaxeur_1 OR destination_malaxeur_2)
      THEN
      Manu_Log_Marche_Tapis_Trans := TRUE;
   ELSE
      Manu_Log_Marche_Tapis_Trans := FALSE;
   END_IF;
END_IF;

IF Auto_pupitre_sans_Arret_prod
   AND Manu_Cmd_Conveyor_Belt_ON 
   AND Manu_logiciel
   AND NOT (%S0 OR %S1)
   THEN
	Manu_Log_Marche_Tapis_Trans := TRUE;
	Manu_Cmd_Conveyor_Belt_ON := FALSE;
	Manu_Cmd_Conveyor_Belt_OFF := FALSE;
END_IF;

IF NOT Auto_pupitre_sans_Arret_prod
   OR Manu_Cmd_Conveyor_Belt_OFF
   OR NOT Manu_logiciel
   OR (%S0 OR %S1)
   THEN
	Manu_Log_Marche_Tapis_Trans := FALSE;
	Manu_Cmd_Conveyor_Belt_ON := FALSE;
	Manu_Cmd_Conveyor_Belt_OFF := FALSE;
END_IF;

(*Tapis transfert - MANU PUPITRE*)
(* DISCORDANCE TAPIS : toujours en section discordance (ne fonctionne pas en manu log)*)
(* Modif M.D. 14/05/2007 : demande Gaetan : on crée une marche impulsionnelle
pour le pupitre à chaque appui sur le BP, on établi la demande en fonction 
de l'état de la commande. En cas de défaut la demende est remise à 0*)
(* Modif M.D. 15/10/2008 : intégration de la trémie tampon *)
Pulse_Pup_marche_Tapis_Trans := 
   NOT Info_Plant_In_Auto
   AND Pup_Cde_Tapis_Trans 
   AND NOT Defaut_tapis_transfert;

(* Pup_cde_Tapis_Trans := 
 NOT Info_Plant_In_Auto
 AND Pup_Marche_Tapis_Trans 
 AND Malax1_marche_ferme
 AND NOT Defaut_tapis_transfert;
 *) 

IF RE(Pulse_Pup_marche_Tapis_Trans) (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
   THEN
   IF Cde_marche_tapis_transfert THEN
      Manu_Pup_Marche_Tapis_Trans := FALSE;
   END_IF;
   IF NOT Cde_marche_tapis_transfert
      (*AND ( (Malax1_marche_ferme AND NOT Conf_TT_granulat)
             OR ( Conf_TT_granulat AND Info_TT_Gra_fermee) 
           )*) (* Mise en commentaire par Gaëtan DEPOORTERE 04/08/2009 *)
      THEN
      Manu_Pup_Marche_Tapis_Trans := TRUE;
   END_IF;
END_IF;

IF Defaut_tapis_transfert THEN
   Manu_Pup_Marche_Tapis_Trans := FALSE;
END_IF;

(*Tapis transfert - Calcul de commande*)
Cde_marche_tapis_transfert :=
   NOT Defaut_tapis_transfert
   AND (Auto_Marche_Tapis_Trans
        OR Manu_Log_Marche_Tapis_Trans
        OR Manu_Pup_Marche_Tapis_Trans);

(*Commande montée skip*)
(*ATTENTION :
- On ne traite pas la configuration Témie tampon.
- On ne traite pas la configuration 2 malaxeur (pas de bipasse)
- On traite la contre la config 1 ou 2 trappes malaxeur.*)

(*SKIP - AUTO*)
Auto_Montee_Skip := 
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND montee_skip;
(*SKIP - MANU LOGICIEL*)
Manu_Log_Montee_Skip := 
   Auto_pupitre_sans_Arret_prod
   AND Manu_cde_montee_skip
   AND Manu_logiciel;  

IF info_skip_haut THEN
   Manu_cde_montee_skip := FALSE;
END_IF;

(*SKIP - MANU PUPITRE*)
Manu_Pup_Montee_Skip := 
   NOT Info_Plant_In_Auto
   AND Pup_Montee_Skip
   AND Malax1_marche_ferme
   AND (
   	(Numero_manu_pup_Gra1 = 0) (* Interdire le déplacement du skip si un produit *)
   			(* est en cours de dosage et que son poids n'a pas été cumulé. *) 
	OR NOT Conf_granulat1_skip (* à moins qu'il ne s'agisse pas d'un skip peseur *)
   );
(*SKIP - Calcul de commande*)
Cde_montee_skip	:=
   (Conf_granulat1_skip OR Conf_skip_transfert)
   AND NOT Defaut_skip
   AND NOT info_skip_haut
   AND NOT(NOT Info_skip_bas AND Info_cable_skip_mou) (*Modif Jérémie BOUVET "Inde" 15/02/2010 *)(* Slack Steel / Cable mou *)
   AND ( Auto_Montee_Skip
         OR Manu_Log_Montee_Skip
         OR Manu_Pup_Montee_Skip);

(*Commande descente skip*)
(*Condition descente skip (peseur &amp; transfert)*)
(* Modif 20/01/2009 : le skipt de transfert doit s'arrèter sur memo_skip_bas (on remplace "info" par "memo"
   Rq : le bit cable skip mou est calculé différement pour les 2 skip *)

ok_descente_skip := 
   NOT Defaut_skip
   AND Not ( FALSE
 	  OR ( (memo_skip_bas or Cable_skip_mou)
 	       AND NOT Conf_granulat1_skip)
          OR ( Cable_skip_mou AND Conf_granulat1_skip )
         );
(*SKIP - AUTO*)
Auto_Descente_Skip := 
   Auto_pupitre_sans_Arret_prod
   (*AND ok_descente_skip 	mise ds la commande *)
   AND descente_skip
   AND NOT Manu_logiciel;
(*SKIP - MANU LOGICIEL*)
Manu_Log_Descente_Skip := 
   Auto_pupitre_sans_Arret_prod
   (*AND ok_descente_skip 	mise ds la commande*)
   AND Manu_cde_descente_skip
   AND Manu_logiciel;

(* Modif Jérémie BOUVET "Inde" 15/02/2010 *)(* Skip *)
IF Cable_skip_mou
OR (info_skip_bas AND NOT Conf_granulat1_skip)
OR (Cable_skip_mou AND Conf_granulat1_skip) THEN
   Manu_cde_Descente_skip := FALSE;
END_IF;

(*SKIP - MANU PUPITRE*)
Manu_Pup_Descente_Skip := 
   NOT Info_Plant_In_Auto
   (*AND ok_descente_skip 	mise ds la commande*)
   AND Pup_Descente_Skip;
(*SKIP - Calcul de commande*)
Cde_Descente_skip:=
   (Conf_granulat1_skip OR Conf_skip_transfert)
   AND ok_descente_skip 
   AND ( Auto_Descente_Skip
         OR Manu_Log_Descente_Skip
         OR Manu_Pup_Descente_Skip);
 
			 (* Orientation du bypass suivant la destination*)
			 (* modif M.D. 07/10/2004 : conf anhydrite 8. ajout "bit_conf_anhy_8"  *)
			 (* dans ce cas, passage produit par mal 1 et pas bypass pos 2 pour eau*)
			 (*PUPITRE NON TRAITE*)
			 IF FALSE
			    OR ( NOT Manu_logiciel
				 AND destination_malaxeur_1
				 AND NOT bit_conf_anhy_8)
			    OR ( Manu_logiciel
				 AND Manu_cde_bypass_vers_malaxeur1)
			    THEN
			    Cde_bypass_vers_mal2_s_seche := FALSE;
			 END_IF;
  
			 IF FALSE
			    OR ( NOT Manu_logiciel
			 	 AND (destination_malaxeur_2
			              OR Sortie_seche
			              OR bit_conf_anhy_8)
			        )
			    OR ( Manu_logiciel
			         AND Manu_cde_bypass_vers_mal2_sseche)
			    THEN
			    Cde_bypass_vers_mal2_s_seche := TRUE;
			 END_IF;
  

			(*Commande transfert ciment (bonbonne vers trémie tampon)*)
			 (*PUPITRE NON TRAITE*)
			Cde_ordre_transfert_cim :=
			   Auto_pupitre_sans_Arret_prod
			   AND ( FALSE
			         OR ( Ordre_transfert_cim
			              AND NOT Manu_logiciel
			             )
			         OR ( Manu_cde_transfert_cim
			              AND NOT Info_autorisation_chargement_SAS
			              AND Manu_logiciel
			             )
			        );
  
			IF Info_transfert_cim_termine
			   and Manu_logiciel
			   THEN
			   Manu_cde_transfert_cim := FALSE;
			   Cde_autorisation_trans_cim := FALSE;
			END_IF;
  


(*** VIBREURS ***)

(*Commande vibreur balance granulat 1*)
(*VIB GRA1 - AUTO*)
Auto_Vibreur_Gra1 := 
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND ( Vibreur_balance_Gra1
	 OR Vibreur_tremies_Gra1
         OR ( Vibreur_organes_Anh
              AND Type_produit_anhydrite)
        );
(*VIB GRA1 - MANU LOGICIEL*)
Tempo_vibreur_Gra1 (IN := Manu_cde_vibreur_bal_granulat1 and Manu_logiciel,
                   PT := Conf_granulat1_TON_vibreur_bal);
Manu_cde_vibreur_bal_granulat1 := FALSE;

Manu_Log_Vibreur_Gra1 := 
   Auto_pupitre_sans_Arret_prod
   AND Tempo_vibreur_Gra1.Q;

(*VIB GRA1 - PUPITRE*)
MANU_Pup_Vibreur_Gra1 := 
   NOT Info_Plant_In_Auto
   AND Pup_Cde_vibreur_Gra1;
(*VIB GRA1 - Calcul de commande*)
Cde_vibreur_balance_Gra1 :=
   (Cde_vidange_bascule_Gra1
   OR Cde_vidange_bascule_Gra1_1	(* XX/11/2013 - P864 - artf1178590 *)
   OR Cde_vidange_bascule_Gra1_2	(* XX/11/2013 - P864 - artf1178590 *)
   OR Cde_dosage_Gra[1]
   OR Cde_dosage_Gra[2]
   OR Cde_dosage_Gra[3]
   OR Cde_dosage_Gra[4]
   OR Cde_dosage_Gra[5]
   OR Cde_dosage_Gra[6]
   OR Cde_dosage_Gra[7]
   OR Cde_dosage_Gra[8]
   OR Cde_dosage_Gra[9]
   OR Cde_dosage_Gra[10]
   OR Cde_dosage_Gra[11]
   OR Cde_dosage_Gra[12]
   OR Cde_dosage_Gra[13]
   OR Cde_dosage_Gra[14]
   )
   AND ( Auto_Vibreur_Gra1
         OR Manu_Log_Vibreur_Gra1
         OR Manu_Pup_Vibreur_Gra1);


(*Commande vibreur balance granulat 2*)
(*VIB GRA2 - AUTO*)
Auto_Vibreur_Gra2 := 
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND ( Vibreur_balance_Gra2
         OR Vibreur_tremies_Gra2);
(*VIB GRA2 - MANU LOGICIEL*)
Tempo_vibreur_Gra2 (IN :=Manu_cde_vibreur_bal_granulat2 AND Manu_logiciel,
                  PT := Conf_granulat2_TON_vibreur_bal);
Manu_cde_vibreur_bal_granulat2 := FALSE;

Manu_Log_Vibreur_Gra2 := 
   Auto_pupitre_sans_Arret_prod
   AND Tempo_vibreur_Gra2.Q;

(*VIB GRA2 - MANU PUPITRE*)
Manu_Pup_Vibreur_Gra2 := 
   NOT Info_Plant_In_Auto
   AND Pup_Cde_vibreur_Gra1;
(*VIB GRA2 - Calcul de commande*)
Cde_vibreur_balance_Gra2 :=
   Cde_vidange_bascule_Gra2 (* Correction R.C. 08/04/2010 *)
   AND (    Auto_Vibreur_Gra2
   	OR Manu_Log_Vibreur_Gra2
   	OR Manu_Pup_Vibreur_Gra2);


(*Commande vibreur balance CIMENT1*)

(* VIB CIM1 - AUTO*)
Auto_Vibreur_Cim1 :=
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND ( Vibreur_balance_Cim1
         OR Vibreur_silos_Cim1);

(* VIB CIM1 - Manu_LOGICIEL*)

Tempo_vibreur_Cim1 (IN := Manu_cde_vibreur_bal_cim1 and Manu_logiciel,
                      PT := Conf_cim1_TON_vibreur_bal);
(*Modif M.D. 23/07/2008 : Suit BUG vibreur.
La pulse est lancée, on peut remettre la demande BC-Mix à 0*)
Manu_cde_vibreur_bal_cim1 := FALSE;

Manu_Log_Vibreur_Cim1 := 
   Auto_pupitre_sans_Arret_prod
   AND Tempo_vibreur_Cim1.Q;

(* VIB CIM1 - Manu PUPITRE*)
Manu_Pup_Vibreur_Cim1 := 
   NOT Info_Plant_In_Auto
   AND Pup_Cde_vibreur_Cim1;

(*VIB CIM1 - Calcul de commande*)
Cde_vibreur_balance_Cim1 :=
   (Cde_vidange_bascule_Cim1
   OR Cde_dosage_Cim[1] AND (1&lt;=Conf_cim1_nb_silos)
   OR Cde_dosage_Cim[2] AND (2&lt;=Conf_cim1_nb_silos)
   OR Cde_dosage_Cim[3] AND (3&lt;=Conf_cim1_nb_silos)
   OR Cde_dosage_Cim[4] AND (4&lt;=Conf_cim1_nb_silos)
   OR Cde_dosage_Cim[5] AND (5&lt;=Conf_cim1_nb_silos)
   OR Cde_dosage_Cim[6] AND (6&lt;=Conf_cim1_nb_silos)
   )
   AND (    Auto_Vibreur_Cim1
   	OR Manu_Log_Vibreur_Cim1
   	OR Manu_Pup_Vibreur_Cim1);




(*Commande vibreur balance CIMENT2*)

(* VIB CIM2 - AUTO*)
Auto_Vibreur_Cim2 :=
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND ( Vibreur_balance_Cim2
         OR Vibreur_silos_Cim2);


(* VIB CIM2 - Manu_LOGICIEL*)

Tempo_vibreur_Cim2 (IN := Manu_cde_vibreur_bal_cim2 and Manu_logiciel,
                       PT := Conf_cim2_TON_vibreur_bal);
(*Modif M.D. 23/07/2008 : Suit BUG vibreur.
La pulse est lancée, on peut remettre la demande BC-Mix à 0*)
Manu_cde_vibreur_bal_cim2 := FALSE;

Manu_Log_Vibreur_Cim2 := 
   Auto_pupitre_sans_Arret_prod
   AND Tempo_vibreur_Cim2.Q;

(* VIB CIM2 - Manu PUPITRE*)
Manu_Pup_Vibreur_Cim2 := 
   NOT Info_Plant_In_Auto
   AND Pup_Cde_vibreur_Cim2;

(*VIB CIM2 - Calcul de commande*)
Cde_vibreur_balance_Cim2 :=
   (Cde_vidange_bascule_Cim2
   OR Cde_dosage_Cim[1] AND (1&gt;Conf_cim1_nb_silos) AND (1&lt;=Conf_cim1_nb_silos+Conf_cim2_nb_silos)
   OR Cde_dosage_Cim[2] AND (2&gt;Conf_cim1_nb_silos) AND (2&lt;=Conf_cim1_nb_silos+Conf_cim2_nb_silos)
   OR Cde_dosage_Cim[3] AND (3&gt;Conf_cim1_nb_silos) AND (3&lt;=Conf_cim1_nb_silos+Conf_cim2_nb_silos)
   OR Cde_dosage_Cim[4] AND (4&gt;Conf_cim1_nb_silos) AND (4&lt;=Conf_cim1_nb_silos+Conf_cim2_nb_silos)
   OR Cde_dosage_Cim[5] AND (5&gt;Conf_cim1_nb_silos) AND (5&lt;=Conf_cim1_nb_silos+Conf_cim2_nb_silos)
   OR Cde_dosage_Cim[6] AND (6&gt;Conf_cim1_nb_silos) AND (6&lt;=Conf_cim1_nb_silos+Conf_cim2_nb_silos)
   )
   AND (    Auto_Vibreur_Cim2
   	OR Manu_Log_Vibreur_Cim2
   	OR Manu_Pup_Vibreur_Cim2);




(*Commande vibreur balance EAU1 *)

(* VIB EAU1 - AUTO*)
Auto_Vibreur_Eau :=
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND ( Vibreur_balance_Eau1
         OR Vibreur_cuves_Eau1);

(* VIB EAU1 - Manu_LOGICIEL*)

Tempo_vibreur_Eau1 (IN := Manu_cde_vibreur_bal_eau and Manu_logiciel,
                      PT := Conf_eau_TON_vibreur_bal);
(*Modif M.D. 23/07/2008 : Suit BUG vibreur.
La pulse est lancée, on peut remettre la demande BC-Mix à 0*)
Manu_cde_vibreur_bal_eau := FALSE;

Manu_Log_Vibreur_Eau := 
   Auto_pupitre_sans_Arret_prod
   AND Tempo_vibreur_Eau1.Q;

(* VIB EAU1 - Manu PUPITRE*)
Manu_Pup_Vibreur_Eau := 
   NOT Info_Plant_In_Auto
   AND Pup_Cde_vibreur_Eau1;

(*VIB EAU1 - Calcul de commande*)
Cde_vibreur_balance_Eau1 :=
   (Cde_vidange_bascule_Eau1
   OR Cde_dosage_Eau[1] AND (1&lt;=Conf_Eau1_nb_cuves)
   OR Cde_dosage_Eau[2] AND (2&lt;=Conf_Eau1_nb_cuves)
   OR Cde_dosage_Eau[3] AND (3&lt;=Conf_Eau1_nb_cuves)
   OR Cde_dosage_Eau[4] AND (4&lt;=Conf_Eau1_nb_cuves)
   )
   AND (    Auto_Vibreur_Eau
   	OR Manu_Log_Vibreur_Eau
   	OR Manu_Pup_Vibreur_Eau);





(*Commande vibreur balance EAU2 *)

(* VIB EAU2 - AUTO*)
Auto_Vibreur_Eau2 :=
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND ( Vibreur_balance_Eau2
         OR Vibreur_cuves_Eau2);


(* VIB EAU2 - Manu_LOGICIEL*)

Tempo_vibreur_Eau2 (IN := Manu_cde_vibreur_bal_eau2 and Manu_logiciel,
                       PT := Conf_eau2_TON_vibreur_bal);
(*Modif M.D. 23/07/2008 : Suit BUG vibreur.
La pulse est lancée, on peut remettre la demande BC-Mix à 0*)
Manu_cde_vibreur_bal_eau2 := FALSE;

Manu_Log_Vibreur_Eau2 := 
   Auto_pupitre_sans_Arret_prod
   AND Tempo_vibreur_Eau2.Q;

(* VIB EAU2 - Manu PUPITRE*)
Manu_Pup_Vibreur_Eau2 := 
   NOT Info_Plant_In_Auto
   AND Pup_Cde_vibreur_Eau2;

(*VIB EAU2 - Calcul de commande*)
Cde_vibreur_balance_Eau2 :=
   (Cde_vidange_bascule_Eau2
   OR Cde_dosage_Eau[1] AND (1&gt;Conf_Eau1_nb_cuves) AND (1&lt;=Conf_Eau1_nb_cuves+Conf_Eau2_nb_cuves)
   OR Cde_dosage_Eau[2] AND (2&gt;Conf_Eau1_nb_cuves) AND (2&lt;=Conf_Eau1_nb_cuves+Conf_Eau2_nb_cuves)
   OR Cde_dosage_Eau[3] AND (3&gt;Conf_Eau1_nb_cuves) AND (3&lt;=Conf_Eau1_nb_cuves+Conf_Eau2_nb_cuves)
   OR Cde_dosage_Eau[4] AND (4&gt;Conf_Eau1_nb_cuves) AND (4&lt;=Conf_Eau1_nb_cuves+Conf_Eau2_nb_cuves)
   )
   AND (    Auto_Vibreur_Eau2
   	OR Manu_Log_Vibreur_Eau2
   	OR Manu_Pup_Vibreur_Eau2);





			(*Commande vibreur balance anhydrite*)
			(*PUPITRE NON TRAITE*)
			Tempo_vibreur_Anh (IN := Manu_cde_vibreur_bal_anhydrite AND Manu_logiciel,
				                 PT := Conf_anhydrite_TON_vibreur_bal);
  
			Manu_cde_vibreur_bal_anhydrite := FALSE;
			Cde_vibreur_balance_Anh :=
	                   Auto_pupitre_sans_Arret_prod
			   and ( Tempo_vibreur_Anh.Q
			         or ( NOT Manu_logiciel
				      and ( Vibreur_balance_Anh
				            or ( Vibreur_organes_Anh
				                 AND NOT Type_produit_anhydrite)
				           )
				     )
			        );


(*Commande vibreur balance Additionnelle *)

(* VIB ADD - AUTO*)
Auto_Vibreur_Add :=
   Auto_pupitre_sans_Arret_prod
   AND NOT Manu_logiciel
   AND (Vibreur_balance_Add
         OR Vibreur_organes_Add);

(* VIB ADD - Manu_LOGICIEL*)
Tempo_vibreur_Add (IN := Manu_cde_vibreur_bal_add and Manu_logiciel,
                      PT := Conf_basc_add_TON_vibreur_bal);
Manu_cde_vibreur_bal_Add := FALSE; (* Modif M.D. 23/07/2008 : Suit BUG vibreur. La pulse est lancée, on peut remettre la demande BC-Mix à FALSE *)

Manu_Log_Vibreur_Add := 
   Auto_pupitre_sans_Arret_prod
   AND Tempo_vibreur_Add.Q;

(* VIB ADD - Manu PUPITRE*)
Manu_Pup_Vibreur_Add := 
   NOT Info_Plant_In_Auto
   AND Pup_Cde_vibreur_Add;

(*VIB ADD - Calcul de commande*)
Cde_vibreur_balance_Add :=
   (Cde_vidange_bascule_Add
      OR Cde_dosage_Add[1]
      OR Cde_dosage_Add[2]
      OR Cde_dosage_Add[3]
      OR Cde_dosage_Add[4])
   AND (Auto_Vibreur_Add
      OR Manu_Log_Vibreur_Add
      OR Manu_Pup_Vibreur_Add);


			(*Commande vibreur trémie tampon granulat *)
			(* VIB TT_GRA - AUTO*)
			Auto_Vibreur_TT_Gra := Auto_pupitre_sans_Arret_prod
				AND NOT Manu_logiciel
				AND (Vibreur_TT_gra_non_pesee (* Ordre Auto, TT granulat non pesée *)
					OR Vibreur_TT_gra_pesee (* Ordre Auto, TT granulat pesée*)
				);

			(* VIB TT_GRA - Manu_LOGICIEL*)
			Tempo_vibreur_TT_granulat (IN := Manu_cde_vibreur_TT_granulat and Manu_logiciel,
			                                 PT := Conf_TT_granulat_TON_vibreur);(* XX/07/2014 - P864 - artf1512501 *)
			Manu_cde_vibreur_TT_granulat := FALSE;

			Manu_Log_Vibreur_TT_gra := Auto_pupitre_sans_Arret_prod
				AND Tempo_vibreur_TT_granulat.Q;


			(* VIB TT_GRA - Manu PUPITRE*)
			Manu_Pup_Vibreur_TT_gra := NOT Info_Plant_In_Auto
				AND Pup_Cde_vibreur_TT_gra;

			(*VIB TT_GRA - Calcul de commande*)
			Cde_vibreur_TT_gra := Cde_vidange_TT_gra
				AND (Auto_Vibreur_TT_Gra
					OR Manu_Log_Vibreur_TT_gra
					OR Manu_Pup_Vibreur_TT_gra
				);



			(*Commande vibreur trémie tampon ciment*)
  			(*PUPITRE NON TRAITE*)
			Tempo_vibreur_TT_ciment (IN := Manu_cde_vibreur_TT_cim and Manu_logiciel,
			                         PT := Conf_TT_cim_TON_vibreur);
  			Manu_cde_vibreur_TT_cim := FALSE;
			Cde_vibreur_TT_cim :=
			   Auto_pupitre_sans_Arret_prod
			   AND ( Tempo_vibreur_TT_ciment.Q
			         OR ( NOT Manu_logiciel
			              AND ( Vibreur_TT_cim_non_pesee
			                    OR Vibreur_TT_cim_pesee)
			             )
			        );

(*** PETITE VITESSE ***)

(*Commande petite vitesse granulat 1*)
(*Roumanie : la petite vitesse n'est actionné que si une commande est activée*)
(*Il faudrait discerner la chaine (1 ou 2)*)
Cde_petite_vitesse_Gra1 :=
    (    Cde_dosage_Gra[1] 
	   OR Cde_dosage_Gra[2]
	   OR Cde_dosage_Gra[3]
	   OR Cde_dosage_Gra[4]
	   OR Cde_dosage_Gra[5]
	   OR Cde_dosage_Gra[6]
	   OR Cde_dosage_Gra[7]
	   OR Cde_dosage_Gra[8]
	   OR Cde_dosage_Gra[9]
	   OR Cde_dosage_Gra[10]
	   OR Cde_dosage_Gra[11]
	   OR Cde_dosage_Gra[12]
	   OR Cde_dosage_Gra[13]
	   OR Cde_dosage_Gra[14] 
	)
   AND (   Auto_pupitre_sans_Arret_prod
	   AND ( Petite_vitesse_Gra1
	         OR ( Petite_vitesse_Anh
	              AND Type_produit_anhydrite)
	         OR ( Manu_cde_PV_granulat1
	              AND Manu_logiciel)
               )
	   OR  ( NOT Info_Plant_In_Auto
	        AND Pup_Cde_PV_Gra1)
	); 
  
(*Commande petite vitesse granulat 2*)
(*Roumanie : la petite vitesse n'est actionné que si une commande est activée*)
(*Il faudrait discerner la chaine (1 ou 2)*)
Cde_petite_vitesse_Gra2 :=
       (    Cde_dosage_Gra[1]
           OR Cde_dosage_Gra[2]
	   OR Cde_dosage_Gra[3]
	   OR Cde_dosage_Gra[4]
	   OR Cde_dosage_Gra[5]
	   OR Cde_dosage_Gra[6]
	   OR Cde_dosage_Gra[7]
	   OR Cde_dosage_Gra[8]
	   OR Cde_dosage_Gra[9]
	   OR Cde_dosage_Gra[10]
	   OR Cde_dosage_Gra[11]
	   OR Cde_dosage_Gra[12]
	   OR Cde_dosage_Gra[13]
	   OR Cde_dosage_Gra[14]
	)
	AND (   Auto_pupitre_sans_Arret_prod
		AND ( Petite_vitesse_Gra2
	              OR ( Manu_cde_PV_granulat2
	                  AND Manu_logiciel)
	             )
	        OR ( NOT Info_Plant_In_Auto
	             AND Pup_Cde_PV_Gra2)
         );
  
(*Commande petite vitesse ciment*)
Cde_petite_vitesse_Cim1 :=
        (    Cde_dosage_Cim[1]
	   OR Cde_dosage_Cim[2]
	   OR Cde_dosage_Cim[3]
	   OR Cde_dosage_Cim[4]
	   OR Cde_dosage_Cim[5]
	   OR Cde_dosage_Cim[6]

	)
	AND (   Auto_pupitre_sans_Arret_prod
		   AND (Petite_vitesse_Cim1
		        OR (Manu_cde_PV_cim1
		            AND Manu_logiciel)
		       )
		   OR ( NOT Info_Plant_In_Auto
		        AND Pup_Cde_PV_Cim1)
	     );
  
(*Commande petite vitesse eau1 et eau2*)
(*Roumanie : Stefanesti : la petite vitesse !!!*)
Cde_petite_vitesse_Eau1 :=
           (    Cde_dosage_Eau[1] AND (1&lt;=Conf_Eau1_nb_cuves)		(*XX/09/2013 - P863 - FrBx000079*)
 		OR Cde_dosage_Eau[2] AND (2&lt;=Conf_Eau1_nb_cuves)	(*XX/09/2013 - P863 - FrBx000079*)
		OR Cde_dosage_Eau[3] AND (3&lt;=Conf_Eau1_nb_cuves)	(*XX/09/2013 - P863 - FrBx000079*)
		OR Cde_dosage_Eau[4] AND (4&lt;=Conf_Eau1_nb_cuves)	(*XX/09/2013 - P863 - FrBx000079*)
	   )
	AND (   Auto_pupitre_sans_Arret_prod
		   AND ( Petite_vitesse_Eau1
		         OR ( Manu_cde_PV_eau1
		              AND Manu_logiciel
		             )
		        )
		   OR ( NOT Info_Plant_In_Auto
		        AND Pup_Cde_PV_Eau1)
	    );

(*XX/09/2013 - P863 - FrBx000079 - Addition of "Cde_petite_vitesse_Eau2"*)
Cde_petite_vitesse_Eau2 :=
           (	Cde_dosage_Eau[1] AND (1&gt;Conf_Eau1_nb_cuves) AND (1&lt;=Conf_Eau1_nb_cuves+Conf_Eau2_nb_cuves)
   		OR Cde_dosage_Eau[2] AND (2&gt;Conf_Eau1_nb_cuves) AND (2&lt;=Conf_Eau1_nb_cuves+Conf_Eau2_nb_cuves)
   		OR Cde_dosage_Eau[3] AND (3&gt;Conf_Eau1_nb_cuves) AND (3&lt;=Conf_Eau1_nb_cuves+Conf_Eau2_nb_cuves)
   		OR Cde_dosage_Eau[4] AND (4&gt;Conf_Eau1_nb_cuves) AND (4&lt;=Conf_Eau1_nb_cuves+Conf_Eau2_nb_cuves)
	   )
	AND (   Auto_pupitre_sans_Arret_prod
		AND	Petite_vitesse_Eau2
	
	    );

(*Commande petite vitesse anhydrite*)
Cde_petite_vitesse_Anh :=
   Auto_pupitre_sans_Arret_prod
   AND ( FALSE
         OR ( Petite_vitesse_Anh
               AND NOT Type_produit_anhydrite
             )
         OR ( Manu_cde_PV_anhydrite
              and Manu_logiciel)
        )
   OR ( NOT Info_Plant_In_Auto
        AND Pup_Cde_PV_Anh);
  
(*Commande petite vitesse bascule additionnelle*)
Cde_petite_vitesse_Add :=
   (Cde_dosage_Add[1]
      OR Cde_dosage_Add[2]
      OR Cde_dosage_Add[3]
      OR Cde_dosage_Add[4]
   )
   AND (Auto_pupitre_sans_Arret_prod
      AND (Petite_vitesse_Add
         OR (Manu_cde_PV_Add
            AND Manu_logiciel
         )
      )
      OR (NOT Info_Plant_In_Auto
         AND Pup_Cde_PV_Add
      )
   );
  




(*ETAT bascule ciment vide*)
fm_seuil_vide_ciment (CLK := Seuil_vide_atteint_Cim1);
IF fm_seuil_vide_ciment.Q
AND Manu_logiciel
AND Cde_vidange_bascule_Cim1 THEN
   Cde_autorisation_trans_cim := TRUE;
   Cde_bascule_Cim1_vide___old := TRUE;
END_IF;
  
(*ROUMANIE : GESTION PPE A GRAISSE******************)
Raz_CTU_graissage := CTU_GRAISSAGE.CV &gt;( Conf_Grease_PP_TON + Conf_Grease_PP_TOFF);
CTU_GRAISSAGE (CU := %S6 (* AND Info_malaxeur1_en_marche *),
	 R := Raz_CTU_graissage,
	 PV := Conf_Grease_PP_TON + Conf_Grease_PP_TOFF);
Cde_PPE_Graisse1 := 
   NOT Alarme_prot_PPE_Graisse1
   (* AND Info_malaxeur1_en_marche *)
   AND ( CTU_GRAISSAGE.CV &gt; 0 AND CTU_GRAISSAGE.CV &lt; Conf_Grease_PP_TON);
(*Fin **GESTION PPE A GRAISSE******************)

(*ROUMANIE : GESTION POMPE GENERALE EAU ***************************)
(*Commande par 1 bouton sur le pupitre*)
(*07/07/2008 : Non affecté pour le moment*)
Pulse_Pup_Marche_Arret_PPE_EAU := Pup_Marche_Arret_PPE_gen_EAU;
IF RE(Pulse_Pup_Marche_Arret_PPE_EAU) (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
   THEN
   IF NOT Cde_Marche_PPE_gen_EAU 
   AND NOT Alarme_prot_mot_PPE_gen_EAU THEN
      Cde_Marche_PPE_gen_EAU := TRUE;
   ELSE
      Cde_Marche_PPE_gen_EAU := FALSE;
   END_IF;
END_IF;
IF Alarme_prot_mot_PPE_gen_EAU THEN
   Cde_Marche_PPE_gen_EAU := FALSE;
END_IF;
(*FIN GESTION POMPE GENERALE EAU ***************************)





(* Impulsions de comptage pour simuler les pompes *)
(* Ajout R.C. 29/11/2010 *)
(* On ne simule que quelques pompes en automatique, sur les voies 2, 5, 7 et 10. *)
(* On simule sur 2 cartes de comptage rapide différentes. *)
Cde_simulation_cpt_adj2 := Cde_dosage_Ppe[2] AND %S5; (* TB100MS *)
Cde_simulation_cpt_adj5 := Cde_dosage_Ppe[5] AND %S5; (* TB100MS *)
Cde_simulation_cpt_adj7 := Cde_dosage_Ppe[7] AND %S5; (* TB100MS *)
Cde_simulation_cpt_adj10 := Cde_dosage_Ppe[10] AND %S5; (* TB100MS *)
IF Conf_ppe_multiplexe THEN
	(* En multiplexé, on redirige les impulsions vers la CCR 1 *)
	IF Cde_simulation_cpt_adj7 THEN
		Cde_simulation_cpt_adj2 := TRUE;
		Cde_simulation_cpt_adj7 := FALSE;
	END_IF;
	IF Cde_simulation_cpt_adj10 THEN
		Cde_simulation_cpt_adj5 := TRUE;
		Cde_simulation_cpt_adj10 := FALSE;
	END_IF;
END_IF;



cde_klaxon_pupitre := Pup_Cde_Klaxon;

(*NON UTILISE pour le moment (pas de diode sur le pupitre : le code est juste un exemple*)
Pup_Cde_compresseur := Pup_Cde_Not_Used[4].12 AND NOT Alarme_prot_mot_compr;

Pulse_Pup_Cde_compresseur := Pup_Cde_compresseur;
IF RE(Pulse_Pup_Cde_compresseur) THEN (* /!\ Rappel : Il est recommandé de toujours passer par une variable interne "Pulse_*" pour utiliser une instruction "RE" ou "FE". *)
   IF Cde_marche_compresseur THEN
      Cde_marche_compresseur := FALSE;
      ELSE
      Cde_marche_compresseur := TRUE;
   END_IF;
END_IF;
IF Alarme_prot_mot_compr THEN
   Cde_marche_compresseur := FALSE;
END_IF;

(* Roumanie : Discordance Malaxeur1 *)
TON_DIS_MAL1 (IN := Cde_marche_mal1 and not Info_malaxeur1_en_marche, PT := t#10s);
IF TON_DIS_MAL1.Q THEN
   Alarme_discordance_Malaxeur1 := TRUE;
END_IF;
(* FIN Roumanie : Discordance Malaxeur1 *)

(* Modif M.D. 20/01/2009 : Marche/Arret automatique malaxeur *)
(* On integre dans ce code :
   - Gestion M/A par BP
   - Gestion M/A auto type Inde
   - Gestion M/A auto type RO *)

IF (Pup_Cde_start_malax1 (* pupitre communicant *)
      OR Auto_marche_mal1
      OR BP_marche_malaxeur) (* E/S *)
   AND NOT Pup_Cde_stop_malax1  
   AND NOT Auto_arret_mal1_RO
   AND NOT Auto_arret_mal1_IN
   AND NOT BP_arret_malaxeur
   AND NOT Alarme_prot_mot_malax1
   AND NOT Alarme_prot_Thermique_malax1
   AND NOT Alarme_Controle_Tension
   AND NOT Alarme_discordance_Malaxeur1
   AND NOT Alarme_Pression_PPE_Graisse1
   AND NOT (%S0 OR %S1)
   THEN
   Cde_marche_mal1 := TRUE;
END_IF;
IF Pup_Cde_stop_malax1 
   OR Auto_arret_mal1_RO
   OR Auto_arret_mal1_IN
   OR BP_arret_malaxeur
   OR Alarme_prot_mot_malax1
   OR Alarme_prot_Thermique_malax1
   OR Alarme_Controle_Tension
   OR Alarme_discordance_Malaxeur1
   OR Alarme_Pression_PPE_Graisse1
   OR (%S0 OR %S1)(*  ???? *)
   THEN
   Cde_marche_mal1 := FALSE;
END_IF;
(* FIN Modif M.D. 20/01/2009 : Marche/arret automatique malaxeur *)


Voyant_AU1 := Voyant_AU2 := Mode_AU; (* Modif R.C. 09/02/2010 *)
IF Info_etat_arret_urgence THEN
   Alarme_etat_Arret_urgence := TRUE;
END_IF;

Voyant_manque_air1:= NOT Info_pressostat_presence_air;


(* Ajout R.C. 09/02/2010 *)
Cde_AU_Acquittes := AU_Acquittes;

(* Ajout R.C. 20/01/2011 P803 *)
Cde_mode_manuel_logiciel := Manu_logiciel;
</STSource>
	</program>
	<program>
		<identProgram name="540_Bypass_Anh" type="section" task="MAST"></identProgram>
		<LDSource nbColumns="11">
			<networkLD>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<HLink nbCells="2"></HLink>
					<contact typeContact="openContact" contactVariableName="Bypass_Anh_DEM_INIT"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="4"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="6"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="5"></emptyCell>
					<HLink nbCells="5"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Bypass_Anh_DEM_INIT"></coil>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="2"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Cde_dosage_Anh"></contact>
					<HLink nbCells="7"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Cde_Bypass2"></coil>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Cde_vidange_bascule_Gra1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Cde_marche_tapis_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Cde_bypass2"></contact>
					<HLink nbCells="3"></HLink>
					<coil typeCoil="setCoil" coilVariableName="Mem_autorisation_RAZ"></coil>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Cde_vidange_bascule_Gra2"></contact>
					<HLink nbCells="1"></HLink>
					<emptyCell nbCells="7"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="1"></emptyLine>
				</typeLine>
				<typeLine>
					<contact typeContact="openContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="1"></HLink>
					</shortCircuit>
					<contact typeContact="openContact" contactVariableName="Cde_marche_tapis_transfert"></contact>
					<HLink nbCells="1"></HLink>
					<contact typeContact="openContact" contactVariableName="Mem_autorisation_RAZ"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Cde_Bypass2"></coil>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="1"></emptyCell>
					<VLink></VLink>
					<contact typeContact="openContact" contactVariableName="Cde_dosage_generale_Eau1"></contact>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="2"></HLink>
					</shortCircuit>
					<shortCircuit>
						<VLink></VLink>
						<HLink nbCells="4"></HLink>
					</shortCircuit>
					<HLink nbCells="1"></HLink>
					<coil typeCoil="resetCoil" coilVariableName="Mem_autorisation_RAZ"></coil>
				</typeLine>
				<typeLine>
					<emptyCell nbCells="2"></emptyCell>
					<contact typeContact="openContact" contactVariableName="Cde_dosage_generale_Cim1"></contact>
					<HLink nbCells="2"></HLink>
					<emptyCell nbCells="3"></emptyCell>
					<VLink></VLink>
					<emptyCell nbCells="2"></emptyCell>
				</typeLine>
				<typeLine>
					<contact typeContact="closedContact" contactVariableName="auto_pupitre_et_logiciel"></contact>
					<HLink nbCells="8"></HLink>
					<emptyCell nbCells="2"></emptyCell>
				</typeLine>
				<typeLine>
					<emptyLine nbRows="85"></emptyLine>
				</typeLine>
				<textBox width="9" height="1">Autorisation de la remise à éro de la cde du bypass apres la vidange granulat
    <objPosition posX="0" posY="7"></objPosition>
				</textBox>
				<textBox width="10" height="1">ATTENTION : cette modif est codée pour Vendargues, de plus, elle ne prends pas en compte un éventuelle positionnement en manuel logiciel et tout les riques que cela implique.
    <objPosition posX="0" posY="15"></objPosition>
				</textBox>
				<textBox width="3" height="1">Initialisation des variables locales de la section
    <objPosition posX="0" posY="0"></objPosition>
				</textBox>
				<textBox width="9" height="1">07/02/2006
Commande bypass2 vers sortie seche (sepécialisation Vendargues)
    <objPosition posX="0" posY="5"></objPosition>
				</textBox>
				<textBox width="3" height="1">(Mettre les futures initialisations ici)
    <objPosition posX="6" posY="1"></objPosition>
				</textBox>
				<textBox width="9" height="1">Retour bypass2 vers malaxeurs
    <objPosition posX="0" posY="10"></objPosition>
				</textBox>
				<textBox width="5" height="1">Reset de la demande d'init :
    <objPosition posX="6" posY="3"></objPosition>
				</textBox>
			</networkLD>
		</LDSource>
	</program>
	<program>
		<identProgram name="550_Discordances" type="section" task="MAST"></identProgram>
		<ILSource>
(* Initialisation des variables locales de la section *)
LD Discordances_DEM_INIT
JMPCN Init_Discordances__Fin
Init_Discordances:

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	LD TRUE
	R Discordances_DEM_INIT (* L'init de la section a bien été prise en compte. *)
Init_Discordances__Fin:



(* Discordance vidange bascule "Granulat 1" *)

CAL DIS_BAL_Gra1 (Cde := Cde_vidange_bascule_Gra1,
		Retour := Info_balance_Gra1_fermee,
		Tps_reac := Conf_basc_granulat1_tps_reponse)
LD DIS_BAL_Gra1.disc
ANDN Conf_granulat1_skip
S Discordance_vidange_granulat1



(* Discordance vidange bascule "Granulat 2" *)

CAL DIS_BAL_Gra2 (Cde := Cde_vidange_bascule_Gra2,
		Retour := Info_balance_Gra2_fermee,
		Tps_reac := Conf_basc_granulat2_tps_reponse)
LD DIS_BAL_Gra2.disc
AND Conf_granulat2_pres_balance
S Discordance_vidange_granulat2



(* Discordance vidange bascule "Ciment 1" *)

CAL DIS_BAL_Cim1 (Cde := Cde_vidange_bascule_Cim1,
		Retour := Info_balance_Cim1_fermee,
		Tps_reac := Conf_basc_cim1_tps_reponse)
LD DIS_BAL_Cim1.disc
S Discordance_vidange_cim1



(* Discordance vidange bascule "Ciment 2" *)

CAL DIS_BAL_Cim2 (Cde := Cde_vidange_bascule_Cim2,
		Retour := Info_balance_Cim2_fermee,
		Tps_reac := Conf_basc_cim2_tps_reponse)
LD DIS_BAL_Cim2.disc
S Discordance_vidange_Cim2



(* Discordance vidange bascule "Eau 1" *)

(* + Mise en place de la commande de pompe pour Stefanesti (ROUMANIE) *)
LD Cde_vid_basc_Eau1_Ppe
OR Cde_vidange_bascule_Eau1
st Cde_vidange_bascule_Eau1_active
CAL DIS_BAL_Eau1 (Cde := Cde_vidange_bascule_Eau1_active,
		Retour := Info_balance_eau1_fermee,
		Tps_reac := Conf_basc_eau1_tps_reponse)
LD DIS_BAL_Eau1.disc
S Discordance_vidange_eau1



(* Discordance vidange bascule "Eau 2" *)

CAL DIS_BAL_Eau2 (Cde := Cde_vidange_bascule_Eau2,
		Retour := Info_balance_Eau2_fermee,
		Tps_reac := Conf_basc_eau2_tps_reponse)
LD DIS_BAL_Eau2.disc
S Discordance_vidange_Eau2



(* Discordance vidange bascule "Adjuvant" *)

CAL DIS_BAL_Adj (Cde := Cde_vidange_bascule_Adj ,
		Retour := Info_balance_Adj_fermee,
		Tps_reac := Conf_basc_adjuvant_tps_reponse)
LD DIS_BAL_Adj.disc
AND Conf_adjuvant_basc_pres_bascule
ANDN Conf_Bonbonne_Colorant	(*Colorant*)
ANDN Conf_Admix_Weigher_PP_No_Sens (* Modif R.C. 07/08/2012 P857A *)
S Discordance_vidange_adjuvant



(* Discordance vidange Compartiment Adjuvant *)

CAL DIS_BAL_Comp_Adj (Cde := Cde_vidange_bascule_Adj_Comp,
		Retour := Info_balance_Adj_Comp_ferme,
		Tps_reac := Conf_comp_adjuvant_tps_reponse)
LD DIS_BAL_Comp_Adj.disc
AND Conf_adjuvant_basc_compartimente
S Discordance_vidange_comp_adj



(* Discordance vidange bascule "Anhydrite" *)

(* - Cas d'une bascule SANS séquence de trappe *)
CAL DIS_BAL_Anh (Cde := Cde_vidange_bascule_Anh,
		Retour := Info_balance_Anh_fermee,
		Tps_reac := Conf_basc_anhydrite_tps_reponse)
LD DIS_BAL_Anh.disc
AND Conf_anhydrite_pres_bascule
ANDN conf_anhydrite_avec_sequence
S Discordance_vidange_anhydrite

(* - Cas d'une bascule AVEC séquence de trappe *)
LD conf_anhydrite_avec_sequence
AND Conf_anhydrite_pres_bascule
AND (	TRUE
	AND (	Cde_vidange_bascule_Anh
		ANDN Info_balance_Anh_ouvert
	)
	OR (	Cde_fermeture_bascule_Anh
		ANDN Info_balance_Anh_fermee
	)
)
ST TON_dis_basc_anhydrite.IN

CAL TON_dis_basc_anhydrite (PT := Conf_basc_anhydrite_tps_reponse)

LD TON_dis_basc_anhydrite.Q
S Discordance_vidange_anhydrite



(* Discordance vidange bascule "Additionnelle" *)

CAL DIS_BAL_Add (Cde := Cde_vidange_bascule_Add,
		Retour := Info_balance_Add_fermee,
		Tps_reac := Conf_basc_Add_tps_reponse)
LD DIS_BAL_Add.disc
AND conf_basc_add_pres_bascule
S Discordance_vidange_Basc_Add



(* Discordance Trémie Tampon Granulat *)

LD TRUE
AND (	Cde_vidange_TT_gra
	ANDN Info_TT_Gra_ouverte
)
OR (
	LDN Cde_vidange_TT_gra
	ANDN Info_TT_Gra_fermee
)
ST TON_dis_tremie_tampon_granulat.IN

CAL TON_dis_tremie_tampon_granulat (PT := Conf_tremie_tampon_tps_reponse)

LD Conf_TT_granulat
AND (	TON_dis_tremie_tampon_granulat.Q
	OR (	Info_TT_Gra_ouverte
		AND Info_TT_Gra_fermee
	)
)
S Discordance_vidange_TT_granulat



(* Discordance Trémie Tampon Ciment *)

LD TRUE
AND (	Cde_vidange_TT_Cim
	ANDN Info_TT_Cim_ouverte
)
OR (
	LDN Cde_vidange_TT_Cim
	ANDN Info_TT_Cim_fermee
)
ST TON_dis_tremie_tampon_ciment.IN

CAL TON_dis_tremie_tampon_ciment (PT := Conf_TT_cim_tps_reponse)

LD Conf_TT_Cim
AND (	TON_dis_tremie_tampon_ciment.Q
	OR (	Info_TT_Cim_ouverte
		AND Info_TT_Cim_fermee
	)
)
S Discordance_vidange_TT_cim



(* Défaut "Temps max attente" Transfert Ciment *)

LDN Info_transfert_cim_termine
ANDN Info_autorisation_chargement_SAS
ANDN Vidange_Cim1
AND Bonbonne_cim_vide
AND auto_pupitre_et_logiciel
ST TON_attente_max_transfert.IN

CAL TON_attente_max_transfert (PT := Conf_bonbonne_tps_max_attente)

LD TON_attente_max_transfert.Q
S Bonbonne_cim_non_prete



(* Controle rotation Tapis peseur Granulat 1 *)

CAL fm_rotation_tapis_G1 (CLK := Info_ctrle_rot_tapis_granulat1)
LD Conf_granulat1_tapis
AND Cde_vidange_bascule_Gra1
ANDN fm_rotation_tapis_G1.Q
AND Conf_granulat1_pres_capteur_rot
ST TON_ctrle_rotation_G1.IN

CAL TON_ctrle_rotation_G1 (PT := Conf_granulat1_vit_rotation_mini)

LD TON_ctrle_rotation_G1.Q
S Tapis_peseur1_vitesse_rotation



(* Controle rotation Tapis peseur Granulat 2 *)

CAL fm_rotation_tapis_G2 (CLK := Info_ctrle_rot_tapis_granulat2)

LD Conf_granulat2_tapis
AND Cde_vidange_bascule_Gra2
ANDN fm_rotation_tapis_G2.Q
AND Conf_granulat2_pres_capteur_rot
ST TON_ctrle_rotation_G2.IN

CAL TON_ctrle_rotation_G2 (PT := Conf_granulat2_vit_rotation_mini)

LD TON_ctrle_rotation_G2.Q
S Tapis_peseur2_vitesse_rotation



(* Controle rotation Tapis de transfert Granulat *)

CAL fm_rotation_tapis_trans (CLK := Info_ctrle_rot_tapis_transfert)

LD Cde_marche_tapis_transfert
ANDN fm_rotation_tapis_trans.Q
AND Conf_tap_trans_pres_capt_rot
ST TON_ctrle_rotation_tapis_trans.IN

CAL TON_ctrle_rotation_tapis_trans (PT := Conf_tap_trans_vit_rotation_mini)

LD TON_ctrle_rotation_tapis_trans.Q
S Tapis_transfert_vitesse_rotation



(* Discordance Tapis de transfert Granulat *)

LDN Defaut_tapis_transfert
AND (	TRUE
	AND (	Cde_marche_tapis_transfert
		ANDN Info_tapis_transfert_en_marche
	)
	OR (	Info_tapis_transfert_en_marche
		ANDN Cde_marche_tapis_transfert
	)
)
ST TON_dis_tapis_trans.IN

CAL TON_dis_tapis_trans (PT := Conf_tapis_transfert_tps_reponse)

LD TON_dis_tapis_trans.Q
S Tapis_transfert_bloque

LD Tapis_transfert_bloque
AND Conf_tapis_transfert (* Modif M.D. 10/12/2008 : Ne pas activer le défaut si pas de tapis *)
ST Defaut_tapis_transfert



(* Perte position Skip *)

(* - Calculs préparatoires *)

CAL FD_skip_tres_bas (CLK := Info_skip_tres_bas)
CAL FD_skip_bas (CLK := Info_skip_bas)
CAL FD_skip_attente (CLK := Info_skip_attente)
CAL FD_skip_haut (CLK := Info_skip_haut)
CAL FD_skip_tres_haut (CLK := Info_skip_tres_haut)

(* Prise en compte de l'inertie du skip pour corriger *)
(* le problème mentionné dans la FAE 154 : On met en place *)
(* des tempos sur les commandes du skip pour ne pas *)
(* générer d'erreur lorsque l'inertie du skip permet la *)
(* descente d'un capteur (notamment position_attente) alors *)
(* qu'on vient juste d'arrêter la commande *)
(* Modif R.C. 27/05/2003 *)

LD cde_montee_skip
ST TOF_cde_montee_skip.IN
CAL TOF_cde_montee_skip (PT := Conf_skip_tps_reponse)

LD cde_descente_skip
ST TOF_cde_descente_skip.IN
CAL TOF_cde_descente_skip (PT := Conf_skip_tps_reponse)


LDN Cde_montee_skip
ANDN Cde_descente_skip
AND (	Info_skip_en_montee
	OR Info_skip_en_descente
)
ST TON_tps_reponse_skip.IN
CAL TON_tps_reponse_skip (PT := Conf_skip_tps_reponse)

(* - Calcul de l'alarme *)

LD FALSE
(* 1: Alarme si plusieurs capteurs sont actifs en même temps *)
(* - Alarme si deux capteurs d'en haut sont actifs en même temps : *)
OR (	Info_skip_haut
	AND Info_skip_attente
	AND conf_skip_detect_pos_inter_haut (* Cela peut être toléré dans la configuration. *)
)
OR (	Info_skip_haut
	AND Info_skip_grde_vit_haut
)
OR (	Info_skip_attente
	AND Info_skip_grde_vit_haut
	AND Conf_skip_pres_cap_grde_vit_haut (* Si le capteur de changement de vitesse *)
		(* haut n'existe pas, il est substitué par le capteur d'attente. Dans ce *)
		(* cas, Info_skip_grde_vit_haut est égal à Info_skip_attente, et on ne *)
		(* doit pas lever d'alarme. *)
)
(* - Alarme si deux capteurs d'en bas sont actifs en même temps : *)
OR (	Info_skip_grde_vit_bas
	AND Info_skip_bas
)
(* - Alarme si un des capteurs d'en haut est actif en même temps qu'un des capteurs d'en bas : *)
OR (	TRUE
	AND (	Info_skip_haut
		OR Info_skip_attente
		OR Info_skip_grde_vit_haut
	)
	AND (	Info_skip_grde_vit_bas
		OR Info_skip_bas
	)
)
(* 2: Alarme si on perd une position d'arrêt, alors que le skip n'est pas commandé *)
(* Modif M.D. 18/08/2003 *)
OR (
	LDN cde_montee_skip
	ANDN cde_descente_skip
	AND (	FD_skip_tres_bas.Q
		OR FD_skip_bas.Q
		OR (	FD_skip_attente.Q
			ANDN TOF_cde_descente_skip.Q 
			ANDN TOF_cde_montee_skip.Q
		)
		OR FD_skip_haut.Q
		OR FD_skip_tres_haut.Q
	)
)
(* 3: Alarme si un mouvement est détecté alors que le skip n'est pas commandé *)
OR TON_tps_reponse_skip.Q
S Perte_position_skip


(* Perte info position skip *)

(* Le capteur haut (ou bas) reste activé malgré la commande du skip ! *)
LD TRUE
AND (	Cde_montee_skip
	AND Info_skip_bas
)
OR (	Cde_descente_skip
	AND Info_skip_haut
)
ST TON_dis_skip.IN
CAL TON_dis_skip (PT := Conf_skip_tps_reponse)

LD TON_dis_skip.Q
S Perte_info_position_skip



(* Skip bloqué *)

(* On surveille le temps mis par le skip entre les capteurs haut, bas, et attente *)
CAL fm_montee_skip (CLK := Cde_montee_skip)
CAL fm_descente_skip (CLK := Cde_descente_skip)

LD fm_montee_skip.Q
OR fm_descente_skip.Q
R Position_inter_skip_par_tempo

LD Cde_descente_skip
OR Info_skip_haut
R depart_skip_attente

CAL FD_position_inter_tempo (CLK := Position_inter_skip_par_tempo)

LD Cde_montee_skip
AND (	FD_skip_attente.Q
	OR FD_position_inter_tempo.Q
)
S depart_skip_attente

LD depart_skip_attente
AND Cde_montee_skip
ANDN Defaut_skip
ST TON_skip_attente_haut.IN
CAL TON_skip_attente_haut (PT := Conf_skip_tps_attente_haut)

LD Cde_montee_skip
ANDN depart_skip_attente
ST TON_skip_bas_attente.IN
CAL TON_skip_bas_attente (PT := Conf_skip_tps_bas_attente)

LD TON_skip_bas_attente.Q
ANDN Conf_skip_pres_cap_att
S Position_inter_skip_par_tempo

LD Cde_montee_skip
ANDN Info_skip_haut
ANDN Info_skip_tres_haut
ST TON_skip_bas_haut.IN
CAL TON_skip_bas_haut (PT := Conf_skip_tps_bas_haut)

LD Cde_descente_skip
ANDN Info_skip_bas
ANDN Info_skip_tres_bas
ST TON_skip_haut_bas.IN
CAL TON_skip_haut_bas (PT := Conf_skip_tps_haut_bas)

LD TON_skip_haut_bas.Q
OR TON_skip_bas_haut.Q
OR (	TON_skip_bas_attente.Q
	AND Conf_skip_pres_cap_att
	ANDN Info_skip_attente
)
OR (	TON_skip_attente_haut.Q
	AND Cde_montee_skip
	ANDN Info_skip_haut
)
AND (	Conf_granulat1_skip
	OR Conf_skip_transfert
)
S Skip_bloque



(* Défaut de "temps grande vitesse" Skip *)

(* Alarme défaut de temps entre les capteurs de changement de vitesse skip *)
CAL FM_skip_gde_vitesse(CLK:=Cde_skip_gde_vitesse)
LD FM_skip_gde_vitesse.Q
JMPCN init_verif_temps_skip_gv__fin
init_verif_temps_skip_gv :
	(* On initialise la vérification de temps lors du passage en grande vitesse *)
	LD t#0s (* 0s par défaut *)
	ST Temps_skip_gv (* Temps de base *)
	LD Info_skip_en_montee
	JMPCN init_verif_temps_skip_gv__1
		LD Conf_skip_tps_GVBas_GVHaut
		ST Temps_skip_gv (* Temps de base *)
	init_verif_temps_skip_gv__1:
	LD Info_skip_en_descente
	JMPCN init_verif_temps_skip_gv__2
		LD Conf_skip_tps_GVHaut_GVBas
		ST Temps_skip_gv (* Temps de base *)
	init_verif_temps_skip_gv__2:

	LD Temps_skip_gv
	ADD Conf_skip_tol_tps_grde_vit
	ST Temps_skip_gv_max (* Temps de base + tolérance *)

	LD Temps_skip_gv
	SUB Conf_skip_tol_tps_grde_vit
	ST Temps_skip_gv_min (* Temps de base - tolérance *)

	LD TRUE
	S Verif_temps_skip_gv_Active
init_verif_temps_skip_gv__fin:

CAL TON_verif_tps_gv(IN := Verif_temps_skip_gv_Active,
		PT := Temps_skip_gv_max)

LD Verif_temps_skip_gv_Active
AND (	FALSE
	OR (	TON_verif_tps_gv.Q
		AND Zone_skip_Gde_vitesse (* Temps mis entre les capteurs GV &gt;= Tolérance ! *)
	)
	OR (	TON_verif_tps_gv.ET
		LT Temps_skip_gv_min
		ANDN Zone_skip_Gde_vitesse (* Temps mis entre les capteurs GV &lt; Tolérance ! *)
	)
)
S skip_defaut_temps_grde_vit
R Verif_temps_skip_gv_Active (* Note : On fait aussi un *)
	(* RESET de "Verif_temps_skip_gv_ACTIVE" dans la *)
	(* section "140_Validation_sections_divers" lorsque les conditions qui *)
	(* autorisent la grande vitesse ne sont pas réunies. *)

LDN Zone_skip_Gde_vitesse
R Verif_temps_skip_gv_Active



(* Défaut skip *)

(* "Defaut_skip" est la synthèse des défauts qui doivent entrainer l'arrêt du skip *)
LD TRUE
AND (	Perte_position_skip
	OR Perte_info_position_skip
	OR Skip_bloque
	OR skip_defaut_temps_grde_vit (* Ajouté R.C. 19/01/2011 P803 *)
	OR skip_defaut_externe_grde_vit (* Ajout R.C. 19/01/2011 P803 *)
(*	OR skip_defaut_ext_capt_grde_vit*)(* Contrairement aux autres, cette alarme ne bloque pas le skip, mais juste la grande vitesse. *)
)
AND (	Conf_granulat1_skip
	OR Conf_skip_transfert
)
OR Alarme_prot_thermique_Skip (* Roumanie *)
OR Alarme_prot_mot_Skip (* Roumanie *)
ST Defaut_skip



(* Discordance bypass *)

LDN Defaut_positionnement_bypass
AND (	TRUE
	AND (	Conf_presence_bypass
		ANDN Info_vidange_vers_malaxeur_1
		ANDN Info_vidange_vers_mal2_s_seche
	)
	ORN (	Cde_bypass_vers_mal2_s_seche (* équivalent à OR (NOT x ANDN y) *)
		OR Info_vidange_vers_malaxeur_1
	)
	OR (	Cde_bypass_vers_mal2_s_seche
		ANDN Info_vidange_vers_mal2_s_seche
	)
)
ST TON_dis_bypass.IN
CAL TON_dis_bypass (PT := Conf_bypass_tps_reponse)

LD TON_dis_bypass.Q
OR (	Conf_presence_bypass
	AND Info_vidange_vers_malaxeur_1
	AND Info_vidange_vers_mal2_s_seche
)
S Defaut_positionnement_bypass
</ILSource>
	</program>
	<program>
		<identProgram name="555_Simulation_par_API" type="section" task="MAST"></identProgram>
		<STSource>(* Avec cette section, on peut simuler l'augmentation du poids sur une bascule *)
(* et simuler un dosage. *)
(* Cette section doit se trouver juste avant la section de restitution sorties *)
(* car on y fait retomber à FALSE les commandes de dosage pour les organes simulés. *)

(* Non gérés au 21/09/2010 : *)
(*  - Trémies tampons pesées *)
(*  - Produits comptés *)
(*  - Instabilité, temps d'avant coulant, temps d'après coulant, retard de vidange *)
(*  - Blocage de la vidange et effet de l'aide à l'extraction bascule *)
(*  - Blocage du dosage et effet de l'aide à l'extraction de l'organe de stockage *)
(* Problème possible lors de la vidange de la bascule à anhydrite (car on se base sur la commande de vidange plutot que sur l'état 'bascule ouverte'; hors cette bascule est bipolaire) *)


(* Initialisation des variables locales de la section *)
Simulation_par_API_INIT_EN_COURS := Simulation_par_API_DEM_INIT;
IF Simulation_par_API_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Simulation_par_API_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;




Permettre_simulation_dosages := FALSE; (* &lt;-- Mettre à "FALSE" pour produire !!! *)


(* /!\ Attention : Une simulation partielle comporte le risque de produire un *)
(* béton incomplet sans s'en rendre compte ! *)
(* =&gt; Bien garder l'ensemble des flags ci-dessous à TRUE quand cela est possible. *)
(* =&gt; Lors d'une simulation partielle, toujours être vigilent à la valeur du flag *)
(*    "Permettre_simulation_dosages" lorsqu'un camion vient pour être chargé. *)
Simuler_dosage_Gra1 :=		TRUE		AND Permettre_simulation_dosages;
Simuler_dosage_Gra2 :=		TRUE		AND Permettre_simulation_dosages;
Simuler_dosage_Cim1 :=		TRUE		AND Permettre_simulation_dosages;
Simuler_dosage_Cim2 :=		TRUE		AND Permettre_simulation_dosages;
Simuler_dosage_Eau1 :=		TRUE		AND Permettre_simulation_dosages;
Simuler_dosage_Eau2 :=		TRUE		AND Permettre_simulation_dosages;
Simuler_dosage_Adj_pese :=	TRUE		AND Permettre_simulation_dosages;
Simuler_dosage_Prod_compte :=	TRUE		AND Permettre_simulation_dosages;
Simuler_dosage_Anh :=		TRUE		AND Permettre_simulation_dosages;
Simuler_dosage_Add :=		TRUE		AND Permettre_simulation_dosages;


(* On passe par des buffers pour éviter le message d'erreur suivant sur le quantum *)
(* "E1225 DFB cannot access EBOOL variable mapped to State Ram on Quantum target, unlocated EBOOL required" *)
Cde_dosage_Anh_buffer := Cde_dosage_Anh;

Simulation_dosage_Gra1 (EN := Simuler_dosage_Gra1,
			INIT := Simulation_par_API_INIT_EN_COURS,
			PARAM_Debit_dosage := 220,
			PARAM_Debit_vidange_basc := 220,
			PARAM_Seuil_vide := 9.0,
			PARAM_Seuil_maxi := INT_TO_REAL(Conf_granulat1_seuil_maxi),
			PARAM_Instabilite := 0,
			PARAM_Tps_avant_coulant := t#0s,
			PARAM_Tps_apres_coulant := t#0s,
			PARAM_Delai_vidange := t#0s,
			Code_prod := 1,
			Conf_Adj_dest_cuves := Conf_Adj_dest_cuves,
			Conf_Eau_dest_cuves := Conf_Eau_dest_cuves,
			Conf_mode_decomptage := FALSE,
			Conf_pesage_individuel := FALSE,
			Cde_vidange_bascule := Cde_vidange_bascule_Gra1,
			Cde_rempl_organe_stock_Add := Dummy_ARRAY_1_4_OF_BOOL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Index_min_organe_stockage := 1,
			Index_max_organe_stockage := Conf_granulat1_nb_tremies,
			Cdes_dosage := Cdes_dosage,
			Cde_dosage_anhydrite := Cde_dosage_Anh_buffer,
			poids_real := Poids_real_Gra1,
			Poids_instantane := Poids_instantane_Gra1,
			Pds_Add := Dummy_ARRAY_1_4_OF_REAL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Dosage_en_cours =&gt; Simu_dosage_en_cours_Gra1,
			Compteur_ppe := Compteur_ppe);

Simulation_dosage_Gra2 (EN := Simuler_dosage_Gra2,
			INIT := Simulation_par_API_INIT_EN_COURS,
			PARAM_Debit_dosage := 220,
			PARAM_Debit_vidange_basc := 220,
			PARAM_Seuil_vide := 9.0,
			PARAM_Seuil_maxi := INT_TO_REAL(Conf_granulat2_seuil_maxi),
			PARAM_Instabilite := 0,
			PARAM_Tps_avant_coulant := t#0s,
			PARAM_Tps_apres_coulant := t#0s,
			PARAM_Delai_vidange := t#0s,
			Code_prod := 1,
			Conf_Adj_dest_cuves := Conf_Adj_dest_cuves,
			Conf_Eau_dest_cuves := Conf_Eau_dest_cuves,
			Conf_mode_decomptage := FALSE,
			Conf_pesage_individuel := FALSE,
			Cde_vidange_bascule := Cde_vidange_bascule_Gra2,
			Cde_rempl_organe_stock_Add := Dummy_ARRAY_1_4_OF_BOOL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Index_min_organe_stockage := Conf_granulat1_nb_tremies + 1,
			Index_max_organe_stockage := Conf_granulat1_nb_tremies + Conf_granulat2_nb_tremies,
			Cdes_dosage := Cdes_dosage,
			Cde_dosage_anhydrite := Cde_dosage_Anh_buffer,
			poids_real := Poids_real_Gra2,
			Poids_instantane := Poids_instantane_Gra2,
			Pds_Add := Dummy_ARRAY_1_4_OF_REAL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Dosage_en_cours =&gt; Simu_dosage_en_cours_Gra2,
			Compteur_ppe := Compteur_ppe);

Simulation_dosage_Cim1 (EN := Simuler_dosage_Cim1,
			INIT := Simulation_par_API_INIT_EN_COURS,
			PARAM_Debit_dosage := 50,
			PARAM_Debit_vidange_basc := 100,
			PARAM_Seuil_vide := 0.0,
			PARAM_Seuil_maxi := INT_TO_REAL(Conf_cim1_seuil_maxi),
			PARAM_Instabilite := 0,
			PARAM_Tps_avant_coulant := t#0s,
			PARAM_Tps_apres_coulant := t#0s,
			PARAM_Delai_vidange := t#0s,
			Code_prod := 2,
			Conf_Adj_dest_cuves := Conf_Adj_dest_cuves,
			Conf_Eau_dest_cuves := Conf_Eau_dest_cuves,
			Conf_mode_decomptage := FALSE,
			Conf_pesage_individuel := FALSE,
			Cde_vidange_bascule := Cde_vidange_bascule_Cim1,
			Cde_rempl_organe_stock_Add := Dummy_ARRAY_1_4_OF_BOOL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Index_min_organe_stockage := 1,
			Index_max_organe_stockage := Conf_cim1_nb_silos,
			Cdes_dosage := Cdes_dosage,
			Cde_dosage_anhydrite := Cde_dosage_Anh_buffer,
			poids_real := Poids_real_Cim1,
			Poids_instantane := Poids_instantane_Cim1,
			Pds_Add := Dummy_ARRAY_1_4_OF_REAL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Dosage_en_cours =&gt; Simu_dosage_en_cours_Cim1,
			Compteur_ppe := Compteur_ppe);

Simulation_dosage_Cim2 (EN := Simuler_dosage_Cim2,
			INIT := Simulation_par_API_INIT_EN_COURS,
			PARAM_Debit_dosage := 50,
			PARAM_Debit_vidange_basc := 75,
			PARAM_Seuil_vide := 0.0,
			PARAM_Seuil_maxi := INT_TO_REAL(Conf_cim2_seuil_maxi),
			PARAM_Instabilite := 0,
			PARAM_Tps_avant_coulant := t#0s,
			PARAM_Tps_apres_coulant := t#0s,
			PARAM_Delai_vidange := t#0s,
			Code_prod := 2,
			Conf_Adj_dest_cuves := Conf_Adj_dest_cuves,
			Conf_Eau_dest_cuves := Conf_Eau_dest_cuves,
			Conf_mode_decomptage := FALSE,
			Conf_pesage_individuel := FALSE,
			Cde_vidange_bascule := Cde_vidange_bascule_Cim2,
			Cde_rempl_organe_stock_Add := Dummy_ARRAY_1_4_OF_BOOL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Index_min_organe_stockage := Conf_cim1_nb_silos + 1,
			Index_max_organe_stockage := Conf_cim1_nb_silos + Conf_cim2_nb_silos,
			Cdes_dosage := Cdes_dosage,
			Cde_dosage_anhydrite := Cde_dosage_Anh_buffer,
			poids_real := Poids_real_Cim2,
			Poids_instantane := Poids_instantane_Cim2,
			Pds_Add := Dummy_ARRAY_1_4_OF_REAL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Dosage_en_cours =&gt; Simu_dosage_en_cours_Cim2,
			Compteur_ppe := Compteur_ppe);

Simulation_dosage_Eau1 (EN := Simuler_dosage_Eau1,
			INIT := Simulation_par_API_INIT_EN_COURS,
			PARAM_Debit_dosage := 60,
			PARAM_Debit_vidange_basc := 100,
			PARAM_Seuil_vide := 3.0,
			PARAM_Seuil_maxi := INT_TO_REAL(Conf_eau1_seuil_maxi),
			PARAM_Instabilite := 0,
			PARAM_Tps_avant_coulant := t#0s,
			PARAM_Tps_apres_coulant := t#0s,
			PARAM_Delai_vidange := t#0s,
			Code_prod := 3,
			Conf_Adj_dest_cuves := Conf_Adj_dest_cuves,
			Conf_Eau_dest_cuves := Conf_Eau_dest_cuves,
			Conf_mode_decomptage := FALSE,
			Conf_pesage_individuel := FALSE,
			Cde_vidange_bascule := Cde_vidange_bascule_Eau1,
			Cde_rempl_organe_stock_Add := Dummy_ARRAY_1_4_OF_BOOL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Index_min_organe_stockage := 1,
			Index_max_organe_stockage := Conf_eau1_nb_cuves,
			Cdes_dosage := Cdes_dosage,
			Cde_dosage_anhydrite := Cde_dosage_Anh_buffer,
			poids_real := Poids_real_Eau1,
			Poids_instantane := Poids_instantane_Eau1,
			Pds_Add := Dummy_ARRAY_1_4_OF_REAL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Dosage_en_cours =&gt; Simu_dosage_en_cours_Eau1,
			Compteur_ppe := Compteur_ppe);

Simulation_dosage_Eau2 (EN := Simuler_dosage_Eau2,
			INIT := Simulation_par_API_INIT_EN_COURS,
			PARAM_Debit_dosage := 60,
			PARAM_Debit_vidange_basc := 100,
			PARAM_Seuil_vide := 0.0,
			PARAM_Seuil_maxi := INT_TO_REAL(Conf_eau2_seuil_maxi),
			PARAM_Instabilite := 0,
			PARAM_Tps_avant_coulant := t#0s,
			PARAM_Tps_apres_coulant := t#0s,
			PARAM_Delai_vidange := t#0s,
			Code_prod := 3,
			Conf_Adj_dest_cuves := Conf_Adj_dest_cuves,
			Conf_Eau_dest_cuves := Conf_Eau_dest_cuves,
			Conf_mode_decomptage := FALSE,
			Conf_pesage_individuel := FALSE,
			Cde_vidange_bascule := Cde_vidange_bascule_Eau2,
			Cde_rempl_organe_stock_Add := Dummy_ARRAY_1_4_OF_BOOL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Index_min_organe_stockage := Conf_eau1_nb_cuves,
			Index_max_organe_stockage := Conf_eau1_nb_cuves + Conf_eau2_nb_cuves,
			Cdes_dosage := Cdes_dosage,
			Cde_dosage_anhydrite := Cde_dosage_Anh_buffer,
			poids_real := Poids_real_Eau2,
			Poids_instantane := Poids_instantane_Eau2,
			Pds_Add := Dummy_ARRAY_1_4_OF_REAL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Dosage_en_cours =&gt; Simu_dosage_en_cours_Eau2,
			Compteur_ppe := Compteur_ppe);

Simulation_dosage_Adj_pese (EN := Simuler_dosage_Adj_pese,
			INIT := Simulation_par_API_INIT_EN_COURS,
			PARAM_Debit_dosage := 100,
			PARAM_Debit_vidange_basc := 10,
			PARAM_Seuil_vide := 0.0,
			PARAM_Seuil_maxi := INT_TO_REAL(Conf_adjuvant_basc_seuil_maxi),
			PARAM_Instabilite := 0,
			PARAM_Tps_avant_coulant := t#0s,
			PARAM_Tps_apres_coulant := t#0s,
			PARAM_Delai_vidange := t#0s,
			Code_prod := 4,
			Conf_Adj_dest_cuves := Conf_Adj_dest_cuves,
			Conf_Eau_dest_cuves := Conf_Eau_dest_cuves,
			Conf_mode_decomptage := FALSE,
			Conf_pesage_individuel := FALSE,
			Cde_vidange_bascule := Cde_vidange_bascule_Adj,
			Cde_rempl_organe_stock_Add := Dummy_ARRAY_1_4_OF_BOOL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Index_min_organe_stockage := 1,
			Index_max_organe_stockage := Conf_adj1_nb_cuves,
			Cdes_dosage := Cdes_dosage,
			Cde_dosage_anhydrite := Cde_dosage_Anh_buffer,
			poids_real := Poids_real_Adj,
			Poids_instantane := Poids_instantane_Adj,
			Pds_Add := Dummy_ARRAY_1_4_OF_REAL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Dosage_en_cours =&gt; Simu_dosage_en_cours_Adj_pese,
			Compteur_ppe := Compteur_ppe);

Simulation_dosage_Anh (EN := Simuler_dosage_Anh,
			INIT := Simulation_par_API_INIT_EN_COURS,
			PARAM_Debit_dosage := 50,
			PARAM_Debit_vidange_basc := 75,
			PARAM_Seuil_vide := 4.0,
			PARAM_Seuil_maxi := INT_TO_REAL(Conf_anhydrite_seuil_maxi),
			PARAM_Instabilite := 0,
			PARAM_Tps_avant_coulant := t#0s,
			PARAM_Tps_apres_coulant := t#0s,
			PARAM_Delai_vidange := t#0s,
			Code_prod := 5,
			Conf_Adj_dest_cuves := Conf_Adj_dest_cuves,
			Conf_Eau_dest_cuves := Conf_Eau_dest_cuves,
			Conf_mode_decomptage := FALSE,
			Conf_pesage_individuel := FALSE,
			Cde_vidange_bascule := Cde_vidange_bascule_Anh,
			Cde_rempl_organe_stock_Add := Dummy_ARRAY_1_4_OF_BOOL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Index_min_organe_stockage := 1,
			Index_max_organe_stockage := 1,
			Cdes_dosage := Cdes_dosage,
			Cde_dosage_anhydrite := Cde_dosage_Anh_buffer,
			poids_real := Poids_real_Anh,
			Poids_instantane := Poids_instantane_Anh,
			Pds_Add := Dummy_ARRAY_1_4_OF_REAL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Dosage_en_cours =&gt; Simu_dosage_en_cours_Anh,
			Compteur_ppe := Compteur_ppe);

Simulation_dosage_Add (EN := Simuler_dosage_Add,
			INIT := Simulation_par_API_INIT_EN_COURS,
			PARAM_Debit_dosage := 150,
			PARAM_Debit_vidange_basc := 50,
			PARAM_Seuil_vide := 4.0,
			PARAM_Seuil_maxi := INT_TO_REAL(Conf_basc_add_seuil_maxi),
			PARAM_Instabilite := 0,
			PARAM_Tps_avant_coulant := t#0s,
			PARAM_Tps_apres_coulant := t#0s,
			PARAM_Delai_vidange := t#0s,
			Code_prod := 7,
			Conf_Adj_dest_cuves := Conf_Adj_dest_cuves,
			Conf_Eau_dest_cuves := Conf_Eau_dest_cuves,
			Conf_Mode_decomptage := Conf_Basc_Add_Mode_decomptage,
			Conf_pesage_individuel := Conf_Basc_Add_pesage_individuel,
			Cde_vidange_bascule := Cde_vidange_bascule_Add,
			Cde_rempl_organe_stock_Add := Simu_cde_rempl_organe_stock_Add,
			Index_min_organe_stockage := 1,
			Index_max_organe_stockage := Conf_basc_add_nb_organes,
			Cdes_dosage := Cdes_dosage,
			Cde_dosage_anhydrite := Cde_dosage_Anh_buffer,
			poids_real := Poids_real_Add,
			Poids_instantane := Dummy_Int, (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Pds_Add := Pds_Add,
			Dosage_en_cours =&gt; Simu_dosage_en_cours_Add,
			Compteur_ppe := Compteur_ppe);
Poids_instantane_Add := REAL_TO_DINT(Poids_real_Add); (* On n'utilise *)
				(* pas la sortie ".Poids_instantane" car elle ne peut *)
				(* stocker que 15 bits de mantisse (+1 bit de signe), et *)
				(* on a besoin de 17 bits de mantisse pour stocker les *)
				(* 4 lignes de poids (on aurait besoin de 18 bits pour 5 *)
				(* ou 6 lignes de poids). *)
				(* Le format REAL (IEC 559 &gt; ANSI/IEEE 754-1985) convient *)
				(* car il possède 23 bits de mantisse. *)

Simulation_dosage_Prod_compte (EN := Simuler_dosage_Prod_compte,
			INIT := Simulation_par_API_INIT_EN_COURS,
			PARAM_Debit_dosage := 1,
			PARAM_Debit_vidange_basc := 10,
			PARAM_Seuil_vide := 0.0,
			PARAM_Seuil_maxi := INT_TO_REAL(Conf_adjuvant_basc_seuil_maxi),
			PARAM_Instabilite := 0,
			PARAM_Tps_avant_coulant := t#0s,
			PARAM_Tps_apres_coulant := t#0s,
			PARAM_Delai_vidange := t#0s,
			Code_prod := 6,
			Conf_Adj_dest_cuves := Conf_Adj_dest_cuves,
			Conf_Eau_dest_cuves := Conf_Eau_dest_cuves,
			Conf_mode_decomptage := FALSE,
			Conf_pesage_individuel := FALSE,
			Cde_vidange_bascule := Cde_vidange_bascule_Adj,
			Cde_rempl_organe_stock_Add := Dummy_ARRAY_1_4_OF_BOOL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Index_min_organe_stockage := 1,
			Index_max_organe_stockage := Conf_adj1_nb_cuves,
			Cdes_dosage := Cdes_dosage,
			Cde_dosage_anhydrite := Cde_dosage_Anh_buffer,
			poids_real := Poids_real_Adj,
			Poids_instantane := Poids_instantane_Adj,
			Pds_Add := Dummy_ARRAY_1_4_OF_REAL,  (* Cette variable ne sert à rien, mais il faut l'inscrire pour pouvoir compiler *)
			Dosage_en_cours =&gt; Simu_dosage_en_cours_Adj_pese,
			Compteur_ppe := Compteur_ppe);



(* On retourne la valeur (potentiellement modifiée par les DFB) aux variables originales *)
Cde_dosage_Anh := Cde_dosage_Anh_buffer;
</STSource>
	</program>
	<program>
		<identProgram name="560_Restitution_sorties" type="section" task="MAST"></identProgram>
		<ILSource>
(* Initialisation des variables locales de la section *)
LD Restitution_sorties_DEM_INIT
JMPCN Init_Restitution_sorties__Fin
Init_Restitution_sorties:

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	LD TRUE
	R Restitution_sorties_DEM_INIT (* L'init de la section a bien été prise en compte. *)
Init_Restitution_sorties__Fin:


(*Copie des bits internes sur les sorties réelles*)

LD Cde_bypass_vers_mal2_s_seche
ANDN Mode_AU
ST DO_Bypass_To_Mixer2_Dry_Output

LD Cde_descente_skip
ANDN Mode_AU
ST DO_Skip_Move_Down

LD Cde_dosage_Add[1]
ANDN Mode_AU
ST DO_Add1_Open (* Ajout R.C. 13/10/2011 P856 *)

LD Cde_dosage_Add[2]
ANDN Mode_AU
ST DO_Add2_Open (* Ajout R.C. 13/10/2011 P856 *)

LD Cde_dosage_Add[3]
ANDN Mode_AU
ST DO_Add3_Open (* Ajout R.C. 13/10/2011 P856 *)

LD Cde_dosage_Add[4]
ANDN Mode_AU
ST DO_Add4_Open (* Ajout R.C. 13/10/2011 P856 *)

LD Cde_dosage_Adj[1]
OR Cde_dosage_Adj_ppe[1]
ANDN Mem_vidange_Adj1 (* Modif Jérémie BOUVET "Inde" 15/02/2010 *)(* SIMEM plants / Adjuvants avec flotteur *)
ANDN Mode_AU
ST DO_Admix_Tank1_Open

LD Cde_dosage_Adj[2]
OR Cde_dosage_Adj_ppe[2]
ANDN Mem_vidange_Adj2 (* Modif Jérémie BOUVET "Inde" 15/02/2010 *)(* SIMEM plants / Adjuvants avec flotteur *)
ANDN Mode_AU
ST DO_Admix_Tank2_Open

LD Cde_dosage_Adj[3]
OR Cde_dosage_Adj_ppe[3]
ANDN Mode_AU
ST DO_Admix_Tank3_Open

LD Cde_dosage_Adj[4]
OR Cde_dosage_Adj_ppe[4]
ANDN Mode_AU
ST DO_Admix_Tank4_Open

LD Cde_dosage_Adj[5]
OR Cde_dosage_Adj_ppe[5]
ANDN Mode_AU
ST DO_Admix_Tank5_Open

LD Cde_dosage_Adj[6] 
OR Cde_dosage_Adj_ppe[6]
ANDN Mode_AU
ST DO_Admix_Tank6_Open

LD Cde_dosage_Adj[7]
OR Cde_dosage_Adj_ppe[7]
ANDN Mode_AU
ST DO_Admix_Tank7_Open

LD Cde_dosage_Adj[8]
OR Cde_dosage_Adj_ppe[8]
ANDN Mode_AU
ST DO_Admix_Tank8_Open

LD Cde_dosage_Adj[9]
OR Cde_dosage_Adj_ppe[9]
ANDN Mode_AU
ST DO_Admix_Tank9_Open

LD Cde_dosage_Adj[10]
OR Cde_dosage_Adj_ppe[10]
ANDN Mode_AU
ST DO_Admix_Tank10_Open

LD Cde_dosage_Adj[11]
OR Cde_dosage_Adj_ppe[11]
ANDN Mode_AU
ST DO_Admix_Tank11_Open

LD Cde_dosage_Adj[12]
OR Cde_dosage_Adj_ppe[12]
ANDN Mode_AU
ST DO_Admix_Tank12_Open

LD Cde_dosage_Adj[13]
OR Cde_dosage_Adj_ppe[13]
ANDN Mode_AU
ST DO_Admix_Tank13_Open

LD Cde_dosage_Adj[14]
OR Cde_dosage_Adj_ppe[14]
ANDN Mode_AU
ST DO_Admix_Tank14_Open

LD Cde_dosage_Adj[15]
OR Cde_dosage_Adj_ppe[15]
ANDN Mode_AU
ST DO_Admix_Tank15_Open

LD Cde_dosage_Adj[16]
OR Cde_dosage_Adj_ppe[16]
ANDN Mode_AU
ST DO_Admix_Tank16_Open

LD Cde_dosage_Adj[17]
OR Cde_dosage_Adj_ppe[17]
ANDN Mode_AU
ST DO_Admix_Tank17_Open

LD Cde_dosage_Adj[18]
OR Cde_dosage_Adj_ppe[18]
ANDN Mode_AU
ST DO_Admix_Tank18_Open

LD Cde_dosage_Adj[19]
OR Cde_dosage_Adj_ppe[19]
ANDN Mode_AU
ST DO_Admix_Tank19_Open

LD Cde_dosage_Adj[20]
OR Cde_dosage_Adj_ppe[20]
ANDN Mode_AU
ST DO_Admix_Tank20_Open

LD Cde_dosage_Anh
ANDN Mode_AU
ST DO_Anh_Silo_Open

LD Cde_dosage_Cim[1]
ANDN Mode_AU
ST DO_Cem_Silo1_Open

LD Cde_dosage_Cim[2]
ANDN Mode_AU
ST DO_Cem_Silo2_Open

LD Cde_dosage_Cim[3]
ANDN Mode_AU
ST DO_Cem_Silo3_Open

LD Cde_dosage_Cim[4]
ANDN Mode_AU
ST DO_Cem_Silo4_Open

LD Cde_dosage_Cim[5]
ANDN Mode_AU
ST DO_Cem_Silo5_Open

LD Cde_dosage_Cim[6]
ANDN Mode_AU
ST DO_Cem_Silo6_Open

LD Cde_dosage_Eau[1]
OR Cde_dosage_Eau_ppe[1]
ANDN Mode_AU
ST DO_Water_Tank1_Open

LD Cde_dosage_Eau[2]
OR Cde_dosage_Eau_ppe[2]
ANDN Mode_AU
ST DO_Water_Tank2_Open

LD Cde_dosage_Eau[3]
OR Cde_dosage_Eau_ppe[3]
ANDN Mode_AU
ST DO_Water_Tank3_Open

LD Cde_dosage_Eau[4]
OR Cde_dosage_Eau_ppe[4]
ANDN Mode_AU
ST DO_Water_Tank4_Open

LD Cde_dosage_Gra[1]
ANDN Mode_AU
ST DO_Agg_Bin1_Open

LD Cde_dosage_Gra[2]
ANDN Mode_AU
ST DO_Agg_Bin2_Open

LD Cde_dosage_Gra[3]
ANDN Mode_AU
ST DO_Agg_Bin3_Open

LD Cde_dosage_Gra[4]
ANDN Mode_AU
ST DO_Agg_Bin4_Open

LD Cde_dosage_Gra[5]
ANDN Mode_AU
ST DO_Agg_Bin5_Open

LD Cde_dosage_Gra[6]
ANDN Mode_AU
ST DO_Agg_Bin6_Open

LD Cde_dosage_Gra[7]
ANDN Mode_AU
ST DO_Agg_Bin7_Open

LD Cde_dosage_Gra[8]
ANDN Mode_AU
ST DO_Agg_Bin8_Open

LD Cde_dosage_Gra[9]
ANDN Mode_AU
ST DO_Agg_Bin9_Open

LD Cde_dosage_Gra[10]
ANDN Mode_AU
ST DO_Agg_Bin10_Open

LD Cde_dosage_Gra[11]
ANDN Mode_AU
ST DO_Agg_Bin11_Open

LD Cde_dosage_Gra[12]
ANDN Mode_AU
ST DO_Agg_Bin12_Open

LD Cde_dosage_Gra[13]
ANDN Mode_AU
ST DO_Agg_Bin13_Open

LD Cde_dosage_Gra[14]
ANDN Mode_AU
ST DO_Agg_Bin14_Open

LD Cde_fermeture_trappe1_mal1
ANDN Mode_AU
ST DO_Mixer1_Gate1_Close

LD Cde_fermeture_trappe1_mal2
ANDN Mode_AU
ST DO_Mixer2_Gate1_Close

LD Cde_fermeture_trappe2_mal1
ANDN Mode_AU
ST DO_Mixer1_Gate2_Close

LD Cde_fermeture_trappe2_mal2
ANDN Mode_AU
ST DO_Mixer2_Gate2_Close

LD Cde_interdiction_trappes_mal1
ANDN Mode_AU
ST DO_Mixer1_Gates_Disable (* Ajout R.C. 19/01/2012 P856 *)

LD Cde_interdiction_trappes_mal2
ANDN Mode_AU
ST DO_Mixer2_Gates_Disable (* Ajout R.C. 19/01/2012 P856 *)

LD Cde_marche_tapis_transfert
ANDN Mode_AU
ST DO_Conveyor_Belt_ON

LD Cde_montee_skip
ANDN Mode_AU
ST DO_Skip_Move_Up

LD Cde_ouverture_trappe1_mal1
ANDN Mode_AU
ST DO_Mixer1_Gate1_Open

LD Cde_ouverture_trappe1_mal2
ANDN Mode_AU
ST DO_Mixer2_Gate1_Open

LD Cde_ouverture_trappe2_mal1
ANDN Mode_AU
ST DO_Mixer1_Gate2_Open

LD Cde_ouverture_trappe2_mal2
ANDN Mode_AU
ST DO_Mixer2_Gate2_Open

(*Config MY One Gate on the mixer with 2 loading points*)(*Modif NY 03/09/2013*)
LD DO_Mixer1_Gate1_Open 
OR DO_Mixer1_Gate2_Close
ST DO_Mixer1_OpenG1_CloseG2 (* 25/05/2016: Old variable STOR_Mixer1_OpenG1_CloseG2 from initial prog *)

LD DO_Mixer1_Gate2_Open 
OR DO_Mixer1_Gate1_Close
ST DO_Mixer1_OpenG2_CloseG1 (*25/05/2016: Old variable STOR_Mixer1_OpenG2_CloseG1 from initial prog*)
(*END Modif NY 03/09/2013*)

LD Cde_petite_vitesse_Add
ANDN Mode_AU
ST DO_Add_Fine_Weighing (* Ajout R.C. 13/10/2011 P856 *)

LD Cde_petite_vitesse_Anh
ANDN Mode_AU
ST DO_Anh_Fine_Weighing

LD Cde_petite_vitesse_Cim1
ANDN Mode_AU
ST DO_Cem1_Fine_Weighing

LD Cde_petite_vitesse_Cim2
ANDN Mode_AU
ST DO_Cem2_Fine_Weighing

LD Cde_petite_vitesse_Eau1
ANDN Mode_AU
ST DO_Water1_Fine_Weighing

LD Cde_petite_vitesse_Eau2
ANDN Mode_AU
ST DO_Water2_Fine_Weighing

LD Cde_petite_vitesse_Gra1
ANDN Mode_AU
ST DO_Agg1_Fine_Weighing

LD Cde_petite_vitesse_Gra2
ANDN Mode_AU
ST DO_Agg2_Fine_Weighing

(* Modif Jérémie BOUVET "Inde" 15/02/2010 *)(* Skip *)
LD Cde_skip_gde_vitesse
ANDN Mode_AU
XOR Conf_skip_sortie_grde_vit_actif0 (* il est possible d'inverser le sens de la sortie *)
	(* /!\ La STOR sera à TRUE en mode d'arrêt d'urgence si elle est active à 0. *)
ST DO_Skip_High_Speed

LD Cde_mode_manuel_logiciel
ANDN Mode_AU
ST DO_Plant_In_Soft_Manu (* Ajout P803 pour le skip 2 vitesses *)

LD Cde_validation_boite_noire
ANDN Mode_AU
ST DO_Black_Box_Validation

LD Cde_vibreur_balance_Add
ANDN Mode_AU
ST DO_Add_Weigher_Extraction_Aid (* Ajout R.C. 13/10/2011 P856 *)

LD Cde_vibreur_balance_Anh
ANDN Mode_AU
ST DO_Anh_Weigher_Extraction_Aid

LD Cde_vibreur_balance_Cim1
OR Cde_vibreur_balance_Cim2
ANDN Mode_AU
ST DO_Cem_Weigher_Extraction_Aid

LD Cde_vibreur_balance_Eau1
OR Cde_vibreur_balance_Eau2
ANDN Mode_AU
ST DO_Water_Weigher_Extraction_Aid

LD Cde_vibreur_balance_Gra1
ANDN Mode_AU
ST DO_Agg1_Weigher_Extraction_Aid

LD Cde_vibreur_balance_Gra2
ANDN Mode_AU
ST DO_Agg2_Weigher_Extraction_Aid

LD Cde_vibreur_TT_gra
ANDN Mode_AU
ST DO_Agg_WH_Extraction_Aid

LD Cde_vidange_bascule_Add
ANDN Mode_AU
ST DO_Add_Weigher_Open (* Ajout R.C. 13/10/2011 P856 *)

LD Cde_vidange_bascule_Add_Organe[1]
ANDN Mode_AU
ST DO_Add1_Weigher_Open (* Ajout R.C. 13/10/2011 P856 *)

LD Cde_vidange_bascule_Add_Organe[2]
ANDN Mode_AU
ST DO_Add2_Weigher_Open (* Ajout R.C. 13/10/2011 P856 *)

LD Cde_vidange_bascule_Add_Organe[3]
ANDN Mode_AU
ST DO_Add3_Weigher_Open (* Ajout R.C. 13/10/2011 P856 *)

LD Cde_vidange_bascule_Add_Organe[4]
ANDN Mode_AU
ST DO_Add4_Weigher_Open (* Ajout R.C. 13/10/2011 P856 *)

LD Cde_vidange_bascule_Adj
ANDN Mode_AU
ST DO_Admix_Weigher_Cpt1_Open

LD Cde_vidange_bascule_Anh
ANDN Mode_AU
ST DO_Anh_Weigher_Open

LD Cde_vidange_bascule_Cim1
ANDN Mode_AU
ST DO_Cem1_Weigher_Open

LD Cde_vidange_bascule_Cim2
ANDN Mode_AU
ST DO_Cem2_Weigher_Open

LD Cde_vidange_bascule_Adj_Comp
ANDN Mode_AU
ST DO_Admix_Weigher_Cpt2_Open

LD Cde_vidange_bascule_Eau1
ANDN Mode_AU
ST DO_Water1_Weigher_Open

LD Cde_vidange_bascule_Eau2
ANDN Mode_AU
ST DO_Water2_Weigher_Open

LD Cde_vidange_bascule_Gra1
ANDN Mode_AU
ST DO_Agg1_Weigher_Open

LD Cde_vidange_bascule_Gra1_1
ANDN Mode_AU
ST DO_Agg1_Weigher_Output1_Open (* Ajout R.C. 27/03/2012 P857 *)

LD Cde_vidange_bascule_Gra1_2
ANDN Mode_AU
ST DO_Agg1_Weigher_Output2_Open (* Ajout R.C. 27/03/2012 P857 *)

LD Cde_vidange_bascule_Gra2
ANDN Mode_AU
ST DO_Agg2_Weigher_Open

LD Cde_vidange_tampon_ppe[1]
ANDN Mode_AU
ST DO_Admix_PP1_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[2]
ANDN Mode_AU
ST DO_Admix_PP20_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[3]
ANDN Mode_AU
ST DO_Admix_PP3_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[4]
ANDN Mode_AU
ST DO_Admix_PP4_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[5]
ANDN Mode_AU
ST DO_Admix_PP5_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[6]
ANDN Mode_AU
ST DO_Admix_PP6_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[7]
ANDN Mode_AU
ST DO_Admix_PP7_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[8]
ANDN Mode_AU
ST DO_Admix_PP8_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[9]
ANDN Mode_AU
ST DO_Admix_PP9_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[10]
ANDN Mode_AU
ST DO_Admix_PP10_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[11]
ANDN Mode_AU
ST DO_Admix_PP11_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[12]
ANDN Mode_AU
ST DO_Admix_PP12_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[13]
ANDN Mode_AU
ST DO_Admix_PP13_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[14]
ANDN Mode_AU
ST DO_Admix_PP14_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[15]
ANDN Mode_AU
ST DO_Admix_PP15_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[16]
ANDN Mode_AU
ST DO_Admix_PP16_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[17]
ANDN Mode_AU
ST DO_Admix_PP17_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[18]
ANDN Mode_AU
ST DO_Admix_PP18_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[19]
ANDN Mode_AU
ST DO_Admix_PP19_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_tampon_ppe[20]
ANDN Mode_AU
ST DO_Admix_PP21_WH_Open (* Ajout R.C. 23/02/2012 P857 "hopper tank" *)

LD Cde_vidange_TT_gra
ANDN Mode_AU
ST DO_Agg_WH_Open

LD Cde_fermeture_bascule_Anh
ANDN Mode_AU
ST DO_Anh_Weigher_Close

LD Cde_autorisation_trans_cim
ANDN Mode_AU
ST DO_Cem_Transfert_Authorisation

LD Cde_cuve1_mes_occupee
ANDN Mode_AU
ST DO_Tank1_Measure_Busy

LD Cde_cuve2_mes_occupee
ANDN Mode_AU
ST DO_Tank2_Measure_Busy

LD Cde_ordre_transfert_cim
ANDN Mode_AU
ST DO_Cem_Transfert_Order

LD Cde_vibreur_TT_Cim
ANDN Mode_AU
ST DO_Cem_WH_Extraction_Aid

LD Cde_vidange_TT_Cim
ANDN Mode_AU
ST DO_Cem_WH_Open

LD Cde_bascule_Cim1_vide
ANDN Mode_AU
ST DO_Cem1_Weigher_Empty

LD Cde_bascule_Cim1_vide___old
ANDN Mode_AU
ST DO_Cem1_Weigher_Empty_old

LD Cde_Bypass2
ANDN Mode_AU
ST DO_Bypass2_To_Dry_Output

(* Gestion des feux rouges malaxeur1 *)
LD cde_feu_rouge_trappe1_Mal1
ANDN Mode_AU
ST DO_Mixer1_Gate1_Red_Light_ON
LD cde_feu_rouge_trappe2_Mal1
ANDN Mode_AU
ST DO_Mixer1_Gate2_Red_Light_ON
LD cde_feu_rouge_trappe1_Mal2
ANDN Mode_AU
ST DO_Mixer2_Gate1_Red_Light_ON
LD cde_feu_rouge_trappe2_Mal2
ANDN Mode_AU
ST DO_Mixer2_Gate2_Red_Light_ON

(*Gestion du klaxon de fin de gachée*)
LD cde_klaxon_trappe1_mal1
OR cde_klaxon_pupitre (*modif roumanie*)
OR BP_activation_Klaxon (*Modif MD 20/01/2009*)
ANDN Mode_AU
ST DO_Mixer1_Gate1_Horn_ON
LD cde_klaxon_trappe2_mal1
ANDN Mode_AU
ST DO_Mixer1_Gate2_Horn_ON
LD cde_klaxon_trappe1_mal2
ANDN Mode_AU
ST DO_Mixer2_Gate1_Horn_ON
LD cde_klaxon_trappe2_mal2
ANDN Mode_AU
ST DO_Mixer2_Gate2_Horn_ON
(* XX/11/2013 - P864 - artf1159237 - Horn activation for dry batch process*)
LD cde_klaxon_dry
OR cde_klaxon_pupitre 
OR BP_activation_Klaxon 
ANDN Mode_AU
ST DO_Horn_Dry_Batch_ON

(* Gestion arret du malaxeur*)
(* Modif M.D. 20/01/2009 : Marche/arret automatique malaxeur *)
(* ARRET -&gt; TYPE RO UNIQUEMENT : *)
	(* la sortie ne commande pas la marche, mais uniquement l'arret *)
	LD Auto_arret_mal1_RO (* Seul le nom des variables est modifie *)
	ANDN Mode_AU
	ST DO_Mixer1_RO_OFF
	LD Auto_arret_mal2_RO (* Seul le nom des variables est modifie *)
	ANDN Mode_AU
	ST DO_Mixer2_RO_OFF
(* MARCHE/ARRET -&gt; TYPE INDE UNIQUEMENT : *)
	(* La sortie commande la marche et l'arret du malaxeur 1 *)
	LD cde_marche_mal1 (* Seul le nom des variables est modifie *)
	ANDN Mode_AU
	ST DO_Mixer1_ON


(*Modif M.D. 09/01/2009 integration machine colorants  *)
LD Cde_Ouv_XV2
ANDN Mode_AU
ST DO_Color_XV2_Open
LD Cde_Ouv_XV3
ANDN Mode_AU
ST DO_Color_XV3_Open
(*FIN Modif M.D. 09/01/2009 integration machine colorants  *)

(************ Ajouts Roumanie ****************************************)
LD Cde_marche_compresseur
ANDN Mode_AU
ST DO_Air_Compr_ON

(* Modif M.D. 20/01/2009 : unification des commandes de marche et
   d'arret du malaxeur "cde_marche_mal1" : quelques ligne au dessus
LD Cde_marche_malaxeur1
ST STOR_marche_malaxeur1
*) 
LD Cde_vid_basc_Eau1_Ppe
ANDN Mode_AU
ST DO_Water1_Weigher_PP_ON (* Vidange par pompe en plus de la vidange par gravité *)

LD Cde_ppe_vidange_Comp_Adj[1]
ANDN Mode_AU
ST DO_Admix_Cpt1_PP_ON

LD Cde_ppe_vidange_Comp_Adj[2]
ANDN Mode_AU
ST DO_Admix_Cpt2_PP_ON

LD Cde_ppe_vidange_Comp_Adj[3]
ANDN Mode_AU
ST DO_Admix_Cpt3_PP_ON

LD Cde_ppe_vidange_Comp_Adj[4]
ANDN Mode_AU
ST DO_Admix_Cpt4_PP_ON

LD Cde_ppe_vidange_Comp_Adj[5]
ANDN Mode_AU
ST DO_Admix_Cpt5_PP_ON 

LD Cde_ppe_vidange_Comp_Adj[6]
ANDN Mode_AU
ST DO_Admix_Cpt6_PP_ON

LD Cde_ppe_vidange_Comp_Adj[7]
ANDN Mode_AU
ST DO_Admix_Cpt7_PP_ON

LD Cde_ppe_vidange_Comp_Adj[8]
ANDN Mode_AU
ST DO_Admix_Cpt8_PP_ON 

LD Cde_ppe_vidange_Comp_Adj[9]
ANDN Mode_AU
ST DO_Admix_Cpt9_PP_ON

LD Cde_ppe_vidange_Comp_Adj[10]
ANDN Mode_AU
ST DO_Admix_Cpt10_PP_ON

LD Cde_PPE_Graisse1
ANDN Mode_AU
ST DO_Mixer1_Grease_PP_ON

LD Cde_Marche_RAMPE
ANDN Mode_AU
ST DO_Vacuum_Machine_ON

LD Cde_Marche_ASPI
ANDN Mode_AU
ST DO_Vacuum_Machine_ON

(************ FIN Ajouts Roumanie ****************************************)

LD Cde_AU_Acquittes
ANDN Mode_AU
ST DO_Emergency_Stop_Ack


(* PUPITRE TOR : SORTIES VERS LE PUPITRE SI EXISTANT *)
(* Ajout R.C. 15/05/2009 *)
LD Conf_DI_Manu_Station
JMPCN Pas_de_pupitre_TOR
	LD Info_Gate_Mode_Auto
	ANDN Mode_AU
	ST DO_Mixer_Gates_PLC_In_Auto
Pas_de_pupitre_TOR:


(* /!\ Laisser ce code à la fin, afin qu'il puisse avoir la priorité *)
(* sur les autres STORs mappées. *)
LD Mode_Simulation
ANDN CCR_Simulees (* CCR simulées par le simulateur *)
JMPCN Fin_simulation_cpt_adj
(* On écrit ces STORs qu'en mode simulation, ce qui permet de pouvoir *)
(* laisser les adresses des "STOR_Simulation_cpt_adj*" mappées. *)
(* Ainsi, sur centrale, les STORs réservées à la simulation pourront *)
(* continuer à être utilisées pour leur usage initial. *)
	LD  Cde_simulation_cpt_adj2 
	ANDN Mode_AU
	ST DO_Admix_Tank2_Simulation (* Ajouté en P801 *)

	LD  Cde_simulation_cpt_adj5 
	ANDN Mode_AU
	ST DO_Admix_Tank5_Simulation (* Ajouté en P801 *)

	LD  Cde_simulation_cpt_adj7 
	ANDN Mode_AU
	ST DO_Admix_Tank7_Simulation (* Ajouté en P801 *)

	LD  Cde_simulation_cpt_adj10 
	ANDN Mode_AU
	ST DO_Admix_Tank10_Simulation (* Ajouté en P801 *)
Fin_simulation_cpt_adj:


(* XX/12/2014 - P865 - artf1517141 *)
LD Cde_Verif_Calib_Gra1
ANDN Mode_AU
ST DO_Agg1_Weigher_ACC_ON

LD Cde_Verif_Calib_Gra2
ANDN Mode_AU
ST DO_Agg2_Weigher_ACC_ON

LD Cde_Verif_Calib_Cim1
ANDN Mode_AU
ST DO_Cem1_Weigher_ACC_ON

LD Cde_Verif_Calib_Cim2
ANDN Mode_AU
ST DO_Cem2_Weigher_ACC_ON

LD Cde_Verif_Calib_Eau1
ANDN Mode_AU
ST DO_Water1_Weigher_ACC_ON

LD Cde_Verif_Calib_Eau2
ANDN Mode_AU
ST DO_Water2_Weigher_ACC_ON

LD Cde_Verif_Calib_Adj
ANDN Mode_AU
ST DO_Admix_Weigher_ACC_ON

LD Cde_Verif_Calib_Anh
ANDN Mode_AU
ST DO_Anh_Weigher_ACC_ON

LD Cde_Verif_Calib_Add
ANDN Mode_AU
ST DO_Add_Weigher_ACC_ON
</ILSource>
	</program>
	<program>
		<identProgram name="570_Restitution_sorties_ST_M340" type="section" task="MAST"></identProgram>
		<STSource>(*Modif MD 13/12/2007 Ajout; 
  En M340, on peut pas lire la table des sortie. Il faut donc en créer une
  qui soit lisible (idem %M8xx definit sur le quantum*)(* Initialisation des variables locales de la section *)

(* Initialisation des variables locales de la section *)
IF Restitution_sorties_ST_DEM_INIT THEN

(*
	(Mettre les futures initialisations ici)
*)

	(* Reset de la demande d'init *)
	Restitution_sorties_ST_DEM_INIT := FALSE; (* L'init de la section a bien été prise en compte. *)
END_IF;



BCMix_DO_1  := DO_01;
BCMix_DO_2  := DO_02;
BCMix_DO_3  := DO_03;
BCMix_DO_4  := DO_04;
BCMix_DO_5  := DO_05;
BCMix_DO_6  := DO_06;
BCMix_DO_7  := DO_07;
BCMix_DO_8  := DO_08;
BCMix_DO_9  := DO_09;
BCMix_DO_10 := DO_10;
BCMix_DO_11 := DO_11;
BCMix_DO_12 := DO_12;
BCMix_DO_13 := DO_13;
BCMix_DO_14 := DO_14;
BCMix_DO_15 := DO_15;
BCMix_DO_16 := DO_16;
BCMix_DO_17 := DO_17;
BCMix_DO_18 := DO_18;
BCMix_DO_19 := DO_19;
BCMix_DO_20 := DO_20;
BCMix_DO_21 := DO_21;
BCMix_DO_22 := DO_22;
BCMix_DO_23 := DO_23;
BCMix_DO_24 := DO_24;
BCMix_DO_25 := DO_25;
BCMix_DO_26 := DO_26;
BCMix_DO_27 := DO_27;
BCMix_DO_28 := DO_28;
BCMix_DO_29 := DO_29;
BCMix_DO_30 := DO_30;
BCMix_DO_31 := DO_31;
BCMix_DO_32 := DO_32;
BCMix_DO_33 := DO_33;
BCMix_DO_34 := DO_34;
BCMix_DO_35 := DO_35;
BCMix_DO_36 := DO_36;
BCMix_DO_37 := DO_37;
BCMix_DO_38 := DO_38;
BCMix_DO_39 := DO_39;
BCMix_DO_40 := DO_40;
BCMix_DO_41 := DO_41;
BCMix_DO_42 := DO_42;
BCMix_DO_43 := DO_43;
BCMix_DO_44 := DO_44;
BCMix_DO_45 := DO_45;
BCMix_DO_46 := DO_46;
BCMix_DO_47 := DO_47;
BCMix_DO_48 := DO_48;
BCMix_DO_49 := DO_49;
BCMix_DO_50 := DO_50;
BCMix_DO_51 := DO_51;
BCMix_DO_52 := DO_52;
BCMix_DO_53 := DO_53;
BCMix_DO_54 := DO_54;
BCMix_DO_55 := DO_55;
BCMix_DO_56 := DO_56;
BCMix_DO_57 := DO_57;
BCMix_DO_58 := DO_58;
BCMix_DO_59 := DO_59;
BCMix_DO_60 := DO_60;
BCMix_DO_61 := DO_61;
BCMix_DO_62 := DO_62;
BCMix_DO_63 := DO_63;
BCMix_DO_64 := DO_64;
BCMix_DO_65 := DO_65;
BCMix_DO_66 := DO_66;
BCMix_DO_67 := DO_67;
BCMix_DO_68 := DO_68;
BCMix_DO_69 := DO_69;
BCMix_DO_70 := DO_70;
BCMix_DO_71 := DO_71;
BCMix_DO_72 := DO_72;
BCMix_DO_73 := DO_73;
BCMix_DO_74 := DO_74;
BCMix_DO_75 := DO_75;
BCMix_DO_76 := DO_76;
BCMix_DO_77 := DO_77;
BCMix_DO_78 := DO_78;
BCMix_DO_79 := DO_79;
BCMix_DO_80 := DO_80;
BCMix_DO_81 := DO_81;
BCMix_DO_82 := DO_82;
BCMix_DO_83 := DO_83;
BCMix_DO_84 := DO_84;
BCMix_DO_85 := DO_85;
BCMix_DO_86 := DO_86;
BCMix_DO_87 := DO_87;
BCMix_DO_88 := DO_88;
BCMix_DO_89 := DO_89;
BCMix_DO_90 := DO_90;
BCMix_DO_91 := DO_91;
BCMix_DO_92 := DO_92;
BCMix_DO_93 := DO_93;
BCMix_DO_94 := DO_94;
BCMix_DO_95 := DO_95;
BCMix_DO_96 := DO_96;
BCMix_DO_97 := DO_97;
BCMix_DO_98 := DO_98;
BCMix_DO_99 := DO_99;
BCMix_DO_100 := DO_100;
BCMix_DO_101 := DO_101;
BCMix_DO_102 := DO_102;
BCMix_DO_103 := DO_103;
BCMix_DO_104 := DO_104;
BCMix_DO_105 := DO_105;
BCMix_DO_106 := DO_106;
BCMix_DO_107 := DO_107;
BCMix_DO_108 := DO_108;
BCMix_DO_109 := DO_109;
BCMix_DO_110 := DO_110;
BCMix_DO_111 := DO_111;
BCMix_DO_112 := DO_112;
BCMix_DO_113 := DO_113;
BCMix_DO_114 := DO_114;
BCMix_DO_115 := DO_115;
BCMix_DO_116 := DO_116;
BCMix_DO_117 := DO_117;
BCMix_DO_118 := DO_118;
BCMix_DO_119 := DO_119;
BCMix_DO_120 := DO_120;
BCMix_DO_121 := DO_121;
BCMix_DO_122 := DO_122;
BCMix_DO_123 := DO_123;
BCMix_DO_124 := DO_124;
BCMix_DO_125 := DO_125;
BCMix_DO_126 := DO_126;
BCMix_DO_127 := DO_127;
BCMix_DO_128 := DO_128;
</STSource>
	</program>
	<animationTable name="Table" location="" version="1.0" dateTime="date_and_time#2021-11-15-16:0:46" ExtStringAnim="0" ExtStringAnimLen="100" PouOwner="M340">
		<elementDescription displayBase="4" name="Numero_produit_Gra1"></elementDescription>
		<elementDescription displayBase="4" name="Produit_remplacement_Gra1"></elementDescription>
		<elementDescription displayBase="4" name="Numero_produit_Gra2"></elementDescription>
		<elementDescription displayBase="4" name="Produit_remplacement_Gra2"></elementDescription>
		<elementDescription displayBase="4" name="TG_IN[3].Basc_gra1"></elementDescription>
		<elementDescription displayBase="4" name="Prod_Gra_A_Doser"></elementDescription>
		<elementDescription displayBase="4" name="Product_Replacement"></elementDescription>
		<elementDescription displayBase="4" name="Poids_Gra_A_Doser"></elementDescription>
		<elementDescription displayBase="4" name="Dosage_auto_Gra1"></elementDescription>
		<elementDescription displayBase="4" name="Dosage_auto_Gra2"></elementDescription>
		<elementDescription displayBase="4" name="Dosage_auto_Eau1"></elementDescription>
		<elementDescription displayBase="4" name="Dosage_auto_Eau2"></elementDescription>
		<elementDescription displayBase="4" name="Dosage_auto"></elementDescription>
		<elementDescription displayBase="4" name="Ecart_CHU_Eau_Prod"></elementDescription>
		<elementDescription displayBase="4" name="Poids_Eau_A_Doser"></elementDescription>
	</animationTable>
	<IOScreen version="V1.0">
		<screen name="Diag_screen_Main" screenX="1280" screenY="800" BKColor="6118749" valScreen="0" location="" creationDate="25/05/2011 - 09:11:04" modificationDate="07/06/2012 - 15:37:00" customInfos="" isPattern="0" valPattern="0">
			<object objectID="11" description="(28,323,71,529),(5,1,0),(11,0,16777215)"></object>
			<object objectID="11" description="(75,323,320,529),(5,1,0),(11,0,16777215)"></object>
			<object objectID="11" description="(324,4,420,529),(5,1,0),(11,0,16777215)"></object>
			<object objectID="11" description="(28,3,320,318),(5,1,0),(11,0,16777215)"></object>
			<object objectID="10" description="(202,363,226,387),(0,1,12632256),4"></object>
			<object objectID="15" description="(197,360,230,398),(5,1,0),(10,0,0),|    ●¤¤  ●¤¤●|Courier New|,(8,0,0,0,0,0,12632256)"></object>
			<object objectID="15" description="(244,327,258,480),(5,1,0),(10,0,0),|Valid.1 Valid.2 Valid.SS|Courier New|,(8,0,0,0,0,0,8421504)"></object>
			<object objectID="15" description="(48,29,62,66),(5,1,0),(10,0,0),|TG[1]|Courier New|,(8,0,0,0,0,0,0)"></object>
			<object objectID="15" description="(0,2,26,206),(5,1,0),(10,0,0),|Diagnostic Screen - Main¤¤P857 (Modified 2012_03_16)|Courier New|,(8,0,0,0,0,0,16777215)"></object>
			<object objectID="15" description="(57,23,71,60),(5,1,0),(10,0,0),|ID|Courier New|,(8,1,0,0,0,0,8421504)">
				<varAnim name="TG_IN[1].Numero_gachee" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="14" description="(51,7,303,13),(0,1,8421504),(10,0,0),5:(12,51;7,51;7,303;8,303;13,303;),0">
				<varAnim name="TG_IN[1].Proprietes_gachee.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="14" description="(51,75,303,81),(0,1,8421504),(10,0,0),5:(76,51;81,51;81,303;80,303;75,303;),0">
				<varAnim name="TG_IN[1].Proprietes_gachee.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,23,303,74),(5,1,0),(10,0,0),|Gra1¤¤Gra2¤¤Cim1¤¤Cim2¤¤Eau1¤¤Eau2¤¤Adj¤¤ comp2¤¤Anh¤¤Add¤¤Ppe¤¤TGra¤¤TCim¤¤Intro¤¤Malax¤¤Vidg¤¤Term¤¤Manu Log|Courier New|,(8,0,0,0,0,0,8421504)"></object>
			<object objectID="15" description="(76,23,89,49),(5,1,0),(10,0,0),|Gra1|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,23,101,52),(5,1,0),(10,0,0),|Gra2|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(100,23,113,47),(5,1,0),(10,0,0),|Cim1|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,23,125,57),(5,1,0),(10,0,0),|Cim2|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.13" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,23,137,53),(5,1,0),(10,0,0),|Eau1|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,23,149,52),(5,1,0),(10,0,0),|Eau2|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.14" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,23,161,52),(5,1,0),(10,0,0),|Adj|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.6" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,23,185,50),(5,1,0),(10,0,0),|Anh|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.7" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(208,23,221,46),(5,1,0),(10,0,0),|TGra|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(220,23,233,50),(5,1,0),(10,0,0),|TCim|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(232,23,245,58),(5,1,0),(10,0,0),|Intro|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.8" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,23,257,53),(5,1,0),(10,0,0),|Malax|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.9" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,23,269,53),(5,1,0),(10,0,0),|Vidg|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.10" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(268,23,281,53),(5,1,0),(10,0,0),|Term|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.11" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(280,23,293,78),(5,1,0),(10,0,0),|Manu Log|Courier New|,(8,0,0,0,0,0,16711935)">
				<varAnim name="TG_OUT[1].CR_etat_gachee.15" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,12,89,23),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_presence_produit.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,12,101,23),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_presence_produit.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(101,12,114,23),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_presence_produit.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,12,125,23),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_presence_produit.6" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,12,137,23),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_presence_produit.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,12,149,23),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_presence_produit.7" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,12,161,23),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_presence_produit.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,12,185,23),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_presence_produit.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,49,89,58),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_basc_gra1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,56,89,64),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_basc_gra1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,49,101,58),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_basc_gra2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,56,101,64),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_basc_gra2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(99,49,112,58),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_basc_cim1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(99,56,112,64),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_basc_cim1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,49,124,58),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_basc_cim2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,56,124,64),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_basc_cim2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,49,137,58),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_basc_eau1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,56,137,64),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_basc_eau1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,49,149,58),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_basc_eau2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,56,149,64),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_basc_eau2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,49,160,58),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_basc_adj.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,56,160,64),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_basc_adj.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,49,185,58),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_basc_anh.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,56,185,64),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_basc_anh.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(80,65,93,74),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_introduction.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(80,72,93,80),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_introduction.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(98,65,111,74),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_introduction.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(98,72,111,80),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_introduction.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,65,124,74),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_Etat_Introduction_2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,72,124,80),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_Etat_Introduction_2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,65,137,74),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_introduction.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,72,137,80),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_introduction.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,65,149,74),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_Etat_Introduction_2.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,72,149,80),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_Etat_Introduction_2.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,65,160,74),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_introduction.6" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,72,160,80),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_introduction.7" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(171,65,184,74),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_introduction.8" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(171,72,184,80),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_introduction.9" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,55,257,64),(5,1,0),(10,0,0),|1|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_malax1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,60,257,68),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_malax1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,69,257,78),(5,1,0),(10,0,0),|2|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_malax2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,74,257,82),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_malax2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,55,269,64),(5,1,0),(10,0,0),|1|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_malax1.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,60,269,68),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_malax1.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,69,269,78),(5,1,0),(10,0,0),|2|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_malax2.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,74,269,82),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_malax2.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,12,89,20),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[1].basc_gra1[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,14,101,20),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[1].basc_gra2[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(101,14,114,20),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[1].Basc_Cim1[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,14,125,20),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[1].basc_cim2[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,14,137,20),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[1].Basc_Eau1[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,14,149,20),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[1].basc_eau2[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,14,161,20),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[1].basc_adj[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,14,185,20),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[1].basc_anh[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="10" description="(37,81,47,81),(0,1,8421504),1">
				<varAnim name="index_entree_buffer" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="10" description="(78,63,97,63),(0,1,12632256),4"></object>
			<object objectID="15" description="(159,65,172,74),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_introduction.14" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(159,72,172,80),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_introduction.15" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="2" description="(37,7,47,20),2">
				<varAnim name="index_sortie_buffer" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="10" description="(42,7,42,20),(10,1,8421504),3"></object>
			<object objectID="10" description="(37,7,47,7),(0,1,8421504),1"></object>
			<object objectID="15" description="(48,107,62,144),(5,1,0),(10,0,0),|TG[2]|Courier New|,(8,0,0,0,0,0,0)"></object>
			<object objectID="15" description="(57,101,71,138),(5,1,0),(10,0,0),|ID|Courier New|,(8,1,0,0,0,0,8421504)">
				<varAnim name="TG_IN[2].Numero_gachee" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="14" description="(51,85,303,91),(0,1,8421504),(10,0,0),5:(90,51;85,51;85,303;86,303;91,303;),0">
				<varAnim name="TG_IN[2].Proprietes_gachee.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="14" description="(51,153,303,159),(0,1,8421504),(10,0,0),5:(154,51;159,51;159,303;158,303;153,303;),0">
				<varAnim name="TG_IN[2].Proprietes_gachee.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,101,300,152),(5,1,0),(10,0,0),|Gra1¤¤Gra2¤¤Cim1¤¤Cim2¤¤Eau1¤¤Eau2¤¤Adj¤¤ comp2¤¤Anh¤¤Add¤¤Ppe¤¤TGra¤¤TCim¤¤Intro¤¤Malax¤¤Vidg¤¤Term¤¤Manu Log|Courier New|,(8,0,0,0,0,0,8421504)"></object>
			<object objectID="15" description="(76,101,89,127),(5,1,0),(10,0,0),|Gra1|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,101,101,130),(5,1,0),(10,0,0),|Gra2|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(100,101,113,125),(5,1,0),(10,0,0),|Cim1|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,101,125,135),(5,1,0),(10,0,0),|Cim2|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.13" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,101,137,131),(5,1,0),(10,0,0),|Eau1|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,101,149,130),(5,1,0),(10,0,0),|Eau2|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.14" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,101,161,130),(5,1,0),(10,0,0),|Adj|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.6" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,101,185,128),(5,1,0),(10,0,0),|Anh|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.7" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(208,101,221,124),(5,1,0),(10,0,0),|TGra|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(220,101,233,128),(5,1,0),(10,0,0),|TCim|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(232,101,245,136),(5,1,0),(10,0,0),|Intro|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.8" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,101,257,131),(5,1,0),(10,0,0),|Malax|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.9" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,101,269,131),(5,1,0),(10,0,0),|Vidg|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.10" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(268,101,281,131),(5,1,0),(10,0,0),|Term|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.11" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(280,101,293,154),(5,1,0),(10,0,0),|Manu Log|Courier New|,(8,0,0,0,0,0,16711935)">
				<varAnim name="TG_OUT[2].CR_etat_gachee.15" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,90,89,101),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_presence_produit.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,90,101,101),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_presence_produit.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(101,90,114,101),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_presence_produit.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,90,125,101),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_presence_produit.6" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,90,137,101),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_presence_produit.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,90,149,101),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_presence_produit.7" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,90,161,101),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_presence_produit.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,90,185,101),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_presence_produit.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,127,89,136),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_basc_gra1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,134,89,142),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_basc_gra1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,127,101,136),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_basc_gra2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,134,101,142),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_basc_gra2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(99,127,112,136),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_basc_cim1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(99,134,112,142),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_basc_cim1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,127,124,136),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_basc_cim2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,134,124,142),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_basc_cim2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,127,137,136),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_basc_eau1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,134,137,142),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_basc_eau1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,127,149,136),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_basc_eau2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,134,149,142),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_basc_eau2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,127,160,136),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_basc_adj.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,134,160,142),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_basc_adj.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,127,185,136),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_basc_anh.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,134,185,142),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_basc_anh.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(80,143,93,152),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_introduction.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(80,150,93,158),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_introduction.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(98,143,111,152),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_introduction.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(98,150,111,158),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_introduction.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,143,124,152),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_Etat_Introduction_2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,150,124,158),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_Etat_Introduction_2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,143,137,152),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_introduction.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,150,137,158),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_introduction.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,143,149,152),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_Etat_Introduction_2.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,150,149,158),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_Etat_Introduction_2.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,143,160,152),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_introduction.6" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,150,160,158),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_introduction.7" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(171,143,184,152),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_introduction.8" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(171,150,184,158),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_introduction.9" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,133,257,142),(5,1,0),(10,0,0),|1|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_malax1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,138,257,146),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_malax1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,147,257,156),(5,1,0),(10,0,0),|2|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_malax2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,152,257,160),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_malax2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,133,269,142),(5,1,0),(10,0,0),|1|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_malax1.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,138,269,146),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_malax1.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,147,269,156),(5,1,0),(10,0,0),|2|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_malax2.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,152,269,160),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_malax2.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,90,89,98),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[2].basc_gra1[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,92,101,98),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[2].basc_gra2[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(101,92,114,98),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[2].Basc_Cim1[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,92,125,98),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[2].basc_cim2[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,92,137,98),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[2].Basc_Eau1[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,92,149,98),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[2].basc_eau2[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,92,161,98),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[2].basc_adj[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,92,185,98),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[2].basc_anh[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="10" description="(37,159,47,159),(0,1,8421504),1">
				<varAnim name="index_entree_buffer" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="10" description="(78,141,97,141),(0,1,12632256),4"></object>
			<object objectID="15" description="(159,143,172,152),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_introduction.14" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(159,150,172,158),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_introduction.15" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="2" description="(37,85,47,98),2">
				<varAnim name="index_sortie_buffer" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="10" description="(42,85,42,98),(10,1,8421504),3"></object>
			<object objectID="10" description="(37,85,47,85),(0,1,8421504),1"></object>
			<object objectID="15" description="(48,184,62,221),(5,1,0),(10,0,0),|TG[3]|Courier New|,(8,0,0,0,0,0,0)"></object>
			<object objectID="15" description="(57,178,71,215),(5,1,0),(10,0,0),|ID|Courier New|,(8,1,0,0,0,0,8421504)">
				<varAnim name="TG_IN[3].Numero_gachee" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="14" description="(51,162,303,168),(0,1,8421504),(10,0,0),5:(167,51;162,51;162,303;163,303;168,303;),0">
				<varAnim name="TG_IN[3].Proprietes_gachee.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="14" description="(51,230,303,236),(0,1,8421504),(10,0,0),5:(231,51;236,51;236,303;235,303;230,303;),0">
				<varAnim name="TG_IN[3].Proprietes_gachee.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,178,303,229),(5,1,0),(10,0,0),|Gra1¤¤Gra2¤¤Cim1¤¤Cim2¤¤Eau1¤¤Eau2¤¤Adj¤¤ comp2¤¤Anh¤¤Add¤¤Ppe¤¤TGra¤¤TCim¤¤Intro¤¤Malax¤¤Vidg¤¤Term¤¤Manu Log|Courier New|,(8,0,0,0,0,0,8421504)"></object>
			<object objectID="15" description="(76,178,89,204),(5,1,0),(10,0,0),|Gra1|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,178,101,207),(5,1,0),(10,0,0),|Gra2|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(100,178,113,202),(5,1,0),(10,0,0),|Cim1|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,178,125,212),(5,1,0),(10,0,0),|Cim2|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.13" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,178,137,208),(5,1,0),(10,0,0),|Eau1|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,178,149,207),(5,1,0),(10,0,0),|Eau2|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.14" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,178,161,207),(5,1,0),(10,0,0),|Adj|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.6" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,178,185,205),(5,1,0),(10,0,0),|Anh|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.7" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(208,178,221,201),(5,1,0),(10,0,0),|TGra|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(220,178,233,205),(5,1,0),(10,0,0),|TCim|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(232,178,245,213),(5,1,0),(10,0,0),|Intro|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.8" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,178,257,208),(5,1,0),(10,0,0),|Malax|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.9" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,178,269,208),(5,1,0),(10,0,0),|Vidg|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.10" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(268,178,281,208),(5,1,0),(10,0,0),|Term|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.11" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(280,178,293,231),(5,1,0),(10,0,0),|Manu Log|Courier New|,(8,0,0,0,0,0,16711935)">
				<varAnim name="TG_OUT[3].CR_etat_gachee.15" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,167,89,178),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_presence_produit.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,167,101,178),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_presence_produit.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(101,167,114,178),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_presence_produit.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,167,125,178),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_presence_produit.6" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,167,137,178),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_presence_produit.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,167,149,178),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_presence_produit.7" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,167,161,178),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_presence_produit.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,167,185,178),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_presence_produit.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,204,89,213),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_basc_gra1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,211,89,219),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_basc_gra1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,204,101,213),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_basc_gra2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,211,101,219),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_basc_gra2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(99,204,112,213),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_basc_cim1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(99,211,112,219),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_basc_cim1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,204,124,213),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_basc_cim2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,211,124,219),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_basc_cim2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,204,137,213),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_basc_eau1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,211,137,219),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_basc_eau1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,204,149,213),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_basc_eau2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,211,149,219),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_basc_eau2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,204,160,213),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_basc_adj.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,211,160,219),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_basc_adj.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,204,185,213),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_basc_anh.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,211,185,219),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_basc_anh.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(80,220,93,229),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_introduction.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(80,227,93,235),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_introduction.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(98,220,111,229),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_introduction.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(98,227,111,235),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_introduction.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,220,124,229),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_Etat_Introduction_2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,227,124,235),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_Etat_Introduction_2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,220,137,229),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_introduction.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,227,137,235),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_introduction.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,220,149,229),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_Etat_Introduction_2.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,227,149,235),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_Etat_Introduction_2.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,220,160,229),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_introduction.6" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,227,160,235),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_introduction.7" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(171,220,184,229),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_introduction.8" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(171,227,184,235),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_introduction.9" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,210,257,219),(5,1,0),(10,0,0),|1|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_malax1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,215,257,223),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_malax1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,224,257,233),(5,1,0),(10,0,0),|2|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_malax2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,229,257,237),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_malax2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,210,269,219),(5,1,0),(10,0,0),|1|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_malax1.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,215,269,223),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_malax1.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,224,269,233),(5,1,0),(10,0,0),|2|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_malax2.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,229,269,237),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_malax2.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,167,89,175),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[3].basc_gra1[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,169,101,175),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[3].basc_gra2[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(101,169,114,175),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[3].Basc_Cim1[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,169,125,175),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[3].basc_cim2[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,169,137,175),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[3].Basc_Eau1[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,169,149,175),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[3].basc_eau2[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,169,161,175),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[3].basc_adj[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,169,185,175),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[3].basc_anh[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="10" description="(37,236,47,236),(0,1,8421504),1">
				<varAnim name="index_entree_buffer" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="10" description="(78,218,97,218),(0,1,12632256),4"></object>
			<object objectID="15" description="(159,220,172,229),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_introduction.14" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(159,227,172,235),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_introduction.15" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="2" description="(37,162,47,175),2">
				<varAnim name="index_sortie_buffer" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="10" description="(42,162,42,175),(10,1,8421504),3"></object>
			<object objectID="10" description="(37,162,47,162),(0,1,8421504),1"></object>
			<object objectID="15" description="(48,261,62,298),(5,1,0),(10,0,0),|TG[4]|Courier New|,(8,0,0,0,0,0,0)"></object>
			<object objectID="15" description="(57,255,71,292),(5,1,0),(10,0,0),|ID|Courier New|,(8,1,0,0,0,0,8421504)">
				<varAnim name="TG_IN[4].Numero_gachee" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="14" description="(51,239,303,245),(0,1,8421504),(10,0,0),5:(244,51;239,51;239,303;240,303;245,303;),0">
				<varAnim name="TG_IN[4].Proprietes_gachee.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="14" description="(51,307,303,313),(0,1,8421504),(10,0,0),5:(308,51;313,51;313,303;312,303;307,303;),0">
				<varAnim name="TG_IN[4].Proprietes_gachee.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,255,303,306),(5,1,0),(10,0,0),|Gra1¤¤Gra2¤¤Cim1¤¤Cim2¤¤Eau1¤¤Eau2¤¤Adj¤¤ comp2¤¤Anh¤¤Add¤¤Ppe¤¤TGra¤¤TCim¤¤Intro¤¤Malax¤¤Vidg¤¤Term¤¤Manu Log|Courier New|,(8,0,0,0,0,0,8421504)"></object>
			<object objectID="15" description="(76,255,89,281),(5,1,0),(10,0,0),|Gra1|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,255,101,284),(5,1,0),(10,0,0),|Gra2|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(100,255,113,279),(5,1,0),(10,0,0),|Cim1|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,255,125,289),(5,1,0),(10,0,0),|Cim2|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.13" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,255,137,285),(5,1,0),(10,0,0),|Eau1|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,255,149,284),(5,1,0),(10,0,0),|Eau2|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.14" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,255,161,284),(5,1,0),(10,0,0),|Adj|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.6" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,255,185,282),(5,1,0),(10,0,0),|Anh|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.7" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(208,255,221,278),(5,1,0),(10,0,0),|TGra|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(220,255,233,282),(5,1,0),(10,0,0),|TCim|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(232,255,245,290),(5,1,0),(10,0,0),|Intro|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.8" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,255,257,285),(5,1,0),(10,0,0),|Malax|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.9" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,255,269,285),(5,1,0),(10,0,0),|Vidg|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.10" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(268,255,281,285),(5,1,0),(10,0,0),|Term|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.11" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(280,255,293,308),(5,1,0),(10,0,0),|Manu Log|Courier New|,(8,0,0,0,0,0,16711935)">
				<varAnim name="TG_OUT[4].CR_etat_gachee.15" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,244,89,255),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_presence_produit.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,244,101,255),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_presence_produit.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(101,244,114,255),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_presence_produit.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,244,125,255),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_presence_produit.6" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,244,137,255),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_presence_produit.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,244,149,255),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_presence_produit.7" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,244,161,255),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_presence_produit.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,244,185,255),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_presence_produit.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,281,89,290),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_basc_gra1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,288,89,296),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_basc_gra1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,281,101,290),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_basc_gra2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,288,101,296),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_basc_gra2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(99,281,112,290),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_basc_cim1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(99,288,112,296),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_basc_cim1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,281,124,290),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_basc_cim2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,288,124,296),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_basc_cim2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,281,137,290),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_basc_eau1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,288,137,296),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_basc_eau1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,281,149,290),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_basc_eau2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,288,149,296),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_basc_eau2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,281,160,290),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_basc_adj.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,288,160,296),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_basc_adj.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,281,185,290),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_basc_anh.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,288,185,296),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_basc_anh.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(80,297,93,306),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_introduction.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(80,304,93,312),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_introduction.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(98,297,111,306),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_introduction.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(98,304,111,312),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_introduction.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,297,124,306),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_Etat_Introduction_2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,304,124,312),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_Etat_Introduction_2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,297,137,306),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_introduction.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,304,137,312),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_introduction.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,297,149,306),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_Etat_Introduction_2.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,304,149,312),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_Etat_Introduction_2.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,297,160,306),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_introduction.6" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,304,160,312),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_introduction.7" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(171,297,184,306),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_introduction.8" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(171,304,184,312),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_introduction.9" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,287,257,296),(5,1,0),(10,0,0),|1|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_malax1.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,292,257,300),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_malax1.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,301,257,310),(5,1,0),(10,0,0),|2|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_malax2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,306,257,314),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_malax2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,287,269,296),(5,1,0),(10,0,0),|1|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_malax1.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,292,269,300),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_malax1.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,301,269,310),(5,1,0),(10,0,0),|2|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_malax2.2" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,306,269,314),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_malax2.3" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,244,89,252),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[4].basc_gra1[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,246,101,252),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[4].basc_gra2[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(101,246,114,252),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[4].Basc_Cim1[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,246,125,252),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[4].basc_cim2[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,246,137,252),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[4].Basc_Eau1[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,246,149,252),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[4].basc_eau2[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,246,161,252),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[4].basc_adj[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,246,185,252),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[4].basc_anh[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="10" description="(37,313,47,313),(0,1,8421504),1">
				<varAnim name="index_entree_buffer" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="10" description="(78,295,97,295),(0,1,12632256),4"></object>
			<object objectID="15" description="(159,297,172,306),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_introduction.14" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(159,304,172,312),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_introduction.15" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="2" description="(37,239,47,252),2">
				<varAnim name="index_sortie_buffer" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="10" description="(42,239,42,252),(10,1,8421504),3"></object>
			<object objectID="10" description="(37,239,47,239),(0,1,8421504),1"></object>
			<object objectID="15" description="(208,327,222,356),(5,1,0),(10,0,0),|Skip↑|Courier New|,(8,0,0,0,0,0,8421504)"></object>
			<object objectID="15" description="(208,327,222,360),(5,1,0),(10,0,0),|Skip↑|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="Cde_montee_skip" typeName="EBOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(231,315,245,341),(5,1,0),(10,0,0),|#1|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="temps_malax1" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(231,363,245,389),(5,1,0),(10,0,0),|#2|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="temps_malax2" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,327,258,373),(5,1,0),(10,0,0),|Valid.1|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="Bit_validation_camion_mal1" typeName="EBOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,375,258,421),(5,1,0),(10,0,0),|Valid.2|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="Bit_validation_camion_mal2" typeName="EBOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(244,423,258,475),(5,1,0),(10,0,0),|Valid.SS|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="Bit_validation_camion_s_seche" typeName="EBOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(75,326,89,387),(5,1,0),(10,0,0),|Poids|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Poids_instantane_Gra1" typeName="INT" description="Anim:6,|-32000|32000|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(87,326,101,387),(5,1,0),(10,0,0),|Poids|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Poids_instantane_Gra2" typeName="INT" description="Anim:6,|-32000|32000|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(99,326,113,387),(5,1,0),(10,0,0),|Poids|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Poids_instantane_Cim1" typeName="INT" description="Anim:6,|-32000|32000|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,326,125,387),(5,1,0),(10,0,0),|Poids|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Poids_instantane_Cim2" typeName="INT" description="Anim:6,|-32000|32000|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(123,326,137,387),(5,1,0),(10,0,0),|Poids|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Poids_instantane_Eau1" typeName="INT" description="Anim:6,|-32000|32000|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(135,326,149,387),(5,1,0),(10,0,0),|Poids|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Poids_instantane_Eau2" typeName="INT" description="Anim:6,|-32000|32000|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(147,326,161,387),(5,1,0),(10,0,0),|Poids|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Poids_instantane_Adj" typeName="INT" description="Anim:6,|-32000|32000|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(171,326,185,387),(5,1,0),(10,0,0),|Poids|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Poids_instantane_Anh" typeName="INT" description="Anim:6,|-32000|32000|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,383,204,421),(5,1,0),(10,0,0),|Ppe01¤¤Ppe02¤¤Ppe03¤¤Ppe04¤¤Ppe05¤¤Ppe06¤¤Ppe07¤¤Ppe08¤¤Ppe09¤¤Ppe10¤¤|Courier New|,(8,0,0,0,0,0,8421504)"></object>
			<object objectID="15" description="(76,454,204,492),(5,1,0),(10,0,0),|Ppe11¤¤Ppe12¤¤Ppe13¤¤Ppe14¤¤Ppe15¤¤Ppe16¤¤Ppe17¤¤Ppe18¤¤Ppe19¤¤Ppe20¤¤|Courier New|,(8,0,0,0,0,0,8421504)"></object>
			<object objectID="15" description="(76,383,90,418),(5,1,0),(10,0,0),|Ppe01|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[1]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,383,102,418),(5,1,0),(10,0,0),|Ppe02|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[2]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(100,383,114,418),(5,1,0),(10,0,0),|Ppe03|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[3]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,383,126,418),(5,1,0),(10,0,0),|Ppe04|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[4]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,383,138,418),(5,1,0),(10,0,0),|Ppe05|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[5]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,383,150,418),(5,1,0),(10,0,0),|Ppe06|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[6]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,383,162,418),(5,1,0),(10,0,0),|Ppe07|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[7]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(160,383,174,418),(5,1,0),(10,0,0),|Ppe08|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[8]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,383,186,418),(5,1,0),(10,0,0),|Ppe09|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[9]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,383,198,418),(5,1,0),(10,0,0),|Ppe10|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[10]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,454,90,489),(5,1,0),(10,0,0),|Ppe11|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[11]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,454,102,489),(5,1,0),(10,0,0),|Ppe12|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[12]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(100,454,114,489),(5,1,0),(10,0,0),|Ppe13|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[13]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,454,126,489),(5,1,0),(10,0,0),|Ppe14|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[14]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,454,138,489),(5,1,0),(10,0,0),|Ppe15|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[15]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,454,150,489),(5,1,0),(10,0,0),|Ppe16|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[16]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,454,162,489),(5,1,0),(10,0,0),|Ppe17|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[17]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(160,454,174,489),(5,1,0),(10,0,0),|Ppe18|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[18]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,454,186,489),(5,1,0),(10,0,0),|Ppe19|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[19]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,454,198,489),(5,1,0),(10,0,0),|Ppe20|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="Cde_dosage_Ppe[20]" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,417,90,456),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[1]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,417,102,456),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[2]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(100,417,114,456),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[3]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,417,126,456),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[4]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,417,138,456),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[5]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,417,150,456),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[6]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,417,162,456),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[7]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(160,417,174,456),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[8]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,417,186,456),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[9]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,417,198,456),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[10]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(76,488,90,524),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[11]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(88,488,102,524),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[12]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(100,488,114,524),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[13]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(112,488,126,524),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[14]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(124,488,138,524),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[15]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(136,488,150,524),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[16]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,488,162,524),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[17]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(160,488,174,524),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[18]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,488,186,524),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[19]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,488,198,524),(5,1,0),(10,0,0),|NbImp|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Compteur_ppe[20]" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(75,9,88,15),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_g1" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(87,9,100,15),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_g2" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(99,9,112,15),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Cim1" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,9,124,15),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Cim2" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(123,9,136,15),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Eau1" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(135,9,148,15),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Eau2" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,9,161,15),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_adjuvant" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,9,185,15),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_anhydrite" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(208,9,221,15),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_transfert_G" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(220,9,233,15),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_transfert_cim" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(233,9,246,15),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_introduction" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(245,9,258,15),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_malaxeur1" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(245,15,258,21),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_malaxeur2" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(75,87,88,93),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_g1" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(87,87,100,93),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_g2" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(99,87,112,93),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Cim1" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,87,124,93),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Cim2" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(123,87,136,93),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Eau1" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(135,87,148,93),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Eau2" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,87,161,93),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_adjuvant" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,87,185,93),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_anhydrite" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(208,87,221,93),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_transfert_G" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(220,87,233,93),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_transfert_cim" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(233,87,246,93),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_introduction" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(245,87,258,93),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_malaxeur1" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(245,93,258,99),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_malaxeur2" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(75,164,88,170),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_g1" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(87,164,100,170),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_g2" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(99,164,112,170),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Cim1" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,164,124,170),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Cim2" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(123,164,136,170),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Eau1" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(135,164,148,170),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Eau2" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,164,161,170),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_adjuvant" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,164,185,170),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_anhydrite" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(208,164,221,170),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_transfert_G" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(220,164,233,170),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_transfert_cim" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(233,164,246,170),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_introduction" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(245,164,258,170),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_malaxeur1" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(245,170,258,176),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_malaxeur2" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(75,241,88,247),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_g1" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(87,241,100,247),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_g2" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(99,241,112,247),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Cim1" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(111,241,124,247),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Cim2" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(123,241,136,247),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Eau1" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(135,241,148,247),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Eau2" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(148,241,161,247),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_adjuvant" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(172,241,185,247),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_sortie_anhydrite" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(208,241,221,247),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_transfert_G" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(220,241,233,247),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_transfert_cim" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(233,241,246,247),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_introduction" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(245,241,258,247),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_malaxeur1" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(245,247,258,253),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="suite_index_malaxeur2" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(221,360,234,366),(5,1,0),(10,0,0),|●|Courier New|,(8,2,0,0,0,0,65280)">
				<varAnim name="Info_skip_bas" typeName="EBOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(209,372,222,378),(5,1,0),(10,0,0),|●|Courier New|,(8,2,0,0,0,0,65280)">
				<varAnim name="Info_skip_attente" typeName="EBOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(197,384,210,390),(5,1,0),(10,0,0),|●|Courier New|,(8,2,0,0,0,0,65280)">
				<varAnim name="Info_skip_haut" typeName="EBOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(338,7,351,13),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)"></object>
			<object objectID="15" description="(338,41,399,471),(5,1,0),(10,0,0),|: Pointeur de gâchée API (suite_index_*)¤¤: Produit présent dans TG_IN / TG_OUT¤¤: Déclaré &quot;terminé&quot; dans l'état gâchée¤¤: Pesée en cours / terminée / Intro (dans malax) en cours / terminée¤¤: Première / dernière gâchée de la fabrication|Courier New|,(8,0,0,0,0,0,8421504)"></object>
			<object objectID="2" description="(373,7,387,38),4"></object>
			<object objectID="15" description="(374,30,387,38),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)"></object>
			<object objectID="15" description="(374,23,387,32),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)"></object>
			<object objectID="15" description="(373,14,386,22),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)"></object>
			<object objectID="15" description="(373,7,386,16),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)"></object>
			<object objectID="2" description="(350,6,363,15),2"></object>
			<object objectID="15" description="(350,6,363,12),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)"></object>
			<object objectID="15" description="(350,9,363,15),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)"></object>
			<object objectID="15" description="(362,7,375,33),(5,1,0),(10,0,0),|Gra1|Courier New|,(8,0,0,0,0,0,65280)"></object>
			<object objectID="14" description="(386,7,396,13),(0,1,8421504),(10,0,0),5:(12,386;7,386;7,396;8,396;13,396;),0"></object>
			<object objectID="14" description="(386,17,396,23),(0,1,8421504),(10,0,0),5:(18,386;23,386;23,396;22,396;17,396;),0"></object>
			<object objectID="15" description="(325,6,340,70),(5,1,0),(10,0,0),|LEGENDE :|Courier New|,(8,0,0,0,1,0,8421504)"></object>
			<object objectID="15" description="(268,328,282,409),(5,1,0),(10,0,0),|Centrale Manu|Courier New|,(8,0,0,0,0,0,8421504)"></object>
			<object objectID="15" description="(268,328,282,409),(5,1,0),(10,0,0),|Centrale Manu|Courier New|,(8,0,0,0,0,0,16711935)">
				<varAnim name="Info_Plant_In_Auto" typeName="EBOOL" description="Anim:1,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(231,346,245,372),(5,1,0),(10,0,0),|#s|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Temps_malaxage1" typeName="TIME" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(231,341,245,352),(5,1,0),(10,0,0),|/|Courier New|,(8,0,0,0,0,0,16776960)"></object>
			<object objectID="15" description="(231,389,245,400),(5,1,0),(10,0,0),|/|Courier New|,(8,0,0,0,0,0,16776960)"></object>
			<object objectID="15" description="(231,394,245,420),(5,1,0),(10,0,0),|#s|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Temps_malaxage2" typeName="TIME" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(256,328,270,406),(5,1,0),(10,0,0),|Trappes Manu|Courier New|,(8,0,0,0,0,0,8421504)"></object>
			<object objectID="15" description="(256,328,270,406),(5,1,0),(10,0,0),|Trappes Manu|Courier New|,(8,0,0,0,0,0,16711935)">
				<varAnim name="Info_Gate_Mode_Auto" typeName="EBOOL" description="Anim:1,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="2" description="(42,428,57,518),4"></object>
			<object objectID="15" description="(43,457,57,518),(5,1,0),(10,0,0),|SS00|Courier New|,(8,0,0,0,0,0,8421504)">
				<varAnim name="%SW50" typeName="INT" description="Anim:0,|-|-|,(1,1),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(43,432,57,475),(5,1,0),(11,0,16777215),|HHMM|Courier New|,(8,0,0,0,0,0,12632256)">
				<varAnim name="%SW51" typeName="INT" description="Anim:0,|-|-|,(1,1),(0,0)"></varAnim>
			</object>
			<object objectID="11" description="(43,488,57,500),(5,1,8421504),(11,0,16777215)"></object>
			<object objectID="11" description="(42,428,56,450),(5,1,0),(11,0,16777215)"></object>
			<object objectID="15" description="(404,6,420,492),(5,1,0),(10,0,0),|Il est recommandé de stopper l'animation des sections et tables d'animation.|Courier New|,(8,0,0,0,0,0,128)"></object>
			<object objectID="15" description="(30,407,44,480),(5,1,0),(10,0,16777215),|MCT≤   ms ≤|Courier New|,(8,0,0,0,0,0,12632256)"></object>
			<object objectID="15" description="(30,426,44,447),(5,1,0),(10,0,16777215),|#|Courier New|,(8,2,0,0,0,0,8421504)">
				<varAnim name="Analyse_glissante_MastCycleTime.Max" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(30,475,44,498),(5,1,0),(10,0,16777215),|#|Courier New|,(8,0,0,0,0,0,8421504)">
				<varAnim name="%SW31" typeName="INT" description="Anim:0,|-|-|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,326,197,387),(5,1,0),(10,0,0),|Poids|Courier New|,(8,0,0,0,0,0,16776960)">
				<varAnim name="Poids_instantane_Add" typeName="DINT" description="Anim:6,|-130000|130000|,(1,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,23,197,50),(5,1,0),(10,0,0),|Add|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee_2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,12,197,23),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_presence_produit.8" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,49,196,58),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_basc_add.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,56,196,64),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_basc_add.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,65,196,74),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_introduction_2.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,72,196,80),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_introduction_2.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,14,197,20),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[1].basc_add[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,9,197,15),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Add" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,101,197,128),(5,1,0),(10,0,0),|Add|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee_2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,90,197,101),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_presence_produit.8" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,127,196,136),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_basc_add.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,134,196,142),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_basc_add.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,143,196,152),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_introduction_2.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,150,196,158),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_introduction_2.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,92,197,98),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[2].basc_add[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,87,197,93),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Add" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,178,197,205),(5,1,0),(10,0,0),|Add|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee_2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,167,197,178),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_presence_produit.8" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,204,196,213),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_basc_add.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,211,196,219),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_basc_add.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,220,196,229),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_introduction_2.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,227,196,235),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_introduction_2.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,169,197,175),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[3].basc_add[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,164,197,170),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Add" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,255,197,282),(5,1,0),(10,0,0),|Add|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee_2.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,244,197,255),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_presence_produit.8" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,281,196,290),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_basc_add.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,288,196,296),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_basc_add.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,297,196,306),(5,1,0),(10,0,0),|→|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_introduction_2.4" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(183,304,196,312),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_introduction_2.5" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,246,197,252),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[4].basc_add[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(184,241,197,247),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Add" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,23,209,50),(5,1,0),(10,0,0),|Ppe|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_gachee_2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,12,209,23),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_presence_produit.9" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(195,49,208,58),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[1].CR_etat_compteurs.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(195,56,208,64),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[1].CR_etat_compteurs.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,14,209,20),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[1].compteurs[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,9,209,15),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Ppe" typeName="INT" description="Anim:5,|1|1|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,101,209,128),(5,1,0),(10,0,0),|Ppe|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_gachee_2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,90,209,101),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_presence_produit.9" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(195,127,208,136),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[2].CR_etat_compteurs.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(195,134,208,142),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[2].CR_etat_compteurs.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,92,209,98),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[2].compteurs[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,87,209,93),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Ppe" typeName="INT" description="Anim:5,|2|2|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,178,209,205),(5,1,0),(10,0,0),|Ppe|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_gachee_2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,167,209,178),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_presence_produit.9" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(195,204,208,213),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[3].CR_etat_compteurs.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(195,211,208,219),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[3].CR_etat_compteurs.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,169,209,175),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[3].compteurs[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,164,209,170),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Ppe" typeName="INT" description="Anim:5,|3|3|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,255,209,282),(5,1,0),(10,0,0),|Ppe|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_gachee_2.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,244,209,255),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_presence_produit.9" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(195,281,208,290),(5,1,0),(10,0,0),|↓|Courier New|,(8,0,0,0,0,0,16711680)">
				<varAnim name="TG_OUT[4].CR_etat_compteurs.0" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(195,288,208,296),(5,1,0),(10,0,0),|√|Courier New|,(8,0,0,0,0,0,65280)">
				<varAnim name="TG_OUT[4].CR_etat_compteurs.1" typeName="BOOL" description="Anim:2,|-|-|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,246,209,252),(5,1,0),(10,0,0),|•|Courier New|,(8,2,0,0,0,0,16711680)">
				<varAnim name="TG_IN[4].compteurs[1].numero_produit" typeName="WORD" description="Anim:7,|0|0|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(196,241,209,247),(5,1,0),(10,0,0),|►|Courier New|,(8,2,0,0,0,0,16776960)">
				<varAnim name="NG_Ppe" typeName="INT" description="Anim:5,|4|4|,(0,0),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(346,364,360,425),(5,1,0),(10,0,0),|SS00|Courier New|,(8,0,0,0,0,0,8421504)">
				<varAnim name="%SW50" typeName="INT" description="Anim:0,|-|-|,(1,1),(0,0)"></varAnim>
			</object>
			<object objectID="15" description="(332,369,346,412),(5,1,0),(11,0,16777215),|HHMM|Courier New|,(8,0,0,0,0,0,12632256)">
				<varAnim name="%SW51" typeName="INT" description="Anim:0,|-|-|,(1,1),(0,0)"></varAnim>
			</object>
		</screen>
	</IOScreen>
	<Documentation version="V1.0">
		<Station bDocumentationSave="0"></Station>
		<Program_ST nMode="0" bXRef="0" bVariableUsed="0"></Program_ST>
		<Program_IL nMode="0"></Program_IL>
		<Program_FBD nMode="0"></Program_FBD>
		<Program_LD nMode="0" bXRef="0" bVariableUsed="0"></Program_LD>
		<Program_SFC nMode="0"></Program_SFC>
		<OperatorScreens nSort="0" bMessageList="0" bGraphic="1" bVariable="0"></OperatorScreens>
		<Variables_FBInstances nSort="0" bExpandArray="0" bExpandStructure="0" nProfile="0" b984Address="0"></Variables_FBInstances>
		<TitlePage sDesigner="" sProject=""></TitlePage>
		<General sGeneralInfo=""></General>
		<Footer sAuthor="" sDepartment="" sBitmapPath="" sFreeText1="" sFreeText2="" sIndustrialProperty=""></Footer>
	</Documentation>
	<settings version="410">
		<!--group unity.Settings-->
		<!--group unity.General-->
		<!--group unity.ManageBuildMessages-->
		<entryvalue ident="unity.variableNotUsed" value="0"></entryvalue>
		<entryvalue ident="unity.multiWritingOfVar" value="0"></entryvalue>
		<entryvalue ident="unity.paramNotAssign" value="0"></entryvalue>
		<entryvalue ident="unity.multiFBInstance" value="0"></entryvalue>
		<entryvalue ident="unity.ddtMappingCompat" value="0"></entryvalue>
		<entryvalue ident="unity.overlOfAdd" value="0"></entryvalue>
		<entryvalue ident="unity.missingGatewayIPaddress" value="1"></entryvalue>
		<entryvalue ident="unity.WarningsActif" value="0"></entryvalue>
		<entryvalue ident="unity.NbWarnings" value="500"></entryvalue>
		<entryvalue ident="unity.ErrorsActif" value="0"></entryvalue>
		<entryvalue ident="unity.NbErrors" value="500"></entryvalue>
		<!--group unity.BuildSettings-->
		<entryvalue ident="unity.createNewDataBlockOnline" value="0"></entryvalue>
		<entryvalue ident="unity.freeKbytes" value="1"></entryvalue>
		<entryvalue ident="unity.virtCodeGenEnable" value="0"></entryvalue>
		<entryvalue ident="unity.ldLink" value="1"></entryvalue>
		<entryvalue ident="unity.ldOptCode" value="1"></entryvalue>
		<entryvalue ident="unity.ApplyOnLineModif" value="1"></entryvalue>
		<entryvalue ident="unity.IOScanningMode" value="0"></entryvalue>
		<!--group unity.SaveOnDownload-->
		<entryvalue ident="unity.SaveOnDownloadSTA" value="1"></entryvalue>
		<entryvalue ident="unity.SaveOnDownloadSTU" value="0"></entryvalue>
		<entryvalue ident="unity.SaveOnDownloadXVM" value="0"></entryvalue>
		<!--group unity.PLCEmbeddedData-->
		<entryvalue ident="unity.dataDictionary" value="0"></entryvalue>
		<entryvalue ident="unity.dataDictionaryPreload" value="0"></entryvalue>
		<entryvalue ident="unity.dataDictionaryChangeTimeOut" value="40"></entryvalue>
		<entryvalue ident="unity.dataDictionaryOnlyHMIvariables" value="0"></entryvalue>
		<entryvalue ident="unity.dataDictionaryWithProcessNamespace" value="0"></entryvalue>
		<entryvalue ident="unity.actif" value="1"></entryvalue>
		<entryvalue ident="unity.comment" value="1"></entryvalue>
		<entryvalue ident="unity.animTable" value="0"></entryvalue>
		<entryvalue ident="unity.ETSManagementMode" value="1"></entryvalue>
		<entryvalue ident="unity.OptimizeOnlineChange" value="0"></entryvalue>
		<!--group unity.PLCdiagnostics-->
		<entryvalue ident="unity.application" value="1"></entryvalue>
		<entryvalue ident="unity.applevel" value="2"></entryvalue>
		<entryvalue ident="unity.system" value="1"></entryvalue>
		<entryvalue ident="unity.language" value="4"></entryvalue>
		<entryvalue ident="unity.RackViewerDiag" value="1"></entryvalue>
		<entryvalue ident="unity.RackViewerVariableNames" value="0"></entryvalue>
		<entryvalue ident="unity.ProgViewerDiag" value="0"></entryvalue>
		<entryvalue ident="unity.PLCEventLogging" value="0"></entryvalue>
		<entryvalue ident="unity.SYSLOGServerAddress" value="0.0.0.0"></entryvalue>
		<entryvalue ident="unity.SYSLOGServerPort" value="601"></entryvalue>
		<entryvalue ident="unity.SYSLOGServerProtocol" value="0"></entryvalue>
		<!--group unity.PLCBehaviour-->
		<entryvalue ident="unity.Reset_M_Stop_Run" value="0"></entryvalue>
		<!--group unity.Path-->
		<entryvalue ident="unity.HyperlinkRootPath" value=""></entryvalue>
		<!--group unity.Time-->
		<entryvalue ident="unity.TimeStampingMode" value="1"></entryvalue>
		<entryvalue ident="unity.MaxEventsSored" value="0"></entryvalue>
		<entryvalue ident="unity.CustomTimeZone" value="0"></entryvalue>
		<entryvalue ident="unity.TimeZone" value="37"></entryvalue>
		<entryvalue ident="unity.TimeZoneOffset" value="60"></entryvalue>
		<entryvalue ident="unity.AdjustClock" value="0"></entryvalue>
		<entryvalue ident="unity.DaylightSavingStartMonth" value="2"></entryvalue>
		<entryvalue ident="unity.DaylightSavingStartDay" value="0"></entryvalue>
		<entryvalue ident="unity.DaylightSavingStartOccurrence" value="5"></entryvalue>
		<entryvalue ident="unity.DaylightSavingStartHour" value="2"></entryvalue>
		<entryvalue ident="unity.DaylightSavingStartMinute" value="0"></entryvalue>
		<entryvalue ident="unity.DaylightSavingStartSecond" value="0"></entryvalue>
		<entryvalue ident="unity.DaylightSavingStartOffset" value="60"></entryvalue>
		<entryvalue ident="unity.DaylightSavingEndMonth" value="9"></entryvalue>
		<entryvalue ident="unity.DaylightSavingEndDay" value="0"></entryvalue>
		<entryvalue ident="unity.DaylightSavingEndOccurrence" value="5"></entryvalue>
		<entryvalue ident="unity.DaylightSavingEndHour" value="3"></entryvalue>
		<entryvalue ident="unity.DaylightSavingEndMinute" value="0"></entryvalue>
		<entryvalue ident="unity.DaylightSavingEndSecond" value="0"></entryvalue>
		<entryvalue ident="unity.DaylightSavingEndOffset" value="0"></entryvalue>
		<!--group unity.Configuration-->
		<entryvalue ident="unity.PreferredIOVision" value="0"></entryvalue>
		<entryvalue ident="unity.PreferredIOVision_Q_EIO" value="0"></entryvalue>
		<!--group unity.Variables-->
		<entryvalue ident="unity.leadingDigit" value="1"></entryvalue>
		<entryvalue ident="unity.CharSet" value="1"></entryvalue>
		<entryvalue ident="unity.EBoolEdge" value="1"></entryvalue>
		<entryvalue ident="unity.intDIntAsWordDWord" value="1"></entryvalue>
		<entryvalue ident="unity.extractAnyBit" value="1"></entryvalue>
		<entryvalue ident="unity.directRepArray" value="1"></entryvalue>
		<entryvalue ident="unity.dynamicArray" value="1"></entryvalue>
		<entryvalue ident="unity.arraySizeCompCheck" value="0"></entryvalue>
		<entryvalue ident="unity.FastScanningForTrending" value="0"></entryvalue>
		<entryvalue ident="unity.ForceReferenceInit" value="1"></entryvalue>
		<entryvalue ident="unity.SaveRestoreDataRequest" value="0"></entryvalue>
		<!--group unity.Program-->
		<!--group unity.Languages-->
		<entryvalue ident="unity.withFBD" value="1"></entryvalue>
		<entryvalue ident="unity.withLD" value="1"></entryvalue>
		<entryvalue ident="unity.withSFC" value="1"></entryvalue>
		<entryvalue ident="unity.withIL" value="1"></entryvalue>
		<entryvalue ident="unity.withST" value="1"></entryvalue>
		<entryvalue ident="unity.with984" value="1"></entryvalue>
		<!--group unity.languagecommon-->
		<entryvalue ident="unity.generalProc" value="1"></entryvalue>
		<entryvalue ident="unity.generalSub" value="1"></entryvalue>
		<entryvalue ident="unity.nestedComment" value="1"></entryvalue>
		<entryvalue ident="unity.multiAssign" value="1"></entryvalue>
		<entryvalue ident="unity.emptyParam" value="1"></entryvalue>
		<entryvalue ident="unity.STExpressions" value="1"></entryvalue>
		<entryvalue ident="unity.RemanentLink" value="0"></entryvalue>
		<entryvalue ident="unity.LDStructComment" value="0"></entryvalue>
		<entryvalue ident="unity.implicitTypeConv" value="0"></entryvalue>
		<!--group unity.FBD-->
		<entryvalue ident="unity.FBDNbRow" value="240"></entryvalue>
		<entryvalue ident="unity.FBDNbColumn" value="360"></entryvalue>
		<!--group unity.LD-->
		<entryvalue ident="unity.LDRightJustify" value="0"></entryvalue>
		<entryvalue ident="unity.LDNbColumn" value="11"></entryvalue>
		<entryvalue ident="unity.LDCellWidth" value="0"></entryvalue>
		<entryvalue ident="unity.SingleScanEdgeDetectionEBool" value="0"></entryvalue>
		<!--group unity.MixedDisplay-->
		<entryvalue ident="unity.LDNbLinesCmt" value="1"></entryvalue>
		<entryvalue ident="unity.LDNbLinesSym" value="1"></entryvalue>
		<entryvalue ident="unity.LDNbLinesAdr" value="1"></entryvalue>
		<!--group unity.SFC-->
		<entryvalue ident="unity.macroSections" value="1"></entryvalue>
		<entryvalue ident="unity.multiToken" value="0"></entryvalue>
		<!--group unity.SFCmultiToken-->
		<entryvalue ident="unity.nbActiveStep" value="32"></entryvalue>
		<entryvalue ident="unity.nbActiveActions" value="96"></entryvalue>
		<entryvalue ident="unity.setStep" value="1"></entryvalue>
		<entryvalue ident="unity.parallelBranches" value="1"></entryvalue>
		<entryvalue ident="unity.multiEvolution" value="1"></entryvalue>
		<!--group unity.ST-->
		<entryvalue ident="unity.jumpAndLabel" value="0"></entryvalue>
		<!--group unity.LL984-->
		<entryvalue ident="unity.SKPenabled" value="1"></entryvalue>
		<!--group unity.NetworkDisplay-->
		<!--group unity.View1-->
		<entryvalue ident="unity.View1Line1" value="0"></entryvalue>
		<entryvalue ident="unity.View1Line2" value="0"></entryvalue>
		<entryvalue ident="unity.View1Line3" value="0"></entryvalue>
		<entryvalue ident="unity.View1Line4" value="0"></entryvalue>
		<entryvalue ident="unity.View1Line5" value="0"></entryvalue>
		<entryvalue ident="unity.View1Line6" value="0"></entryvalue>
		<entryvalue ident="unity.View1Line7" value="1"></entryvalue>
		<entryvalue ident="unity.View1FontHeight" value="10"></entryvalue>
		<!--group unity.View2-->
		<entryvalue ident="unity.View2Line1" value="0"></entryvalue>
		<entryvalue ident="unity.View2Line2" value="0"></entryvalue>
		<entryvalue ident="unity.View2Line3" value="0"></entryvalue>
		<entryvalue ident="unity.View2Line4" value="0"></entryvalue>
		<entryvalue ident="unity.View2Line5" value="0"></entryvalue>
		<entryvalue ident="unity.View2Line6" value="3"></entryvalue>
		<entryvalue ident="unity.View2Line7" value="1"></entryvalue>
		<entryvalue ident="unity.View2FontHeight" value="10"></entryvalue>
		<!--group unity.View3-->
		<entryvalue ident="unity.View3Line1" value="0"></entryvalue>
		<entryvalue ident="unity.View3Line2" value="0"></entryvalue>
		<entryvalue ident="unity.View3Line3" value="0"></entryvalue>
		<entryvalue ident="unity.View3Line4" value="0"></entryvalue>
		<entryvalue ident="unity.View3Line5" value="0"></entryvalue>
		<entryvalue ident="unity.View3Line6" value="2"></entryvalue>
		<entryvalue ident="unity.View3Line7" value="1"></entryvalue>
		<entryvalue ident="unity.View3FontHeight" value="10"></entryvalue>
		<!--group unity.View4-->
		<entryvalue ident="unity.View4Line1" value="0"></entryvalue>
		<entryvalue ident="unity.View4Line2" value="0"></entryvalue>
		<entryvalue ident="unity.View4Line3" value="0"></entryvalue>
		<entryvalue ident="unity.View4Line4" value="0"></entryvalue>
		<entryvalue ident="unity.View4Line5" value="4"></entryvalue>
		<entryvalue ident="unity.View4Line6" value="3"></entryvalue>
		<entryvalue ident="unity.View4Line7" value="1"></entryvalue>
		<entryvalue ident="unity.View4FontHeight" value="10"></entryvalue>
		<entryvalue ident="unity.LL984PrintingView" value="3"></entryvalue>
		<entryvalue ident="unity.LL984ColumnWidth" value="1,000000"></entryvalue>
		<!--group unity.OperatorScreens-->
		<entryvalue ident="unity.fullScreen" value="0"></entryvalue>
		<!--group unity.ControlledScreen-->
		<entryvalue ident="unity.varCtrlScreen" value=""></entryvalue>
		<entryvalue ident="unity.displayScreenControl" value="0"></entryvalue>
		<entryvalue ident="unity.displayScreenNumber" value="0"></entryvalue>
		<!--group unity.LastOpenedScreen-->
		<entryvalue ident="unity.varDispScreen" value=""></entryvalue>
	</settings>
</FEFExchangeFile>
